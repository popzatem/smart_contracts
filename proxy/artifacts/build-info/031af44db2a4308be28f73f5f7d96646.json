{
	"id": "031af44db2a4308be28f73f5f7d96646",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"proxy/UpgradeableProxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./Proxy.sol\";\r\nimport \"../contracts/utils/Address.sol\";\r\n\r\n/**\r\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\r\n * implementation address that can be changed. This address is stored in storage in the location specified by\r\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\r\n * implementation behind the proxy.\r\n * \r\n * Upgradeability is only provided internally through {_upgradeTo}. For an externally upgradeable proxy see\r\n * {TransparentUpgradeableProxy}.\r\n */\r\ncontract UpgradeableProxy is Proxy {\r\n    /**\r\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\r\n     * \r\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\r\n     * function call, and allows initializating the storage of the proxy like a Solidity constructor.\r\n     */\r\n    constructor(address _logic, bytes memory _data) public payable {\r\n        assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\"eip1967.proxy.implementation\")) - 1));\r\n        _setImplementation(_logic);\r\n        if(_data.length > 0) {\r\n            // solhint-disable-next-line avoid-low-level-calls\r\n            (bool success,) = _logic.delegatecall(_data);\r\n            require(success);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Emitted when the implementation is upgraded.\r\n     */\r\n    event Upgraded(address indexed implementation);\r\n\r\n    /**\r\n     * @dev Storage slot with the address of the current implementation.\r\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\r\n     * validated in the constructor.\r\n     */\r\n    bytes32 private constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\r\n\r\n    /**\r\n     * @dev Returns the current implementation address.\r\n     */\r\n    function _implementation() internal override view returns (address impl) {\r\n        bytes32 slot = _IMPLEMENTATION_SLOT;\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly {\r\n            impl := sload(slot)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Upgrades the proxy to a new implementation.\r\n     * \r\n     * Emits an {Upgraded} event.\r\n     */\r\n    function _upgradeTo(address newImplementation) internal {\r\n        _setImplementation(newImplementation);\r\n        emit Upgraded(newImplementation);\r\n    }\r\n\r\n    /**\r\n     * @dev Stores a new address in the EIP1967 implementation slot.\r\n     */\r\n    function _setImplementation(address newImplementation) private {\r\n        require(Address.isContract(newImplementation), \"UpgradeableProxy: new implementation is not a contract\");\r\n\r\n        bytes32 slot = _IMPLEMENTATION_SLOT;\r\n\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly {\r\n            sstore(slot, newImplementation)\r\n        }\r\n    }\r\n}"
			},
			"contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize, which returns 0 for contracts in\r\n        // construction, since the code is only stored at the end of the\r\n        // constructor execution.\r\n\r\n        uint256 size;\r\n        assembly {\r\n            size := extcodesize(account)\r\n        }\r\n        return size > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        require(isContract(target), \"Address: static call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(isContract(target), \"Address: delegate call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}"
			},
			"proxy/Proxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\r\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\r\n * be specified by overriding the virtual {_implementation} function.\r\n * \r\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\r\n * different contract through the {_delegate} function.\r\n * \r\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\r\n */\r\nabstract contract Proxy {\r\n    /**\r\n     * @dev Delegates the current call to `implementation`.\r\n     * \r\n     * This function does not return to its internall call site, it will return directly to the external caller.\r\n     */\r\n    function _delegate(address implementation) internal {\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly {\r\n            // Copy msg.data. We take full control of memory in this inline assembly\r\n            // block because it will not return to Solidity code. We overwrite the\r\n            // Solidity scratch pad at memory position 0.\r\n            calldatacopy(0, 0, calldatasize())\r\n\r\n            // Call the implementation.\r\n            // out and outsize are 0 because we don't know the size yet.\r\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\r\n\r\n            // Copy the returned data.\r\n            returndatacopy(0, 0, returndatasize())\r\n\r\n            switch result\r\n            // delegatecall returns 0 on error.\r\n            case 0 { revert(0, returndatasize()) }\r\n            default { return(0, returndatasize()) }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev This is a virtual function that should be overriden so it returns the address to which the fallback function\r\n     * and {_fallback} should delegate.\r\n     */\r\n    function _implementation() internal virtual view returns (address);\r\n\r\n    /**\r\n     * @dev Delegates the current call to the address returned by `_implementation()`.\r\n     * \r\n     * This function does not return to its internall call site, it will return directly to the external caller.\r\n     */\r\n    function _fallback() internal {\r\n        _beforeFallback();\r\n        _delegate(_implementation());\r\n    }\r\n\r\n    /**\r\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\r\n     * function in the contract matches the call data.\r\n     */\r\n    fallback () payable external {\r\n        _fallback();\r\n    }\r\n\r\n    /**\r\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\r\n     * is empty.\r\n     */\r\n    receive () payable external {\r\n        _fallback();\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\r\n     * call, or as part of the Solidity `fallback` or `receive` functions.\r\n     * \r\n     * If overriden should call `super._beforeFallback()`.\r\n     */\r\n    function _beforeFallback() internal virtual {\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/utils/Address.sol\":133:8070  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/utils/Address.sol\":133:8070  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122044a211df23943cda221e1f4eed231a64b39e126c7d5f60e507d655936de3bcb664736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122044a211df23943cda221e1f4eed231a64b39e126c7d5f60e507d655936de3bcb664736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIFFICULTY LOG2 GT 0xDF 0x23 SWAP5 EXTCODECOPY 0xDA 0x22 0x1E 0x1F 0x4E 0xED 0x23 BYTE PUSH5 0xB39E126C7D 0x5F PUSH1 0xE5 SMOD 0xD6 SSTORE SWAP4 PUSH14 0xE3BCB664736F6C634300080D0033 ",
							"sourceMap": "133:7937:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122044a211df23943cda221e1f4eed231a64b39e126c7d5f60e507d655936de3bcb664736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIFFICULTY LOG2 GT 0xDF 0x23 SWAP5 EXTCODECOPY 0xDA 0x22 0x1E 0x1F 0x4E 0xED 0x23 BYTE PUSH5 0xB39E126C7D 0x5F PUSH1 0xE5 SMOD 0xD6 SSTORE SWAP4 PUSH14 0xE3BCB664736F6C634300080D0033 ",
							"sourceMap": "133:7937:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 133,
									"end": 8070,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122044a211df23943cda221e1f4eed231a64b39e126c7d5f60e507d655936de3bcb664736f6c634300080d0033",
									".code": [
										{
											"begin": 133,
											"end": 8070,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 133,
											"end": 8070,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 133,
											"end": 8070,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 133,
											"end": 8070,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 133,
											"end": 8070,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 133,
											"end": 8070,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 133,
											"end": 8070,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 133,
											"end": 8070,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 133,
											"end": 8070,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/utils/Address.sol\":{\"keccak256\":\"0x626b62cca5971be750732929d782b30e1277e36dd6b4ec2a90ddbbb61c650066\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07c78b7f7894e0444db2c6c4c73e4eddb78beed6bd65cd6089e2e9434bea83b0\",\"dweb:/ipfs/QmczQU7ihPMBhAmUM9MxnumRWwwvnTiDMDHp3nJSgYXQim\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"proxy/Proxy.sol": {
				"Proxy": {
					"abi": [
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function.  Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function.  The success and return data of the delegated call will be returned back to the caller of the proxy.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function.  Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function.  The success and return data of the delegated call will be returned back to the caller of the proxy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"proxy/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"proxy/Proxy.sol\":{\"keccak256\":\"0xf1769677121d6bc8e502bb697358d914770a9bad3962077a43e7f621a66ed0e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://69e8c19054254407b5a146151b2600fb34752fef2fd364ab23bdd55730a37482\",\"dweb:/ipfs/QmUStmoVT38uyDgdezmeWuvzneG1CjWbJTu8effxU3H2gj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"proxy/UpgradeableProxy.sol": {
				"UpgradeableProxy": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_logic",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy.  Upgradeability is only provided internally through {_upgradeTo}. For an externally upgradeable proxy see {TransparentUpgradeableProxy}.",
						"events": {
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the upgradeable proxy with an initial implementation specified by `_logic`.  If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded function call, and allows initializating the storage of the proxy like a Solidity constructor."
							}
						},
						"stateVariables": {
							"_IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is validated in the constructor."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"proxy/UpgradeableProxy.sol\":657:3016  contract UpgradeableProxy is Proxy {... */\n  mstore(0x40, 0x80)\n    /* \"proxy/UpgradeableProxy.sol\":1046:1457  constructor(address _logic, bytes memory _data) public payable {... */\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_1\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"proxy/UpgradeableProxy.sol\":1212:1213  1 */\n  0x01\n    /* \"proxy/UpgradeableProxy.sol\":1167:1208  keccak256(\"eip1967.proxy.implementation\") */\n  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd\n    /* \"proxy/UpgradeableProxy.sol\":1159:1209  uint256(keccak256(\"eip1967.proxy.implementation\")) */\n  0x00\n  shr\n    /* \"proxy/UpgradeableProxy.sol\":1159:1213  uint256(keccak256(\"eip1967.proxy.implementation\")) - 1 */\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n    /* \"proxy/UpgradeableProxy.sol\":1151:1214  bytes32(uint256(keccak256(\"eip1967.proxy.implementation\")) - 1) */\n  0x00\n  shl\n    /* \"proxy/UpgradeableProxy.sol\":1868:1934  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n    /* \"proxy/UpgradeableProxy.sol\":1127:1147  _IMPLEMENTATION_SLOT */\n  0x00\n  shl\n    /* \"proxy/UpgradeableProxy.sol\":1127:1214  _IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\"eip1967.proxy.implementation\")) - 1) */\n  eq\n    /* \"proxy/UpgradeableProxy.sol\":1120:1215  assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\"eip1967.proxy.implementation\")) - 1)) */\n  tag_7\n  jumpi\n  tag_8\n  tag_9\n  jump\t// in\ntag_8:\ntag_7:\n    /* \"proxy/UpgradeableProxy.sol\":1226:1252  _setImplementation(_logic) */\n  tag_10\n    /* \"proxy/UpgradeableProxy.sol\":1245:1251  _logic */\n  dup3\n    /* \"proxy/UpgradeableProxy.sol\":1226:1244  _setImplementation */\n  shl(0x20, tag_11)\n    /* \"proxy/UpgradeableProxy.sol\":1226:1252  _setImplementation(_logic) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"proxy/UpgradeableProxy.sol\":1281:1282  0 */\n  0x00\n    /* \"proxy/UpgradeableProxy.sol\":1266:1271  _data */\n  dup2\n    /* \"proxy/UpgradeableProxy.sol\":1266:1278  _data.length */\n  mload\n    /* \"proxy/UpgradeableProxy.sol\":1266:1282  _data.length > 0 */\n  gt\n    /* \"proxy/UpgradeableProxy.sol\":1263:1450  if(_data.length > 0) {... */\n  iszero\n  tag_12\n  jumpi\n    /* \"proxy/UpgradeableProxy.sol\":1364:1376  bool success */\n  0x00\n    /* \"proxy/UpgradeableProxy.sol\":1381:1387  _logic */\n  dup3\n    /* \"proxy/UpgradeableProxy.sol\":1381:1400  _logic.delegatecall */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"proxy/UpgradeableProxy.sol\":1401:1406  _data */\n  dup3\n    /* \"proxy/UpgradeableProxy.sol\":1381:1407  _logic.delegatecall(_data) */\n  mload(0x40)\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup6\n  gas\n  delegatecall\n  swap2\n  pop\n  pop\n  returndatasize\n  dup1\n  0x00\n  dup2\n  eq\n  tag_17\n  jumpi\n  mload(0x40)\n  swap2\n  pop\n  and(add(returndatasize, 0x3f), not(0x1f))\n  dup3\n  add\n  0x40\n  mstore\n  returndatasize\n  dup3\n  mstore\n  returndatasize\n  0x00\n  0x20\n  dup5\n  add\n  returndatacopy\n  jump(tag_16)\ntag_17:\n  0x60\n  swap2\n  pop\ntag_16:\n  pop\n    /* \"proxy/UpgradeableProxy.sol\":1363:1407  (bool success,) = _logic.delegatecall(_data) */\n  pop\n  swap1\n  pop\n    /* \"proxy/UpgradeableProxy.sol\":1430:1437  success */\n  dup1\n    /* \"proxy/UpgradeableProxy.sol\":1422:1438  require(success) */\n  tag_18\n  jumpi\n  0x00\n  dup1\n  revert\ntag_18:\n    /* \"proxy/UpgradeableProxy.sol\":1284:1450  {... */\n  pop\n    /* \"proxy/UpgradeableProxy.sol\":1263:1450  if(_data.length > 0) {... */\ntag_12:\n    /* \"proxy/UpgradeableProxy.sol\":1046:1457  constructor(address _logic, bytes memory _data) public payable {... */\n  pop\n  pop\n    /* \"proxy/UpgradeableProxy.sol\":657:3016  contract UpgradeableProxy is Proxy {... */\n  jump(tag_19)\n    /* \"proxy/UpgradeableProxy.sol\":2644:3013  function _setImplementation(address newImplementation) private {... */\ntag_11:\n    /* \"proxy/UpgradeableProxy.sol\":2726:2763  Address.isContract(newImplementation) */\n  tag_21\n    /* \"proxy/UpgradeableProxy.sol\":2745:2762  newImplementation */\n  dup2\n    /* \"proxy/UpgradeableProxy.sol\":2726:2744  Address.isContract */\n  or(tag_0_10, shl(0x20, tag_22))\n    /* \"proxy/UpgradeableProxy.sol\":2726:2763  Address.isContract(newImplementation) */\n  0x20\n  shr\n  jump\t// in\ntag_21:\n    /* \"proxy/UpgradeableProxy.sol\":2718:2822  require(Address.isContract(newImplementation), \"UpgradeableProxy: new implementation is not a contract\") */\n  tag_23\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_24\n  swap1\n  tag_25\n  jump\t// in\ntag_24:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_23:\n    /* \"proxy/UpgradeableProxy.sol\":2835:2847  bytes32 slot */\n  0x00\n    /* \"proxy/UpgradeableProxy.sol\":1868:1934  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n    /* \"proxy/UpgradeableProxy.sol\":2850:2870  _IMPLEMENTATION_SLOT */\n  0x00\n  shl\n    /* \"proxy/UpgradeableProxy.sol\":2835:2870  bytes32 slot = _IMPLEMENTATION_SLOT */\n  swap1\n  pop\n    /* \"proxy/UpgradeableProxy.sol\":2977:2994  newImplementation */\n  dup2\n    /* \"proxy/UpgradeableProxy.sol\":2971:2975  slot */\n  dup2\n    /* \"proxy/UpgradeableProxy.sol\":2964:2995  sstore(slot, newImplementation) */\n  sstore\n    /* \"proxy/UpgradeableProxy.sol\":2949:3006  {... */\n  pop\n    /* \"proxy/UpgradeableProxy.sol\":2644:3013  function _setImplementation(address newImplementation) private {... */\n  pop\n  jump\t// out\n    /* \"contracts/utils/Address.sol\":743:1130  function isContract(address account) internal view returns (bool) {... */\ntag_22:\n    /* \"contracts/utils/Address.sol\":803:807  bool */\n  0x00\n    /* \"contracts/utils/Address.sol\":1011:1023  uint256 size */\n  dup1\n    /* \"contracts/utils/Address.sol\":1078:1085  account */\n  dup3\n    /* \"contracts/utils/Address.sol\":1066:1086  extcodesize(account) */\n  extcodesize\n    /* \"contracts/utils/Address.sol\":1058:1086  size := extcodesize(account) */\n  swap1\n  pop\n    /* \"contracts/utils/Address.sol\":1121:1122  0 */\n  0x00\n    /* \"contracts/utils/Address.sol\":1114:1118  size */\n  dup2\n    /* \"contracts/utils/Address.sol\":1114:1122  size > 0 */\n  gt\n    /* \"contracts/utils/Address.sol\":1107:1122  return size > 0 */\n  swap2\n  pop\n  pop\n    /* \"contracts/utils/Address.sol\":743:1130  function isContract(address account) internal view returns (bool) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_27:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_28:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_29:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_30:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_31:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_58\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_30\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_32:\n    /* \"#utility.yul\":641:665   */\n  tag_60\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_31\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_61\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_61:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_33:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_63\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_32\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:962   */\ntag_34:\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":951:952   */\n  dup1\n    /* \"#utility.yul\":944:956   */\n  revert\n    /* \"#utility.yul\":968:1085   */\ntag_35:\n    /* \"#utility.yul\":1077:1078   */\n  0x00\n    /* \"#utility.yul\":1074:1075   */\n  dup1\n    /* \"#utility.yul\":1067:1079   */\n  revert\n    /* \"#utility.yul\":1091:1193   */\ntag_36:\n    /* \"#utility.yul\":1132:1138   */\n  0x00\n    /* \"#utility.yul\":1183:1185   */\n  0x1f\n    /* \"#utility.yul\":1179:1186   */\n  not\n    /* \"#utility.yul\":1174:1176   */\n  0x1f\n    /* \"#utility.yul\":1167:1172   */\n  dup4\n    /* \"#utility.yul\":1163:1177   */\n  add\n    /* \"#utility.yul\":1159:1187   */\n  and\n    /* \"#utility.yul\":1149:1187   */\n  swap1\n  pop\n    /* \"#utility.yul\":1091:1193   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1199:1379   */\ntag_37:\n    /* \"#utility.yul\":1247:1324   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1244:1245   */\n  0x00\n    /* \"#utility.yul\":1237:1325   */\n  mstore\n    /* \"#utility.yul\":1344:1348   */\n  0x41\n    /* \"#utility.yul\":1341:1342   */\n  0x04\n    /* \"#utility.yul\":1334:1349   */\n  mstore\n    /* \"#utility.yul\":1368:1372   */\n  0x24\n    /* \"#utility.yul\":1365:1366   */\n  0x00\n    /* \"#utility.yul\":1358:1373   */\n  revert\n    /* \"#utility.yul\":1385:1666   */\ntag_38:\n    /* \"#utility.yul\":1468:1495   */\n  tag_69\n    /* \"#utility.yul\":1490:1494   */\n  dup3\n    /* \"#utility.yul\":1468:1495   */\n  tag_36\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":1460:1466   */\n  dup2\n    /* \"#utility.yul\":1456:1496   */\n  add\n    /* \"#utility.yul\":1598:1604   */\n  dup2\n    /* \"#utility.yul\":1586:1596   */\n  dup2\n    /* \"#utility.yul\":1583:1605   */\n  lt\n    /* \"#utility.yul\":1562:1580   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1550:1560   */\n  dup3\n    /* \"#utility.yul\":1547:1581   */\n  gt\n    /* \"#utility.yul\":1544:1606   */\n  or\n    /* \"#utility.yul\":1541:1629   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":1609:1627   */\n  tag_71\n  tag_37\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":1541:1629   */\ntag_70:\n    /* \"#utility.yul\":1649:1659   */\n  dup1\n    /* \"#utility.yul\":1645:1647   */\n  0x40\n    /* \"#utility.yul\":1638:1660   */\n  mstore\n    /* \"#utility.yul\":1428:1666   */\n  pop\n    /* \"#utility.yul\":1385:1666   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1672:1801   */\ntag_39:\n    /* \"#utility.yul\":1706:1712   */\n  0x00\n    /* \"#utility.yul\":1733:1753   */\n  tag_73\n  tag_27\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":1723:1753   */\n  swap1\n  pop\n    /* \"#utility.yul\":1762:1795   */\n  tag_74\n    /* \"#utility.yul\":1790:1794   */\n  dup3\n    /* \"#utility.yul\":1782:1788   */\n  dup3\n    /* \"#utility.yul\":1762:1795   */\n  tag_38\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":1672:1801   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1807:2114   */\ntag_40:\n    /* \"#utility.yul\":1868:1872   */\n  0x00\n    /* \"#utility.yul\":1958:1976   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1950:1956   */\n  dup3\n    /* \"#utility.yul\":1947:1977   */\n  gt\n    /* \"#utility.yul\":1944:2000   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":1980:1998   */\n  tag_77\n  tag_37\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":1944:2000   */\ntag_76:\n    /* \"#utility.yul\":2018:2047   */\n  tag_78\n    /* \"#utility.yul\":2040:2046   */\n  dup3\n    /* \"#utility.yul\":2018:2047   */\n  tag_36\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2010:2047   */\n  swap1\n  pop\n    /* \"#utility.yul\":2102:2106   */\n  0x20\n    /* \"#utility.yul\":2096:2100   */\n  dup2\n    /* \"#utility.yul\":2092:2107   */\n  add\n    /* \"#utility.yul\":2084:2107   */\n  swap1\n  pop\n    /* \"#utility.yul\":1807:2114   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2120:2427   */\ntag_41:\n    /* \"#utility.yul\":2188:2189   */\n  0x00\n    /* \"#utility.yul\":2198:2311   */\ntag_80:\n    /* \"#utility.yul\":2212:2218   */\n  dup4\n    /* \"#utility.yul\":2209:2210   */\n  dup2\n    /* \"#utility.yul\":2206:2219   */\n  lt\n    /* \"#utility.yul\":2198:2311   */\n  iszero\n  tag_82\n  jumpi\n    /* \"#utility.yul\":2297:2298   */\n  dup1\n    /* \"#utility.yul\":2292:2295   */\n  dup3\n    /* \"#utility.yul\":2288:2299   */\n  add\n    /* \"#utility.yul\":2282:2300   */\n  mload\n    /* \"#utility.yul\":2278:2279   */\n  dup2\n    /* \"#utility.yul\":2273:2276   */\n  dup5\n    /* \"#utility.yul\":2269:2280   */\n  add\n    /* \"#utility.yul\":2262:2301   */\n  mstore\n    /* \"#utility.yul\":2234:2236   */\n  0x20\n    /* \"#utility.yul\":2231:2232   */\n  dup2\n    /* \"#utility.yul\":2227:2237   */\n  add\n    /* \"#utility.yul\":2222:2237   */\n  swap1\n  pop\n    /* \"#utility.yul\":2198:2311   */\n  jump(tag_80)\ntag_82:\n    /* \"#utility.yul\":2329:2335   */\n  dup4\n    /* \"#utility.yul\":2326:2327   */\n  dup2\n    /* \"#utility.yul\":2323:2336   */\n  gt\n    /* \"#utility.yul\":2320:2421   */\n  iszero\n  tag_83\n  jumpi\n    /* \"#utility.yul\":2409:2410   */\n  0x00\n    /* \"#utility.yul\":2400:2406   */\n  dup5\n    /* \"#utility.yul\":2395:2398   */\n  dup5\n    /* \"#utility.yul\":2391:2407   */\n  add\n    /* \"#utility.yul\":2384:2411   */\n  mstore\n    /* \"#utility.yul\":2320:2421   */\ntag_83:\n    /* \"#utility.yul\":2169:2427   */\n  pop\n    /* \"#utility.yul\":2120:2427   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2433:2852   */\ntag_42:\n    /* \"#utility.yul\":2521:2526   */\n  0x00\n    /* \"#utility.yul\":2546:2611   */\n  tag_85\n    /* \"#utility.yul\":2562:2610   */\n  tag_86\n    /* \"#utility.yul\":2603:2609   */\n  dup5\n    /* \"#utility.yul\":2562:2610   */\n  tag_40\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":2546:2611   */\n  tag_39\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":2537:2611   */\n  swap1\n  pop\n    /* \"#utility.yul\":2634:2640   */\n  dup3\n    /* \"#utility.yul\":2627:2632   */\n  dup2\n    /* \"#utility.yul\":2620:2641   */\n  mstore\n    /* \"#utility.yul\":2672:2676   */\n  0x20\n    /* \"#utility.yul\":2665:2670   */\n  dup2\n    /* \"#utility.yul\":2661:2677   */\n  add\n    /* \"#utility.yul\":2710:2713   */\n  dup5\n    /* \"#utility.yul\":2701:2707   */\n  dup5\n    /* \"#utility.yul\":2696:2699   */\n  dup5\n    /* \"#utility.yul\":2692:2708   */\n  add\n    /* \"#utility.yul\":2689:2714   */\n  gt\n    /* \"#utility.yul\":2686:2798   */\n  iszero\n  tag_87\n  jumpi\n    /* \"#utility.yul\":2717:2796   */\n  tag_88\n  tag_35\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":2686:2798   */\ntag_87:\n    /* \"#utility.yul\":2807:2846   */\n  tag_89\n    /* \"#utility.yul\":2839:2845   */\n  dup5\n    /* \"#utility.yul\":2834:2837   */\n  dup3\n    /* \"#utility.yul\":2829:2832   */\n  dup6\n    /* \"#utility.yul\":2807:2846   */\n  tag_41\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":2527:2852   */\n  pop\n    /* \"#utility.yul\":2433:2852   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2871:3224   */\ntag_43:\n    /* \"#utility.yul\":2937:2942   */\n  0x00\n    /* \"#utility.yul\":2986:2989   */\n  dup3\n    /* \"#utility.yul\":2979:2983   */\n  0x1f\n    /* \"#utility.yul\":2971:2977   */\n  dup4\n    /* \"#utility.yul\":2967:2984   */\n  add\n    /* \"#utility.yul\":2963:2990   */\n  slt\n    /* \"#utility.yul\":2953:3075   */\n  tag_91\n  jumpi\n    /* \"#utility.yul\":2994:3073   */\n  tag_92\n  tag_34\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":2953:3075   */\ntag_91:\n    /* \"#utility.yul\":3104:3110   */\n  dup2\n    /* \"#utility.yul\":3098:3111   */\n  mload\n    /* \"#utility.yul\":3129:3218   */\n  tag_93\n    /* \"#utility.yul\":3214:3217   */\n  dup5\n    /* \"#utility.yul\":3206:3212   */\n  dup3\n    /* \"#utility.yul\":3199:3203   */\n  0x20\n    /* \"#utility.yul\":3191:3197   */\n  dup7\n    /* \"#utility.yul\":3187:3204   */\n  add\n    /* \"#utility.yul\":3129:3218   */\n  tag_42\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":3120:3218   */\n  swap2\n  pop\n    /* \"#utility.yul\":2943:3224   */\n  pop\n    /* \"#utility.yul\":2871:3224   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3230:3908   */\ntag_2:\n    /* \"#utility.yul\":3318:3324   */\n  0x00\n    /* \"#utility.yul\":3326:3332   */\n  dup1\n    /* \"#utility.yul\":3375:3377   */\n  0x40\n    /* \"#utility.yul\":3363:3372   */\n  dup4\n    /* \"#utility.yul\":3354:3361   */\n  dup6\n    /* \"#utility.yul\":3350:3373   */\n  sub\n    /* \"#utility.yul\":3346:3378   */\n  slt\n    /* \"#utility.yul\":3343:3462   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":3381:3460   */\n  tag_96\n  tag_28\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":3343:3462   */\ntag_95:\n    /* \"#utility.yul\":3501:3502   */\n  0x00\n    /* \"#utility.yul\":3526:3590   */\n  tag_97\n    /* \"#utility.yul\":3582:3589   */\n  dup6\n    /* \"#utility.yul\":3573:3579   */\n  dup3\n    /* \"#utility.yul\":3562:3571   */\n  dup7\n    /* \"#utility.yul\":3558:3580   */\n  add\n    /* \"#utility.yul\":3526:3590   */\n  tag_33\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":3516:3590   */\n  swap3\n  pop\n    /* \"#utility.yul\":3472:3600   */\n  pop\n    /* \"#utility.yul\":3660:3662   */\n  0x20\n    /* \"#utility.yul\":3649:3658   */\n  dup4\n    /* \"#utility.yul\":3645:3663   */\n  add\n    /* \"#utility.yul\":3639:3664   */\n  mload\n    /* \"#utility.yul\":3691:3709   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3683:3689   */\n  dup2\n    /* \"#utility.yul\":3680:3710   */\n  gt\n    /* \"#utility.yul\":3677:3794   */\n  iszero\n  tag_98\n  jumpi\n    /* \"#utility.yul\":3713:3792   */\n  tag_99\n  tag_29\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":3677:3794   */\ntag_98:\n    /* \"#utility.yul\":3818:3891   */\n  tag_100\n    /* \"#utility.yul\":3883:3890   */\n  dup6\n    /* \"#utility.yul\":3874:3880   */\n  dup3\n    /* \"#utility.yul\":3863:3872   */\n  dup7\n    /* \"#utility.yul\":3859:3881   */\n  add\n    /* \"#utility.yul\":3818:3891   */\n  tag_43\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":3808:3891   */\n  swap2\n  pop\n    /* \"#utility.yul\":3610:3901   */\n  pop\n    /* \"#utility.yul\":3230:3908   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3914:3991   */\ntag_44:\n    /* \"#utility.yul\":3951:3958   */\n  0x00\n    /* \"#utility.yul\":3980:3985   */\n  dup2\n    /* \"#utility.yul\":3969:3985   */\n  swap1\n  pop\n    /* \"#utility.yul\":3914:3991   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3997:4177   */\ntag_45:\n    /* \"#utility.yul\":4045:4122   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4042:4043   */\n  0x00\n    /* \"#utility.yul\":4035:4123   */\n  mstore\n    /* \"#utility.yul\":4142:4146   */\n  0x11\n    /* \"#utility.yul\":4139:4140   */\n  0x04\n    /* \"#utility.yul\":4132:4147   */\n  mstore\n    /* \"#utility.yul\":4166:4170   */\n  0x24\n    /* \"#utility.yul\":4163:4164   */\n  0x00\n    /* \"#utility.yul\":4156:4171   */\n  revert\n    /* \"#utility.yul\":4183:4374   */\ntag_6:\n    /* \"#utility.yul\":4223:4227   */\n  0x00\n    /* \"#utility.yul\":4243:4263   */\n  tag_104\n    /* \"#utility.yul\":4261:4262   */\n  dup3\n    /* \"#utility.yul\":4243:4263   */\n  tag_44\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":4238:4263   */\n  swap2\n  pop\n    /* \"#utility.yul\":4277:4297   */\n  tag_105\n    /* \"#utility.yul\":4295:4296   */\n  dup4\n    /* \"#utility.yul\":4277:4297   */\n  tag_44\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":4272:4297   */\n  swap3\n  pop\n    /* \"#utility.yul\":4316:4317   */\n  dup3\n    /* \"#utility.yul\":4313:4314   */\n  dup3\n    /* \"#utility.yul\":4310:4318   */\n  lt\n    /* \"#utility.yul\":4307:4341   */\n  iszero\n  tag_106\n  jumpi\n    /* \"#utility.yul\":4321:4339   */\n  tag_107\n  tag_45\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":4307:4341   */\ntag_106:\n    /* \"#utility.yul\":4366:4367   */\n  dup3\n    /* \"#utility.yul\":4363:4364   */\n  dup3\n    /* \"#utility.yul\":4359:4368   */\n  sub\n    /* \"#utility.yul\":4351:4368   */\n  swap1\n  pop\n    /* \"#utility.yul\":4183:4374   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4380:4560   */\ntag_9:\n    /* \"#utility.yul\":4428:4505   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4425:4426   */\n  0x00\n    /* \"#utility.yul\":4418:4506   */\n  mstore\n    /* \"#utility.yul\":4525:4529   */\n  0x01\n    /* \"#utility.yul\":4522:4523   */\n  0x04\n    /* \"#utility.yul\":4515:4530   */\n  mstore\n    /* \"#utility.yul\":4549:4553   */\n  0x24\n    /* \"#utility.yul\":4546:4547   */\n  0x00\n    /* \"#utility.yul\":4539:4554   */\n  revert\n    /* \"#utility.yul\":4566:4664   */\ntag_46:\n    /* \"#utility.yul\":4617:4623   */\n  0x00\n    /* \"#utility.yul\":4651:4656   */\n  dup2\n    /* \"#utility.yul\":4645:4657   */\n  mload\n    /* \"#utility.yul\":4635:4657   */\n  swap1\n  pop\n    /* \"#utility.yul\":4566:4664   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4670:4817   */\ntag_47:\n    /* \"#utility.yul\":4771:4782   */\n  0x00\n    /* \"#utility.yul\":4808:4811   */\n  dup2\n    /* \"#utility.yul\":4793:4811   */\n  swap1\n  pop\n    /* \"#utility.yul\":4670:4817   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4823:5196   */\ntag_48:\n    /* \"#utility.yul\":4927:4930   */\n  0x00\n    /* \"#utility.yul\":4955:4993   */\n  tag_112\n    /* \"#utility.yul\":4987:4992   */\n  dup3\n    /* \"#utility.yul\":4955:4993   */\n  tag_46\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":5009:5097   */\n  tag_113\n    /* \"#utility.yul\":5090:5096   */\n  dup2\n    /* \"#utility.yul\":5085:5088   */\n  dup6\n    /* \"#utility.yul\":5009:5097   */\n  tag_47\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":5002:5097   */\n  swap4\n  pop\n    /* \"#utility.yul\":5106:5158   */\n  tag_114\n    /* \"#utility.yul\":5151:5157   */\n  dup2\n    /* \"#utility.yul\":5146:5149   */\n  dup6\n    /* \"#utility.yul\":5139:5143   */\n  0x20\n    /* \"#utility.yul\":5132:5137   */\n  dup7\n    /* \"#utility.yul\":5128:5144   */\n  add\n    /* \"#utility.yul\":5106:5158   */\n  tag_41\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":5183:5189   */\n  dup1\n    /* \"#utility.yul\":5178:5181   */\n  dup5\n    /* \"#utility.yul\":5174:5190   */\n  add\n    /* \"#utility.yul\":5167:5190   */\n  swap2\n  pop\n    /* \"#utility.yul\":4931:5196   */\n  pop\n    /* \"#utility.yul\":4823:5196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5202:5473   */\ntag_14:\n    /* \"#utility.yul\":5332:5335   */\n  0x00\n    /* \"#utility.yul\":5354:5447   */\n  tag_116\n    /* \"#utility.yul\":5443:5446   */\n  dup3\n    /* \"#utility.yul\":5434:5440   */\n  dup5\n    /* \"#utility.yul\":5354:5447   */\n  tag_48\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":5347:5447   */\n  swap2\n  pop\n    /* \"#utility.yul\":5464:5467   */\n  dup2\n    /* \"#utility.yul\":5457:5467   */\n  swap1\n  pop\n    /* \"#utility.yul\":5202:5473   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5479:5648   */\ntag_49:\n    /* \"#utility.yul\":5563:5574   */\n  0x00\n    /* \"#utility.yul\":5597:5603   */\n  dup3\n    /* \"#utility.yul\":5592:5595   */\n  dup3\n    /* \"#utility.yul\":5585:5604   */\n  mstore\n    /* \"#utility.yul\":5637:5641   */\n  0x20\n    /* \"#utility.yul\":5632:5635   */\n  dup3\n    /* \"#utility.yul\":5628:5642   */\n  add\n    /* \"#utility.yul\":5613:5642   */\n  swap1\n  pop\n    /* \"#utility.yul\":5479:5648   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5654:5895   */\ntag_50:\n    /* \"#utility.yul\":5794:5828   */\n  0x5570677261646561626c6550726f78793a206e657720696d706c656d656e7461\n    /* \"#utility.yul\":5790:5791   */\n  0x00\n    /* \"#utility.yul\":5782:5788   */\n  dup3\n    /* \"#utility.yul\":5778:5792   */\n  add\n    /* \"#utility.yul\":5771:5829   */\n  mstore\n    /* \"#utility.yul\":5863:5887   */\n  0x74696f6e206973206e6f74206120636f6e747261637400000000000000000000\n    /* \"#utility.yul\":5858:5860   */\n  0x20\n    /* \"#utility.yul\":5850:5856   */\n  dup3\n    /* \"#utility.yul\":5846:5861   */\n  add\n    /* \"#utility.yul\":5839:5888   */\n  mstore\n    /* \"#utility.yul\":5654:5895   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5901:6267   */\ntag_51:\n    /* \"#utility.yul\":6043:6046   */\n  0x00\n    /* \"#utility.yul\":6064:6131   */\n  tag_120\n    /* \"#utility.yul\":6128:6130   */\n  0x36\n    /* \"#utility.yul\":6123:6126   */\n  dup4\n    /* \"#utility.yul\":6064:6131   */\n  tag_49\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":6057:6131   */\n  swap2\n  pop\n    /* \"#utility.yul\":6140:6233   */\n  tag_121\n    /* \"#utility.yul\":6229:6232   */\n  dup3\n    /* \"#utility.yul\":6140:6233   */\n  tag_50\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":6258:6260   */\n  0x40\n    /* \"#utility.yul\":6253:6256   */\n  dup3\n    /* \"#utility.yul\":6249:6261   */\n  add\n    /* \"#utility.yul\":6242:6261   */\n  swap1\n  pop\n    /* \"#utility.yul\":5901:6267   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6273:6692   */\ntag_25:\n    /* \"#utility.yul\":6439:6443   */\n  0x00\n    /* \"#utility.yul\":6477:6479   */\n  0x20\n    /* \"#utility.yul\":6466:6475   */\n  dup3\n    /* \"#utility.yul\":6462:6480   */\n  add\n    /* \"#utility.yul\":6454:6480   */\n  swap1\n  pop\n    /* \"#utility.yul\":6526:6535   */\n  dup2\n    /* \"#utility.yul\":6520:6524   */\n  dup2\n    /* \"#utility.yul\":6516:6536   */\n  sub\n    /* \"#utility.yul\":6512:6513   */\n  0x00\n    /* \"#utility.yul\":6501:6510   */\n  dup4\n    /* \"#utility.yul\":6497:6514   */\n  add\n    /* \"#utility.yul\":6490:6537   */\n  mstore\n    /* \"#utility.yul\":6554:6685   */\n  tag_123\n    /* \"#utility.yul\":6680:6684   */\n  dup2\n    /* \"#utility.yul\":6554:6685   */\n  tag_51\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":6546:6685   */\n  swap1\n  pop\n    /* \"#utility.yul\":6273:6692   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"proxy/UpgradeableProxy.sol\":657:3016  contract UpgradeableProxy is Proxy {... */\ntag_19:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"proxy/UpgradeableProxy.sol\":657:3016  contract UpgradeableProxy is Proxy {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_2, calldatasize)\n        /* \"proxy/Proxy.sol\":2878:2889  _fallback() */\n      tag_5\n        /* \"proxy/Proxy.sol\":2878:2887  _fallback */\n      tag_6\n        /* \"proxy/Proxy.sol\":2878:2889  _fallback() */\n      jump\t// in\n    tag_5:\n        /* \"proxy/UpgradeableProxy.sol\":657:3016  contract UpgradeableProxy is Proxy {... */\n      stop\n    tag_2:\n        /* \"proxy/Proxy.sol\":2654:2665  _fallback() */\n      tag_9\n        /* \"proxy/Proxy.sol\":2654:2663  _fallback */\n      tag_6\n        /* \"proxy/Proxy.sol\":2654:2665  _fallback() */\n      jump\t// in\n    tag_9:\n        /* \"proxy/UpgradeableProxy.sol\":657:3016  contract UpgradeableProxy is Proxy {... */\n      stop\n        /* \"proxy/Proxy.sol\":2306:2411  function _fallback() internal {... */\n    tag_6:\n        /* \"proxy/Proxy.sol\":2347:2364  _beforeFallback() */\n      tag_12\n        /* \"proxy/Proxy.sol\":2347:2362  _beforeFallback */\n      tag_13\n        /* \"proxy/Proxy.sol\":2347:2364  _beforeFallback() */\n      jump\t// in\n    tag_12:\n        /* \"proxy/Proxy.sol\":2375:2403  _delegate(_implementation()) */\n      tag_14\n        /* \"proxy/Proxy.sol\":2385:2402  _implementation() */\n      tag_15\n        /* \"proxy/Proxy.sol\":2385:2400  _implementation */\n      tag_16\n        /* \"proxy/Proxy.sol\":2385:2402  _implementation() */\n      jump\t// in\n    tag_15:\n        /* \"proxy/Proxy.sol\":2375:2384  _delegate */\n      tag_17\n        /* \"proxy/Proxy.sol\":2375:2403  _delegate(_implementation()) */\n      jump\t// in\n    tag_14:\n        /* \"proxy/Proxy.sol\":2306:2411  function _fallback() internal {... */\n      jump\t// out\n        /* \"contracts/utils/Address.sol\":743:1130  function isContract(address account) internal view returns (bool) {... */\n    tag_10:\n        /* \"contracts/utils/Address.sol\":803:807  bool */\n      0x00\n        /* \"contracts/utils/Address.sol\":1011:1023  uint256 size */\n      dup1\n        /* \"contracts/utils/Address.sol\":1078:1085  account */\n      dup3\n        /* \"contracts/utils/Address.sol\":1066:1086  extcodesize(account) */\n      extcodesize\n        /* \"contracts/utils/Address.sol\":1058:1086  size := extcodesize(account) */\n      swap1\n      pop\n        /* \"contracts/utils/Address.sol\":1121:1122  0 */\n      0x00\n        /* \"contracts/utils/Address.sol\":1114:1118  size */\n      dup2\n        /* \"contracts/utils/Address.sol\":1114:1122  size > 0 */\n      gt\n        /* \"contracts/utils/Address.sol\":1107:1122  return size > 0 */\n      swap2\n      pop\n      pop\n        /* \"contracts/utils/Address.sol\":743:1130  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"proxy/Proxy.sol\":3187:3239  function _beforeFallback() internal virtual {... */\n    tag_13:\n      jump\t// out\n        /* \"proxy/UpgradeableProxy.sol\":2018:2266  function _implementation() internal override view returns (address impl) {... */\n    tag_16:\n        /* \"proxy/UpgradeableProxy.sol\":2077:2089  address impl */\n      0x00\n        /* \"proxy/UpgradeableProxy.sol\":2102:2114  bytes32 slot */\n      dup1\n        /* \"proxy/UpgradeableProxy.sol\":1868:1934  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"proxy/UpgradeableProxy.sol\":2117:2137  _IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"proxy/UpgradeableProxy.sol\":2102:2137  bytes32 slot = _IMPLEMENTATION_SLOT */\n      swap1\n      pop\n        /* \"proxy/UpgradeableProxy.sol\":2243:2247  slot */\n      dup1\n        /* \"proxy/UpgradeableProxy.sol\":2237:2248  sload(slot) */\n      sload\n        /* \"proxy/UpgradeableProxy.sol\":2229:2248  impl := sload(slot) */\n      swap2\n      pop\n        /* \"proxy/UpgradeableProxy.sol\":2214:2259  {... */\n      pop\n        /* \"proxy/UpgradeableProxy.sol\":2018:2266  function _implementation() internal override view returns (address impl) {... */\n      swap1\n      jump\t// out\n        /* \"proxy/Proxy.sol\":906:1813  function _delegate(address implementation) internal {... */\n    tag_17:\n        /* \"proxy/Proxy.sol\":1298:1312  calldatasize() */\n      calldatasize\n        /* \"proxy/Proxy.sol\":1295:1296  0 */\n      0x00\n        /* \"proxy/Proxy.sol\":1292:1293  0 */\n      dup1\n        /* \"proxy/Proxy.sol\":1279:1313  calldatacopy(0, 0, calldatasize()) */\n      calldatacopy\n        /* \"proxy/Proxy.sol\":1516:1517  0 */\n      0x00\n        /* \"proxy/Proxy.sol\":1513:1514  0 */\n      dup1\n        /* \"proxy/Proxy.sol\":1497:1511  calldatasize() */\n      calldatasize\n        /* \"proxy/Proxy.sol\":1494:1495  0 */\n      0x00\n        /* \"proxy/Proxy.sol\":1478:1492  implementation */\n      dup5\n        /* \"proxy/Proxy.sol\":1471:1476  gas() */\n      gas\n        /* \"proxy/Proxy.sol\":1458:1518  delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) */\n      delegatecall\n        /* \"proxy/Proxy.sol\":1595:1611  returndatasize() */\n      returndatasize\n        /* \"proxy/Proxy.sol\":1592:1593  0 */\n      0x00\n        /* \"proxy/Proxy.sol\":1589:1590  0 */\n      dup1\n        /* \"proxy/Proxy.sol\":1574:1612  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \"proxy/Proxy.sol\":1635:1641  result */\n      dup1\n        /* \"proxy/Proxy.sol\":1709:1710  0 */\n      0x00\n        /* \"proxy/Proxy.sol\":1704:1742  case 0 { revert(0, returndatasize()) } */\n      dup2\n      eq\n      tag_23\n      jumpi\n        /* \"proxy/Proxy.sol\":1776:1792  returndatasize() */\n      returndatasize\n        /* \"proxy/Proxy.sol\":1773:1774  0 */\n      0x00\n        /* \"proxy/Proxy.sol\":1766:1793  return(0, returndatasize()) */\n      return\n        /* \"proxy/Proxy.sol\":1704:1742  case 0 { revert(0, returndatasize()) } */\n    tag_23:\n        /* \"proxy/Proxy.sol\":1723:1739  returndatasize() */\n      returndatasize\n        /* \"proxy/Proxy.sol\":1720:1721  0 */\n      0x00\n        /* \"proxy/Proxy.sol\":1713:1740  revert(0, returndatasize()) */\n      revert\n\n    auxdata: 0xa264697066735822122099f620c648fe09321a45cc6a311899b856e9799dd3c5ce66801604eb31f452b364736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_401": {
									"entryPoint": null,
									"id": 401,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_setImplementation_458": {
									"entryPoint": 289,
									"id": 458,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isContract_19": {
									"entryPoint": 418,
									"id": 19,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr_fromMemory": {
									"entryPoint": 801,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 530,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr_fromMemory": {
									"entryPoint": 867,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory": {
									"entryPoint": 913,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 1183,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a962afc8125c78a56caf50b104c38b8318717478c281b4e59e7fb3e32af3a877_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1232,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a962afc8125c78a56caf50b104c38b8318717478c281b4e59e7fb3e32af3a877__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1386,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 674,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 437,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 701,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 1161,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 1172,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1255,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1062,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 489,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 457,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1005,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 750,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 625,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x01": {
									"entryPoint": 1114,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 1015,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 578,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 551,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 556,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 452,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 447,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 561,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_a962afc8125c78a56caf50b104c38b8318717478c281b4e59e7fb3e32af3a877": {
									"entryPoint": 1272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 507,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6695:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:3",
														"type": ""
													}
												],
												"src": "466:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:3"
															},
															"nodeType": "YulIf",
															"src": "621:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:3",
														"type": ""
													}
												],
												"src": "568:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:3"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:3",
														"type": ""
													}
												],
												"src": "696:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "934:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "951:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "954:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "944:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "944:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "944:12:3"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "845:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1057:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1074:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1077:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1067:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1067:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1067:12:3"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "968:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1139:54:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1149:38:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1167:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1174:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1163:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1163:14:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1183:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1179:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1179:7:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1159:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1159:28:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1149:6:3"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1122:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1132:6:3",
														"type": ""
													}
												],
												"src": "1091:102:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1227:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1244:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1247:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1237:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1237:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1237:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1341:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1344:4:3",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1334:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1334:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1365:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1368:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1358:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1358:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1358:15:3"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1199:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1428:238:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1438:58:3",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1460:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "1490:4:3"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "1468:21:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1468:27:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1456:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1456:40:3"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1442:10:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1607:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1609:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1609:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1609:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1550:10:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1562:18:3",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1547:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1547:34:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1586:10:3"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1598:6:3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1583:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1583:22:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1544:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1544:62:3"
															},
															"nodeType": "YulIf",
															"src": "1541:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1645:2:3",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1649:10:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1638:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1638:22:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1638:22:3"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1414:6:3",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1422:4:3",
														"type": ""
													}
												],
												"src": "1385:281:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1713:88:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1723:30:3",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1733:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1733:20:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1723:6:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1782:6:3"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1790:4:3"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1762:19:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1762:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1762:33:3"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1697:4:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1706:6:3",
														"type": ""
													}
												],
												"src": "1672:129:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1873:241:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1978:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1980:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1980:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1980:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1950:6:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1958:18:3",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1947:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1947:30:3"
															},
															"nodeType": "YulIf",
															"src": "1944:56:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2010:37:3",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2040:6:3"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "2018:21:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2018:29:3"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2010:4:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2084:23:3",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2096:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2102:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2092:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2092:15:3"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2084:4:3"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1857:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1868:4:3",
														"type": ""
													}
												],
												"src": "1807:307:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2169:258:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2179:10:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2188:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2183:1:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2248:63:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2273:3:3"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "2278:1:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2269:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2269:11:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "2292:3:3"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2297:1:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2288:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2288:11:3"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2282:5:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2282:18:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2262:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2262:39:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2262:39:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2209:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2212:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2206:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2206:13:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2220:19:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2222:15:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2231:1:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2234:2:3",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2227:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2227:10:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2222:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2202:3:3",
																"statements": []
															},
															"src": "2198:113:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2345:76:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2395:3:3"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "2400:6:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2391:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2391:16:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2409:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2384:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2384:27:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2384:27:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2326:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2329:6:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2323:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2323:13:3"
															},
															"nodeType": "YulIf",
															"src": "2320:101:3"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2151:3:3",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "2156:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2161:6:3",
														"type": ""
													}
												],
												"src": "2120:307:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2527:325:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2537:74:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2603:6:3"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2562:40:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2562:48:3"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2546:15:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2546:65:3"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2537:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2627:5:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2634:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2620:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2620:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2620:21:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2650:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2665:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2672:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2661:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2661:16:3"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2654:3:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2715:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2717:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2717:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2717:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2696:3:3"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2701:6:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2692:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2692:16:3"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2710:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2689:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2689:25:3"
															},
															"nodeType": "YulIf",
															"src": "2686:112:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2829:3:3"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2834:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2839:6:3"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2807:21:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2807:39:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2807:39:3"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2500:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2505:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2513:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2521:5:3",
														"type": ""
													}
												],
												"src": "2433:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2943:281:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2992:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2994:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2994:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2994:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2971:6:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2979:4:3",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2967:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2967:17:3"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2986:3:3"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2963:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2963:27:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2956:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2956:35:3"
															},
															"nodeType": "YulIf",
															"src": "2953:122:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3084:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3104:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3098:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3098:13:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3088:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3120:98:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3191:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3199:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3187:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3187:17:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3206:6:3"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3214:3:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "3129:57:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3129:89:3"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3120:5:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2921:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2929:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2937:5:3",
														"type": ""
													}
												],
												"src": "2871:353:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3333:575:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3379:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3381:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3381:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3381:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3354:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3363:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3350:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3350:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3375:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3346:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3346:32:3"
															},
															"nodeType": "YulIf",
															"src": "3343:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "3472:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3487:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3501:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3491:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3516:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3562:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3573:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3558:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3558:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3582:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3526:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3526:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3516:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3610:291:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3625:39:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3649:9:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3660:2:3",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3645:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3645:18:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3639:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3639:25:3"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3629:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3711:83:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3713:77:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3713:79:3"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3713:79:3"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3683:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3691:18:3",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3680:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3680:30:3"
																	},
																	"nodeType": "YulIf",
																	"src": "3677:117:3"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3808:83:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3863:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3874:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3859:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3859:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3883:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3818:40:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3818:73:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3808:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3295:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3306:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3318:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3326:6:3",
														"type": ""
													}
												],
												"src": "3230:678:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3959:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3969:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3980:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3969:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3941:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3951:7:3",
														"type": ""
													}
												],
												"src": "3914:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4025:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4042:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4045:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4035:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4035:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4035:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4139:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4142:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4132:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4132:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4132:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4163:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4166:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4156:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4156:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4156:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3997:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4228:146:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4238:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4261:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4243:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4243:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4238:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4272:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4295:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4277:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4277:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4272:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4319:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4321:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4321:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4321:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4313:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4316:1:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4310:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4310:8:3"
															},
															"nodeType": "YulIf",
															"src": "4307:34:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4351:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4363:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4366:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4359:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4359:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "4351:4:3"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4214:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4217:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "4223:4:3",
														"type": ""
													}
												],
												"src": "4183:191:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4408:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4425:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4428:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4418:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4418:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4418:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4522:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4525:4:3",
																		"type": "",
																		"value": "0x01"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4515:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4515:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4515:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4546:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4549:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4539:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4539:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4539:15:3"
														}
													]
												},
												"name": "panic_error_0x01",
												"nodeType": "YulFunctionDefinition",
												"src": "4380:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4624:40:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4635:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4651:5:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4645:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4645:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4635:6:3"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4607:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4617:6:3",
														"type": ""
													}
												],
												"src": "4566:98:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4783:34:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4793:18:3",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "4808:3:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4793:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4755:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4760:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4771:11:3",
														"type": ""
													}
												],
												"src": "4670:147:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4931:265:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4941:52:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4987:5:3"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4955:31:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4955:38:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4945:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5002:95:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5085:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5090:6:3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5009:75:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5009:88:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5002:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5132:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5139:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5128:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5128:16:3"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5146:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5151:6:3"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "5106:21:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5106:52:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5106:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5167:23:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5178:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5183:6:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5174:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5174:16:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5167:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4912:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4919:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4927:3:3",
														"type": ""
													}
												],
												"src": "4823:373:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5336:137:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5347:100:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5434:6:3"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5443:3:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5354:79:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5354:93:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5347:3:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5457:10:3",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "5464:3:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5457:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5315:3:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5321:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5332:3:3",
														"type": ""
													}
												],
												"src": "5202:271:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5575:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5592:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5597:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5585:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5585:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5585:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5613:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5632:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5637:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5628:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5628:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5613:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5547:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5552:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "5563:11:3",
														"type": ""
													}
												],
												"src": "5479:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5760:135:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5782:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5790:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5778:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5778:14:3"
																	},
																	{
																		"hexValue": "5570677261646561626c6550726f78793a206e657720696d706c656d656e7461",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5794:34:3",
																		"type": "",
																		"value": "UpgradeableProxy: new implementa"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5771:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5771:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5771:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5850:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5858:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5846:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5846:15:3"
																	},
																	{
																		"hexValue": "74696f6e206973206e6f74206120636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5863:24:3",
																		"type": "",
																		"value": "tion is not a contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5839:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5839:49:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5839:49:3"
														}
													]
												},
												"name": "store_literal_in_memory_a962afc8125c78a56caf50b104c38b8318717478c281b4e59e7fb3e32af3a877",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5752:6:3",
														"type": ""
													}
												],
												"src": "5654:241:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6047:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6057:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6123:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6128:2:3",
																		"type": "",
																		"value": "54"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6064:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6064:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6057:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6229:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a962afc8125c78a56caf50b104c38b8318717478c281b4e59e7fb3e32af3a877",
																	"nodeType": "YulIdentifier",
																	"src": "6140:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6140:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6140:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6242:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6253:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6258:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6249:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6249:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6242:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a962afc8125c78a56caf50b104c38b8318717478c281b4e59e7fb3e32af3a877_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6035:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6043:3:3",
														"type": ""
													}
												],
												"src": "5901:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6444:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6454:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6466:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6477:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6462:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6462:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6454:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6501:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6512:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6497:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6497:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6520:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6526:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6516:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6516:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6490:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6490:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6490:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6546:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6680:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a962afc8125c78a56caf50b104c38b8318717478c281b4e59e7fb3e32af3a877_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6554:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6554:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6546:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a962afc8125c78a56caf50b104c38b8318717478c281b4e59e7fb3e32af3a877__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6424:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6439:4:3",
														"type": ""
													}
												],
												"src": "6273:419:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function panic_error_0x01() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_a962afc8125c78a56caf50b104c38b8318717478c281b4e59e7fb3e32af3a877(memPtr) {\n\n        mstore(add(memPtr, 0), \"UpgradeableProxy: new implementa\")\n\n        mstore(add(memPtr, 32), \"tion is not a contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_a962afc8125c78a56caf50b104c38b8318717478c281b4e59e7fb3e32af3a877_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 54)\n        store_literal_in_memory_a962afc8125c78a56caf50b104c38b8318717478c281b4e59e7fb3e32af3a877(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a962afc8125c78a56caf50b104c38b8318717478c281b4e59e7fb3e32af3a877__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a962afc8125c78a56caf50b104c38b8318717478c281b4e59e7fb3e32af3a877_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405260405161066538038061066583398181016040528101906100259190610391565b60017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd60001c6100559190610426565b60001b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b1461008a5761008961045a565b5b6100998261012160201b60201c565b60008151111561011a5760008273ffffffffffffffffffffffffffffffffffffffff16826040516100ca91906104d0565b600060405180830381855af49150503d8060008114610105576040519150601f19603f3d011682016040523d82523d6000602084013e61010a565b606091505b505090508061011857600080fd5b505b505061058a565b610134816101a260201b61002c1760201c565b610173576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016a9061056a565b60405180910390fd5b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b90508181555050565b600080823b905060008111915050919050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101f4826101c9565b9050919050565b610204816101e9565b811461020f57600080fd5b50565b600081519050610221816101fb565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61027a82610231565b810181811067ffffffffffffffff8211171561029957610298610242565b5b80604052505050565b60006102ac6101b5565b90506102b88282610271565b919050565b600067ffffffffffffffff8211156102d8576102d7610242565b5b6102e182610231565b9050602081019050919050565b60005b8381101561030c5780820151818401526020810190506102f1565b8381111561031b576000848401525b50505050565b600061033461032f846102bd565b6102a2565b9050828152602081018484840111156103505761034f61022c565b5b61035b8482856102ee565b509392505050565b600082601f83011261037857610377610227565b5b8151610388848260208601610321565b91505092915050565b600080604083850312156103a8576103a76101bf565b5b60006103b685828601610212565b925050602083015167ffffffffffffffff8111156103d7576103d66101c4565b5b6103e385828601610363565b9150509250929050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610431826103ed565b915061043c836103ed565b92508282101561044f5761044e6103f7565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b600081519050919050565b600081905092915050565b60006104aa82610489565b6104b48185610494565b93506104c48185602086016102ee565b80840191505092915050565b60006104dc828461049f565b915081905092915050565b600082825260208201905092915050565b7f5570677261646561626c6550726f78793a206e657720696d706c656d656e746160008201527f74696f6e206973206e6f74206120636f6e747261637400000000000000000000602082015250565b60006105546036836104e7565b915061055f826104f8565b604082019050919050565b6000602082019050818103600083015261058381610547565b9050919050565b60cd806105986000396000f3fe608060405236601057600e6018565b005b60166018565b005b601e603f565b602a60266041565b6072565b565b600080823b905060008111915050919050565b565b6000807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b9050805491505090565b3660008037600080366000845af43d6000803e80600081146092573d6000f35b3d6000fdfea264697066735822122099f620c648fe09321a45cc6a311899b856e9799dd3c5ce66801604eb31f452b364736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x665 CODESIZE SUB DUP1 PUSH2 0x665 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x25 SWAP2 SWAP1 PUSH2 0x391 JUMP JUMPDEST PUSH1 0x1 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBD PUSH1 0x0 SHR PUSH2 0x55 SWAP2 SWAP1 PUSH2 0x426 JUMP JUMPDEST PUSH1 0x0 SHL PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL EQ PUSH2 0x8A JUMPI PUSH2 0x89 PUSH2 0x45A JUMP JUMPDEST JUMPDEST PUSH2 0x99 DUP3 PUSH2 0x121 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x4D0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x105 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x10A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x118 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMPDEST POP POP PUSH2 0x58A JUMP JUMPDEST PUSH2 0x134 DUP2 PUSH2 0x1A2 PUSH1 0x20 SHL PUSH2 0x2C OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x173 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16A SWAP1 PUSH2 0x56A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL SWAP1 POP DUP2 DUP2 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F4 DUP3 PUSH2 0x1C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x204 DUP2 PUSH2 0x1E9 JUMP JUMPDEST DUP2 EQ PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x221 DUP2 PUSH2 0x1FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x27A DUP3 PUSH2 0x231 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x299 JUMPI PUSH2 0x298 PUSH2 0x242 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AC PUSH2 0x1B5 JUMP JUMPDEST SWAP1 POP PUSH2 0x2B8 DUP3 DUP3 PUSH2 0x271 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2D8 JUMPI PUSH2 0x2D7 PUSH2 0x242 JUMP JUMPDEST JUMPDEST PUSH2 0x2E1 DUP3 PUSH2 0x231 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x30C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2F1 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x31B JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x334 PUSH2 0x32F DUP5 PUSH2 0x2BD JUMP JUMPDEST PUSH2 0x2A2 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x350 JUMPI PUSH2 0x34F PUSH2 0x22C JUMP JUMPDEST JUMPDEST PUSH2 0x35B DUP5 DUP3 DUP6 PUSH2 0x2EE JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x378 JUMPI PUSH2 0x377 PUSH2 0x227 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x388 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x321 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3A8 JUMPI PUSH2 0x3A7 PUSH2 0x1BF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3B6 DUP6 DUP3 DUP7 ADD PUSH2 0x212 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D7 JUMPI PUSH2 0x3D6 PUSH2 0x1C4 JUMP JUMPDEST JUMPDEST PUSH2 0x3E3 DUP6 DUP3 DUP7 ADD PUSH2 0x363 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x431 DUP3 PUSH2 0x3ED JUMP JUMPDEST SWAP2 POP PUSH2 0x43C DUP4 PUSH2 0x3ED JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x44F JUMPI PUSH2 0x44E PUSH2 0x3F7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AA DUP3 PUSH2 0x489 JUMP JUMPDEST PUSH2 0x4B4 DUP2 DUP6 PUSH2 0x494 JUMP JUMPDEST SWAP4 POP PUSH2 0x4C4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2EE JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DC DUP3 DUP5 PUSH2 0x49F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5570677261646561626C6550726F78793A206E657720696D706C656D656E7461 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x74696F6E206973206E6F74206120636F6E747261637400000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x554 PUSH1 0x36 DUP4 PUSH2 0x4E7 JUMP JUMPDEST SWAP2 POP PUSH2 0x55F DUP3 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x583 DUP2 PUSH2 0x547 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xCD DUP1 PUSH2 0x598 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH1 0x10 JUMPI PUSH1 0xE PUSH1 0x18 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x16 PUSH1 0x18 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1E PUSH1 0x3F JUMP JUMPDEST PUSH1 0x2A PUSH1 0x26 PUSH1 0x41 JUMP JUMPDEST PUSH1 0x72 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL SWAP1 POP DUP1 SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 PUSH1 0x0 DUP2 EQ PUSH1 0x92 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 0xF6 KECCAK256 0xC6 BASEFEE INVALID MULMOD ORIGIN BYTE GASLIMIT 0xCC PUSH11 0x311899B856E9799DD3C5CE PUSH7 0x801604EB31F452 0xB3 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "657:2359:2:-:0;;;1046:411;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1212:1;1167:41;1159:50;;:54;;;;:::i;:::-;1151:63;;1868:66;1127:20;;:87;1120:95;;;;:::i;:::-;;1226:26;1245:6;1226:18;;;:26;;:::i;:::-;1281:1;1266:5;:12;:16;1263:187;;;1364:12;1381:6;:19;;1401:5;1381:26;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1363:44;;;1430:7;1422:16;;;;;;1284:166;1263:187;1046:411;;657:2359;;2644:369;2726:37;2745:17;2726:18;;;;;:37;;:::i;:::-;2718:104;;;;;;;;;;;;:::i;:::-;;;;;;;;;2835:12;1868:66;2850:20;;2835:35;;2977:17;2971:4;2964:31;2949:57;2644:369;:::o;743:387:0:-;803:4;1011:12;1078:7;1066:20;1058:28;;1121:1;1114:4;:8;1107:15;;;743:387;;;:::o;7:75:3:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:117::-;954:1;951;944:12;968:117;1077:1;1074;1067:12;1091:102;1132:6;1183:2;1179:7;1174:2;1167:5;1163:14;1159:28;1149:38;;1091:102;;;:::o;1199:180::-;1247:77;1244:1;1237:88;1344:4;1341:1;1334:15;1368:4;1365:1;1358:15;1385:281;1468:27;1490:4;1468:27;:::i;:::-;1460:6;1456:40;1598:6;1586:10;1583:22;1562:18;1550:10;1547:34;1544:62;1541:88;;;1609:18;;:::i;:::-;1541:88;1649:10;1645:2;1638:22;1428:238;1385:281;;:::o;1672:129::-;1706:6;1733:20;;:::i;:::-;1723:30;;1762:33;1790:4;1782:6;1762:33;:::i;:::-;1672:129;;;:::o;1807:307::-;1868:4;1958:18;1950:6;1947:30;1944:56;;;1980:18;;:::i;:::-;1944:56;2018:29;2040:6;2018:29;:::i;:::-;2010:37;;2102:4;2096;2092:15;2084:23;;1807:307;;;:::o;2120:::-;2188:1;2198:113;2212:6;2209:1;2206:13;2198:113;;;2297:1;2292:3;2288:11;2282:18;2278:1;2273:3;2269:11;2262:39;2234:2;2231:1;2227:10;2222:15;;2198:113;;;2329:6;2326:1;2323:13;2320:101;;;2409:1;2400:6;2395:3;2391:16;2384:27;2320:101;2169:258;2120:307;;;:::o;2433:419::-;2521:5;2546:65;2562:48;2603:6;2562:48;:::i;:::-;2546:65;:::i;:::-;2537:74;;2634:6;2627:5;2620:21;2672:4;2665:5;2661:16;2710:3;2701:6;2696:3;2692:16;2689:25;2686:112;;;2717:79;;:::i;:::-;2686:112;2807:39;2839:6;2834:3;2829;2807:39;:::i;:::-;2527:325;2433:419;;;;;:::o;2871:353::-;2937:5;2986:3;2979:4;2971:6;2967:17;2963:27;2953:122;;2994:79;;:::i;:::-;2953:122;3104:6;3098:13;3129:89;3214:3;3206:6;3199:4;3191:6;3187:17;3129:89;:::i;:::-;3120:98;;2943:281;2871:353;;;;:::o;3230:678::-;3318:6;3326;3375:2;3363:9;3354:7;3350:23;3346:32;3343:119;;;3381:79;;:::i;:::-;3343:119;3501:1;3526:64;3582:7;3573:6;3562:9;3558:22;3526:64;:::i;:::-;3516:74;;3472:128;3660:2;3649:9;3645:18;3639:25;3691:18;3683:6;3680:30;3677:117;;;3713:79;;:::i;:::-;3677:117;3818:73;3883:7;3874:6;3863:9;3859:22;3818:73;:::i;:::-;3808:83;;3610:291;3230:678;;;;;:::o;3914:77::-;3951:7;3980:5;3969:16;;3914:77;;;:::o;3997:180::-;4045:77;4042:1;4035:88;4142:4;4139:1;4132:15;4166:4;4163:1;4156:15;4183:191;4223:4;4243:20;4261:1;4243:20;:::i;:::-;4238:25;;4277:20;4295:1;4277:20;:::i;:::-;4272:25;;4316:1;4313;4310:8;4307:34;;;4321:18;;:::i;:::-;4307:34;4366:1;4363;4359:9;4351:17;;4183:191;;;;:::o;4380:180::-;4428:77;4425:1;4418:88;4525:4;4522:1;4515:15;4549:4;4546:1;4539:15;4566:98;4617:6;4651:5;4645:12;4635:22;;4566:98;;;:::o;4670:147::-;4771:11;4808:3;4793:18;;4670:147;;;;:::o;4823:373::-;4927:3;4955:38;4987:5;4955:38;:::i;:::-;5009:88;5090:6;5085:3;5009:88;:::i;:::-;5002:95;;5106:52;5151:6;5146:3;5139:4;5132:5;5128:16;5106:52;:::i;:::-;5183:6;5178:3;5174:16;5167:23;;4931:265;4823:373;;;;:::o;5202:271::-;5332:3;5354:93;5443:3;5434:6;5354:93;:::i;:::-;5347:100;;5464:3;5457:10;;5202:271;;;;:::o;5479:169::-;5563:11;5597:6;5592:3;5585:19;5637:4;5632:3;5628:14;5613:29;;5479:169;;;;:::o;5654:241::-;5794:34;5790:1;5782:6;5778:14;5771:58;5863:24;5858:2;5850:6;5846:15;5839:49;5654:241;:::o;5901:366::-;6043:3;6064:67;6128:2;6123:3;6064:67;:::i;:::-;6057:74;;6140:93;6229:3;6140:93;:::i;:::-;6258:2;6253:3;6249:12;6242:19;;5901:366;;;:::o;6273:419::-;6439:4;6477:2;6466:9;6462:18;6454:26;;6526:9;6520:4;6516:20;6512:1;6501:9;6497:17;6490:47;6554:131;6680:4;6554:131;:::i;:::-;6546:139;;6273:419;;;:::o;657:2359:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_334": {
									"entryPoint": null,
									"id": 334,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_342": {
									"entryPoint": null,
									"id": 342,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_beforeFallback_347": {
									"entryPoint": 63,
									"id": 347,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_delegate_307": {
									"entryPoint": 114,
									"id": 307,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_fallback_326": {
									"entryPoint": 24,
									"id": 326,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_implementation_423": {
									"entryPoint": 65,
									"id": 423,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isContract_19": {
									"entryPoint": 44,
									"id": 19,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405236601057600e6018565b005b60166018565b005b601e603f565b602a60266041565b6072565b565b600080823b905060008111915050919050565b565b6000807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b9050805491505090565b3660008037600080366000845af43d6000803e80600081146092573d6000f35b3d6000fdfea264697066735822122099f620c648fe09321a45cc6a311899b856e9799dd3c5ce66801604eb31f452b364736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH1 0x10 JUMPI PUSH1 0xE PUSH1 0x18 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x16 PUSH1 0x18 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1E PUSH1 0x3F JUMP JUMPDEST PUSH1 0x2A PUSH1 0x26 PUSH1 0x41 JUMP JUMPDEST PUSH1 0x72 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL SWAP1 POP DUP1 SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 PUSH1 0x0 DUP2 EQ PUSH1 0x92 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 0xF6 KECCAK256 0xC6 BASEFEE INVALID MULMOD ORIGIN BYTE GASLIMIT 0xCC PUSH11 0x311899B856E9799DD3C5CE PUSH7 0x801604EB31F452 0xB3 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "657:2359:2:-:0;;;;;;2878:11:1;:9;:11::i;:::-;657:2359:2;;2654:11:1;:9;:11::i;:::-;657:2359:2;2306:105:1;2347:17;:15;:17::i;:::-;2375:28;2385:17;:15;:17::i;:::-;2375:9;:28::i;:::-;2306:105::o;743:387:0:-;803:4;1011:12;1078:7;1066:20;1058:28;;1121:1;1114:4;:8;1107:15;;;743:387;;;:::o;3187:52:1:-;:::o;2018:248:2:-;2077:12;2102;1868:66;2117:20;;2102:35;;2243:4;2237:11;2229:19;;2214:45;2018:248;:::o;906:907:1:-;1298:14;1295:1;1292;1279:34;1516:1;1513;1497:14;1494:1;1478:14;1471:5;1458:60;1595:16;1592:1;1589;1574:38;1635:6;1709:1;1704:38;;;;1776:16;1773:1;1766:27;1704:38;1723:16;1720:1;1713:27"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "41000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite"
							},
							"internal": {
								"_implementation()": "2142",
								"_setImplementation(address)": "infinite",
								"_upgradeTo(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 657,
									"end": 3016,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 657,
									"end": 3016,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 657,
									"end": 3016,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1046,
									"end": 1457,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1046,
									"end": 1457,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1046,
									"end": 1457,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1046,
									"end": 1457,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 1046,
									"end": 1457,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1046,
									"end": 1457,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1046,
									"end": 1457,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1046,
									"end": 1457,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1046,
									"end": 1457,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1046,
									"end": 1457,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1046,
									"end": 1457,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1046,
									"end": 1457,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1046,
									"end": 1457,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1046,
									"end": 1457,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1046,
									"end": 1457,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1046,
									"end": 1457,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1046,
									"end": 1457,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1046,
									"end": 1457,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1046,
									"end": 1457,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1046,
									"end": 1457,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1046,
									"end": 1457,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1046,
									"end": 1457,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1046,
									"end": 1457,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1046,
									"end": 1457,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1212,
									"end": 1213,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1167,
									"end": 1208,
									"name": "PUSH",
									"source": 2,
									"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBD"
								},
								{
									"begin": 1159,
									"end": 1209,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1159,
									"end": 1209,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 1159,
									"end": 1213,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1159,
									"end": 1213,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1159,
									"end": 1213,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1159,
									"end": 1213,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1159,
									"end": 1213,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1159,
									"end": 1213,
									"name": "tag",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1159,
									"end": 1213,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1151,
									"end": 1214,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1151,
									"end": 1214,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1868,
									"end": 1934,
									"name": "PUSH",
									"source": 2,
									"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
								},
								{
									"begin": 1127,
									"end": 1147,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1127,
									"end": 1147,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1127,
									"end": 1214,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1215,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1120,
									"end": 1215,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1215,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1120,
									"end": 1215,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1120,
									"end": 1215,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1120,
									"end": 1215,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1120,
									"end": 1215,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1215,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1120,
									"end": 1215,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1226,
									"end": 1252,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1245,
									"end": 1251,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1226,
									"end": 1244,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1226,
									"end": 1244,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1226,
									"end": 1244,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1226,
									"end": 1252,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1226,
									"end": 1252,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 1226,
									"end": 1252,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1226,
									"end": 1252,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1226,
									"end": 1252,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1281,
									"end": 1282,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1266,
									"end": 1271,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1266,
									"end": 1278,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1266,
									"end": 1282,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1263,
									"end": 1450,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1263,
									"end": 1450,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 1263,
									"end": 1450,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1364,
									"end": 1376,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1381,
									"end": 1387,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1400,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1381,
									"end": 1400,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 1406,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "GAS",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "DELEGATECALL",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "PUSH",
									"source": 2,
									"value": "3F"
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "RETURNDATACOPY",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1407,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1363,
									"end": 1407,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1363,
									"end": 1407,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1363,
									"end": 1407,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1430,
									"end": 1437,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1422,
									"end": 1438,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 1422,
									"end": 1438,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1422,
									"end": 1438,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1422,
									"end": 1438,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1422,
									"end": 1438,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1422,
									"end": 1438,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 1422,
									"end": 1438,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1284,
									"end": 1450,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1263,
									"end": 1450,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 1263,
									"end": 1450,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1046,
									"end": 1457,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1046,
									"end": 1457,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 657,
									"end": 3016,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 657,
									"end": 3016,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2644,
									"end": 3013,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 2644,
									"end": 3013,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2726,
									"end": 2763,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 2745,
									"end": 2762,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2726,
									"end": 2744,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 2726,
									"end": 2744,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2726,
									"end": 2744,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 2726,
									"end": 2744,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18446744073709551626"
								},
								{
									"begin": 2726,
									"end": 2744,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 2726,
									"end": 2763,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2726,
									"end": 2763,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 2726,
									"end": 2763,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 2726,
									"end": 2763,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 2726,
									"end": 2763,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2718,
									"end": 2822,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 2718,
									"end": 2822,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2718,
									"end": 2822,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2718,
									"end": 2822,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2718,
									"end": 2822,
									"name": "PUSH",
									"source": 2,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2718,
									"end": 2822,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2718,
									"end": 2822,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2718,
									"end": 2822,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 2718,
									"end": 2822,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2718,
									"end": 2822,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 2718,
									"end": 2822,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2718,
									"end": 2822,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 2718,
									"end": 2822,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 2718,
									"end": 2822,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 2718,
									"end": 2822,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2718,
									"end": 2822,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2718,
									"end": 2822,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2718,
									"end": 2822,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2718,
									"end": 2822,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2718,
									"end": 2822,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 2718,
									"end": 2822,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2718,
									"end": 2822,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 2718,
									"end": 2822,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 2718,
									"end": 2822,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2835,
									"end": 2847,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1868,
									"end": 1934,
									"name": "PUSH",
									"source": 2,
									"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
								},
								{
									"begin": 2850,
									"end": 2870,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2850,
									"end": 2870,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 2835,
									"end": 2870,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2835,
									"end": 2870,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2977,
									"end": 2994,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2971,
									"end": 2975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2964,
									"end": 2995,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 2949,
									"end": 3006,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2644,
									"end": 3013,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2644,
									"end": 3013,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 743,
									"end": 1130,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 743,
									"end": 1130,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 803,
									"end": 807,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1011,
									"end": 1023,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1078,
									"end": 1085,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1066,
									"end": 1086,
									"name": "EXTCODESIZE",
									"source": 0
								},
								{
									"begin": 1058,
									"end": 1086,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1058,
									"end": 1086,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1121,
									"end": 1122,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1114,
									"end": 1118,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1114,
									"end": 1122,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1122,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1122,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1122,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 743,
									"end": 1130,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 743,
									"end": 1130,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 743,
									"end": 1130,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 743,
									"end": 1130,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "58"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 3,
									"value": "58"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "61"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 3,
									"value": "61"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "63"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 3,
									"value": "63"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 845,
									"end": 962,
									"name": "tag",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 845,
									"end": 962,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 951,
									"end": 952,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 944,
									"end": 956,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 968,
									"end": 1085,
									"name": "tag",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 968,
									"end": 1085,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1077,
									"end": 1078,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1074,
									"end": 1075,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1067,
									"end": 1079,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "tag",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1132,
									"end": 1138,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1183,
									"end": 1185,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 1179,
									"end": 1186,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1174,
									"end": 1176,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 1167,
									"end": 1172,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1163,
									"end": 1177,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1159,
									"end": 1187,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1149,
									"end": 1187,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1149,
									"end": 1187,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 1199,
									"end": 1379,
									"name": "tag",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 1199,
									"end": 1379,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1247,
									"end": 1324,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1244,
									"end": 1245,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1237,
									"end": 1325,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1344,
									"end": 1348,
									"name": "PUSH",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 1341,
									"end": 1342,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1334,
									"end": 1349,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1368,
									"end": 1372,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 1365,
									"end": 1366,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1358,
									"end": 1373,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "tag",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "69"
								},
								{
									"begin": 1490,
									"end": 1494,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "tag",
									"source": 3,
									"value": "69"
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1460,
									"end": 1466,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1456,
									"end": 1496,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1598,
									"end": 1604,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1586,
									"end": 1596,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1583,
									"end": 1605,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 1562,
									"end": 1580,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1550,
									"end": 1560,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1547,
									"end": 1581,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1544,
									"end": 1606,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "70"
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "71"
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "tag",
									"source": 3,
									"value": "71"
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "tag",
									"source": 3,
									"value": "70"
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1649,
									"end": 1659,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1645,
									"end": 1647,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1638,
									"end": 1660,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1428,
									"end": 1666,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "tag",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1706,
									"end": 1712,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "tag",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1723,
									"end": 1753,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1723,
									"end": 1753,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "74"
								},
								{
									"begin": 1790,
									"end": 1794,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1782,
									"end": 1788,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "tag",
									"source": 3,
									"value": "74"
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 1807,
									"end": 2114,
									"name": "tag",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1807,
									"end": 2114,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1868,
									"end": 1872,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 1976,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1950,
									"end": 1956,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1947,
									"end": 1977,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1944,
									"end": 2000,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1944,
									"end": 2000,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "76"
								},
								{
									"begin": 1944,
									"end": 2000,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1980,
									"end": 1998,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "77"
								},
								{
									"begin": 1980,
									"end": 1998,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 1980,
									"end": 1998,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1980,
									"end": 1998,
									"name": "tag",
									"source": 3,
									"value": "77"
								},
								{
									"begin": 1980,
									"end": 1998,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1944,
									"end": 2000,
									"name": "tag",
									"source": 3,
									"value": "76"
								},
								{
									"begin": 1944,
									"end": 2000,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2018,
									"end": 2047,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "78"
								},
								{
									"begin": 2040,
									"end": 2046,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2018,
									"end": 2047,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 2018,
									"end": 2047,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 2018,
									"end": 2047,
									"name": "tag",
									"source": 3,
									"value": "78"
								},
								{
									"begin": 2018,
									"end": 2047,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2010,
									"end": 2047,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2010,
									"end": 2047,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2102,
									"end": 2106,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2096,
									"end": 2100,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2092,
									"end": 2107,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2084,
									"end": 2107,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2084,
									"end": 2107,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1807,
									"end": 2114,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1807,
									"end": 2114,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1807,
									"end": 2114,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1807,
									"end": 2114,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 2120,
									"end": 2427,
									"name": "tag",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 2120,
									"end": 2427,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2188,
									"end": 2189,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2198,
									"end": 2311,
									"name": "tag",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 2198,
									"end": 2311,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2212,
									"end": 2218,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2209,
									"end": 2210,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2206,
									"end": 2219,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 2198,
									"end": 2311,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2198,
									"end": 2311,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "82"
								},
								{
									"begin": 2198,
									"end": 2311,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2297,
									"end": 2298,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2292,
									"end": 2295,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2288,
									"end": 2299,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2282,
									"end": 2300,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2278,
									"end": 2279,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2273,
									"end": 2276,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2269,
									"end": 2280,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2262,
									"end": 2301,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2234,
									"end": 2236,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2231,
									"end": 2232,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2227,
									"end": 2237,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2222,
									"end": 2237,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2222,
									"end": 2237,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2198,
									"end": 2311,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 2198,
									"end": 2311,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2198,
									"end": 2311,
									"name": "tag",
									"source": 3,
									"value": "82"
								},
								{
									"begin": 2198,
									"end": 2311,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2329,
									"end": 2335,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2326,
									"end": 2327,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2323,
									"end": 2336,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 2320,
									"end": 2421,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2320,
									"end": 2421,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "83"
								},
								{
									"begin": 2320,
									"end": 2421,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2409,
									"end": 2410,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2400,
									"end": 2406,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2395,
									"end": 2398,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2391,
									"end": 2407,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2384,
									"end": 2411,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2320,
									"end": 2421,
									"name": "tag",
									"source": 3,
									"value": "83"
								},
								{
									"begin": 2320,
									"end": 2421,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2169,
									"end": 2427,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2120,
									"end": 2427,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2120,
									"end": 2427,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2120,
									"end": 2427,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2120,
									"end": 2427,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 2433,
									"end": 2852,
									"name": "tag",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 2433,
									"end": 2852,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2521,
									"end": 2526,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2546,
									"end": 2611,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "85"
								},
								{
									"begin": 2562,
									"end": 2610,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "86"
								},
								{
									"begin": 2603,
									"end": 2609,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2562,
									"end": 2610,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2562,
									"end": 2610,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 2562,
									"end": 2610,
									"name": "tag",
									"source": 3,
									"value": "86"
								},
								{
									"begin": 2562,
									"end": 2610,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2546,
									"end": 2611,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 2546,
									"end": 2611,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 2546,
									"end": 2611,
									"name": "tag",
									"source": 3,
									"value": "85"
								},
								{
									"begin": 2546,
									"end": 2611,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2537,
									"end": 2611,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2537,
									"end": 2611,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2634,
									"end": 2640,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2627,
									"end": 2632,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2620,
									"end": 2641,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2672,
									"end": 2676,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2665,
									"end": 2670,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2661,
									"end": 2677,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2710,
									"end": 2713,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2701,
									"end": 2707,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2696,
									"end": 2699,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2708,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2689,
									"end": 2714,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 2686,
									"end": 2798,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2686,
									"end": 2798,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "87"
								},
								{
									"begin": 2686,
									"end": 2798,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2717,
									"end": 2796,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "88"
								},
								{
									"begin": 2717,
									"end": 2796,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 2717,
									"end": 2796,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 2717,
									"end": 2796,
									"name": "tag",
									"source": 3,
									"value": "88"
								},
								{
									"begin": 2717,
									"end": 2796,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2686,
									"end": 2798,
									"name": "tag",
									"source": 3,
									"value": "87"
								},
								{
									"begin": 2686,
									"end": 2798,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2807,
									"end": 2846,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "89"
								},
								{
									"begin": 2839,
									"end": 2845,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2834,
									"end": 2837,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2829,
									"end": 2832,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 2807,
									"end": 2846,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 2807,
									"end": 2846,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 2807,
									"end": 2846,
									"name": "tag",
									"source": 3,
									"value": "89"
								},
								{
									"begin": 2807,
									"end": 2846,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2527,
									"end": 2852,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2433,
									"end": 2852,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 2433,
									"end": 2852,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 2433,
									"end": 2852,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2433,
									"end": 2852,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2433,
									"end": 2852,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2433,
									"end": 2852,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 2871,
									"end": 3224,
									"name": "tag",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 2871,
									"end": 3224,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2937,
									"end": 2942,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2986,
									"end": 2989,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2979,
									"end": 2983,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 2971,
									"end": 2977,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2967,
									"end": 2984,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2963,
									"end": 2990,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 2953,
									"end": 3075,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "91"
								},
								{
									"begin": 2953,
									"end": 3075,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2994,
									"end": 3073,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "92"
								},
								{
									"begin": 2994,
									"end": 3073,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 2994,
									"end": 3073,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 2994,
									"end": 3073,
									"name": "tag",
									"source": 3,
									"value": "92"
								},
								{
									"begin": 2994,
									"end": 3073,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2953,
									"end": 3075,
									"name": "tag",
									"source": 3,
									"value": "91"
								},
								{
									"begin": 2953,
									"end": 3075,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3104,
									"end": 3110,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3098,
									"end": 3111,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 3129,
									"end": 3218,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "93"
								},
								{
									"begin": 3214,
									"end": 3217,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 3206,
									"end": 3212,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3199,
									"end": 3203,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 3191,
									"end": 3197,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 3187,
									"end": 3204,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3129,
									"end": 3218,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 3129,
									"end": 3218,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 3129,
									"end": 3218,
									"name": "tag",
									"source": 3,
									"value": "93"
								},
								{
									"begin": 3129,
									"end": 3218,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3120,
									"end": 3218,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3120,
									"end": 3218,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2943,
									"end": 3224,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2871,
									"end": 3224,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 2871,
									"end": 3224,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2871,
									"end": 3224,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2871,
									"end": 3224,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2871,
									"end": 3224,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 3230,
									"end": 3908,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 3230,
									"end": 3908,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3318,
									"end": 3324,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3326,
									"end": 3332,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3375,
									"end": 3377,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 3363,
									"end": 3372,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 3354,
									"end": 3361,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 3346,
									"end": 3378,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 3343,
									"end": 3462,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 3343,
									"end": 3462,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "95"
								},
								{
									"begin": 3343,
									"end": 3462,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 3381,
									"end": 3460,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "96"
								},
								{
									"begin": 3381,
									"end": 3460,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 3381,
									"end": 3460,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 3381,
									"end": 3460,
									"name": "tag",
									"source": 3,
									"value": "96"
								},
								{
									"begin": 3381,
									"end": 3460,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3343,
									"end": 3462,
									"name": "tag",
									"source": 3,
									"value": "95"
								},
								{
									"begin": 3343,
									"end": 3462,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3501,
									"end": 3502,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3526,
									"end": 3590,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "97"
								},
								{
									"begin": 3582,
									"end": 3589,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 3573,
									"end": 3579,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3562,
									"end": 3571,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 3558,
									"end": 3580,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3526,
									"end": 3590,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 3526,
									"end": 3590,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 3526,
									"end": 3590,
									"name": "tag",
									"source": 3,
									"value": "97"
								},
								{
									"begin": 3526,
									"end": 3590,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3516,
									"end": 3590,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 3516,
									"end": 3590,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3472,
									"end": 3600,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3660,
									"end": 3662,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 3649,
									"end": 3658,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 3645,
									"end": 3663,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3639,
									"end": 3664,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 3691,
									"end": 3709,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3683,
									"end": 3689,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3680,
									"end": 3710,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 3677,
									"end": 3794,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 3677,
									"end": 3794,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "98"
								},
								{
									"begin": 3677,
									"end": 3794,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 3713,
									"end": 3792,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "99"
								},
								{
									"begin": 3713,
									"end": 3792,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 3713,
									"end": 3792,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 3713,
									"end": 3792,
									"name": "tag",
									"source": 3,
									"value": "99"
								},
								{
									"begin": 3713,
									"end": 3792,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3677,
									"end": 3794,
									"name": "tag",
									"source": 3,
									"value": "98"
								},
								{
									"begin": 3677,
									"end": 3794,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3818,
									"end": 3891,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 3883,
									"end": 3890,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 3874,
									"end": 3880,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3863,
									"end": 3872,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 3859,
									"end": 3881,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3818,
									"end": 3891,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 3818,
									"end": 3891,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 3818,
									"end": 3891,
									"name": "tag",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 3818,
									"end": 3891,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3808,
									"end": 3891,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3808,
									"end": 3891,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3610,
									"end": 3901,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3230,
									"end": 3908,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 3230,
									"end": 3908,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3230,
									"end": 3908,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 3230,
									"end": 3908,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3230,
									"end": 3908,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3230,
									"end": 3908,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 3914,
									"end": 3991,
									"name": "tag",
									"source": 3,
									"value": "44"
								},
								{
									"begin": 3914,
									"end": 3991,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3951,
									"end": 3958,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3980,
									"end": 3985,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3969,
									"end": 3985,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3969,
									"end": 3985,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3914,
									"end": 3991,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3914,
									"end": 3991,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3914,
									"end": 3991,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3914,
									"end": 3991,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 3997,
									"end": 4177,
									"name": "tag",
									"source": 3,
									"value": "45"
								},
								{
									"begin": 3997,
									"end": 4177,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4045,
									"end": 4122,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4042,
									"end": 4043,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4035,
									"end": 4123,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 4142,
									"end": 4146,
									"name": "PUSH",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 4139,
									"end": 4140,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 4132,
									"end": 4147,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 4166,
									"end": 4170,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 4163,
									"end": 4164,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4156,
									"end": 4171,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 4183,
									"end": 4374,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 4183,
									"end": 4374,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4223,
									"end": 4227,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4243,
									"end": 4263,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "104"
								},
								{
									"begin": 4261,
									"end": 4262,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4243,
									"end": 4263,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "44"
								},
								{
									"begin": 4243,
									"end": 4263,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 4243,
									"end": 4263,
									"name": "tag",
									"source": 3,
									"value": "104"
								},
								{
									"begin": 4243,
									"end": 4263,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4238,
									"end": 4263,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 4238,
									"end": 4263,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4277,
									"end": 4297,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "105"
								},
								{
									"begin": 4295,
									"end": 4296,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 4277,
									"end": 4297,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "44"
								},
								{
									"begin": 4277,
									"end": 4297,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 4277,
									"end": 4297,
									"name": "tag",
									"source": 3,
									"value": "105"
								},
								{
									"begin": 4277,
									"end": 4297,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4272,
									"end": 4297,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 4272,
									"end": 4297,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4316,
									"end": 4317,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4313,
									"end": 4314,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4310,
									"end": 4318,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 4307,
									"end": 4341,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 4307,
									"end": 4341,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "106"
								},
								{
									"begin": 4307,
									"end": 4341,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 4321,
									"end": 4339,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "107"
								},
								{
									"begin": 4321,
									"end": 4339,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "45"
								},
								{
									"begin": 4321,
									"end": 4339,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 4321,
									"end": 4339,
									"name": "tag",
									"source": 3,
									"value": "107"
								},
								{
									"begin": 4321,
									"end": 4339,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4307,
									"end": 4341,
									"name": "tag",
									"source": 3,
									"value": "106"
								},
								{
									"begin": 4307,
									"end": 4341,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4366,
									"end": 4367,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4363,
									"end": 4364,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4359,
									"end": 4368,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 4351,
									"end": 4368,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4351,
									"end": 4368,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4183,
									"end": 4374,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 4183,
									"end": 4374,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 4183,
									"end": 4374,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4183,
									"end": 4374,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4183,
									"end": 4374,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 4380,
									"end": 4560,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 4380,
									"end": 4560,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4428,
									"end": 4505,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4425,
									"end": 4426,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4418,
									"end": 4506,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 4525,
									"end": 4529,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 4522,
									"end": 4523,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 4515,
									"end": 4530,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 4549,
									"end": 4553,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 4546,
									"end": 4547,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4539,
									"end": 4554,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 4566,
									"end": 4664,
									"name": "tag",
									"source": 3,
									"value": "46"
								},
								{
									"begin": 4566,
									"end": 4664,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4617,
									"end": 4623,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4651,
									"end": 4656,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4645,
									"end": 4657,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 4635,
									"end": 4657,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4635,
									"end": 4657,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4566,
									"end": 4664,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 4566,
									"end": 4664,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4566,
									"end": 4664,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4566,
									"end": 4664,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 4670,
									"end": 4817,
									"name": "tag",
									"source": 3,
									"value": "47"
								},
								{
									"begin": 4670,
									"end": 4817,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4771,
									"end": 4782,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4808,
									"end": 4811,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4793,
									"end": 4811,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4793,
									"end": 4811,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4670,
									"end": 4817,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 4670,
									"end": 4817,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 4670,
									"end": 4817,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4670,
									"end": 4817,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4670,
									"end": 4817,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 4823,
									"end": 5196,
									"name": "tag",
									"source": 3,
									"value": "48"
								},
								{
									"begin": 4823,
									"end": 5196,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4927,
									"end": 4930,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4955,
									"end": 4993,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "112"
								},
								{
									"begin": 4987,
									"end": 4992,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4955,
									"end": 4993,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "46"
								},
								{
									"begin": 4955,
									"end": 4993,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 4955,
									"end": 4993,
									"name": "tag",
									"source": 3,
									"value": "112"
								},
								{
									"begin": 4955,
									"end": 4993,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5009,
									"end": 5097,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "113"
								},
								{
									"begin": 5090,
									"end": 5096,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5085,
									"end": 5088,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 5009,
									"end": 5097,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "47"
								},
								{
									"begin": 5009,
									"end": 5097,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 5009,
									"end": 5097,
									"name": "tag",
									"source": 3,
									"value": "113"
								},
								{
									"begin": 5009,
									"end": 5097,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5002,
									"end": 5097,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 5002,
									"end": 5097,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5106,
									"end": 5158,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "114"
								},
								{
									"begin": 5151,
									"end": 5157,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5146,
									"end": 5149,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 5139,
									"end": 5143,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 5132,
									"end": 5137,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 5128,
									"end": 5144,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 5106,
									"end": 5158,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 5106,
									"end": 5158,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 5106,
									"end": 5158,
									"name": "tag",
									"source": 3,
									"value": "114"
								},
								{
									"begin": 5106,
									"end": 5158,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5183,
									"end": 5189,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5178,
									"end": 5181,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 5174,
									"end": 5190,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 5167,
									"end": 5190,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 5167,
									"end": 5190,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4931,
									"end": 5196,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4823,
									"end": 5196,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 4823,
									"end": 5196,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 4823,
									"end": 5196,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4823,
									"end": 5196,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4823,
									"end": 5196,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 5202,
									"end": 5473,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 5202,
									"end": 5473,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5332,
									"end": 5335,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5354,
									"end": 5447,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "116"
								},
								{
									"begin": 5443,
									"end": 5446,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 5434,
									"end": 5440,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 5354,
									"end": 5447,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "48"
								},
								{
									"begin": 5354,
									"end": 5447,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 5354,
									"end": 5447,
									"name": "tag",
									"source": 3,
									"value": "116"
								},
								{
									"begin": 5354,
									"end": 5447,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5347,
									"end": 5447,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 5347,
									"end": 5447,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5464,
									"end": 5467,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5457,
									"end": 5467,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5457,
									"end": 5467,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5202,
									"end": 5473,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 5202,
									"end": 5473,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 5202,
									"end": 5473,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5202,
									"end": 5473,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5202,
									"end": 5473,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 5479,
									"end": 5648,
									"name": "tag",
									"source": 3,
									"value": "49"
								},
								{
									"begin": 5479,
									"end": 5648,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5563,
									"end": 5574,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5597,
									"end": 5603,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 5592,
									"end": 5595,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 5585,
									"end": 5604,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 5637,
									"end": 5641,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 5632,
									"end": 5635,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 5628,
									"end": 5642,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 5613,
									"end": 5642,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5613,
									"end": 5642,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5479,
									"end": 5648,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 5479,
									"end": 5648,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 5479,
									"end": 5648,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5479,
									"end": 5648,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5479,
									"end": 5648,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 5654,
									"end": 5895,
									"name": "tag",
									"source": 3,
									"value": "50"
								},
								{
									"begin": 5654,
									"end": 5895,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5794,
									"end": 5828,
									"name": "PUSH",
									"source": 3,
									"value": "5570677261646561626C6550726F78793A206E657720696D706C656D656E7461"
								},
								{
									"begin": 5790,
									"end": 5791,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5782,
									"end": 5788,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 5778,
									"end": 5792,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 5771,
									"end": 5829,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 5863,
									"end": 5887,
									"name": "PUSH",
									"source": 3,
									"value": "74696F6E206973206E6F74206120636F6E747261637400000000000000000000"
								},
								{
									"begin": 5858,
									"end": 5860,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 5850,
									"end": 5856,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 5846,
									"end": 5861,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 5839,
									"end": 5888,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 5654,
									"end": 5895,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5654,
									"end": 5895,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 5901,
									"end": 6267,
									"name": "tag",
									"source": 3,
									"value": "51"
								},
								{
									"begin": 5901,
									"end": 6267,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6043,
									"end": 6046,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6064,
									"end": 6131,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "120"
								},
								{
									"begin": 6128,
									"end": 6130,
									"name": "PUSH",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 6123,
									"end": 6126,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6064,
									"end": 6131,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "49"
								},
								{
									"begin": 6064,
									"end": 6131,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 6064,
									"end": 6131,
									"name": "tag",
									"source": 3,
									"value": "120"
								},
								{
									"begin": 6064,
									"end": 6131,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6057,
									"end": 6131,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6057,
									"end": 6131,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6140,
									"end": 6233,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "121"
								},
								{
									"begin": 6229,
									"end": 6232,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6140,
									"end": 6233,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "50"
								},
								{
									"begin": 6140,
									"end": 6233,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 6140,
									"end": 6233,
									"name": "tag",
									"source": 3,
									"value": "121"
								},
								{
									"begin": 6140,
									"end": 6233,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6258,
									"end": 6260,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6253,
									"end": 6256,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6249,
									"end": 6261,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6242,
									"end": 6261,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6242,
									"end": 6261,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5901,
									"end": 6267,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 5901,
									"end": 6267,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5901,
									"end": 6267,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5901,
									"end": 6267,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 6273,
									"end": 6692,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 6273,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6439,
									"end": 6443,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6477,
									"end": 6479,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6466,
									"end": 6475,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6462,
									"end": 6480,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6454,
									"end": 6480,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6454,
									"end": 6480,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6526,
									"end": 6535,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6520,
									"end": 6524,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6516,
									"end": 6536,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6512,
									"end": 6513,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6501,
									"end": 6510,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6497,
									"end": 6514,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6490,
									"end": 6537,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6554,
									"end": 6685,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "123"
								},
								{
									"begin": 6680,
									"end": 6684,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6554,
									"end": 6685,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "51"
								},
								{
									"begin": 6554,
									"end": 6685,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 6554,
									"end": 6685,
									"name": "tag",
									"source": 3,
									"value": "123"
								},
								{
									"begin": 6554,
									"end": 6685,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6546,
									"end": 6685,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6546,
									"end": 6685,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6273,
									"end": 6692,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6273,
									"end": 6692,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6273,
									"end": 6692,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6273,
									"end": 6692,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 657,
									"end": 3016,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 657,
									"end": 3016,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 657,
									"end": 3016,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 657,
									"end": 3016,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 657,
									"end": 3016,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 657,
									"end": 3016,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 3016,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 657,
									"end": 3016,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 3016,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122099f620c648fe09321a45cc6a311899b856e9799dd3c5ce66801604eb31f452b364736f6c634300080d0033",
									".code": [
										{
											"begin": 657,
											"end": 3016,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 657,
											"end": 3016,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 657,
											"end": 3016,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 657,
											"end": 3016,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 657,
											"end": 3016,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 657,
											"end": 3016,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2878,
											"end": 2887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2878,
											"end": 2889,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2878,
											"end": 2889,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2878,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 657,
											"end": 3016,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 657,
											"end": 3016,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 657,
											"end": 3016,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2654,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2654,
											"end": 2663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2654,
											"end": 2665,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2654,
											"end": 2665,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2654,
											"end": 2665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 657,
											"end": 3016,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2411,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2306,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2347,
											"end": 2364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2347,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2347,
											"end": 2364,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2347,
											"end": 2364,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2347,
											"end": 2364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2375,
											"end": 2403,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2385,
											"end": 2402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2385,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2385,
											"end": 2402,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2385,
											"end": 2402,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2385,
											"end": 2402,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2375,
											"end": 2384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2375,
											"end": 2403,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2375,
											"end": 2403,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2375,
											"end": 2403,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2306,
											"end": 2411,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 743,
											"end": 1130,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 743,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 803,
											"end": 807,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1011,
											"end": 1023,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 1085,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1066,
											"end": 1086,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 1058,
											"end": 1086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1058,
											"end": 1086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1122,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1114,
											"end": 1118,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1122,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1122,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1122,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1122,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 743,
											"end": 1130,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 743,
											"end": 1130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 743,
											"end": 1130,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 743,
											"end": 1130,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3187,
											"end": 3239,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3187,
											"end": 3239,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3187,
											"end": 3239,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2018,
											"end": 2266,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2018,
											"end": 2266,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2077,
											"end": 2089,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2102,
											"end": 2114,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1868,
											"end": 1934,
											"name": "PUSH",
											"source": 2,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 2117,
											"end": 2137,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2117,
											"end": 2137,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2137,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2137,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2243,
											"end": 2247,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2248,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2229,
											"end": 2248,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2229,
											"end": 2248,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2214,
											"end": 2259,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2018,
											"end": 2266,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2018,
											"end": 2266,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 906,
											"end": 1813,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 906,
											"end": 1813,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1298,
											"end": 1312,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1296,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1293,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1313,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1517,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1513,
											"end": 1514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1511,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1494,
											"end": 1495,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1478,
											"end": 1492,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1476,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1518,
											"name": "DELEGATECALL",
											"source": 1
										},
										{
											"begin": 1595,
											"end": 1611,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1592,
											"end": 1593,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1589,
											"end": 1590,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1612,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1635,
											"end": 1641,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1709,
											"end": 1710,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1704,
											"end": 1742,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1742,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1704,
											"end": 1742,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 1792,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1773,
											"end": 1774,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1766,
											"end": 1793,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1742,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1704,
											"end": 1742,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1739,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1740,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy.  Upgradeability is only provided internally through {_upgradeTo}. For an externally upgradeable proxy see {TransparentUpgradeableProxy}.\",\"events\":{\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the upgradeable proxy with an initial implementation specified by `_logic`.  If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded function call, and allows initializating the storage of the proxy like a Solidity constructor.\"}},\"stateVariables\":{\"_IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"proxy/UpgradeableProxy.sol\":\"UpgradeableProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/utils/Address.sol\":{\"keccak256\":\"0x626b62cca5971be750732929d782b30e1277e36dd6b4ec2a90ddbbb61c650066\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07c78b7f7894e0444db2c6c4c73e4eddb78beed6bd65cd6089e2e9434bea83b0\",\"dweb:/ipfs/QmczQU7ihPMBhAmUM9MxnumRWwwvnTiDMDHp3nJSgYXQim\"]},\"proxy/Proxy.sol\":{\"keccak256\":\"0xf1769677121d6bc8e502bb697358d914770a9bad3962077a43e7f621a66ed0e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://69e8c19054254407b5a146151b2600fb34752fef2fd364ab23bdd55730a37482\",\"dweb:/ipfs/QmUStmoVT38uyDgdezmeWuvzneG1CjWbJTu8effxU3H2gj\"]},\"proxy/UpgradeableProxy.sol\":{\"keccak256\":\"0x17a094cda0382facc1e9cc5edf998065cd842252cb183fa180fbbd189d8a056e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fc9f9048db189c783f70226d2067f34d406c55dad8400a7d88b0773666bb6e\",\"dweb:/ipfs/QmeFJyQgsokZRP6rbSUteGcQcjLbA8CxwMdWMoEnbACoP6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> proxy/UpgradeableProxy.sol:24:5:\n   |\n24 |     constructor(address _logic, bytes memory _data) public payable {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1457,
					"file": "proxy/UpgradeableProxy.sol",
					"start": 1046
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							296
						]
					},
					"id": 297,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "62:69:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 296,
							"linearizedBaseContracts": [
								296
							],
							"name": "Address",
							"nameLocation": "141:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "809:321:0",
										"statements": [
											{
												"assignments": [
													11
												],
												"declarations": [
													{
														"constant": false,
														"id": 11,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "1019:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 18,
														"src": "1011:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 10,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1011:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 12,
												"nodeType": "VariableDeclarationStatement",
												"src": "1011:12:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1043:54:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1058:28:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1078:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1066:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1066:20:0"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1058:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 5,
														"isOffset": false,
														"isSlot": false,
														"src": "1078:7:0",
														"valueSize": 1
													},
													{
														"declaration": 11,
														"isOffset": false,
														"isSlot": false,
														"src": "1058:4:0",
														"valueSize": 1
													}
												],
												"id": 13,
												"nodeType": "InlineAssembly",
												"src": "1034:63:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 14,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "1114:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 15,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1121:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1114:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 9,
												"id": 17,
												"nodeType": "Return",
												"src": "1107:15:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "156:581:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 19,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "752:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "771:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "763:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "763:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "762:17:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "803:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "803:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:6:0"
									},
									"scope": 296,
									"src": "743:387:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "2136:246:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 30,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2163:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$296",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$296",
																				"typeString": "library Address"
																			}
																		],
																		"id": 29,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2155:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 28,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2155:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 31,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2155:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 32,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2155:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 33,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "2180:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2155:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2188:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 27,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2147:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2147:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2147:73:0"
											},
											{
												"assignments": [
													39,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 39,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2239:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 52,
														"src": "2234:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 38,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2234:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 46,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2282:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 40,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2252:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2252:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 43,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 42,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "2274:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2252:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2252:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2233:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 48,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "2304:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2313:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 47,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2296:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2296:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "2296:78:0"
											}
										]
									},
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "1138:921:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 53,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2074:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2100:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "2084:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2084:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2119:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "2111:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2111:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2083:43:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2136:0:0"
									},
									"scope": 296,
									"src": "2065:317:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "3233:86:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 64,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "3264:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 65,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "3272:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3278:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 63,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															70,
															90
														],
														"referencedDeclaration": 90,
														"src": "3251:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3251:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 62,
												"id": 68,
												"nodeType": "Return",
												"src": "3244:67:0"
											}
										]
									},
									"documentation": {
										"id": 54,
										"nodeType": "StructuredDocumentation",
										"src": "2390:748:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 70,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3153:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3174:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "3166:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3166:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3195:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "3182:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 57,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3182:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:35:0"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "3219:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 60,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3219:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:0"
									},
									"scope": 296,
									"src": "3144:175:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "3700:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 83,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "3740:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 84,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 75,
															"src": "3748:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3754:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 86,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "3757:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 82,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															110,
															160
														],
														"referencedDeclaration": 160,
														"src": "3718:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3718:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 81,
												"id": 88,
												"nodeType": "Return",
												"src": "3711:59:0"
											}
										]
									},
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "3327:216:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 90,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3558:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3589:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3581:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3619:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3606:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 74,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3606:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3648:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3634:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 76,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3634:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3570:97:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3686:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 79,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3686:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3685:14:0"
									},
									"scope": 296,
									"src": "3549:229:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "4300:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 103,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "4340:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 104,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "4348:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 105,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 97,
															"src": "4354:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4361:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 102,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															110,
															160
														],
														"referencedDeclaration": 160,
														"src": "4318:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4318:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 101,
												"id": 108,
												"nodeType": "Return",
												"src": "4311:94:0"
											}
										]
									},
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "3786:361:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4162:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4202:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4194:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4194:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4232:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4219:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 94,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4219:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4255:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4247:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4247:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4183:84:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4286:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 99,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4286:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4285:14:0"
									},
									"scope": 296,
									"src": "4153:260:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "4853:326:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 127,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4880:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$296",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$296",
																				"typeString": "library Address"
																			}
																		],
																		"id": 126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4872:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 125,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4872:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4872:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4872:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 130,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "4897:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4872:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4904:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 124,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4864:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4864:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "4864:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 137,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 113,
																	"src": "4975:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 136,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "4964:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4964:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4984:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 135,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4956:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4956:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "4956:60:0"
											},
											{
												"assignments": [
													143,
													145
												],
												"declarations": [
													{
														"constant": false,
														"id": 143,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5035:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 159,
														"src": "5030:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 142,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5030:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 145,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5057:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 159,
														"src": "5044:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 144,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5044:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 152,
												"initialValue": {
													"arguments": [
														{
															"id": 150,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "5097:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 146,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "5071:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5071:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 149,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 148,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "5090:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5071:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5071:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5029:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 154,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "5137:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 155,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 145,
															"src": "5146:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 156,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "5158:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 153,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "5120:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5120:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 123,
												"id": 158,
												"nodeType": "Return",
												"src": "5113:58:0"
											}
										]
									},
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "4421:242:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4678:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4718:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4710:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4710:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4748:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4735:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 114,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4735:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4771:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4763:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4763:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4801:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4787:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 118,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4787:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4699:121:0"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4839:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 121,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4839:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4838:14:0"
									},
									"scope": 296,
									"src": "4669:510:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "5464:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 171,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "5501:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 172,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "5509:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 173,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5515:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 170,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															177,
															212
														],
														"referencedDeclaration": 212,
														"src": "5482:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5482:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 169,
												"id": 175,
												"nodeType": "Return",
												"src": "5475:80:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "5187:171:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5373:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5400:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "5392:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5392:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5421:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "5408:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 164,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5408:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5391:35:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "5450:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 167,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5450:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5449:14:0"
									},
									"scope": 296,
									"src": "5364:199:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "5917:233:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 191,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 180,
																	"src": "5947:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 190,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "5936:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5936:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5956:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 189,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5928:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5928:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "5928:67:0"
											},
											{
												"assignments": [
													197,
													199
												],
												"declarations": [
													{
														"constant": false,
														"id": 197,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6014:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 211,
														"src": "6009:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 196,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6009:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 199,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6036:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 211,
														"src": "6023:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 198,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6023:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 204,
												"initialValue": {
													"arguments": [
														{
															"id": 202,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "6068:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 200,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "6050:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6050:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6050:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6008:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 206,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "6108:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 207,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "6117:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 208,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "6129:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 205,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "6091:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6091:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 188,
												"id": 210,
												"nodeType": "Return",
												"src": "6084:58:0"
											}
										]
									},
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "5571:178:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5764:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5801:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5793:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5793:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5831:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5818:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 181,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5818:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5860:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5846:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 183,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5846:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5782:97:0"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5903:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 186,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5903:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5902:14:0"
									},
									"scope": 296,
									"src": "5755:395:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 228,
										"nodeType": "Block",
										"src": "6434:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 223,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "6473:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 224,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "6481:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6487:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 222,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															229,
															264
														],
														"referencedDeclaration": 264,
														"src": "6452:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6452:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 221,
												"id": 227,
												"nodeType": "Return",
												"src": "6445:84:0"
											}
										]
									},
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "6158:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6346:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6375:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "6367:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6367:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6396:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "6383:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 216,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6383:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6366:35:0"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "6420:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 219,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6420:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6419:14:0"
									},
									"scope": 296,
									"src": "6337:200:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "6890:237:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 243,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "6920:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 242,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "6909:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6909:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6929:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 241,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6901:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6901:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "6901:69:0"
											},
											{
												"assignments": [
													249,
													251
												],
												"declarations": [
													{
														"constant": false,
														"id": 249,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6989:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 263,
														"src": "6984:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 248,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6984:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 251,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7011:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 263,
														"src": "6998:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 250,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6998:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 256,
												"initialValue": {
													"arguments": [
														{
															"id": 254,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "7045:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 252,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "7025:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7025:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7025:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6983:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 258,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "7085:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 259,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "7094:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 260,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "7106:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 257,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "7068:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7068:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 240,
												"id": 262,
												"nodeType": "Return",
												"src": "7061:58:0"
											}
										]
									},
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "6545:180:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6740:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6779:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6771:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6771:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6809:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6796:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 233,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6796:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6838:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6824:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 235,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6824:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6760:97:0"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6876:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 238,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6876:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6875:14:0"
									},
									"scope": 296,
									"src": "6731:396:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "7519:548:0",
										"statements": [
											{
												"condition": {
													"id": 276,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 267,
													"src": "7534:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 292,
													"nodeType": "Block",
													"src": "7593:467:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 280,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 269,
																		"src": "7679:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7679:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7699:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7679:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 290,
																"nodeType": "Block",
																"src": "7994:55:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 287,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 271,
																					"src": "8020:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 286,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8013:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 288,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8013:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 289,
																		"nodeType": "ExpressionStatement",
																		"src": "8013:20:0"
																	}
																]
															},
															"id": 291,
															"nodeType": "IfStatement",
															"src": "7675:374:0",
															"trueBody": {
																"id": 285,
																"nodeType": "Block",
																"src": "7702:286:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7825:148:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7848:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7877:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7871:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7871:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7852:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7921:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7925:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7917:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7917:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7938:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7910:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7910:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7910:44:0"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 269,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7877:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 269,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7925:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 284,
																		"nodeType": "InlineAssembly",
																		"src": "7816:157:0"
																	}
																]
															}
														}
													]
												},
												"id": 293,
												"nodeType": "IfStatement",
												"src": "7530:530:0",
												"trueBody": {
													"id": 279,
													"nodeType": "Block",
													"src": "7543:44:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 269,
																"src": "7565:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 275,
															"id": 278,
															"nodeType": "Return",
															"src": "7558:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "7135:214:0",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7364:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7396:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "7391:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 266,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7391:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7427:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "7414:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 268,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7414:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7462:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "7448:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 270,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7448:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7380:101:0"
									},
									"returnParameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "7505:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 273,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7505:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7504:14:0"
									},
									"scope": 296,
									"src": "7355:712:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 297,
							"src": "133:7937:0",
							"usedErrors": []
						}
					],
					"src": "35:8035:0"
				},
				"id": 0
			},
			"proxy/Proxy.sol": {
				"ast": {
					"absolutePath": "proxy/Proxy.sol",
					"exportedSymbols": {
						"Proxy": [
							348
						]
					},
					"id": 349,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 298,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Proxy",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 299,
								"nodeType": "StructuredDocumentation",
								"src": "62:609:1",
								"text": " @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n be specified by overriding the virtual {_implementation} function.\n \n Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n different contract through the {_delegate} function.\n \n The success and return data of the delegated call will be returned back to the caller of the proxy."
							},
							"fullyImplemented": false,
							"id": 348,
							"linearizedBaseContracts": [
								348
							],
							"name": "Proxy",
							"nameLocation": "691:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 306,
										"nodeType": "Block",
										"src": "958:855:1",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1035:771:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1292:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1295:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "1298:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1298:14:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1279:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1279:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1279:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1444:74:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "1471:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1471:5:1"
																	},
																	{
																		"name": "implementation",
																		"nodeType": "YulIdentifier",
																		"src": "1478:14:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1494:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "1497:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1497:14:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1513:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1516:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "delegatecall",
																	"nodeType": "YulIdentifier",
																	"src": "1458:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1458:60:1"
															},
															"variables": [
																{
																	"name": "result",
																	"nodeType": "YulTypedName",
																	"src": "1448:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1589:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "1595:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1595:16:1"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1574:14:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1574:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1574:38:1"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1711:31:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1720:1:1",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nodeType": "YulIdentifier",
																								"src": "1723:14:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1723:16:1"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "1713:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1713:27:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1713:27:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1704:38:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1709:1:1",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1764:31:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1773:1:1",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nodeType": "YulIdentifier",
																								"src": "1776:14:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1776:16:1"
																						}
																					],
																					"functionName": {
																						"name": "return",
																						"nodeType": "YulIdentifier",
																						"src": "1766:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1766:27:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1766:27:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1756:39:1",
																	"value": "default"
																}
															],
															"expression": {
																"name": "result",
																"nodeType": "YulIdentifier",
																"src": "1635:6:1"
															},
															"nodeType": "YulSwitch",
															"src": "1628:167:1"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 302,
														"isOffset": false,
														"isSlot": false,
														"src": "1478:14:1",
														"valueSize": 1
													}
												],
												"id": 305,
												"nodeType": "InlineAssembly",
												"src": "1026:780:1"
											}
										]
									},
									"documentation": {
										"id": 300,
										"nodeType": "StructuredDocumentation",
										"src": "704:196:1",
										"text": " @dev Delegates the current call to `implementation`.\n \n This function does not return to its internall call site, it will return directly to the external caller."
									},
									"id": 307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_delegate",
									"nameLocation": "915:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "933:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "925:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "925:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "924:24:1"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "958:0:1"
									},
									"scope": 348,
									"src": "906:907:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 308,
										"nodeType": "StructuredDocumentation",
										"src": "1821:175:1",
										"text": " @dev This is a virtual function that should be overriden so it returns the address to which the fallback function\n and {_fallback} should delegate."
									},
									"id": 313,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_implementation",
									"nameLocation": "2011:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2026:2:1"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "2060:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2059:9:1"
									},
									"scope": 348,
									"src": "2002:67:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "2336:75:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 317,
														"name": "_beforeFallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "2347:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2347:17:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "2347:17:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 321,
																"name": "_implementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "2385:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2385:17:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 320,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "2375:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2375:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "2375:28:1"
											}
										]
									},
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "2077:223:1",
										"text": " @dev Delegates the current call to the address returned by `_implementation()`.\n \n This function does not return to its internall call site, it will return directly to the external caller."
									},
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_fallback",
									"nameLocation": "2315:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2324:2:1"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2336:0:1"
									},
									"scope": 348,
									"src": "2306:105:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "2643:30:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 330,
														"name": "_fallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 326,
														"src": "2654:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2654:11:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "2654:11:1"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "2419:189:1",
										"text": " @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n function in the contract matches the call data."
									},
									"id": 334,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2623:2:1"
									},
									"returnParameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2643:0:1"
									},
									"scope": 348,
									"src": "2614:59:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 341,
										"nodeType": "Block",
										"src": "2867:30:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 338,
														"name": "_fallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 326,
														"src": "2878:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2878:11:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 340,
												"nodeType": "ExpressionStatement",
												"src": "2878:11:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "2681:152:1",
										"text": " @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\n is empty."
									},
									"id": 342,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2847:2:1"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2867:0:1"
									},
									"scope": 348,
									"src": "2839:58:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 346,
										"nodeType": "Block",
										"src": "3231:8:1",
										"statements": []
									},
									"documentation": {
										"id": 343,
										"nodeType": "StructuredDocumentation",
										"src": "2905:276:1",
										"text": " @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\n call, or as part of the Solidity `fallback` or `receive` functions.\n \n If overriden should call `super._beforeFallback()`."
									},
									"id": 347,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeFallback",
									"nameLocation": "3196:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3211:2:1"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3231:0:1"
									},
									"scope": 348,
									"src": "3187:52:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 349,
							"src": "673:2569:1",
							"usedErrors": []
						}
					],
					"src": "35:3207:1"
				},
				"id": 1
			},
			"proxy/UpgradeableProxy.sol": {
				"ast": {
					"absolutePath": "proxy/UpgradeableProxy.sol",
					"exportedSymbols": {
						"Address": [
							296
						],
						"Proxy": [
							348
						],
						"UpgradeableProxy": [
							459
						]
					},
					"id": 460,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 350,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:2"
						},
						{
							"absolutePath": "proxy/Proxy.sol",
							"file": "./Proxy.sol",
							"id": 351,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 460,
							"sourceUnit": 349,
							"src": "62:21:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/utils/Address.sol",
							"file": "../contracts/utils/Address.sol",
							"id": 352,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 460,
							"sourceUnit": 297,
							"src": "85:40:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 354,
										"name": "Proxy",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 348,
										"src": "686:5:2"
									},
									"id": 355,
									"nodeType": "InheritanceSpecifier",
									"src": "686:5:2"
								}
							],
							"canonicalName": "UpgradeableProxy",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 353,
								"nodeType": "StructuredDocumentation",
								"src": "129:526:2",
								"text": " @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n implementation address that can be changed. This address is stored in storage in the location specified by\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\n implementation behind the proxy.\n \n Upgradeability is only provided internally through {_upgradeTo}. For an externally upgradeable proxy see\n {TransparentUpgradeableProxy}."
							},
							"fullyImplemented": true,
							"id": 459,
							"linearizedBaseContracts": [
								459,
								348
							],
							"name": "UpgradeableProxy",
							"nameLocation": "666:16:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 400,
										"nodeType": "Block",
										"src": "1109:348:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"id": 364,
																"name": "_IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 410,
																"src": "1127:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "656970313936372e70726f78792e696d706c656d656e746174696f6e",
																							"id": 370,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1177:30:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd",
																								"typeString": "literal_string \"eip1967.proxy.implementation\""
																							},
																							"value": "eip1967.proxy.implementation"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd",
																								"typeString": "literal_string \"eip1967.proxy.implementation\""
																							}
																						],
																						"id": 369,
																						"name": "keccak256",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967288,
																						"src": "1167:9:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																							"typeString": "function (bytes memory) pure returns (bytes32)"
																						}
																					},
																					"id": 371,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1167:41:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1159:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 367,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "1159:7:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 372,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1159:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 373,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1212:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1159:54:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 366,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1151:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 365,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "1151:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1151:63:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "1127:87:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 363,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "1120:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1120:95:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 378,
												"nodeType": "ExpressionStatement",
												"src": "1120:95:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 380,
															"name": "_logic",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 358,
															"src": "1245:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 379,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "1226:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1226:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 382,
												"nodeType": "ExpressionStatement",
												"src": "1226:26:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 383,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "1266:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 384,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1266:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 385,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1281:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1266:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 399,
												"nodeType": "IfStatement",
												"src": "1263:187:2",
												"trueBody": {
													"id": 398,
													"nodeType": "Block",
													"src": "1284:166:2",
													"statements": [
														{
															"assignments": [
																388,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 388,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "1369:7:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 398,
																	"src": "1364:12:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 387,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "1364:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 393,
															"initialValue": {
																"arguments": [
																	{
																		"id": 391,
																		"name": "_data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 360,
																		"src": "1401:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 389,
																		"name": "_logic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 358,
																		"src": "1381:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 390,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "delegatecall",
																	"nodeType": "MemberAccess",
																	"src": "1381:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory) returns (bool,bytes memory)"
																	}
																},
																"id": 392,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1381:26:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1363:44:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 395,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 388,
																		"src": "1430:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 394,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1422:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:16:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 397,
															"nodeType": "ExpressionStatement",
															"src": "1422:16:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "699:341:2",
										"text": " @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\n \n If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\n function call, and allows initializating the storage of the proxy like a Solidity constructor."
									},
									"id": 401,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "_logic",
												"nameLocation": "1066:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1058:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1058:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "1087:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1074:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 359,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1074:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1057:36:2"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1109:0:2"
									},
									"scope": 459,
									"src": "1046:411:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "1465:70:2",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 406,
									"name": "Upgraded",
									"nameLocation": "1547:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1572:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "1556:30:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1556:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1555:32:2"
									},
									"src": "1541:47:2"
								},
								{
									"constant": true,
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "1596:218:2",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n validated in the constructor."
									},
									"id": 410,
									"mutability": "constant",
									"name": "_IMPLEMENTATION_SLOT",
									"nameLocation": "1845:20:2",
									"nodeType": "VariableDeclaration",
									"scope": 459,
									"src": "1820:114:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 408,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1820:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 409,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1868:66:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										313
									],
									"body": {
										"id": 422,
										"nodeType": "Block",
										"src": "2091:175:2",
										"statements": [
											{
												"assignments": [
													418
												],
												"declarations": [
													{
														"constant": false,
														"id": 418,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "2110:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 422,
														"src": "2102:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 417,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2102:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 420,
												"initialValue": {
													"id": 419,
													"name": "_IMPLEMENTATION_SLOT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 410,
													"src": "2117:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2102:35:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2214:45:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2229:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2243:4:2"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "2237:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2237:11:2"
															},
															"variableNames": [
																{
																	"name": "impl",
																	"nodeType": "YulIdentifier",
																	"src": "2229:4:2"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 415,
														"isOffset": false,
														"isSlot": false,
														"src": "2229:4:2",
														"valueSize": 1
													},
													{
														"declaration": 418,
														"isOffset": false,
														"isSlot": false,
														"src": "2243:4:2",
														"valueSize": 1
													}
												],
												"id": 421,
												"nodeType": "InlineAssembly",
												"src": "2205:54:2"
											}
										]
									},
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "1943:69:2",
										"text": " @dev Returns the current implementation address."
									},
									"id": 423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_implementation",
									"nameLocation": "2027:15:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 413,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2054:8:2"
									},
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2042:2:2"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "impl",
												"nameLocation": "2085:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "2077:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2077:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2076:14:2"
									},
									"scope": 459,
									"src": "2018:248:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "2449:99:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 430,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 426,
															"src": "2479:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 429,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "2460:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 432,
												"nodeType": "ExpressionStatement",
												"src": "2460:37:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 434,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 426,
															"src": "2522:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 433,
														"name": "Upgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 406,
														"src": "2513:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2513:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 436,
												"nodeType": "EmitStatement",
												"src": "2508:32:2"
											}
										]
									},
									"documentation": {
										"id": 424,
										"nodeType": "StructuredDocumentation",
										"src": "2274:113:2",
										"text": " @dev Upgrades the proxy to a new implementation.\n \n Emits an {Upgraded} event."
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeTo",
									"nameLocation": "2402:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2421:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "2413:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2413:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2412:27:2"
									},
									"returnParameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2449:0:2"
									},
									"scope": 459,
									"src": "2393:155:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "2707:306:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 447,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 441,
																	"src": "2745:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 445,
																	"name": "Address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 296,
																	"src": "2726:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Address_$296_$",
																		"typeString": "type(library Address)"
																	}
																},
																"id": 446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 19,
																"src": "2726:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2726:37:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5570677261646561626c6550726f78793a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2765:56:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a962afc8125c78a56caf50b104c38b8318717478c281b4e59e7fb3e32af3a877",
																"typeString": "literal_string \"UpgradeableProxy: new implementation is not a contract\""
															},
															"value": "UpgradeableProxy: new implementation is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a962afc8125c78a56caf50b104c38b8318717478c281b4e59e7fb3e32af3a877",
																"typeString": "literal_string \"UpgradeableProxy: new implementation is not a contract\""
															}
														],
														"id": 444,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2718:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2718:104:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 451,
												"nodeType": "ExpressionStatement",
												"src": "2718:104:2"
											},
											{
												"assignments": [
													453
												],
												"declarations": [
													{
														"constant": false,
														"id": 453,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "2843:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 457,
														"src": "2835:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 452,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2835:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 455,
												"initialValue": {
													"id": 454,
													"name": "_IMPLEMENTATION_SLOT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 410,
													"src": "2850:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2835:35:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2949:57:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2971:4:2"
																	},
																	{
																		"name": "newImplementation",
																		"nodeType": "YulIdentifier",
																		"src": "2977:17:2"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "2964:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2964:31:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2964:31:2"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 441,
														"isOffset": false,
														"isSlot": false,
														"src": "2977:17:2",
														"valueSize": 1
													},
													{
														"declaration": 453,
														"isOffset": false,
														"isSlot": false,
														"src": "2971:4:2",
														"valueSize": 1
													}
												],
												"id": 456,
												"nodeType": "InlineAssembly",
												"src": "2940:66:2"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "2556:82:2",
										"text": " @dev Stores a new address in the EIP1967 implementation slot."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "2653:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2680:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2672:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2672:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2671:27:2"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2707:0:2"
									},
									"scope": 459,
									"src": "2644:369:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 460,
							"src": "657:2359:2",
							"usedErrors": []
						}
					],
					"src": "35:2981:2"
				},
				"id": 2
			}
		}
	}
}
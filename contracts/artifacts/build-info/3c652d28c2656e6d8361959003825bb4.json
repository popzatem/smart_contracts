{
	"id": "3c652d28c2656e6d8361959003825bb4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/BEP20.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.8.0;\r\n\r\nimport \"./access/Ownable.sol\";\r\nimport \"./utils/Address.sol\";\r\nimport \"./libraries/SafeMath.sol\";\r\n\r\nimport \"./IBEP20.sol\";\r\n\r\ncontract BEP20 is IBEP20, Ownable {\r\n    using SafeMath for uint256;\r\n    using Address for address;\r\n\r\n    mapping(address => uint256) private _balances;\r\n\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n    uint8 private _decimals;\r\n    string private _symbol;\r\n    string private _name;\r\n\r\n    /**\r\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\r\n     * a default value of 18.\r\n     *\r\n     * To select a different value for {decimals}, use {_setupDecimals}.\r\n     *\r\n     * All three of these values are immutable: they can only be set once during\r\n     * construction.\r\n     */\r\n    constructor(string memory tokenName, string memory tokenSymbol) {\r\n        _name = tokenName;\r\n        _symbol = tokenSymbol;\r\n        _decimals = 18;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the bep token owner.\r\n     */\r\n    function getOwner() external view override returns (address) {\r\n        return owner();\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the token name.\r\n     */\r\n    function name() public view override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the token decimals.\r\n     */\r\n    function decimals() public view override returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the token symbol.\r\n     */\r\n    function symbol() public view override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev See {BEP20-totalSupply}.\r\n     */\r\n    function totalSupply() public view override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {BEP20-balanceOf}.\r\n     */\r\n    function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {BEP20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `recipient` cannot be the zero address.\r\n     * - the caller must have a balance of at least `amount`.\r\n     */\r\n    function transfer(address recipient, uint256 amount)\r\n        public\r\n        override\r\n        returns (bool)\r\n    {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {BEP20-allowance}.\r\n     */\r\n    function allowance(address owner, address spender)\r\n        public\r\n        view\r\n        override\r\n        returns (uint256)\r\n    {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {BEP20-approve}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function approve(address spender, uint256 amount)\r\n        public\r\n        override\r\n        returns (bool)\r\n    {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {BEP20-transferFrom}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance. This is not\r\n     * required by the EIP. See the note at the beginning of {BEP20};\r\n     *\r\n     * Requirements:\r\n     * - `sender` and `recipient` cannot be the zero address.\r\n     * - `sender` must have a balance of at least `amount`.\r\n     * - the caller must have allowance for `sender`'s tokens of at least\r\n     * `amount`.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) public override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        _approve(\r\n            sender,\r\n            _msgSender(),\r\n            _allowances[sender][_msgSender()].sub(\r\n                amount,\r\n                \"BEP20: transfer amount exceeds allowance\"\r\n            )\r\n        );\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {BEP20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function increaseAllowance(address spender, uint256 addedValue)\r\n        public\r\n        returns (bool)\r\n    {\r\n        _approve(\r\n            _msgSender(),\r\n            spender,\r\n            _allowances[_msgSender()][spender].add(addedValue)\r\n        );\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {BEP20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `spender` must have allowance for the caller of at least\r\n     * `subtractedValue`.\r\n     */\r\n    function decreaseAllowance(address spender, uint256 subtractedValue)\r\n        public\r\n        returns (bool)\r\n    {\r\n        _approve(\r\n            _msgSender(),\r\n            spender,\r\n            _allowances[_msgSender()][spender].sub(\r\n                subtractedValue,\r\n                \"BEP20: decreased allowance below zero\"\r\n            )\r\n        );\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\r\n     * the total supply.\r\n     *\r\n     * Requirements\r\n     *\r\n     * - `msg.sender` must be the token owner\r\n     */\r\n    function mint(uint256 amount) public onlyOwner returns (bool) {\r\n        _mint(_msgSender(), amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\r\n     *\r\n     * This is internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `sender` cannot be the zero address.\r\n     * - `recipient` cannot be the zero address.\r\n     * - `sender` must have a balance of at least `amount`.\r\n     */\r\n    function _transfer(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) internal {\r\n        require(sender != address(0), \"BEP20: transfer from the zero address\");\r\n        require(recipient != address(0), \"BEP20: transfer to the zero address\");\r\n\r\n        _balances[sender] = _balances[sender].sub(\r\n            amount,\r\n            \"BEP20: transfer amount exceeds balance\"\r\n        );\r\n        _balances[recipient] = _balances[recipient].add(amount);\r\n        emit Transfer(sender, recipient, amount);\r\n    }\r\n\r\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n     * the total supply.\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * Requirements\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     */\r\n    function _mint(address account, uint256 amount) internal {\r\n        require(account != address(0), \"BEP20: mint to the zero address\");\r\n\r\n        _totalSupply = _totalSupply.add(amount);\r\n        _balances[account] = _balances[account].add(amount);\r\n        emit Transfer(address(0), account, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens from `account`, reducing the\r\n     * total supply.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * Requirements\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     * - `account` must have at least `amount` tokens.\r\n     */\r\n    function _burn(address account, uint256 amount) internal {\r\n        require(account != address(0), \"BEP20: burn from the zero address\");\r\n\r\n        _balances[account] = _balances[account].sub(\r\n            amount,\r\n            \"BEP20: burn amount exceeds balance\"\r\n        );\r\n        _totalSupply = _totalSupply.sub(amount);\r\n        emit Transfer(account, address(0), amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\r\n     *\r\n     * This is internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function _approve(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal {\r\n        require(owner != address(0), \"BEP20: approve from the zero address\");\r\n        require(spender != address(0), \"BEP20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens from `account`.`amount` is then deducted\r\n     * from the caller's allowance.\r\n     *\r\n     * See {_burn} and {_approve}.\r\n     */\r\n    function _burnFrom(address account, uint256 amount) internal {\r\n        _burn(account, amount);\r\n        _approve(\r\n            account,\r\n            _msgSender(),\r\n            _allowances[account][_msgSender()].sub(\r\n                amount,\r\n                \"BEP20: burn amount exceeds allowance\"\r\n            )\r\n        );\r\n    }\r\n}"
			},
			"contracts/IBEP20.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.6.0;\r\n\r\ninterface IBEP20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the token decimals.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n\r\n    /**\r\n     * @dev Returns the token symbol.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the token name.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the bep token owner.\r\n     */\r\n    function getOwner() external view returns (address);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount)\r\n        external\r\n        returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address _owner, address spender)\r\n        external\r\n        view\r\n        returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(\r\n        address indexed owner,\r\n        address indexed spender,\r\n        uint256 value\r\n    );\r\n}"
			},
			"contracts/libraries/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\n// CAUTION\r\n// This version of SafeMath should only be used with Solidity 0.8 or later,\r\n// because it relies on the compiler's built in overflow checks.\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations.\r\n *\r\n * NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler\r\n * now has built in overflow checking.\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            uint256 c = a + b;\r\n            if (c < a) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b > a) return (false, 0);\r\n            return (true, a - b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n            // benefit is lost if 'b' is also tested.\r\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n            if (a == 0) return (true, 0);\r\n            uint256 c = a * b;\r\n            if (c / a != b) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a / b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a % b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a + b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a * b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a / b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a % b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {trySub}.\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b <= a, errorMessage);\r\n            return a - b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a / b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting with custom message when dividing by zero.\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {tryMod}.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a % b;\r\n        }\r\n    }\r\n}"
			},
			"contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize, which returns 0 for contracts in\r\n        // construction, since the code is only stored at the end of the\r\n        // constructor execution.\r\n\r\n        uint256 size;\r\n        assembly {\r\n            size := extcodesize(account)\r\n        }\r\n        return size > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        require(isContract(target), \"Address: static call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(isContract(target), \"Address: delegate call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}"
			},
			"contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../utils/Context.sol\";\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _setOwner(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _setOwner(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _setOwner(newOwner);\r\n    }\r\n\r\n    function _setOwner(address newOwner) private {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}"
			},
			"contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/BEP20.sol": {
				"BEP20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "tokenName",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "tokenSymbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {BEP20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {BEP20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {BEP20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"mint(uint256)": {
								"details": "Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply. Requirements - `msg.sender` must be the token owner"
							},
							"name()": {
								"details": "Returns the token name."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "See {BEP20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/BEP20.sol\":192:9524  contract BEP20 is IBEP20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/BEP20.sol\":878:1035  constructor(string memory tokenName, string memory tokenSymbol) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/access/Ownable.sol\":894:917  _setOwner(_msgSender()) */\n  tag_7\n    /* \"contracts/access/Ownable.sol\":904:916  _msgSender() */\n  tag_8\n    /* \"contracts/access/Ownable.sol\":904:914  _msgSender */\n  shl(0x20, tag_9)\n    /* \"contracts/access/Ownable.sol\":904:916  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"contracts/access/Ownable.sol\":894:903  _setOwner */\n  shl(0x20, tag_10)\n    /* \"contracts/access/Ownable.sol\":894:917  _setOwner(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"contracts/BEP20.sol\":961:970  tokenName */\n  dup2\n    /* \"contracts/BEP20.sol\":953:958  _name */\n  0x06\n    /* \"contracts/BEP20.sol\":953:970  _name = tokenName */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_12\n  swap3\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  pop\n    /* \"contracts/BEP20.sol\":991:1002  tokenSymbol */\n  dup1\n    /* \"contracts/BEP20.sol\":981:988  _symbol */\n  0x05\n    /* \"contracts/BEP20.sol\":981:1002  _symbol = tokenSymbol */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_14\n  swap3\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_14:\n  pop\n    /* \"contracts/BEP20.sol\":1025:1027  18 */\n  0x12\n    /* \"contracts/BEP20.sol\":1013:1022  _decimals */\n  0x04\n  0x00\n    /* \"contracts/BEP20.sol\":1013:1027  _decimals = 18 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/BEP20.sol\":878:1035  constructor(string memory tokenName, string memory tokenSymbol) {... */\n  pop\n  pop\n    /* \"contracts/BEP20.sol\":192:9524  contract BEP20 is IBEP20, Ownable {... */\n  jump(tag_15)\n    /* \"contracts/utils/Context.sol\":602:700  function _msgSender() internal view virtual returns (address) {... */\ntag_9:\n    /* \"contracts/utils/Context.sol\":655:662  address */\n  0x00\n    /* \"contracts/utils/Context.sol\":682:692  msg.sender */\n  caller\n    /* \"contracts/utils/Context.sol\":675:692  return msg.sender */\n  swap1\n  pop\n    /* \"contracts/utils/Context.sol\":602:700  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/access/Ownable.sol\":2106:2279  function _setOwner(address newOwner) private {... */\ntag_10:\n    /* \"contracts/access/Ownable.sol\":2162:2178  address oldOwner */\n  0x00\n    /* \"contracts/access/Ownable.sol\":2181:2187  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/access/Ownable.sol\":2162:2187  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"contracts/access/Ownable.sol\":2207:2215  newOwner */\n  dup2\n    /* \"contracts/access/Ownable.sol\":2198:2204  _owner */\n  0x00\n  dup1\n    /* \"contracts/access/Ownable.sol\":2198:2215  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/access/Ownable.sol\":2262:2270  newOwner */\n  dup2\n    /* \"contracts/access/Ownable.sol\":2231:2271  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/access/Ownable.sol\":2252:2260  oldOwner */\n  dup2\n    /* \"contracts/access/Ownable.sol\":2231:2271  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/access/Ownable.sol\":2151:2279  {... */\n  pop\n    /* \"contracts/access/Ownable.sol\":2106:2279  function _setOwner(address newOwner) private {... */\n  pop\n  jump\t// out\n    /* \"contracts/BEP20.sol\":192:9524  contract BEP20 is IBEP20, Ownable {... */\ntag_13:\n  dup3\n  dup1\n  sload\n  tag_18\n  swap1\n  tag_19\n  jump\t// in\ntag_18:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_21\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_20)\ntag_21:\n  dup3\n  0x1f\n  lt\n  tag_22\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_20)\ntag_22:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_20\n  jumpi\n  swap2\n  dup3\n  add\ntag_23:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_24\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_23)\ntag_24:\ntag_20:\n  pop\n  swap1\n  pop\n  tag_25\n  swap2\n  swap1\n  tag_26\n  jump\t// in\ntag_25:\n  pop\n  swap1\n  jump\t// out\ntag_26:\ntag_27:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_28\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_27)\ntag_28:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_29:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_30:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_31:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_32:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_33:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_34:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_35:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_36:\n    /* \"#utility.yul\":957:984   */\n  tag_52\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_34\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_53\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_54\n  tag_35\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1030:1118   */\ntag_53:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_37:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_56\n  tag_29\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_57\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_36\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_38:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_59\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_60\n  tag_35\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1434:1490   */\ntag_59:\n    /* \"#utility.yul\":1508:1537   */\n  tag_61\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_34\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1917   */\ntag_39:\n    /* \"#utility.yul\":1678:1679   */\n  0x00\n    /* \"#utility.yul\":1688:1801   */\ntag_63:\n    /* \"#utility.yul\":1702:1708   */\n  dup4\n    /* \"#utility.yul\":1699:1700   */\n  dup2\n    /* \"#utility.yul\":1696:1709   */\n  lt\n    /* \"#utility.yul\":1688:1801   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":1787:1788   */\n  dup1\n    /* \"#utility.yul\":1782:1785   */\n  dup3\n    /* \"#utility.yul\":1778:1789   */\n  add\n    /* \"#utility.yul\":1772:1790   */\n  mload\n    /* \"#utility.yul\":1768:1769   */\n  dup2\n    /* \"#utility.yul\":1763:1766   */\n  dup5\n    /* \"#utility.yul\":1759:1770   */\n  add\n    /* \"#utility.yul\":1752:1791   */\n  mstore\n    /* \"#utility.yul\":1724:1726   */\n  0x20\n    /* \"#utility.yul\":1721:1722   */\n  dup2\n    /* \"#utility.yul\":1717:1727   */\n  add\n    /* \"#utility.yul\":1712:1727   */\n  swap1\n  pop\n    /* \"#utility.yul\":1688:1801   */\n  jump(tag_63)\ntag_65:\n    /* \"#utility.yul\":1819:1825   */\n  dup4\n    /* \"#utility.yul\":1816:1817   */\n  dup2\n    /* \"#utility.yul\":1813:1826   */\n  gt\n    /* \"#utility.yul\":1810:1911   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":1899:1900   */\n  0x00\n    /* \"#utility.yul\":1890:1896   */\n  dup5\n    /* \"#utility.yul\":1885:1888   */\n  dup5\n    /* \"#utility.yul\":1881:1897   */\n  add\n    /* \"#utility.yul\":1874:1901   */\n  mstore\n    /* \"#utility.yul\":1810:1911   */\ntag_66:\n    /* \"#utility.yul\":1659:1917   */\n  pop\n    /* \"#utility.yul\":1610:1917   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1923:2344   */\ntag_40:\n    /* \"#utility.yul\":2012:2017   */\n  0x00\n    /* \"#utility.yul\":2037:2103   */\n  tag_68\n    /* \"#utility.yul\":2053:2102   */\n  tag_69\n    /* \"#utility.yul\":2095:2101   */\n  dup5\n    /* \"#utility.yul\":2053:2102   */\n  tag_38\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2037:2103   */\n  tag_37\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":2028:2103   */\n  swap1\n  pop\n    /* \"#utility.yul\":2126:2132   */\n  dup3\n    /* \"#utility.yul\":2119:2124   */\n  dup2\n    /* \"#utility.yul\":2112:2133   */\n  mstore\n    /* \"#utility.yul\":2164:2168   */\n  0x20\n    /* \"#utility.yul\":2157:2162   */\n  dup2\n    /* \"#utility.yul\":2153:2169   */\n  add\n    /* \"#utility.yul\":2202:2205   */\n  dup5\n    /* \"#utility.yul\":2193:2199   */\n  dup5\n    /* \"#utility.yul\":2188:2191   */\n  dup5\n    /* \"#utility.yul\":2184:2200   */\n  add\n    /* \"#utility.yul\":2181:2206   */\n  gt\n    /* \"#utility.yul\":2178:2290   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":2209:2288   */\n  tag_71\n  tag_33\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2178:2290   */\ntag_70:\n    /* \"#utility.yul\":2299:2338   */\n  tag_72\n    /* \"#utility.yul\":2331:2337   */\n  dup5\n    /* \"#utility.yul\":2326:2329   */\n  dup3\n    /* \"#utility.yul\":2321:2324   */\n  dup6\n    /* \"#utility.yul\":2299:2338   */\n  tag_39\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":2018:2344   */\n  pop\n    /* \"#utility.yul\":1923:2344   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2364:2719   */\ntag_41:\n    /* \"#utility.yul\":2431:2436   */\n  0x00\n    /* \"#utility.yul\":2480:2483   */\n  dup3\n    /* \"#utility.yul\":2473:2477   */\n  0x1f\n    /* \"#utility.yul\":2465:2471   */\n  dup4\n    /* \"#utility.yul\":2461:2478   */\n  add\n    /* \"#utility.yul\":2457:2484   */\n  slt\n    /* \"#utility.yul\":2447:2569   */\n  tag_74\n  jumpi\n    /* \"#utility.yul\":2488:2567   */\n  tag_75\n  tag_32\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2447:2569   */\ntag_74:\n    /* \"#utility.yul\":2598:2604   */\n  dup2\n    /* \"#utility.yul\":2592:2605   */\n  mload\n    /* \"#utility.yul\":2623:2713   */\n  tag_76\n    /* \"#utility.yul\":2709:2712   */\n  dup5\n    /* \"#utility.yul\":2701:2707   */\n  dup3\n    /* \"#utility.yul\":2694:2698   */\n  0x20\n    /* \"#utility.yul\":2686:2692   */\n  dup7\n    /* \"#utility.yul\":2682:2699   */\n  add\n    /* \"#utility.yul\":2623:2713   */\n  tag_40\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2614:2713   */\n  swap2\n  pop\n    /* \"#utility.yul\":2437:2719   */\n  pop\n    /* \"#utility.yul\":2364:2719   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2725:3578   */\ntag_3:\n    /* \"#utility.yul\":2824:2830   */\n  0x00\n    /* \"#utility.yul\":2832:2838   */\n  dup1\n    /* \"#utility.yul\":2881:2883   */\n  0x40\n    /* \"#utility.yul\":2869:2878   */\n  dup4\n    /* \"#utility.yul\":2860:2867   */\n  dup6\n    /* \"#utility.yul\":2856:2879   */\n  sub\n    /* \"#utility.yul\":2852:2884   */\n  slt\n    /* \"#utility.yul\":2849:2968   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":2887:2966   */\n  tag_79\n  tag_30\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2849:2968   */\ntag_78:\n    /* \"#utility.yul\":3028:3029   */\n  0x00\n    /* \"#utility.yul\":3017:3026   */\n  dup4\n    /* \"#utility.yul\":3013:3030   */\n  add\n    /* \"#utility.yul\":3007:3031   */\n  mload\n    /* \"#utility.yul\":3058:3076   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3050:3056   */\n  dup2\n    /* \"#utility.yul\":3047:3077   */\n  gt\n    /* \"#utility.yul\":3044:3161   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":3080:3159   */\n  tag_81\n  tag_31\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":3044:3161   */\ntag_80:\n    /* \"#utility.yul\":3185:3259   */\n  tag_82\n    /* \"#utility.yul\":3251:3258   */\n  dup6\n    /* \"#utility.yul\":3242:3248   */\n  dup3\n    /* \"#utility.yul\":3231:3240   */\n  dup7\n    /* \"#utility.yul\":3227:3249   */\n  add\n    /* \"#utility.yul\":3185:3259   */\n  tag_41\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3175:3259   */\n  swap3\n  pop\n    /* \"#utility.yul\":2978:3269   */\n  pop\n    /* \"#utility.yul\":3329:3331   */\n  0x20\n    /* \"#utility.yul\":3318:3327   */\n  dup4\n    /* \"#utility.yul\":3314:3332   */\n  add\n    /* \"#utility.yul\":3308:3333   */\n  mload\n    /* \"#utility.yul\":3360:3378   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3352:3358   */\n  dup2\n    /* \"#utility.yul\":3349:3379   */\n  gt\n    /* \"#utility.yul\":3346:3463   */\n  iszero\n  tag_83\n  jumpi\n    /* \"#utility.yul\":3382:3461   */\n  tag_84\n  tag_31\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":3346:3463   */\ntag_83:\n    /* \"#utility.yul\":3487:3561   */\n  tag_85\n    /* \"#utility.yul\":3553:3560   */\n  dup6\n    /* \"#utility.yul\":3544:3550   */\n  dup3\n    /* \"#utility.yul\":3533:3542   */\n  dup7\n    /* \"#utility.yul\":3529:3551   */\n  add\n    /* \"#utility.yul\":3487:3561   */\n  tag_41\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":3477:3561   */\n  swap2\n  pop\n    /* \"#utility.yul\":3279:3571   */\n  pop\n    /* \"#utility.yul\":2725:3578   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3584:3764   */\ntag_42:\n    /* \"#utility.yul\":3632:3709   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3629:3630   */\n  0x00\n    /* \"#utility.yul\":3622:3710   */\n  mstore\n    /* \"#utility.yul\":3729:3733   */\n  0x22\n    /* \"#utility.yul\":3726:3727   */\n  0x04\n    /* \"#utility.yul\":3719:3734   */\n  mstore\n    /* \"#utility.yul\":3753:3757   */\n  0x24\n    /* \"#utility.yul\":3750:3751   */\n  0x00\n    /* \"#utility.yul\":3743:3758   */\n  revert\n    /* \"#utility.yul\":3770:4090   */\ntag_19:\n    /* \"#utility.yul\":3814:3820   */\n  0x00\n    /* \"#utility.yul\":3851:3852   */\n  0x02\n    /* \"#utility.yul\":3845:3849   */\n  dup3\n    /* \"#utility.yul\":3841:3853   */\n  div\n    /* \"#utility.yul\":3831:3853   */\n  swap1\n  pop\n    /* \"#utility.yul\":3898:3899   */\n  0x01\n    /* \"#utility.yul\":3892:3896   */\n  dup3\n    /* \"#utility.yul\":3888:3900   */\n  and\n    /* \"#utility.yul\":3919:3937   */\n  dup1\n    /* \"#utility.yul\":3909:3990   */\n  tag_88\n  jumpi\n    /* \"#utility.yul\":3975:3979   */\n  0x7f\n    /* \"#utility.yul\":3967:3973   */\n  dup3\n    /* \"#utility.yul\":3963:3980   */\n  and\n    /* \"#utility.yul\":3953:3980   */\n  swap2\n  pop\n    /* \"#utility.yul\":3909:3990   */\ntag_88:\n    /* \"#utility.yul\":4037:4039   */\n  0x20\n    /* \"#utility.yul\":4029:4035   */\n  dup3\n    /* \"#utility.yul\":4026:4040   */\n  lt\n    /* \"#utility.yul\":4006:4024   */\n  dup2\n    /* \"#utility.yul\":4003:4041   */\n  sub\n    /* \"#utility.yul\":4000:4084   */\n  tag_89\n  jumpi\n    /* \"#utility.yul\":4056:4074   */\n  tag_90\n  tag_42\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":4000:4084   */\ntag_89:\n    /* \"#utility.yul\":3821:4090   */\n  pop\n    /* \"#utility.yul\":3770:4090   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/BEP20.sol\":192:9524  contract BEP20 is IBEP20, Ownable {... */\ntag_15:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/BEP20.sol\":192:9524  contract BEP20 is IBEP20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x893d20e8\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x893d20e8\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x313ce567\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/BEP20.sol\":1260:1352  function name() public view override returns (string memory) {... */\n    tag_3:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20.sol\":2820:3013  function approve(address spender, uint256 amount)... */\n    tag_4:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20.sol\":1736:1836  function totalSupply() public view override returns (uint256) {... */\n    tag_5:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20.sol\":3484:3930  function transferFrom(... */\n    tag_6:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20.sol\":1419:1511  function decimals() public view override returns (uint8) {... */\n    tag_7:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20.sol\":4338:4621  function increaseAllowance(address spender, uint256 addedValue)... */\n    tag_8:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20.sol\":1898:2017  function balanceOf(address account) public view override returns (uint256) {... */\n    tag_9:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/access/Ownable.sol\":1657:1751  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      stop\n        /* \"contracts/BEP20.sol\":1103:1197  function getOwner() external view override returns (address) {... */\n    tag_11:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/access/Ownable.sol\":1006:1093  function owner() public view virtual returns (address) {... */\n    tag_12:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20.sol\":1576:1672  function symbol() public view override returns (string memory) {... */\n    tag_13:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20.sol\":5724:5854  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n    tag_14:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20.sol\":5123:5506  function decreaseAllowance(address spender, uint256 subtractedValue)... */\n    tag_15:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20.sol\":2229:2428  function transfer(address recipient, uint256 amount)... */\n    tag_16:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20.sol\":2490:2674  function allowance(address owner, address spender)... */\n    tag_17:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/access/Ownable.sol\":1906:2098  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_18:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n    tag_84:\n      stop\n        /* \"contracts/BEP20.sol\":1260:1352  function name() public view override returns (string memory) {... */\n    tag_23:\n        /* \"contracts/BEP20.sol\":1306:1319  string memory */\n      0x60\n        /* \"contracts/BEP20.sol\":1339:1344  _name */\n      0x06\n        /* \"contracts/BEP20.sol\":1332:1344  return _name */\n      dup1\n      sload\n      tag_88\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_90\n      swap1\n      tag_89\n      jump\t// in\n    tag_90:\n      dup1\n      iszero\n      tag_91\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_92\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_91)\n    tag_92:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_93:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_93\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_91:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/BEP20.sol\":1260:1352  function name() public view override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/BEP20.sol\":2820:3013  function approve(address spender, uint256 amount)... */\n    tag_29:\n        /* \"contracts/BEP20.sol\":2922:2926  bool */\n      0x00\n        /* \"contracts/BEP20.sol\":2944:2983  _approve(_msgSender(), spender, amount) */\n      tag_95\n        /* \"contracts/BEP20.sol\":2953:2965  _msgSender() */\n      tag_96\n        /* \"contracts/BEP20.sol\":2953:2963  _msgSender */\n      tag_97\n        /* \"contracts/BEP20.sol\":2953:2965  _msgSender() */\n      jump\t// in\n    tag_96:\n        /* \"contracts/BEP20.sol\":2967:2974  spender */\n      dup5\n        /* \"contracts/BEP20.sol\":2976:2982  amount */\n      dup5\n        /* \"contracts/BEP20.sol\":2944:2952  _approve */\n      tag_98\n        /* \"contracts/BEP20.sol\":2944:2983  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_95:\n        /* \"contracts/BEP20.sol\":3001:3005  true */\n      0x01\n        /* \"contracts/BEP20.sol\":2994:3005  return true */\n      swap1\n      pop\n        /* \"contracts/BEP20.sol\":2820:3013  function approve(address spender, uint256 amount)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP20.sol\":1736:1836  function totalSupply() public view override returns (uint256) {... */\n    tag_33:\n        /* \"contracts/BEP20.sol\":1789:1796  uint256 */\n      0x00\n        /* \"contracts/BEP20.sol\":1816:1828  _totalSupply */\n      sload(0x03)\n        /* \"contracts/BEP20.sol\":1809:1828  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/BEP20.sol\":1736:1836  function totalSupply() public view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/BEP20.sol\":3484:3930  function transferFrom(... */\n    tag_39:\n        /* \"contracts/BEP20.sol\":3616:3620  bool */\n      0x00\n        /* \"contracts/BEP20.sol\":3633:3669  _transfer(sender, recipient, amount) */\n      tag_101\n        /* \"contracts/BEP20.sol\":3643:3649  sender */\n      dup5\n        /* \"contracts/BEP20.sol\":3651:3660  recipient */\n      dup5\n        /* \"contracts/BEP20.sol\":3662:3668  amount */\n      dup5\n        /* \"contracts/BEP20.sol\":3633:3642  _transfer */\n      tag_102\n        /* \"contracts/BEP20.sol\":3633:3669  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_101:\n        /* \"contracts/BEP20.sol\":3680:3900  _approve(... */\n      tag_103\n        /* \"contracts/BEP20.sol\":3703:3709  sender */\n      dup5\n        /* \"contracts/BEP20.sol\":3724:3736  _msgSender() */\n      tag_104\n        /* \"contracts/BEP20.sol\":3724:3734  _msgSender */\n      tag_97\n        /* \"contracts/BEP20.sol\":3724:3736  _msgSender() */\n      jump\t// in\n    tag_104:\n        /* \"contracts/BEP20.sol\":3751:3889  _allowances[sender][_msgSender()].sub(... */\n      tag_105\n        /* \"contracts/BEP20.sol\":3807:3813  amount */\n      dup6\n        /* \"contracts/BEP20.sol\":3751:3889  _allowances[sender][_msgSender()].sub(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e\n      0x28\n      swap2\n      codecopy\n        /* \"contracts/BEP20.sol\":3751:3762  _allowances */\n      0x02\n        /* \"contracts/BEP20.sol\":3751:3770  _allowances[sender] */\n      0x00\n        /* \"contracts/BEP20.sol\":3763:3769  sender */\n      dup12\n        /* \"contracts/BEP20.sol\":3751:3770  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BEP20.sol\":3751:3784  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"contracts/BEP20.sol\":3771:3783  _msgSender() */\n      tag_106\n        /* \"contracts/BEP20.sol\":3771:3781  _msgSender */\n      tag_97\n        /* \"contracts/BEP20.sol\":3771:3783  _msgSender() */\n      jump\t// in\n    tag_106:\n        /* \"contracts/BEP20.sol\":3751:3784  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BEP20.sol\":3751:3788  _allowances[sender][_msgSender()].sub */\n      tag_107\n      swap1\n        /* \"contracts/BEP20.sol\":3751:3889  _allowances[sender][_msgSender()].sub(... */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_105:\n        /* \"contracts/BEP20.sol\":3680:3688  _approve */\n      tag_98\n        /* \"contracts/BEP20.sol\":3680:3900  _approve(... */\n      jump\t// in\n    tag_103:\n        /* \"contracts/BEP20.sol\":3918:3922  true */\n      0x01\n        /* \"contracts/BEP20.sol\":3911:3922  return true */\n      swap1\n      pop\n        /* \"contracts/BEP20.sol\":3484:3930  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP20.sol\":1419:1511  function decimals() public view override returns (uint8) {... */\n    tag_42:\n        /* \"contracts/BEP20.sol\":1469:1474  uint8 */\n      0x00\n        /* \"contracts/BEP20.sol\":1494:1503  _decimals */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BEP20.sol\":1487:1503  return _decimals */\n      swap1\n      pop\n        /* \"contracts/BEP20.sol\":1419:1511  function decimals() public view override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/BEP20.sol\":4338:4621  function increaseAllowance(address spender, uint256 addedValue)... */\n    tag_47:\n        /* \"contracts/BEP20.sol\":4436:4440  bool */\n      0x00\n        /* \"contracts/BEP20.sol\":4458:4591  _approve(... */\n      tag_110\n        /* \"contracts/BEP20.sol\":4481:4493  _msgSender() */\n      tag_111\n        /* \"contracts/BEP20.sol\":4481:4491  _msgSender */\n      tag_97\n        /* \"contracts/BEP20.sol\":4481:4493  _msgSender() */\n      jump\t// in\n    tag_111:\n        /* \"contracts/BEP20.sol\":4508:4515  spender */\n      dup5\n        /* \"contracts/BEP20.sol\":4530:4580  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_112\n        /* \"contracts/BEP20.sol\":4569:4579  addedValue */\n      dup6\n        /* \"contracts/BEP20.sol\":4530:4541  _allowances */\n      0x02\n        /* \"contracts/BEP20.sol\":4530:4555  _allowances[_msgSender()] */\n      0x00\n        /* \"contracts/BEP20.sol\":4542:4554  _msgSender() */\n      tag_113\n        /* \"contracts/BEP20.sol\":4542:4552  _msgSender */\n      tag_97\n        /* \"contracts/BEP20.sol\":4542:4554  _msgSender() */\n      jump\t// in\n    tag_113:\n        /* \"contracts/BEP20.sol\":4530:4555  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BEP20.sol\":4530:4564  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"contracts/BEP20.sol\":4556:4563  spender */\n      dup10\n        /* \"contracts/BEP20.sol\":4530:4564  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BEP20.sol\":4530:4568  _allowances[_msgSender()][spender].add */\n      tag_114\n      swap1\n        /* \"contracts/BEP20.sol\":4530:4580  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_112:\n        /* \"contracts/BEP20.sol\":4458:4466  _approve */\n      tag_98\n        /* \"contracts/BEP20.sol\":4458:4591  _approve(... */\n      jump\t// in\n    tag_110:\n        /* \"contracts/BEP20.sol\":4609:4613  true */\n      0x01\n        /* \"contracts/BEP20.sol\":4602:4613  return true */\n      swap1\n      pop\n        /* \"contracts/BEP20.sol\":4338:4621  function increaseAllowance(address spender, uint256 addedValue)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP20.sol\":1898:2017  function balanceOf(address account) public view override returns (uint256) {... */\n    tag_52:\n        /* \"contracts/BEP20.sol\":1964:1971  uint256 */\n      0x00\n        /* \"contracts/BEP20.sol\":1991:2000  _balances */\n      0x01\n        /* \"contracts/BEP20.sol\":1991:2009  _balances[account] */\n      0x00\n        /* \"contracts/BEP20.sol\":2001:2008  account */\n      dup4\n        /* \"contracts/BEP20.sol\":1991:2009  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BEP20.sol\":1984:2009  return _balances[account] */\n      swap1\n      pop\n        /* \"contracts/BEP20.sol\":1898:2017  function balanceOf(address account) public view override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/access/Ownable.sol\":1657:1751  function renounceOwnership() public virtual onlyOwner {... */\n    tag_55:\n        /* \"contracts/access/Ownable.sol\":1237:1249  _msgSender() */\n      tag_117\n        /* \"contracts/access/Ownable.sol\":1237:1247  _msgSender */\n      tag_97\n        /* \"contracts/access/Ownable.sol\":1237:1249  _msgSender() */\n      jump\t// in\n    tag_117:\n        /* \"contracts/access/Ownable.sol\":1226:1249  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/access/Ownable.sol\":1226:1233  owner() */\n      tag_118\n        /* \"contracts/access/Ownable.sol\":1226:1231  owner */\n      tag_61\n        /* \"contracts/access/Ownable.sol\":1226:1233  owner() */\n      jump\t// in\n    tag_118:\n        /* \"contracts/access/Ownable.sol\":1226:1249  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/access/Ownable.sol\":1218:1286  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n        /* \"contracts/access/Ownable.sol\":1722:1743  _setOwner(address(0)) */\n      tag_123\n        /* \"contracts/access/Ownable.sol\":1740:1741  0 */\n      0x00\n        /* \"contracts/access/Ownable.sol\":1722:1731  _setOwner */\n      tag_124\n        /* \"contracts/access/Ownable.sol\":1722:1743  _setOwner(address(0)) */\n      jump\t// in\n    tag_123:\n        /* \"contracts/access/Ownable.sol\":1657:1751  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/BEP20.sol\":1103:1197  function getOwner() external view override returns (address) {... */\n    tag_57:\n        /* \"contracts/BEP20.sol\":1155:1162  address */\n      0x00\n        /* \"contracts/BEP20.sol\":1182:1189  owner() */\n      tag_126\n        /* \"contracts/BEP20.sol\":1182:1187  owner */\n      tag_61\n        /* \"contracts/BEP20.sol\":1182:1189  owner() */\n      jump\t// in\n    tag_126:\n        /* \"contracts/BEP20.sol\":1175:1189  return owner() */\n      swap1\n      pop\n        /* \"contracts/BEP20.sol\":1103:1197  function getOwner() external view override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/access/Ownable.sol\":1006:1093  function owner() public view virtual returns (address) {... */\n    tag_61:\n        /* \"contracts/access/Ownable.sol\":1052:1059  address */\n      0x00\n        /* \"contracts/access/Ownable.sol\":1079:1085  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/access/Ownable.sol\":1072:1085  return _owner */\n      swap1\n      pop\n        /* \"contracts/access/Ownable.sol\":1006:1093  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/BEP20.sol\":1576:1672  function symbol() public view override returns (string memory) {... */\n    tag_64:\n        /* \"contracts/BEP20.sol\":1624:1637  string memory */\n      0x60\n        /* \"contracts/BEP20.sol\":1657:1664  _symbol */\n      0x05\n        /* \"contracts/BEP20.sol\":1650:1664  return _symbol */\n      dup1\n      sload\n      tag_129\n      swap1\n      tag_89\n      jump\t// in\n    tag_129:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_130\n      swap1\n      tag_89\n      jump\t// in\n    tag_130:\n      dup1\n      iszero\n      tag_131\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_132\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_131)\n    tag_132:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_133:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_133\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_131:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/BEP20.sol\":1576:1672  function symbol() public view override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/BEP20.sol\":5724:5854  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n    tag_69:\n        /* \"contracts/BEP20.sol\":5780:5784  bool */\n      0x00\n        /* \"contracts/access/Ownable.sol\":1237:1249  _msgSender() */\n      tag_135\n        /* \"contracts/access/Ownable.sol\":1237:1247  _msgSender */\n      tag_97\n        /* \"contracts/access/Ownable.sol\":1237:1249  _msgSender() */\n      jump\t// in\n    tag_135:\n        /* \"contracts/access/Ownable.sol\":1226:1249  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/access/Ownable.sol\":1226:1233  owner() */\n      tag_136\n        /* \"contracts/access/Ownable.sol\":1226:1231  owner */\n      tag_61\n        /* \"contracts/access/Ownable.sol\":1226:1233  owner() */\n      jump\t// in\n    tag_136:\n        /* \"contracts/access/Ownable.sol\":1226:1249  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/access/Ownable.sol\":1218:1286  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_137\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_138\n      swap1\n      tag_121\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_137:\n        /* \"contracts/BEP20.sol\":5797:5824  _mint(_msgSender(), amount) */\n      tag_140\n        /* \"contracts/BEP20.sol\":5803:5815  _msgSender() */\n      tag_141\n        /* \"contracts/BEP20.sol\":5803:5813  _msgSender */\n      tag_97\n        /* \"contracts/BEP20.sol\":5803:5815  _msgSender() */\n      jump\t// in\n    tag_141:\n        /* \"contracts/BEP20.sol\":5817:5823  amount */\n      dup4\n        /* \"contracts/BEP20.sol\":5797:5802  _mint */\n      tag_142\n        /* \"contracts/BEP20.sol\":5797:5824  _mint(_msgSender(), amount) */\n      jump\t// in\n    tag_140:\n        /* \"contracts/BEP20.sol\":5842:5846  true */\n      0x01\n        /* \"contracts/BEP20.sol\":5835:5846  return true */\n      swap1\n      pop\n        /* \"contracts/BEP20.sol\":5724:5854  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/BEP20.sol\":5123:5506  function decreaseAllowance(address spender, uint256 subtractedValue)... */\n    tag_73:\n        /* \"contracts/BEP20.sol\":5226:5230  bool */\n      0x00\n        /* \"contracts/BEP20.sol\":5248:5476  _approve(... */\n      tag_144\n        /* \"contracts/BEP20.sol\":5271:5283  _msgSender() */\n      tag_145\n        /* \"contracts/BEP20.sol\":5271:5281  _msgSender */\n      tag_97\n        /* \"contracts/BEP20.sol\":5271:5283  _msgSender() */\n      jump\t// in\n    tag_145:\n        /* \"contracts/BEP20.sol\":5298:5305  spender */\n      dup5\n        /* \"contracts/BEP20.sol\":5320:5465  _allowances[_msgSender()][spender].sub(... */\n      tag_146\n        /* \"contracts/BEP20.sol\":5377:5392  subtractedValue */\n      dup6\n        /* \"contracts/BEP20.sol\":5320:5465  _allowances[_msgSender()][spender].sub(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22\n      0x25\n      swap2\n      codecopy\n        /* \"contracts/BEP20.sol\":5320:5331  _allowances */\n      0x02\n        /* \"contracts/BEP20.sol\":5320:5345  _allowances[_msgSender()] */\n      0x00\n        /* \"contracts/BEP20.sol\":5332:5344  _msgSender() */\n      tag_147\n        /* \"contracts/BEP20.sol\":5332:5342  _msgSender */\n      tag_97\n        /* \"contracts/BEP20.sol\":5332:5344  _msgSender() */\n      jump\t// in\n    tag_147:\n        /* \"contracts/BEP20.sol\":5320:5345  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BEP20.sol\":5320:5354  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"contracts/BEP20.sol\":5346:5353  spender */\n      dup11\n        /* \"contracts/BEP20.sol\":5320:5354  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BEP20.sol\":5320:5358  _allowances[_msgSender()][spender].sub */\n      tag_107\n      swap1\n        /* \"contracts/BEP20.sol\":5320:5465  _allowances[_msgSender()][spender].sub(... */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_146:\n        /* \"contracts/BEP20.sol\":5248:5256  _approve */\n      tag_98\n        /* \"contracts/BEP20.sol\":5248:5476  _approve(... */\n      jump\t// in\n    tag_144:\n        /* \"contracts/BEP20.sol\":5494:5498  true */\n      0x01\n        /* \"contracts/BEP20.sol\":5487:5498  return true */\n      swap1\n      pop\n        /* \"contracts/BEP20.sol\":5123:5506  function decreaseAllowance(address spender, uint256 subtractedValue)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP20.sol\":2229:2428  function transfer(address recipient, uint256 amount)... */\n    tag_77:\n        /* \"contracts/BEP20.sol\":2334:2338  bool */\n      0x00\n        /* \"contracts/BEP20.sol\":2356:2398  _transfer(_msgSender(), recipient, amount) */\n      tag_149\n        /* \"contracts/BEP20.sol\":2366:2378  _msgSender() */\n      tag_150\n        /* \"contracts/BEP20.sol\":2366:2376  _msgSender */\n      tag_97\n        /* \"contracts/BEP20.sol\":2366:2378  _msgSender() */\n      jump\t// in\n    tag_150:\n        /* \"contracts/BEP20.sol\":2380:2389  recipient */\n      dup5\n        /* \"contracts/BEP20.sol\":2391:2397  amount */\n      dup5\n        /* \"contracts/BEP20.sol\":2356:2365  _transfer */\n      tag_102\n        /* \"contracts/BEP20.sol\":2356:2398  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_149:\n        /* \"contracts/BEP20.sol\":2416:2420  true */\n      0x01\n        /* \"contracts/BEP20.sol\":2409:2420  return true */\n      swap1\n      pop\n        /* \"contracts/BEP20.sol\":2229:2428  function transfer(address recipient, uint256 amount)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP20.sol\":2490:2674  function allowance(address owner, address spender)... */\n    tag_82:\n        /* \"contracts/BEP20.sol\":2607:2614  uint256 */\n      0x00\n        /* \"contracts/BEP20.sol\":2639:2650  _allowances */\n      0x02\n        /* \"contracts/BEP20.sol\":2639:2657  _allowances[owner] */\n      0x00\n        /* \"contracts/BEP20.sol\":2651:2656  owner */\n      dup5\n        /* \"contracts/BEP20.sol\":2639:2657  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BEP20.sol\":2639:2666  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/BEP20.sol\":2658:2665  spender */\n      dup4\n        /* \"contracts/BEP20.sol\":2639:2666  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BEP20.sol\":2632:2666  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"contracts/BEP20.sol\":2490:2674  function allowance(address owner, address spender)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/access/Ownable.sol\":1906:2098  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_86:\n        /* \"contracts/access/Ownable.sol\":1237:1249  _msgSender() */\n      tag_153\n        /* \"contracts/access/Ownable.sol\":1237:1247  _msgSender */\n      tag_97\n        /* \"contracts/access/Ownable.sol\":1237:1249  _msgSender() */\n      jump\t// in\n    tag_153:\n        /* \"contracts/access/Ownable.sol\":1226:1249  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/access/Ownable.sol\":1226:1233  owner() */\n      tag_154\n        /* \"contracts/access/Ownable.sol\":1226:1231  owner */\n      tag_61\n        /* \"contracts/access/Ownable.sol\":1226:1233  owner() */\n      jump\t// in\n    tag_154:\n        /* \"contracts/access/Ownable.sol\":1226:1249  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/access/Ownable.sol\":1218:1286  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_155\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_156\n      swap1\n      tag_121\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_155:\n        /* \"contracts/access/Ownable.sol\":2015:2016  0 */\n      0x00\n        /* \"contracts/access/Ownable.sol\":1995:2017  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/access/Ownable.sol\":1995:2003  newOwner */\n      dup2\n        /* \"contracts/access/Ownable.sol\":1995:2017  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/access/Ownable.sol\":1987:2060  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_158:\n        /* \"contracts/access/Ownable.sol\":2071:2090  _setOwner(newOwner) */\n      tag_161\n        /* \"contracts/access/Ownable.sol\":2081:2089  newOwner */\n      dup2\n        /* \"contracts/access/Ownable.sol\":2071:2080  _setOwner */\n      tag_124\n        /* \"contracts/access/Ownable.sol\":2071:2090  _setOwner(newOwner) */\n      jump\t// in\n    tag_161:\n        /* \"contracts/access/Ownable.sol\":1906:2098  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/utils/Context.sol\":602:700  function _msgSender() internal view virtual returns (address) {... */\n    tag_97:\n        /* \"contracts/utils/Context.sol\":655:662  address */\n      0x00\n        /* \"contracts/utils/Context.sol\":682:692  msg.sender */\n      caller\n        /* \"contracts/utils/Context.sol\":675:692  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/utils/Context.sol\":602:700  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/BEP20.sol\":8632:9004  function _approve(... */\n    tag_98:\n        /* \"contracts/BEP20.sol\":8777:8778  0 */\n      0x00\n        /* \"contracts/BEP20.sol\":8760:8779  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20.sol\":8760:8765  owner */\n      dup4\n        /* \"contracts/BEP20.sol\":8760:8779  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/BEP20.sol\":8752:8820  require(owner != address(0), \"BEP20: approve from the zero address\") */\n      tag_164\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_165\n      swap1\n      tag_166\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_164:\n        /* \"contracts/BEP20.sol\":8858:8859  0 */\n      0x00\n        /* \"contracts/BEP20.sol\":8839:8860  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20.sol\":8839:8846  spender */\n      dup3\n        /* \"contracts/BEP20.sol\":8839:8860  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/BEP20.sol\":8831:8899  require(spender != address(0), \"BEP20: approve to the zero address\") */\n      tag_167\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap1\n      tag_169\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_167:\n        /* \"contracts/BEP20.sol\":8942:8948  amount */\n      dup1\n        /* \"contracts/BEP20.sol\":8912:8923  _allowances */\n      0x02\n        /* \"contracts/BEP20.sol\":8912:8930  _allowances[owner] */\n      0x00\n        /* \"contracts/BEP20.sol\":8924:8929  owner */\n      dup6\n        /* \"contracts/BEP20.sol\":8912:8930  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BEP20.sol\":8912:8939  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/BEP20.sol\":8931:8938  spender */\n      dup5\n        /* \"contracts/BEP20.sol\":8912:8939  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BEP20.sol\":8912:8948  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BEP20.sol\":8980:8987  spender */\n      dup2\n        /* \"contracts/BEP20.sol\":8964:8996  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20.sol\":8973:8978  owner */\n      dup4\n        /* \"contracts/BEP20.sol\":8964:8996  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/BEP20.sol\":8989:8995  amount */\n      dup4\n        /* \"contracts/BEP20.sol\":8964:8996  Approval(owner, spender, amount) */\n      mload(0x40)\n      tag_170\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/BEP20.sol\":8632:9004  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP20.sol\":6344:6886  function _transfer(... */\n    tag_102:\n        /* \"contracts/BEP20.sol\":6494:6495  0 */\n      0x00\n        /* \"contracts/BEP20.sol\":6476:6496  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20.sol\":6476:6482  sender */\n      dup4\n        /* \"contracts/BEP20.sol\":6476:6496  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/BEP20.sol\":6468:6538  require(sender != address(0), \"BEP20: transfer from the zero address\") */\n      tag_172\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap1\n      tag_174\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_172:\n        /* \"contracts/BEP20.sol\":6578:6579  0 */\n      0x00\n        /* \"contracts/BEP20.sol\":6557:6580  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20.sol\":6557:6566  recipient */\n      dup3\n        /* \"contracts/BEP20.sol\":6557:6580  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/BEP20.sol\":6549:6620  require(recipient != address(0), \"BEP20: transfer to the zero address\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap1\n      tag_177\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_175:\n        /* \"contracts/BEP20.sol\":6653:6761  _balances[sender].sub(... */\n      tag_178\n        /* \"contracts/BEP20.sol\":6689:6695  amount */\n      dup2\n        /* \"contracts/BEP20.sol\":6653:6761  _balances[sender].sub(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73\n      0x26\n      swap2\n      codecopy\n        /* \"contracts/BEP20.sol\":6653:6662  _balances */\n      0x01\n        /* \"contracts/BEP20.sol\":6653:6670  _balances[sender] */\n      0x00\n        /* \"contracts/BEP20.sol\":6663:6669  sender */\n      dup8\n        /* \"contracts/BEP20.sol\":6653:6670  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BEP20.sol\":6653:6674  _balances[sender].sub */\n      tag_107\n      swap1\n        /* \"contracts/BEP20.sol\":6653:6761  _balances[sender].sub(... */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_178:\n        /* \"contracts/BEP20.sol\":6633:6642  _balances */\n      0x01\n        /* \"contracts/BEP20.sol\":6633:6650  _balances[sender] */\n      0x00\n        /* \"contracts/BEP20.sol\":6643:6649  sender */\n      dup6\n        /* \"contracts/BEP20.sol\":6633:6650  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BEP20.sol\":6633:6761  _balances[sender] = _balances[sender].sub(... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BEP20.sol\":6795:6827  _balances[recipient].add(amount) */\n      tag_179\n        /* \"contracts/BEP20.sol\":6820:6826  amount */\n      dup2\n        /* \"contracts/BEP20.sol\":6795:6804  _balances */\n      0x01\n        /* \"contracts/BEP20.sol\":6795:6815  _balances[recipient] */\n      0x00\n        /* \"contracts/BEP20.sol\":6805:6814  recipient */\n      dup6\n        /* \"contracts/BEP20.sol\":6795:6815  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BEP20.sol\":6795:6819  _balances[recipient].add */\n      tag_114\n      swap1\n        /* \"contracts/BEP20.sol\":6795:6827  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_179:\n        /* \"contracts/BEP20.sol\":6772:6781  _balances */\n      0x01\n        /* \"contracts/BEP20.sol\":6772:6792  _balances[recipient] */\n      0x00\n        /* \"contracts/BEP20.sol\":6782:6791  recipient */\n      dup5\n        /* \"contracts/BEP20.sol\":6772:6792  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BEP20.sol\":6772:6827  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BEP20.sol\":6860:6869  recipient */\n      dup2\n        /* \"contracts/BEP20.sol\":6843:6878  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20.sol\":6852:6858  sender */\n      dup4\n        /* \"contracts/BEP20.sol\":6843:6878  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/BEP20.sol\":6871:6877  amount */\n      dup4\n        /* \"contracts/BEP20.sol\":6843:6878  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      tag_180\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/BEP20.sol\":6344:6886  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":5042:5282  function sub(... */\n    tag_107:\n        /* \"contracts/libraries/SafeMath.sol\":5162:5169  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":5220:5221  a */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":5215:5216  b */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":5215:5221  b <= a */\n      gt\n      iszero\n        /* \"contracts/libraries/SafeMath.sol\":5223:5235  errorMessage */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":5207:5236  require(b <= a, errorMessage) */\n      swap1\n      tag_182\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_182:\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":5262:5263  b */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":5258:5259  a */\n      dup5\n        /* \"contracts/libraries/SafeMath.sol\":5258:5263  a - b */\n      sub\n        /* \"contracts/libraries/SafeMath.sol\":5251:5263  return a - b */\n      swap1\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":5042:5282  function sub(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":2763:2861  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_114:\n        /* \"contracts/libraries/SafeMath.sol\":2821:2828  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":2852:2853  b */\n      dup2\n        /* \"contracts/libraries/SafeMath.sol\":2848:2849  a */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":2848:2853  a + b */\n      tag_185\n      swap2\n      swap1\n      tag_186\n      jump\t// in\n    tag_185:\n        /* \"contracts/libraries/SafeMath.sol\":2841:2853  return a + b */\n      swap1\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":2763:2861  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/access/Ownable.sol\":2106:2279  function _setOwner(address newOwner) private {... */\n    tag_124:\n        /* \"contracts/access/Ownable.sol\":2162:2178  address oldOwner */\n      0x00\n        /* \"contracts/access/Ownable.sol\":2181:2187  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/access/Ownable.sol\":2162:2187  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"contracts/access/Ownable.sol\":2207:2215  newOwner */\n      dup2\n        /* \"contracts/access/Ownable.sol\":2198:2204  _owner */\n      0x00\n      dup1\n        /* \"contracts/access/Ownable.sol\":2198:2215  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/access/Ownable.sol\":2262:2270  newOwner */\n      dup2\n        /* \"contracts/access/Ownable.sol\":2231:2271  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/access/Ownable.sol\":2252:2260  oldOwner */\n      dup2\n        /* \"contracts/access/Ownable.sol\":2231:2271  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/access/Ownable.sol\":2151:2279  {... */\n      pop\n        /* \"contracts/access/Ownable.sol\":2106:2279  function _setOwner(address newOwner) private {... */\n      pop\n      jump\t// out\n        /* \"contracts/BEP20.sol\":7167:7475  function _mint(address account, uint256 amount) internal {... */\n    tag_142:\n        /* \"contracts/BEP20.sol\":7262:7263  0 */\n      0x00\n        /* \"contracts/BEP20.sol\":7243:7264  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20.sol\":7243:7250  account */\n      dup3\n        /* \"contracts/BEP20.sol\":7243:7264  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/BEP20.sol\":7235:7300  require(account != address(0), \"BEP20: mint to the zero address\") */\n      tag_189\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_190\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_189:\n        /* \"contracts/BEP20.sol\":7328:7352  _totalSupply.add(amount) */\n      tag_192\n        /* \"contracts/BEP20.sol\":7345:7351  amount */\n      dup2\n        /* \"contracts/BEP20.sol\":7328:7340  _totalSupply */\n      sload(0x03)\n        /* \"contracts/BEP20.sol\":7328:7344  _totalSupply.add */\n      tag_114\n      swap1\n        /* \"contracts/BEP20.sol\":7328:7352  _totalSupply.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_192:\n        /* \"contracts/BEP20.sol\":7313:7325  _totalSupply */\n      0x03\n        /* \"contracts/BEP20.sol\":7313:7352  _totalSupply = _totalSupply.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BEP20.sol\":7384:7414  _balances[account].add(amount) */\n      tag_193\n        /* \"contracts/BEP20.sol\":7407:7413  amount */\n      dup2\n        /* \"contracts/BEP20.sol\":7384:7393  _balances */\n      0x01\n        /* \"contracts/BEP20.sol\":7384:7402  _balances[account] */\n      0x00\n        /* \"contracts/BEP20.sol\":7394:7401  account */\n      dup6\n        /* \"contracts/BEP20.sol\":7384:7402  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BEP20.sol\":7384:7406  _balances[account].add */\n      tag_114\n      swap1\n        /* \"contracts/BEP20.sol\":7384:7414  _balances[account].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_193:\n        /* \"contracts/BEP20.sol\":7363:7372  _balances */\n      0x01\n        /* \"contracts/BEP20.sol\":7363:7381  _balances[account] */\n      0x00\n        /* \"contracts/BEP20.sol\":7373:7380  account */\n      dup5\n        /* \"contracts/BEP20.sol\":7363:7381  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BEP20.sol\":7363:7414  _balances[account] = _balances[account].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BEP20.sol\":7451:7458  account */\n      dup2\n        /* \"contracts/BEP20.sol\":7430:7467  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20.sol\":7447:7448  0 */\n      0x00\n        /* \"contracts/BEP20.sol\":7430:7467  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/BEP20.sol\":7460:7466  amount */\n      dup4\n        /* \"contracts/BEP20.sol\":7430:7467  Transfer(address(0), account, amount) */\n      mload(0x40)\n      tag_194\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_194:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/BEP20.sol\":7167:7475  function _mint(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_195:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_196:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:594   */\n    tag_197:\n        /* \"#utility.yul\":355:356   */\n      0x00\n        /* \"#utility.yul\":365:478   */\n    tag_236:\n        /* \"#utility.yul\":379:385   */\n      dup4\n        /* \"#utility.yul\":376:377   */\n      dup2\n        /* \"#utility.yul\":373:386   */\n      lt\n        /* \"#utility.yul\":365:478   */\n      iszero\n      tag_238\n      jumpi\n        /* \"#utility.yul\":464:465   */\n      dup1\n        /* \"#utility.yul\":459:462   */\n      dup3\n        /* \"#utility.yul\":455:466   */\n      add\n        /* \"#utility.yul\":449:467   */\n      mload\n        /* \"#utility.yul\":445:446   */\n      dup2\n        /* \"#utility.yul\":440:443   */\n      dup5\n        /* \"#utility.yul\":436:447   */\n      add\n        /* \"#utility.yul\":429:468   */\n      mstore\n        /* \"#utility.yul\":401:403   */\n      0x20\n        /* \"#utility.yul\":398:399   */\n      dup2\n        /* \"#utility.yul\":394:404   */\n      add\n        /* \"#utility.yul\":389:404   */\n      swap1\n      pop\n        /* \"#utility.yul\":365:478   */\n      jump(tag_236)\n    tag_238:\n        /* \"#utility.yul\":496:502   */\n      dup4\n        /* \"#utility.yul\":493:494   */\n      dup2\n        /* \"#utility.yul\":490:503   */\n      gt\n        /* \"#utility.yul\":487:588   */\n      iszero\n      tag_239\n      jumpi\n        /* \"#utility.yul\":576:577   */\n      0x00\n        /* \"#utility.yul\":567:573   */\n      dup5\n        /* \"#utility.yul\":562:565   */\n      dup5\n        /* \"#utility.yul\":558:574   */\n      add\n        /* \"#utility.yul\":551:578   */\n      mstore\n        /* \"#utility.yul\":487:588   */\n    tag_239:\n        /* \"#utility.yul\":336:594   */\n      pop\n        /* \"#utility.yul\":287:594   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":600:702   */\n    tag_198:\n        /* \"#utility.yul\":641:647   */\n      0x00\n        /* \"#utility.yul\":692:694   */\n      0x1f\n        /* \"#utility.yul\":688:695   */\n      not\n        /* \"#utility.yul\":683:685   */\n      0x1f\n        /* \"#utility.yul\":676:681   */\n      dup4\n        /* \"#utility.yul\":672:686   */\n      add\n        /* \"#utility.yul\":668:696   */\n      and\n        /* \"#utility.yul\":658:696   */\n      swap1\n      pop\n        /* \"#utility.yul\":600:702   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":708:1072   */\n    tag_199:\n        /* \"#utility.yul\":796:799   */\n      0x00\n        /* \"#utility.yul\":824:863   */\n      tag_242\n        /* \"#utility.yul\":857:862   */\n      dup3\n        /* \"#utility.yul\":824:863   */\n      tag_195\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":879:950   */\n      tag_243\n        /* \"#utility.yul\":943:949   */\n      dup2\n        /* \"#utility.yul\":938:941   */\n      dup6\n        /* \"#utility.yul\":879:950   */\n      tag_196\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":872:950   */\n      swap4\n      pop\n        /* \"#utility.yul\":959:1011   */\n      tag_244\n        /* \"#utility.yul\":1004:1010   */\n      dup2\n        /* \"#utility.yul\":999:1002   */\n      dup6\n        /* \"#utility.yul\":992:996   */\n      0x20\n        /* \"#utility.yul\":985:990   */\n      dup7\n        /* \"#utility.yul\":981:997   */\n      add\n        /* \"#utility.yul\":959:1011   */\n      tag_197\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":1036:1065   */\n      tag_245\n        /* \"#utility.yul\":1058:1064   */\n      dup2\n        /* \"#utility.yul\":1036:1065   */\n      tag_198\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":1031:1034   */\n      dup5\n        /* \"#utility.yul\":1027:1066   */\n      add\n        /* \"#utility.yul\":1020:1066   */\n      swap2\n      pop\n        /* \"#utility.yul\":800:1072   */\n      pop\n        /* \"#utility.yul\":708:1072   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1078:1391   */\n    tag_25:\n        /* \"#utility.yul\":1191:1195   */\n      0x00\n        /* \"#utility.yul\":1229:1231   */\n      0x20\n        /* \"#utility.yul\":1218:1227   */\n      dup3\n        /* \"#utility.yul\":1214:1232   */\n      add\n        /* \"#utility.yul\":1206:1232   */\n      swap1\n      pop\n        /* \"#utility.yul\":1278:1287   */\n      dup2\n        /* \"#utility.yul\":1272:1276   */\n      dup2\n        /* \"#utility.yul\":1268:1288   */\n      sub\n        /* \"#utility.yul\":1264:1265   */\n      0x00\n        /* \"#utility.yul\":1253:1262   */\n      dup4\n        /* \"#utility.yul\":1249:1266   */\n      add\n        /* \"#utility.yul\":1242:1289   */\n      mstore\n        /* \"#utility.yul\":1306:1384   */\n      tag_247\n        /* \"#utility.yul\":1379:1383   */\n      dup2\n        /* \"#utility.yul\":1370:1376   */\n      dup5\n        /* \"#utility.yul\":1306:1384   */\n      tag_199\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":1298:1384   */\n      swap1\n      pop\n        /* \"#utility.yul\":1078:1391   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1478:1595   */\n    tag_201:\n        /* \"#utility.yul\":1587:1588   */\n      0x00\n        /* \"#utility.yul\":1584:1585   */\n      dup1\n        /* \"#utility.yul\":1577:1589   */\n      revert\n        /* \"#utility.yul\":1724:1850   */\n    tag_203:\n        /* \"#utility.yul\":1761:1768   */\n      0x00\n        /* \"#utility.yul\":1801:1843   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1794:1799   */\n      dup3\n        /* \"#utility.yul\":1790:1844   */\n      and\n        /* \"#utility.yul\":1779:1844   */\n      swap1\n      pop\n        /* \"#utility.yul\":1724:1850   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1856:1952   */\n    tag_204:\n        /* \"#utility.yul\":1893:1900   */\n      0x00\n        /* \"#utility.yul\":1922:1946   */\n      tag_253\n        /* \"#utility.yul\":1940:1945   */\n      dup3\n        /* \"#utility.yul\":1922:1946   */\n      tag_203\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":1911:1946   */\n      swap1\n      pop\n        /* \"#utility.yul\":1856:1952   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1958:2080   */\n    tag_205:\n        /* \"#utility.yul\":2031:2055   */\n      tag_255\n        /* \"#utility.yul\":2049:2054   */\n      dup2\n        /* \"#utility.yul\":2031:2055   */\n      tag_204\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":2024:2029   */\n      dup2\n        /* \"#utility.yul\":2021:2056   */\n      eq\n        /* \"#utility.yul\":2011:2074   */\n      tag_256\n      jumpi\n        /* \"#utility.yul\":2070:2071   */\n      0x00\n        /* \"#utility.yul\":2067:2068   */\n      dup1\n        /* \"#utility.yul\":2060:2072   */\n      revert\n        /* \"#utility.yul\":2011:2074   */\n    tag_256:\n        /* \"#utility.yul\":1958:2080   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2086:2225   */\n    tag_206:\n        /* \"#utility.yul\":2132:2137   */\n      0x00\n        /* \"#utility.yul\":2170:2176   */\n      dup2\n        /* \"#utility.yul\":2157:2177   */\n      calldataload\n        /* \"#utility.yul\":2148:2177   */\n      swap1\n      pop\n        /* \"#utility.yul\":2186:2219   */\n      tag_258\n        /* \"#utility.yul\":2213:2218   */\n      dup2\n        /* \"#utility.yul\":2186:2219   */\n      tag_205\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":2086:2225   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2231:2308   */\n    tag_207:\n        /* \"#utility.yul\":2268:2275   */\n      0x00\n        /* \"#utility.yul\":2297:2302   */\n      dup2\n        /* \"#utility.yul\":2286:2302   */\n      swap1\n      pop\n        /* \"#utility.yul\":2231:2308   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2314:2436   */\n    tag_208:\n        /* \"#utility.yul\":2387:2411   */\n      tag_261\n        /* \"#utility.yul\":2405:2410   */\n      dup2\n        /* \"#utility.yul\":2387:2411   */\n      tag_207\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":2380:2385   */\n      dup2\n        /* \"#utility.yul\":2377:2412   */\n      eq\n        /* \"#utility.yul\":2367:2430   */\n      tag_262\n      jumpi\n        /* \"#utility.yul\":2426:2427   */\n      0x00\n        /* \"#utility.yul\":2423:2424   */\n      dup1\n        /* \"#utility.yul\":2416:2428   */\n      revert\n        /* \"#utility.yul\":2367:2430   */\n    tag_262:\n        /* \"#utility.yul\":2314:2436   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2442:2581   */\n    tag_209:\n        /* \"#utility.yul\":2488:2493   */\n      0x00\n        /* \"#utility.yul\":2526:2532   */\n      dup2\n        /* \"#utility.yul\":2513:2533   */\n      calldataload\n        /* \"#utility.yul\":2504:2533   */\n      swap1\n      pop\n        /* \"#utility.yul\":2542:2575   */\n      tag_264\n        /* \"#utility.yul\":2569:2574   */\n      dup2\n        /* \"#utility.yul\":2542:2575   */\n      tag_208\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":2442:2581   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2587:3061   */\n    tag_28:\n        /* \"#utility.yul\":2655:2661   */\n      0x00\n        /* \"#utility.yul\":2663:2669   */\n      dup1\n        /* \"#utility.yul\":2712:2714   */\n      0x40\n        /* \"#utility.yul\":2700:2709   */\n      dup4\n        /* \"#utility.yul\":2691:2698   */\n      dup6\n        /* \"#utility.yul\":2687:2710   */\n      sub\n        /* \"#utility.yul\":2683:2715   */\n      slt\n        /* \"#utility.yul\":2680:2799   */\n      iszero\n      tag_266\n      jumpi\n        /* \"#utility.yul\":2718:2797   */\n      tag_267\n      tag_201\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":2680:2799   */\n    tag_266:\n        /* \"#utility.yul\":2838:2839   */\n      0x00\n        /* \"#utility.yul\":2863:2916   */\n      tag_268\n        /* \"#utility.yul\":2908:2915   */\n      dup6\n        /* \"#utility.yul\":2899:2905   */\n      dup3\n        /* \"#utility.yul\":2888:2897   */\n      dup7\n        /* \"#utility.yul\":2884:2906   */\n      add\n        /* \"#utility.yul\":2863:2916   */\n      tag_206\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":2853:2916   */\n      swap3\n      pop\n        /* \"#utility.yul\":2809:2926   */\n      pop\n        /* \"#utility.yul\":2965:2967   */\n      0x20\n        /* \"#utility.yul\":2991:3044   */\n      tag_269\n        /* \"#utility.yul\":3036:3043   */\n      dup6\n        /* \"#utility.yul\":3027:3033   */\n      dup3\n        /* \"#utility.yul\":3016:3025   */\n      dup7\n        /* \"#utility.yul\":3012:3034   */\n      add\n        /* \"#utility.yul\":2991:3044   */\n      tag_209\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":2981:3044   */\n      swap2\n      pop\n        /* \"#utility.yul\":2936:3054   */\n      pop\n        /* \"#utility.yul\":2587:3061   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3067:3157   */\n    tag_210:\n        /* \"#utility.yul\":3101:3108   */\n      0x00\n        /* \"#utility.yul\":3144:3149   */\n      dup2\n        /* \"#utility.yul\":3137:3150   */\n      iszero\n        /* \"#utility.yul\":3130:3151   */\n      iszero\n        /* \"#utility.yul\":3119:3151   */\n      swap1\n      pop\n        /* \"#utility.yul\":3067:3157   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3163:3272   */\n    tag_211:\n        /* \"#utility.yul\":3244:3265   */\n      tag_272\n        /* \"#utility.yul\":3259:3264   */\n      dup2\n        /* \"#utility.yul\":3244:3265   */\n      tag_210\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":3239:3242   */\n      dup3\n        /* \"#utility.yul\":3232:3266   */\n      mstore\n        /* \"#utility.yul\":3163:3272   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3278:3488   */\n    tag_31:\n        /* \"#utility.yul\":3365:3369   */\n      0x00\n        /* \"#utility.yul\":3403:3405   */\n      0x20\n        /* \"#utility.yul\":3392:3401   */\n      dup3\n        /* \"#utility.yul\":3388:3406   */\n      add\n        /* \"#utility.yul\":3380:3406   */\n      swap1\n      pop\n        /* \"#utility.yul\":3416:3481   */\n      tag_274\n        /* \"#utility.yul\":3478:3479   */\n      0x00\n        /* \"#utility.yul\":3467:3476   */\n      dup4\n        /* \"#utility.yul\":3463:3480   */\n      add\n        /* \"#utility.yul\":3454:3460   */\n      dup5\n        /* \"#utility.yul\":3416:3481   */\n      tag_211\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":3278:3488   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3494:3612   */\n    tag_212:\n        /* \"#utility.yul\":3581:3605   */\n      tag_276\n        /* \"#utility.yul\":3599:3604   */\n      dup2\n        /* \"#utility.yul\":3581:3605   */\n      tag_207\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":3576:3579   */\n      dup3\n        /* \"#utility.yul\":3569:3606   */\n      mstore\n        /* \"#utility.yul\":3494:3612   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3618:3840   */\n    tag_35:\n        /* \"#utility.yul\":3711:3715   */\n      0x00\n        /* \"#utility.yul\":3749:3751   */\n      0x20\n        /* \"#utility.yul\":3738:3747   */\n      dup3\n        /* \"#utility.yul\":3734:3752   */\n      add\n        /* \"#utility.yul\":3726:3752   */\n      swap1\n      pop\n        /* \"#utility.yul\":3762:3833   */\n      tag_278\n        /* \"#utility.yul\":3830:3831   */\n      0x00\n        /* \"#utility.yul\":3819:3828   */\n      dup4\n        /* \"#utility.yul\":3815:3832   */\n      add\n        /* \"#utility.yul\":3806:3812   */\n      dup5\n        /* \"#utility.yul\":3762:3833   */\n      tag_212\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":3618:3840   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3846:4465   */\n    tag_38:\n        /* \"#utility.yul\":3923:3929   */\n      0x00\n        /* \"#utility.yul\":3931:3937   */\n      dup1\n        /* \"#utility.yul\":3939:3945   */\n      0x00\n        /* \"#utility.yul\":3988:3990   */\n      0x60\n        /* \"#utility.yul\":3976:3985   */\n      dup5\n        /* \"#utility.yul\":3967:3974   */\n      dup7\n        /* \"#utility.yul\":3963:3986   */\n      sub\n        /* \"#utility.yul\":3959:3991   */\n      slt\n        /* \"#utility.yul\":3956:4075   */\n      iszero\n      tag_280\n      jumpi\n        /* \"#utility.yul\":3994:4073   */\n      tag_281\n      tag_201\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":3956:4075   */\n    tag_280:\n        /* \"#utility.yul\":4114:4115   */\n      0x00\n        /* \"#utility.yul\":4139:4192   */\n      tag_282\n        /* \"#utility.yul\":4184:4191   */\n      dup7\n        /* \"#utility.yul\":4175:4181   */\n      dup3\n        /* \"#utility.yul\":4164:4173   */\n      dup8\n        /* \"#utility.yul\":4160:4182   */\n      add\n        /* \"#utility.yul\":4139:4192   */\n      tag_206\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":4129:4192   */\n      swap4\n      pop\n        /* \"#utility.yul\":4085:4202   */\n      pop\n        /* \"#utility.yul\":4241:4243   */\n      0x20\n        /* \"#utility.yul\":4267:4320   */\n      tag_283\n        /* \"#utility.yul\":4312:4319   */\n      dup7\n        /* \"#utility.yul\":4303:4309   */\n      dup3\n        /* \"#utility.yul\":4292:4301   */\n      dup8\n        /* \"#utility.yul\":4288:4310   */\n      add\n        /* \"#utility.yul\":4267:4320   */\n      tag_206\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":4257:4320   */\n      swap3\n      pop\n        /* \"#utility.yul\":4212:4330   */\n      pop\n        /* \"#utility.yul\":4369:4371   */\n      0x40\n        /* \"#utility.yul\":4395:4448   */\n      tag_284\n        /* \"#utility.yul\":4440:4447   */\n      dup7\n        /* \"#utility.yul\":4431:4437   */\n      dup3\n        /* \"#utility.yul\":4420:4429   */\n      dup8\n        /* \"#utility.yul\":4416:4438   */\n      add\n        /* \"#utility.yul\":4395:4448   */\n      tag_209\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":4385:4448   */\n      swap2\n      pop\n        /* \"#utility.yul\":4340:4458   */\n      pop\n        /* \"#utility.yul\":3846:4465   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4471:4557   */\n    tag_213:\n        /* \"#utility.yul\":4506:4513   */\n      0x00\n        /* \"#utility.yul\":4546:4550   */\n      0xff\n        /* \"#utility.yul\":4539:4544   */\n      dup3\n        /* \"#utility.yul\":4535:4551   */\n      and\n        /* \"#utility.yul\":4524:4551   */\n      swap1\n      pop\n        /* \"#utility.yul\":4471:4557   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4563:4675   */\n    tag_214:\n        /* \"#utility.yul\":4646:4668   */\n      tag_287\n        /* \"#utility.yul\":4662:4667   */\n      dup2\n        /* \"#utility.yul\":4646:4668   */\n      tag_213\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":4641:4644   */\n      dup3\n        /* \"#utility.yul\":4634:4669   */\n      mstore\n        /* \"#utility.yul\":4563:4675   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4681:4895   */\n    tag_44:\n        /* \"#utility.yul\":4770:4774   */\n      0x00\n        /* \"#utility.yul\":4808:4810   */\n      0x20\n        /* \"#utility.yul\":4797:4806   */\n      dup3\n        /* \"#utility.yul\":4793:4811   */\n      add\n        /* \"#utility.yul\":4785:4811   */\n      swap1\n      pop\n        /* \"#utility.yul\":4821:4888   */\n      tag_289\n        /* \"#utility.yul\":4885:4886   */\n      0x00\n        /* \"#utility.yul\":4874:4883   */\n      dup4\n        /* \"#utility.yul\":4870:4887   */\n      add\n        /* \"#utility.yul\":4861:4867   */\n      dup5\n        /* \"#utility.yul\":4821:4888   */\n      tag_214\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":4681:4895   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4901:5230   */\n    tag_51:\n        /* \"#utility.yul\":4960:4966   */\n      0x00\n        /* \"#utility.yul\":5009:5011   */\n      0x20\n        /* \"#utility.yul\":4997:5006   */\n      dup3\n        /* \"#utility.yul\":4988:4995   */\n      dup5\n        /* \"#utility.yul\":4984:5007   */\n      sub\n        /* \"#utility.yul\":4980:5012   */\n      slt\n        /* \"#utility.yul\":4977:5096   */\n      iszero\n      tag_291\n      jumpi\n        /* \"#utility.yul\":5015:5094   */\n      tag_292\n      tag_201\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":4977:5096   */\n    tag_291:\n        /* \"#utility.yul\":5135:5136   */\n      0x00\n        /* \"#utility.yul\":5160:5213   */\n      tag_293\n        /* \"#utility.yul\":5205:5212   */\n      dup5\n        /* \"#utility.yul\":5196:5202   */\n      dup3\n        /* \"#utility.yul\":5185:5194   */\n      dup6\n        /* \"#utility.yul\":5181:5203   */\n      add\n        /* \"#utility.yul\":5160:5213   */\n      tag_206\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":5150:5213   */\n      swap2\n      pop\n        /* \"#utility.yul\":5106:5223   */\n      pop\n        /* \"#utility.yul\":4901:5230   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5236:5354   */\n    tag_215:\n        /* \"#utility.yul\":5323:5347   */\n      tag_295\n        /* \"#utility.yul\":5341:5346   */\n      dup2\n        /* \"#utility.yul\":5323:5347   */\n      tag_204\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":5318:5321   */\n      dup3\n        /* \"#utility.yul\":5311:5348   */\n      mstore\n        /* \"#utility.yul\":5236:5354   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5360:5582   */\n    tag_59:\n        /* \"#utility.yul\":5453:5457   */\n      0x00\n        /* \"#utility.yul\":5491:5493   */\n      0x20\n        /* \"#utility.yul\":5480:5489   */\n      dup3\n        /* \"#utility.yul\":5476:5494   */\n      add\n        /* \"#utility.yul\":5468:5494   */\n      swap1\n      pop\n        /* \"#utility.yul\":5504:5575   */\n      tag_297\n        /* \"#utility.yul\":5572:5573   */\n      0x00\n        /* \"#utility.yul\":5561:5570   */\n      dup4\n        /* \"#utility.yul\":5557:5574   */\n      add\n        /* \"#utility.yul\":5548:5554   */\n      dup5\n        /* \"#utility.yul\":5504:5575   */\n      tag_215\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":5360:5582   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5588:5917   */\n    tag_68:\n        /* \"#utility.yul\":5647:5653   */\n      0x00\n        /* \"#utility.yul\":5696:5698   */\n      0x20\n        /* \"#utility.yul\":5684:5693   */\n      dup3\n        /* \"#utility.yul\":5675:5682   */\n      dup5\n        /* \"#utility.yul\":5671:5694   */\n      sub\n        /* \"#utility.yul\":5667:5699   */\n      slt\n        /* \"#utility.yul\":5664:5783   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":5702:5781   */\n      tag_300\n      tag_201\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":5664:5783   */\n    tag_299:\n        /* \"#utility.yul\":5822:5823   */\n      0x00\n        /* \"#utility.yul\":5847:5900   */\n      tag_301\n        /* \"#utility.yul\":5892:5899   */\n      dup5\n        /* \"#utility.yul\":5883:5889   */\n      dup3\n        /* \"#utility.yul\":5872:5881   */\n      dup6\n        /* \"#utility.yul\":5868:5890   */\n      add\n        /* \"#utility.yul\":5847:5900   */\n      tag_209\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":5837:5900   */\n      swap2\n      pop\n        /* \"#utility.yul\":5793:5910   */\n      pop\n        /* \"#utility.yul\":5588:5917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5923:6397   */\n    tag_81:\n        /* \"#utility.yul\":5991:5997   */\n      0x00\n        /* \"#utility.yul\":5999:6005   */\n      dup1\n        /* \"#utility.yul\":6048:6050   */\n      0x40\n        /* \"#utility.yul\":6036:6045   */\n      dup4\n        /* \"#utility.yul\":6027:6034   */\n      dup6\n        /* \"#utility.yul\":6023:6046   */\n      sub\n        /* \"#utility.yul\":6019:6051   */\n      slt\n        /* \"#utility.yul\":6016:6135   */\n      iszero\n      tag_303\n      jumpi\n        /* \"#utility.yul\":6054:6133   */\n      tag_304\n      tag_201\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":6016:6135   */\n    tag_303:\n        /* \"#utility.yul\":6174:6175   */\n      0x00\n        /* \"#utility.yul\":6199:6252   */\n      tag_305\n        /* \"#utility.yul\":6244:6251   */\n      dup6\n        /* \"#utility.yul\":6235:6241   */\n      dup3\n        /* \"#utility.yul\":6224:6233   */\n      dup7\n        /* \"#utility.yul\":6220:6242   */\n      add\n        /* \"#utility.yul\":6199:6252   */\n      tag_206\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":6189:6252   */\n      swap3\n      pop\n        /* \"#utility.yul\":6145:6262   */\n      pop\n        /* \"#utility.yul\":6301:6303   */\n      0x20\n        /* \"#utility.yul\":6327:6380   */\n      tag_306\n        /* \"#utility.yul\":6372:6379   */\n      dup6\n        /* \"#utility.yul\":6363:6369   */\n      dup3\n        /* \"#utility.yul\":6352:6361   */\n      dup7\n        /* \"#utility.yul\":6348:6370   */\n      add\n        /* \"#utility.yul\":6327:6380   */\n      tag_206\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":6317:6380   */\n      swap2\n      pop\n        /* \"#utility.yul\":6272:6390   */\n      pop\n        /* \"#utility.yul\":5923:6397   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6403:6583   */\n    tag_216:\n        /* \"#utility.yul\":6451:6528   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6448:6449   */\n      0x00\n        /* \"#utility.yul\":6441:6529   */\n      mstore\n        /* \"#utility.yul\":6548:6552   */\n      0x22\n        /* \"#utility.yul\":6545:6546   */\n      0x04\n        /* \"#utility.yul\":6538:6553   */\n      mstore\n        /* \"#utility.yul\":6572:6576   */\n      0x24\n        /* \"#utility.yul\":6569:6570   */\n      0x00\n        /* \"#utility.yul\":6562:6577   */\n      revert\n        /* \"#utility.yul\":6589:6909   */\n    tag_89:\n        /* \"#utility.yul\":6633:6639   */\n      0x00\n        /* \"#utility.yul\":6670:6671   */\n      0x02\n        /* \"#utility.yul\":6664:6668   */\n      dup3\n        /* \"#utility.yul\":6660:6672   */\n      div\n        /* \"#utility.yul\":6650:6672   */\n      swap1\n      pop\n        /* \"#utility.yul\":6717:6718   */\n      0x01\n        /* \"#utility.yul\":6711:6715   */\n      dup3\n        /* \"#utility.yul\":6707:6719   */\n      and\n        /* \"#utility.yul\":6738:6756   */\n      dup1\n        /* \"#utility.yul\":6728:6809   */\n      tag_309\n      jumpi\n        /* \"#utility.yul\":6794:6798   */\n      0x7f\n        /* \"#utility.yul\":6786:6792   */\n      dup3\n        /* \"#utility.yul\":6782:6799   */\n      and\n        /* \"#utility.yul\":6772:6799   */\n      swap2\n      pop\n        /* \"#utility.yul\":6728:6809   */\n    tag_309:\n        /* \"#utility.yul\":6856:6858   */\n      0x20\n        /* \"#utility.yul\":6848:6854   */\n      dup3\n        /* \"#utility.yul\":6845:6859   */\n      lt\n        /* \"#utility.yul\":6825:6843   */\n      dup2\n        /* \"#utility.yul\":6822:6860   */\n      sub\n        /* \"#utility.yul\":6819:6903   */\n      tag_310\n      jumpi\n        /* \"#utility.yul\":6875:6893   */\n      tag_311\n      tag_216\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":6819:6903   */\n    tag_310:\n        /* \"#utility.yul\":6640:6909   */\n      pop\n        /* \"#utility.yul\":6589:6909   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6915:7097   */\n    tag_217:\n        /* \"#utility.yul\":7055:7089   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":7051:7052   */\n      0x00\n        /* \"#utility.yul\":7043:7049   */\n      dup3\n        /* \"#utility.yul\":7039:7053   */\n      add\n        /* \"#utility.yul\":7032:7090   */\n      mstore\n        /* \"#utility.yul\":6915:7097   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7103:7469   */\n    tag_218:\n        /* \"#utility.yul\":7245:7248   */\n      0x00\n        /* \"#utility.yul\":7266:7333   */\n      tag_314\n        /* \"#utility.yul\":7330:7332   */\n      0x20\n        /* \"#utility.yul\":7325:7328   */\n      dup4\n        /* \"#utility.yul\":7266:7333   */\n      tag_196\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":7259:7333   */\n      swap2\n      pop\n        /* \"#utility.yul\":7342:7435   */\n      tag_315\n        /* \"#utility.yul\":7431:7434   */\n      dup3\n        /* \"#utility.yul\":7342:7435   */\n      tag_217\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":7460:7462   */\n      0x20\n        /* \"#utility.yul\":7455:7458   */\n      dup3\n        /* \"#utility.yul\":7451:7463   */\n      add\n        /* \"#utility.yul\":7444:7463   */\n      swap1\n      pop\n        /* \"#utility.yul\":7103:7469   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7475:7894   */\n    tag_121:\n        /* \"#utility.yul\":7641:7645   */\n      0x00\n        /* \"#utility.yul\":7679:7681   */\n      0x20\n        /* \"#utility.yul\":7668:7677   */\n      dup3\n        /* \"#utility.yul\":7664:7682   */\n      add\n        /* \"#utility.yul\":7656:7682   */\n      swap1\n      pop\n        /* \"#utility.yul\":7728:7737   */\n      dup2\n        /* \"#utility.yul\":7722:7726   */\n      dup2\n        /* \"#utility.yul\":7718:7738   */\n      sub\n        /* \"#utility.yul\":7714:7715   */\n      0x00\n        /* \"#utility.yul\":7703:7712   */\n      dup4\n        /* \"#utility.yul\":7699:7716   */\n      add\n        /* \"#utility.yul\":7692:7739   */\n      mstore\n        /* \"#utility.yul\":7756:7887   */\n      tag_317\n        /* \"#utility.yul\":7882:7886   */\n      dup2\n        /* \"#utility.yul\":7756:7887   */\n      tag_218\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":7748:7887   */\n      swap1\n      pop\n        /* \"#utility.yul\":7475:7894   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7900:8125   */\n    tag_219:\n        /* \"#utility.yul\":8040:8074   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":8036:8037   */\n      0x00\n        /* \"#utility.yul\":8028:8034   */\n      dup3\n        /* \"#utility.yul\":8024:8038   */\n      add\n        /* \"#utility.yul\":8017:8075   */\n      mstore\n        /* \"#utility.yul\":8109:8117   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8104:8106   */\n      0x20\n        /* \"#utility.yul\":8096:8102   */\n      dup3\n        /* \"#utility.yul\":8092:8107   */\n      add\n        /* \"#utility.yul\":8085:8118   */\n      mstore\n        /* \"#utility.yul\":7900:8125   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8131:8497   */\n    tag_220:\n        /* \"#utility.yul\":8273:8276   */\n      0x00\n        /* \"#utility.yul\":8294:8361   */\n      tag_320\n        /* \"#utility.yul\":8358:8360   */\n      0x26\n        /* \"#utility.yul\":8353:8356   */\n      dup4\n        /* \"#utility.yul\":8294:8361   */\n      tag_196\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":8287:8361   */\n      swap2\n      pop\n        /* \"#utility.yul\":8370:8463   */\n      tag_321\n        /* \"#utility.yul\":8459:8462   */\n      dup3\n        /* \"#utility.yul\":8370:8463   */\n      tag_219\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":8488:8490   */\n      0x40\n        /* \"#utility.yul\":8483:8486   */\n      dup3\n        /* \"#utility.yul\":8479:8491   */\n      add\n        /* \"#utility.yul\":8472:8491   */\n      swap1\n      pop\n        /* \"#utility.yul\":8131:8497   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8503:8922   */\n    tag_160:\n        /* \"#utility.yul\":8669:8673   */\n      0x00\n        /* \"#utility.yul\":8707:8709   */\n      0x20\n        /* \"#utility.yul\":8696:8705   */\n      dup3\n        /* \"#utility.yul\":8692:8710   */\n      add\n        /* \"#utility.yul\":8684:8710   */\n      swap1\n      pop\n        /* \"#utility.yul\":8756:8765   */\n      dup2\n        /* \"#utility.yul\":8750:8754   */\n      dup2\n        /* \"#utility.yul\":8746:8766   */\n      sub\n        /* \"#utility.yul\":8742:8743   */\n      0x00\n        /* \"#utility.yul\":8731:8740   */\n      dup4\n        /* \"#utility.yul\":8727:8744   */\n      add\n        /* \"#utility.yul\":8720:8767   */\n      mstore\n        /* \"#utility.yul\":8784:8915   */\n      tag_323\n        /* \"#utility.yul\":8910:8914   */\n      dup2\n        /* \"#utility.yul\":8784:8915   */\n      tag_220\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":8776:8915   */\n      swap1\n      pop\n        /* \"#utility.yul\":8503:8922   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8928:9151   */\n    tag_221:\n        /* \"#utility.yul\":9068:9102   */\n      0x42455032303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":9064:9065   */\n      0x00\n        /* \"#utility.yul\":9056:9062   */\n      dup3\n        /* \"#utility.yul\":9052:9066   */\n      add\n        /* \"#utility.yul\":9045:9103   */\n      mstore\n        /* \"#utility.yul\":9137:9143   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9132:9134   */\n      0x20\n        /* \"#utility.yul\":9124:9130   */\n      dup3\n        /* \"#utility.yul\":9120:9135   */\n      add\n        /* \"#utility.yul\":9113:9144   */\n      mstore\n        /* \"#utility.yul\":8928:9151   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9157:9523   */\n    tag_222:\n        /* \"#utility.yul\":9299:9302   */\n      0x00\n        /* \"#utility.yul\":9320:9387   */\n      tag_326\n        /* \"#utility.yul\":9384:9386   */\n      0x24\n        /* \"#utility.yul\":9379:9382   */\n      dup4\n        /* \"#utility.yul\":9320:9387   */\n      tag_196\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":9313:9387   */\n      swap2\n      pop\n        /* \"#utility.yul\":9396:9489   */\n      tag_327\n        /* \"#utility.yul\":9485:9488   */\n      dup3\n        /* \"#utility.yul\":9396:9489   */\n      tag_221\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":9514:9516   */\n      0x40\n        /* \"#utility.yul\":9509:9512   */\n      dup3\n        /* \"#utility.yul\":9505:9517   */\n      add\n        /* \"#utility.yul\":9498:9517   */\n      swap1\n      pop\n        /* \"#utility.yul\":9157:9523   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9529:9948   */\n    tag_166:\n        /* \"#utility.yul\":9695:9699   */\n      0x00\n        /* \"#utility.yul\":9733:9735   */\n      0x20\n        /* \"#utility.yul\":9722:9731   */\n      dup3\n        /* \"#utility.yul\":9718:9736   */\n      add\n        /* \"#utility.yul\":9710:9736   */\n      swap1\n      pop\n        /* \"#utility.yul\":9782:9791   */\n      dup2\n        /* \"#utility.yul\":9776:9780   */\n      dup2\n        /* \"#utility.yul\":9772:9792   */\n      sub\n        /* \"#utility.yul\":9768:9769   */\n      0x00\n        /* \"#utility.yul\":9757:9766   */\n      dup4\n        /* \"#utility.yul\":9753:9770   */\n      add\n        /* \"#utility.yul\":9746:9793   */\n      mstore\n        /* \"#utility.yul\":9810:9941   */\n      tag_329\n        /* \"#utility.yul\":9936:9940   */\n      dup2\n        /* \"#utility.yul\":9810:9941   */\n      tag_222\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":9802:9941   */\n      swap1\n      pop\n        /* \"#utility.yul\":9529:9948   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9954:10175   */\n    tag_223:\n        /* \"#utility.yul\":10094:10128   */\n      0x42455032303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":10090:10091   */\n      0x00\n        /* \"#utility.yul\":10082:10088   */\n      dup3\n        /* \"#utility.yul\":10078:10092   */\n      add\n        /* \"#utility.yul\":10071:10129   */\n      mstore\n        /* \"#utility.yul\":10163:10167   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10158:10160   */\n      0x20\n        /* \"#utility.yul\":10150:10156   */\n      dup3\n        /* \"#utility.yul\":10146:10161   */\n      add\n        /* \"#utility.yul\":10139:10168   */\n      mstore\n        /* \"#utility.yul\":9954:10175   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10181:10547   */\n    tag_224:\n        /* \"#utility.yul\":10323:10326   */\n      0x00\n        /* \"#utility.yul\":10344:10411   */\n      tag_332\n        /* \"#utility.yul\":10408:10410   */\n      0x22\n        /* \"#utility.yul\":10403:10406   */\n      dup4\n        /* \"#utility.yul\":10344:10411   */\n      tag_196\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":10337:10411   */\n      swap2\n      pop\n        /* \"#utility.yul\":10420:10513   */\n      tag_333\n        /* \"#utility.yul\":10509:10512   */\n      dup3\n        /* \"#utility.yul\":10420:10513   */\n      tag_223\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":10538:10540   */\n      0x40\n        /* \"#utility.yul\":10533:10536   */\n      dup3\n        /* \"#utility.yul\":10529:10541   */\n      add\n        /* \"#utility.yul\":10522:10541   */\n      swap1\n      pop\n        /* \"#utility.yul\":10181:10547   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10553:10972   */\n    tag_169:\n        /* \"#utility.yul\":10719:10723   */\n      0x00\n        /* \"#utility.yul\":10757:10759   */\n      0x20\n        /* \"#utility.yul\":10746:10755   */\n      dup3\n        /* \"#utility.yul\":10742:10760   */\n      add\n        /* \"#utility.yul\":10734:10760   */\n      swap1\n      pop\n        /* \"#utility.yul\":10806:10815   */\n      dup2\n        /* \"#utility.yul\":10800:10804   */\n      dup2\n        /* \"#utility.yul\":10796:10816   */\n      sub\n        /* \"#utility.yul\":10792:10793   */\n      0x00\n        /* \"#utility.yul\":10781:10790   */\n      dup4\n        /* \"#utility.yul\":10777:10794   */\n      add\n        /* \"#utility.yul\":10770:10817   */\n      mstore\n        /* \"#utility.yul\":10834:10965   */\n      tag_335\n        /* \"#utility.yul\":10960:10964   */\n      dup2\n        /* \"#utility.yul\":10834:10965   */\n      tag_224\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":10826:10965   */\n      swap1\n      pop\n        /* \"#utility.yul\":10553:10972   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10978:11202   */\n    tag_225:\n        /* \"#utility.yul\":11118:11152   */\n      0x42455032303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":11114:11115   */\n      0x00\n        /* \"#utility.yul\":11106:11112   */\n      dup3\n        /* \"#utility.yul\":11102:11116   */\n      add\n        /* \"#utility.yul\":11095:11153   */\n      mstore\n        /* \"#utility.yul\":11187:11194   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11182:11184   */\n      0x20\n        /* \"#utility.yul\":11174:11180   */\n      dup3\n        /* \"#utility.yul\":11170:11185   */\n      add\n        /* \"#utility.yul\":11163:11195   */\n      mstore\n        /* \"#utility.yul\":10978:11202   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11208:11574   */\n    tag_226:\n        /* \"#utility.yul\":11350:11353   */\n      0x00\n        /* \"#utility.yul\":11371:11438   */\n      tag_338\n        /* \"#utility.yul\":11435:11437   */\n      0x25\n        /* \"#utility.yul\":11430:11433   */\n      dup4\n        /* \"#utility.yul\":11371:11438   */\n      tag_196\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":11364:11438   */\n      swap2\n      pop\n        /* \"#utility.yul\":11447:11540   */\n      tag_339\n        /* \"#utility.yul\":11536:11539   */\n      dup3\n        /* \"#utility.yul\":11447:11540   */\n      tag_225\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":11565:11567   */\n      0x40\n        /* \"#utility.yul\":11560:11563   */\n      dup3\n        /* \"#utility.yul\":11556:11568   */\n      add\n        /* \"#utility.yul\":11549:11568   */\n      swap1\n      pop\n        /* \"#utility.yul\":11208:11574   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11580:11999   */\n    tag_174:\n        /* \"#utility.yul\":11746:11750   */\n      0x00\n        /* \"#utility.yul\":11784:11786   */\n      0x20\n        /* \"#utility.yul\":11773:11782   */\n      dup3\n        /* \"#utility.yul\":11769:11787   */\n      add\n        /* \"#utility.yul\":11761:11787   */\n      swap1\n      pop\n        /* \"#utility.yul\":11833:11842   */\n      dup2\n        /* \"#utility.yul\":11827:11831   */\n      dup2\n        /* \"#utility.yul\":11823:11843   */\n      sub\n        /* \"#utility.yul\":11819:11820   */\n      0x00\n        /* \"#utility.yul\":11808:11817   */\n      dup4\n        /* \"#utility.yul\":11804:11821   */\n      add\n        /* \"#utility.yul\":11797:11844   */\n      mstore\n        /* \"#utility.yul\":11861:11992   */\n      tag_341\n        /* \"#utility.yul\":11987:11991   */\n      dup2\n        /* \"#utility.yul\":11861:11992   */\n      tag_226\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":11853:11992   */\n      swap1\n      pop\n        /* \"#utility.yul\":11580:11999   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12005:12227   */\n    tag_227:\n        /* \"#utility.yul\":12145:12179   */\n      0x42455032303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":12141:12142   */\n      0x00\n        /* \"#utility.yul\":12133:12139   */\n      dup3\n        /* \"#utility.yul\":12129:12143   */\n      add\n        /* \"#utility.yul\":12122:12180   */\n      mstore\n        /* \"#utility.yul\":12214:12219   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12209:12211   */\n      0x20\n        /* \"#utility.yul\":12201:12207   */\n      dup3\n        /* \"#utility.yul\":12197:12212   */\n      add\n        /* \"#utility.yul\":12190:12220   */\n      mstore\n        /* \"#utility.yul\":12005:12227   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12233:12599   */\n    tag_228:\n        /* \"#utility.yul\":12375:12378   */\n      0x00\n        /* \"#utility.yul\":12396:12463   */\n      tag_344\n        /* \"#utility.yul\":12460:12462   */\n      0x23\n        /* \"#utility.yul\":12455:12458   */\n      dup4\n        /* \"#utility.yul\":12396:12463   */\n      tag_196\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":12389:12463   */\n      swap2\n      pop\n        /* \"#utility.yul\":12472:12565   */\n      tag_345\n        /* \"#utility.yul\":12561:12564   */\n      dup3\n        /* \"#utility.yul\":12472:12565   */\n      tag_227\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":12590:12592   */\n      0x40\n        /* \"#utility.yul\":12585:12588   */\n      dup3\n        /* \"#utility.yul\":12581:12593   */\n      add\n        /* \"#utility.yul\":12574:12593   */\n      swap1\n      pop\n        /* \"#utility.yul\":12233:12599   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12605:13024   */\n    tag_177:\n        /* \"#utility.yul\":12771:12775   */\n      0x00\n        /* \"#utility.yul\":12809:12811   */\n      0x20\n        /* \"#utility.yul\":12798:12807   */\n      dup3\n        /* \"#utility.yul\":12794:12812   */\n      add\n        /* \"#utility.yul\":12786:12812   */\n      swap1\n      pop\n        /* \"#utility.yul\":12858:12867   */\n      dup2\n        /* \"#utility.yul\":12852:12856   */\n      dup2\n        /* \"#utility.yul\":12848:12868   */\n      sub\n        /* \"#utility.yul\":12844:12845   */\n      0x00\n        /* \"#utility.yul\":12833:12842   */\n      dup4\n        /* \"#utility.yul\":12829:12846   */\n      add\n        /* \"#utility.yul\":12822:12869   */\n      mstore\n        /* \"#utility.yul\":12886:13017   */\n      tag_347\n        /* \"#utility.yul\":13012:13016   */\n      dup2\n        /* \"#utility.yul\":12886:13017   */\n      tag_228\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":12878:13017   */\n      swap1\n      pop\n        /* \"#utility.yul\":12605:13024   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13030:13210   */\n    tag_229:\n        /* \"#utility.yul\":13078:13155   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13075:13076   */\n      0x00\n        /* \"#utility.yul\":13068:13156   */\n      mstore\n        /* \"#utility.yul\":13175:13179   */\n      0x11\n        /* \"#utility.yul\":13172:13173   */\n      0x04\n        /* \"#utility.yul\":13165:13180   */\n      mstore\n        /* \"#utility.yul\":13199:13203   */\n      0x24\n        /* \"#utility.yul\":13196:13197   */\n      0x00\n        /* \"#utility.yul\":13189:13204   */\n      revert\n        /* \"#utility.yul\":13216:13521   */\n    tag_186:\n        /* \"#utility.yul\":13256:13259   */\n      0x00\n        /* \"#utility.yul\":13275:13295   */\n      tag_350\n        /* \"#utility.yul\":13293:13294   */\n      dup3\n        /* \"#utility.yul\":13275:13295   */\n      tag_207\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":13270:13295   */\n      swap2\n      pop\n        /* \"#utility.yul\":13309:13329   */\n      tag_351\n        /* \"#utility.yul\":13327:13328   */\n      dup4\n        /* \"#utility.yul\":13309:13329   */\n      tag_207\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":13304:13329   */\n      swap3\n      pop\n        /* \"#utility.yul\":13463:13464   */\n      dup3\n        /* \"#utility.yul\":13395:13461   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":13391:13465   */\n      sub\n        /* \"#utility.yul\":13388:13389   */\n      dup3\n        /* \"#utility.yul\":13385:13466   */\n      gt\n        /* \"#utility.yul\":13382:13489   */\n      iszero\n      tag_352\n      jumpi\n        /* \"#utility.yul\":13469:13487   */\n      tag_353\n      tag_229\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":13382:13489   */\n    tag_352:\n        /* \"#utility.yul\":13513:13514   */\n      dup3\n        /* \"#utility.yul\":13510:13511   */\n      dup3\n        /* \"#utility.yul\":13506:13515   */\n      add\n        /* \"#utility.yul\":13499:13515   */\n      swap1\n      pop\n        /* \"#utility.yul\":13216:13521   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13527:13708   */\n    tag_230:\n        /* \"#utility.yul\":13667:13700   */\n      0x42455032303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":13663:13664   */\n      0x00\n        /* \"#utility.yul\":13655:13661   */\n      dup3\n        /* \"#utility.yul\":13651:13665   */\n      add\n        /* \"#utility.yul\":13644:13701   */\n      mstore\n        /* \"#utility.yul\":13527:13708   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13714:14080   */\n    tag_231:\n        /* \"#utility.yul\":13856:13859   */\n      0x00\n        /* \"#utility.yul\":13877:13944   */\n      tag_356\n        /* \"#utility.yul\":13941:13943   */\n      0x1f\n        /* \"#utility.yul\":13936:13939   */\n      dup4\n        /* \"#utility.yul\":13877:13944   */\n      tag_196\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":13870:13944   */\n      swap2\n      pop\n        /* \"#utility.yul\":13953:14046   */\n      tag_357\n        /* \"#utility.yul\":14042:14045   */\n      dup3\n        /* \"#utility.yul\":13953:14046   */\n      tag_230\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":14071:14073   */\n      0x20\n        /* \"#utility.yul\":14066:14069   */\n      dup3\n        /* \"#utility.yul\":14062:14074   */\n      add\n        /* \"#utility.yul\":14055:14074   */\n      swap1\n      pop\n        /* \"#utility.yul\":13714:14080   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14086:14505   */\n    tag_191:\n        /* \"#utility.yul\":14252:14256   */\n      0x00\n        /* \"#utility.yul\":14290:14292   */\n      0x20\n        /* \"#utility.yul\":14279:14288   */\n      dup3\n        /* \"#utility.yul\":14275:14293   */\n      add\n        /* \"#utility.yul\":14267:14293   */\n      swap1\n      pop\n        /* \"#utility.yul\":14339:14348   */\n      dup2\n        /* \"#utility.yul\":14333:14337   */\n      dup2\n        /* \"#utility.yul\":14329:14349   */\n      sub\n        /* \"#utility.yul\":14325:14326   */\n      0x00\n        /* \"#utility.yul\":14314:14323   */\n      dup4\n        /* \"#utility.yul\":14310:14327   */\n      add\n        /* \"#utility.yul\":14303:14350   */\n      mstore\n        /* \"#utility.yul\":14367:14498   */\n      tag_359\n        /* \"#utility.yul\":14493:14497   */\n      dup2\n        /* \"#utility.yul\":14367:14498   */\n      tag_231\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":14359:14498   */\n      swap1\n      pop\n        /* \"#utility.yul\":14086:14505   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n    stop\n    data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e 42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73 42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22 42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa2646970667358221220a0b0b44a932aeb9f89af0c752ce8d2697cad7a4d463610fd4b3167940842c49e64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_54": {
									"entryPoint": null,
									"id": 54,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_647": {
									"entryPoint": null,
									"id": 647,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1348": {
									"entryPoint": 173,
									"id": 1348,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setOwner_726": {
									"entryPoint": 181,
									"id": 726,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 840,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 915,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 966,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 701,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 553,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 732,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 786,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 1146,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 647,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1099,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 600,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 573,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 578,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 568,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 563,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 583,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4093:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:6"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "563:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:12:6"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:54:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "663:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "672:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "621:6:6",
														"type": ""
													}
												],
												"src": "580:102:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "736:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "830:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "833:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "823:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "854:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:238:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:40:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "931:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1096:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:62:6"
															},
															"nodeType": "YulIf",
															"src": "1030:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:22:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:6"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "903:6:6",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "911:4:6",
														"type": ""
													}
												],
												"src": "874:281:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:88:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:20:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:6"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:6"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:6"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1186:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1195:6:6",
														"type": ""
													}
												],
												"src": "1161:129:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1363:241:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1468:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:30:6"
															},
															"nodeType": "YulIf",
															"src": "1434:56:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1500:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:6"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:29:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1574:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:15:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:6"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1347:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1358:4:6",
														"type": ""
													}
												],
												"src": "1296:308:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1659:258:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1669:10:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1678:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1673:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1738:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1763:3:6"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1768:1:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1759:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1759:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1782:3:6"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1787:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1778:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1778:11:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1772:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1772:18:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1752:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1752:39:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1752:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1699:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1702:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1696:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1696:13:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1710:19:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1712:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1721:1:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1724:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1717:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1717:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1712:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1692:3:6",
																"statements": []
															},
															"src": "1688:113:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1835:76:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1885:3:6"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "1890:6:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1881:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1881:16:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1899:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1874:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1874:27:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1874:27:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1816:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1819:6:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1813:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1813:13:6"
															},
															"nodeType": "YulIf",
															"src": "1810:101:6"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1641:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1646:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1651:6:6",
														"type": ""
													}
												],
												"src": "1610:307:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2018:326:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2028:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2095:6:6"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2053:41:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2053:49:6"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2037:15:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2037:66:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2028:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2119:5:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2126:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2112:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2112:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2112:21:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2142:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2157:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2164:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2153:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2153:16:6"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2146:3:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2207:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2209:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2209:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2209:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2188:3:6"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2193:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2184:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2184:16:6"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2202:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2181:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2181:25:6"
															},
															"nodeType": "YulIf",
															"src": "2178:112:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2321:3:6"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2326:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2331:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2299:21:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2299:39:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2299:39:6"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1991:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1996:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2004:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2012:5:6",
														"type": ""
													}
												],
												"src": "1923:421:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2437:282:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2486:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2488:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2488:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2488:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2465:6:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2473:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2461:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2461:17:6"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2480:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2457:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2457:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2450:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2450:35:6"
															},
															"nodeType": "YulIf",
															"src": "2447:122:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2578:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2598:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2592:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2592:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2582:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2614:99:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2686:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2694:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2682:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2682:17:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2701:6:6"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2709:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2623:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2623:90:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2614:5:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2415:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2423:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2431:5:6",
														"type": ""
													}
												],
												"src": "2364:355:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2839:739:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2885:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2887:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2887:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2887:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2869:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2856:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2856:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2881:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2852:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2852:32:6"
															},
															"nodeType": "YulIf",
															"src": "2849:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "2978:291:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2993:38:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3017:9:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3028:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3013:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3013:17:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3007:5:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3007:24:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2997:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3078:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3080:77:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3080:79:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3080:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3050:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3058:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3047:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3047:30:6"
																	},
																	"nodeType": "YulIf",
																	"src": "3044:117:6"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3175:84:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3231:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3242:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3227:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3227:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3251:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3185:41:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3185:74:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3175:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3279:292:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3294:39:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3318:9:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3329:2:6",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3314:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3314:18:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3308:5:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3308:25:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3298:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3380:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3382:77:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3382:79:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3382:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3352:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3360:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3349:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3349:30:6"
																	},
																	"nodeType": "YulIf",
																	"src": "3346:117:6"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3477:84:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3533:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3544:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3529:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3529:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3553:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3487:41:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3487:74:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3477:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2801:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2812:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2824:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2832:6:6",
														"type": ""
													}
												],
												"src": "2725:853:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3612:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3629:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3632:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3622:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3622:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3622:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3726:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3729:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3719:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3719:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3719:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3750:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3753:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3743:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3743:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3743:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3584:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3821:269:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3831:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3845:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3851:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3841:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3841:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3831:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3862:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3892:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3898:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3888:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3888:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3866:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3939:51:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3953:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "3967:6:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3975:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "3963:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3963:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3953:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3919:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3912:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3912:26:6"
															},
															"nodeType": "YulIf",
															"src": "3909:81:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4042:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "4056:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4056:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4056:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4006:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4029:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4037:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4026:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4026:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4003:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4003:38:6"
															},
															"nodeType": "YulIf",
															"src": "4000:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3805:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3814:6:6",
														"type": ""
													}
												],
												"src": "3770:320:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162001eae38038062001eae8339818101604052810190620000379190620003c6565b620000576200004b620000ad60201b60201c565b620000b560201b60201c565b81600690805190602001906200006f92919062000179565b5080600590805190602001906200008892919062000179565b506012600460006101000a81548160ff021916908360ff1602179055505050620004af565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b82805462000187906200047a565b90600052602060002090601f016020900481019282620001ab5760008555620001f7565b82601f10620001c657805160ff1916838001178555620001f7565b82800160010185558215620001f7579182015b82811115620001f6578251825591602001919060010190620001d9565b5b5090506200020691906200020a565b5090565b5b80821115620002255760008160009055506001016200020b565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620002928262000247565b810181811067ffffffffffffffff82111715620002b457620002b362000258565b5b80604052505050565b6000620002c962000229565b9050620002d7828262000287565b919050565b600067ffffffffffffffff821115620002fa57620002f962000258565b5b620003058262000247565b9050602081019050919050565b60005b838110156200033257808201518184015260208101905062000315565b8381111562000342576000848401525b50505050565b60006200035f6200035984620002dc565b620002bd565b9050828152602081018484840111156200037e576200037d62000242565b5b6200038b84828562000312565b509392505050565b600082601f830112620003ab57620003aa6200023d565b5b8151620003bd84826020860162000348565b91505092915050565b60008060408385031215620003e057620003df62000233565b5b600083015167ffffffffffffffff81111562000401576200040062000238565b5b6200040f8582860162000393565b925050602083015167ffffffffffffffff81111562000433576200043262000238565b5b620004418582860162000393565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200049357607f821691505b602082108103620004a957620004a86200044b565b5b50919050565b6119ef80620004bf6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063893d20e811610097578063a457c2d711610066578063a457c2d7146102b3578063a9059cbb146102e3578063dd62ed3e14610313578063f2fde38b1461034357610100565b8063893d20e8146102295780638da5cb5b1461024757806395d89b4114610265578063a0712d681461028357610100565b8063313ce567116100d3578063313ce567146101a157806339509351146101bf57806370a08231146101ef578063715018a61461021f57610100565b806306fdde0314610105578063095ea7b31461012357806318160ddd1461015357806323b872dd14610171575b600080fd5b61010d61035f565b60405161011a9190611206565b60405180910390f35b61013d600480360381019061013891906112c1565b6103f1565b60405161014a919061131c565b60405180910390f35b61015b61040f565b6040516101689190611346565b60405180910390f35b61018b60048036038101906101869190611361565b610419565b604051610198919061131c565b60405180910390f35b6101a96104f2565b6040516101b691906113d0565b60405180910390f35b6101d960048036038101906101d491906112c1565b610509565b6040516101e6919061131c565b60405180910390f35b610209600480360381019061020491906113eb565b6105bc565b6040516102169190611346565b60405180910390f35b610227610605565b005b61023161068d565b60405161023e9190611427565b60405180910390f35b61024f61069c565b60405161025c9190611427565b60405180910390f35b61026d6106c5565b60405161027a9190611206565b60405180910390f35b61029d60048036038101906102989190611442565b610757565b6040516102aa919061131c565b60405180910390f35b6102cd60048036038101906102c891906112c1565b6107ef565b6040516102da919061131c565b60405180910390f35b6102fd60048036038101906102f891906112c1565b6108bc565b60405161030a919061131c565b60405180910390f35b61032d6004803603810190610328919061146f565b6108da565b60405161033a9190611346565b60405180910390f35b61035d600480360381019061035891906113eb565b610961565b005b60606006805461036e906114de565b80601f016020809104026020016040519081016040528092919081815260200182805461039a906114de565b80156103e75780601f106103bc576101008083540402835291602001916103e7565b820191906000526020600020905b8154815290600101906020018083116103ca57829003601f168201915b5050505050905090565b60006104056103fe610a58565b8484610a60565b6001905092915050565b6000600354905090565b6000610426848484610c29565b6104e784610432610a58565b6104e28560405180606001604052806028815260200161194760289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610498610a58565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610eb59092919063ffffffff16565b610a60565b600190509392505050565b6000600460009054906101000a900460ff16905090565b60006105b2610516610a58565b846105ad8560026000610527610a58565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f0a90919063ffffffff16565b610a60565b6001905092915050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61060d610a58565b73ffffffffffffffffffffffffffffffffffffffff1661062b61069c565b73ffffffffffffffffffffffffffffffffffffffff1614610681576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106789061155b565b60405180910390fd5b61068b6000610f20565b565b600061069761069c565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600580546106d4906114de565b80601f0160208091040260200160405190810160405280929190818152602001828054610700906114de565b801561074d5780601f106107225761010080835404028352916020019161074d565b820191906000526020600020905b81548152906001019060200180831161073057829003601f168201915b5050505050905090565b6000610761610a58565b73ffffffffffffffffffffffffffffffffffffffff1661077f61069c565b73ffffffffffffffffffffffffffffffffffffffff16146107d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107cc9061155b565b60405180910390fd5b6107e66107e0610a58565b83610fe4565b60019050919050565b60006108b26107fc610a58565b846108ad856040518060600160405280602581526020016119956025913960026000610826610a58565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610eb59092919063ffffffff16565b610a60565b6001905092915050565b60006108d06108c9610a58565b8484610c29565b6001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610969610a58565b73ffffffffffffffffffffffffffffffffffffffff1661098761069c565b73ffffffffffffffffffffffffffffffffffffffff16146109dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d49061155b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a43906115ed565b60405180910390fd5b610a5581610f20565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610acf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac69061167f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b3e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3590611711565b60405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610c1c9190611346565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8f906117a3565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d07576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cfe90611835565b60405180910390fd5b610d738160405180606001604052806026815260200161196f60269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610eb59092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610e0881600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f0a90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610ea89190611346565b60405180910390a3505050565b6000838311158290610efd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef49190611206565b60405180910390fd5b5082840390509392505050565b60008183610f189190611884565b905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611053576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104a90611926565b60405180910390fd5b61106881600354610f0a90919063ffffffff16565b6003819055506110c081600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f0a90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516111619190611346565b60405180910390a35050565b600081519050919050565b600082825260208201905092915050565b60005b838110156111a757808201518184015260208101905061118c565b838111156111b6576000848401525b50505050565b6000601f19601f8301169050919050565b60006111d88261116d565b6111e28185611178565b93506111f2818560208601611189565b6111fb816111bc565b840191505092915050565b6000602082019050818103600083015261122081846111cd565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006112588261122d565b9050919050565b6112688161124d565b811461127357600080fd5b50565b6000813590506112858161125f565b92915050565b6000819050919050565b61129e8161128b565b81146112a957600080fd5b50565b6000813590506112bb81611295565b92915050565b600080604083850312156112d8576112d7611228565b5b60006112e685828601611276565b92505060206112f7858286016112ac565b9150509250929050565b60008115159050919050565b61131681611301565b82525050565b6000602082019050611331600083018461130d565b92915050565b6113408161128b565b82525050565b600060208201905061135b6000830184611337565b92915050565b60008060006060848603121561137a57611379611228565b5b600061138886828701611276565b935050602061139986828701611276565b92505060406113aa868287016112ac565b9150509250925092565b600060ff82169050919050565b6113ca816113b4565b82525050565b60006020820190506113e560008301846113c1565b92915050565b60006020828403121561140157611400611228565b5b600061140f84828501611276565b91505092915050565b6114218161124d565b82525050565b600060208201905061143c6000830184611418565b92915050565b60006020828403121561145857611457611228565b5b6000611466848285016112ac565b91505092915050565b6000806040838503121561148657611485611228565b5b600061149485828601611276565b92505060206114a585828601611276565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806114f657607f821691505b602082108103611509576115086114af565b5b50919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611545602083611178565b91506115508261150f565b602082019050919050565b6000602082019050818103600083015261157481611538565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006115d7602683611178565b91506115e28261157b565b604082019050919050565b60006020820190508181036000830152611606816115ca565b9050919050565b7f42455032303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611669602483611178565b91506116748261160d565b604082019050919050565b600060208201905081810360008301526116988161165c565b9050919050565b7f42455032303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006116fb602283611178565b91506117068261169f565b604082019050919050565b6000602082019050818103600083015261172a816116ee565b9050919050565b7f42455032303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061178d602583611178565b915061179882611731565b604082019050919050565b600060208201905081810360008301526117bc81611780565b9050919050565b7f42455032303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b600061181f602383611178565b915061182a826117c3565b604082019050919050565b6000602082019050818103600083015261184e81611812565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061188f8261128b565b915061189a8361128b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156118cf576118ce611855565b5b828201905092915050565b7f42455032303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611910601f83611178565b915061191b826118da565b602082019050919050565b6000602082019050818103600083015261193f81611903565b905091905056fe42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220a0b0b44a932aeb9f89af0c752ce8d2697cad7a4d463610fd4b3167940842c49e64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1EAE CODESIZE SUB DUP1 PUSH3 0x1EAE DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x3C6 JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0xAD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xB5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 PUSH1 0x6 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x6F SWAP3 SWAP2 SWAP1 PUSH3 0x179 JUMP JUMPDEST POP DUP1 PUSH1 0x5 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x88 SWAP3 SWAP2 SWAP1 PUSH3 0x179 JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x4AF JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x187 SWAP1 PUSH3 0x47A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x1AB JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x1F7 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x1C6 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x1F7 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x1F7 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x1F6 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x1D9 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x206 SWAP2 SWAP1 PUSH3 0x20A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x225 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x20B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x292 DUP3 PUSH3 0x247 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x2B4 JUMPI PUSH3 0x2B3 PUSH3 0x258 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2C9 PUSH3 0x229 JUMP JUMPDEST SWAP1 POP PUSH3 0x2D7 DUP3 DUP3 PUSH3 0x287 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x2FA JUMPI PUSH3 0x2F9 PUSH3 0x258 JUMP JUMPDEST JUMPDEST PUSH3 0x305 DUP3 PUSH3 0x247 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x332 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x315 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x342 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x35F PUSH3 0x359 DUP5 PUSH3 0x2DC JUMP JUMPDEST PUSH3 0x2BD JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x37E JUMPI PUSH3 0x37D PUSH3 0x242 JUMP JUMPDEST JUMPDEST PUSH3 0x38B DUP5 DUP3 DUP6 PUSH3 0x312 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x3AB JUMPI PUSH3 0x3AA PUSH3 0x23D JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x3BD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x348 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x3E0 JUMPI PUSH3 0x3DF PUSH3 0x233 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x401 JUMPI PUSH3 0x400 PUSH3 0x238 JUMP JUMPDEST JUMPDEST PUSH3 0x40F DUP6 DUP3 DUP7 ADD PUSH3 0x393 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x433 JUMPI PUSH3 0x432 PUSH3 0x238 JUMP JUMPDEST JUMPDEST PUSH3 0x441 DUP6 DUP3 DUP7 ADD PUSH3 0x393 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x493 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x4A9 JUMPI PUSH3 0x4A8 PUSH3 0x44B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19EF DUP1 PUSH3 0x4BF PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x343 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x283 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x21F JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x171 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x35F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x1206 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x12C1 JUMP JUMPDEST PUSH2 0x3F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x131C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH2 0x40F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x1346 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x1361 JUMP JUMPDEST PUSH2 0x419 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x131C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A9 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x13D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x12C1 JUMP JUMPDEST PUSH2 0x509 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x131C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x13EB JUMP JUMPDEST PUSH2 0x5BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x1346 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x227 PUSH2 0x605 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x231 PUSH2 0x68D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x1427 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH2 0x69C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x1427 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26D PUSH2 0x6C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x1206 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x1442 JUMP JUMPDEST PUSH2 0x757 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0x131C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x12C1 JUMP JUMPDEST PUSH2 0x7EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x131C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0x12C1 JUMP JUMPDEST PUSH2 0x8BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30A SWAP2 SWAP1 PUSH2 0x131C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x146F JUMP JUMPDEST PUSH2 0x8DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x1346 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x13EB JUMP JUMPDEST PUSH2 0x961 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x36E SWAP1 PUSH2 0x14DE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x39A SWAP1 PUSH2 0x14DE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3BC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3E7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3CA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x405 PUSH2 0x3FE PUSH2 0xA58 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xA60 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x426 DUP5 DUP5 DUP5 PUSH2 0xC29 JUMP JUMPDEST PUSH2 0x4E7 DUP5 PUSH2 0x432 PUSH2 0xA58 JUMP JUMPDEST PUSH2 0x4E2 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1947 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x498 PUSH2 0xA58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xEB5 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xA60 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B2 PUSH2 0x516 PUSH2 0xA58 JUMP JUMPDEST DUP5 PUSH2 0x5AD DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x527 PUSH2 0xA58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF0A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xA60 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x60D PUSH2 0xA58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x62B PUSH2 0x69C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x681 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x678 SWAP1 PUSH2 0x155B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x68B PUSH1 0x0 PUSH2 0xF20 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x697 PUSH2 0x69C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x6D4 SWAP1 PUSH2 0x14DE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x700 SWAP1 PUSH2 0x14DE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x74D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x722 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x74D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x730 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x761 PUSH2 0xA58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x77F PUSH2 0x69C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CC SWAP1 PUSH2 0x155B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7E6 PUSH2 0x7E0 PUSH2 0xA58 JUMP JUMPDEST DUP4 PUSH2 0xFE4 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8B2 PUSH2 0x7FC PUSH2 0xA58 JUMP JUMPDEST DUP5 PUSH2 0x8AD DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1995 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0x826 PUSH2 0xA58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xEB5 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xA60 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8D0 PUSH2 0x8C9 PUSH2 0xA58 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xC29 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x969 PUSH2 0xA58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x987 PUSH2 0x69C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D4 SWAP1 PUSH2 0x155B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA4C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA43 SWAP1 PUSH2 0x15ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA55 DUP2 PUSH2 0xF20 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xACF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC6 SWAP1 PUSH2 0x167F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB3E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB35 SWAP1 PUSH2 0x1711 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC1C SWAP2 SWAP1 PUSH2 0x1346 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC98 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC8F SWAP1 PUSH2 0x17A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD07 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCFE SWAP1 PUSH2 0x1835 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD73 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x196F PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xEB5 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xE08 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF0A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xEA8 SWAP2 SWAP1 PUSH2 0x1346 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xEFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF4 SWAP2 SWAP1 PUSH2 0x1206 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 SUB SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xF18 SWAP2 SWAP1 PUSH2 0x1884 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1053 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104A SWAP1 PUSH2 0x1926 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1068 DUP2 PUSH1 0x3 SLOAD PUSH2 0xF0A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x10C0 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF0A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1161 SWAP2 SWAP1 PUSH2 0x1346 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11A7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x118C JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x11B6 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11D8 DUP3 PUSH2 0x116D JUMP JUMPDEST PUSH2 0x11E2 DUP2 DUP6 PUSH2 0x1178 JUMP JUMPDEST SWAP4 POP PUSH2 0x11F2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1189 JUMP JUMPDEST PUSH2 0x11FB DUP2 PUSH2 0x11BC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1220 DUP2 DUP5 PUSH2 0x11CD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1258 DUP3 PUSH2 0x122D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1268 DUP2 PUSH2 0x124D JUMP JUMPDEST DUP2 EQ PUSH2 0x1273 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1285 DUP2 PUSH2 0x125F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x129E DUP2 PUSH2 0x128B JUMP JUMPDEST DUP2 EQ PUSH2 0x12A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12BB DUP2 PUSH2 0x1295 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12D8 JUMPI PUSH2 0x12D7 PUSH2 0x1228 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12E6 DUP6 DUP3 DUP7 ADD PUSH2 0x1276 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12F7 DUP6 DUP3 DUP7 ADD PUSH2 0x12AC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1316 DUP2 PUSH2 0x1301 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1331 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x130D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1340 DUP2 PUSH2 0x128B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x135B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1337 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x137A JUMPI PUSH2 0x1379 PUSH2 0x1228 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1388 DUP7 DUP3 DUP8 ADD PUSH2 0x1276 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1399 DUP7 DUP3 DUP8 ADD PUSH2 0x1276 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x13AA DUP7 DUP3 DUP8 ADD PUSH2 0x12AC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13CA DUP2 PUSH2 0x13B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13E5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1401 JUMPI PUSH2 0x1400 PUSH2 0x1228 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x140F DUP5 DUP3 DUP6 ADD PUSH2 0x1276 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1421 DUP2 PUSH2 0x124D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x143C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1418 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1458 JUMPI PUSH2 0x1457 PUSH2 0x1228 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1466 DUP5 DUP3 DUP6 ADD PUSH2 0x12AC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1486 JUMPI PUSH2 0x1485 PUSH2 0x1228 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1494 DUP6 DUP3 DUP7 ADD PUSH2 0x1276 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14A5 DUP6 DUP3 DUP7 ADD PUSH2 0x1276 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x14F6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1509 JUMPI PUSH2 0x1508 PUSH2 0x14AF JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1545 PUSH1 0x20 DUP4 PUSH2 0x1178 JUMP JUMPDEST SWAP2 POP PUSH2 0x1550 DUP3 PUSH2 0x150F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1574 DUP2 PUSH2 0x1538 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15D7 PUSH1 0x26 DUP4 PUSH2 0x1178 JUMP JUMPDEST SWAP2 POP PUSH2 0x15E2 DUP3 PUSH2 0x157B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1606 DUP2 PUSH2 0x15CA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1669 PUSH1 0x24 DUP4 PUSH2 0x1178 JUMP JUMPDEST SWAP2 POP PUSH2 0x1674 DUP3 PUSH2 0x160D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1698 DUP2 PUSH2 0x165C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16FB PUSH1 0x22 DUP4 PUSH2 0x1178 JUMP JUMPDEST SWAP2 POP PUSH2 0x1706 DUP3 PUSH2 0x169F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x172A DUP2 PUSH2 0x16EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x178D PUSH1 0x25 DUP4 PUSH2 0x1178 JUMP JUMPDEST SWAP2 POP PUSH2 0x1798 DUP3 PUSH2 0x1731 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17BC DUP2 PUSH2 0x1780 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x181F PUSH1 0x23 DUP4 PUSH2 0x1178 JUMP JUMPDEST SWAP2 POP PUSH2 0x182A DUP3 PUSH2 0x17C3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x184E DUP2 PUSH2 0x1812 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x188F DUP3 PUSH2 0x128B JUMP JUMPDEST SWAP2 POP PUSH2 0x189A DUP4 PUSH2 0x128B JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x18CF JUMPI PUSH2 0x18CE PUSH2 0x1855 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1910 PUSH1 0x1F DUP4 PUSH2 0x1178 JUMP JUMPDEST SWAP2 POP PUSH2 0x191B DUP3 PUSH2 0x18DA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x193F DUP2 PUSH2 0x1903 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636542455032303A20747261 PUSH15 0x7366657220616D6F756E7420657863 PUSH6 0x656473206261 PUSH13 0x616E636542455032303A206465 PUSH4 0x72656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726FA26469706673582212 KECCAK256 LOG0 0xB0 0xB4 0x4A SWAP4 0x2A 0xEB SWAP16 DUP10 0xAF 0xC PUSH22 0x2CE8D2697CAD7A4D463610FD4B3167940842C49E6473 PUSH16 0x6C634300080D00330000000000000000 ",
							"sourceMap": "192:9332:0:-:0;;;878:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;894:23:2;904:12;:10;;;:12;;:::i;:::-;894:9;;;:23;;:::i;:::-;961:9:0;953:5;:17;;;;;;;;;;;;:::i;:::-;;991:11;981:7;:21;;;;;;;;;;;;:::i;:::-;;1025:2;1013:9;;:14;;;;;;;;;;;;;;;;;;878:157;;192:9332;;602:98:5;655:7;682:10;675:17;;602:98;:::o;2106:173:2:-;2162:16;2181:6;;;;;;;;;;;2162:25;;2207:8;2198:6;;:17;;;;;;;;;;;;;;;;;;2262:8;2231:40;;2252:8;2231:40;;;;;;;;;;;;2151:128;2106:173;:::o;192:9332:0:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:6:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:307::-;1678:1;1688:113;1702:6;1699:1;1696:13;1688:113;;;1787:1;1782:3;1778:11;1772:18;1768:1;1763:3;1759:11;1752:39;1724:2;1721:1;1717:10;1712:15;;1688:113;;;1819:6;1816:1;1813:13;1810:101;;;1899:1;1890:6;1885:3;1881:16;1874:27;1810:101;1659:258;1610:307;;;:::o;1923:421::-;2012:5;2037:66;2053:49;2095:6;2053:49;:::i;:::-;2037:66;:::i;:::-;2028:75;;2126:6;2119:5;2112:21;2164:4;2157:5;2153:16;2202:3;2193:6;2188:3;2184:16;2181:25;2178:112;;;2209:79;;:::i;:::-;2178:112;2299:39;2331:6;2326:3;2321;2299:39;:::i;:::-;2018:326;1923:421;;;;;:::o;2364:355::-;2431:5;2480:3;2473:4;2465:6;2461:17;2457:27;2447:122;;2488:79;;:::i;:::-;2447:122;2598:6;2592:13;2623:90;2709:3;2701:6;2694:4;2686:6;2682:17;2623:90;:::i;:::-;2614:99;;2437:282;2364:355;;;;:::o;2725:853::-;2824:6;2832;2881:2;2869:9;2860:7;2856:23;2852:32;2849:119;;;2887:79;;:::i;:::-;2849:119;3028:1;3017:9;3013:17;3007:24;3058:18;3050:6;3047:30;3044:117;;;3080:79;;:::i;:::-;3044:117;3185:74;3251:7;3242:6;3231:9;3227:22;3185:74;:::i;:::-;3175:84;;2978:291;3329:2;3318:9;3314:18;3308:25;3360:18;3352:6;3349:30;3346:117;;;3382:79;;:::i;:::-;3346:117;3487:74;3553:7;3544:6;3533:9;3529:22;3487:74;:::i;:::-;3477:84;;3279:292;2725:853;;;;;:::o;3584:180::-;3632:77;3629:1;3622:88;3729:4;3726:1;3719:15;3753:4;3750:1;3743:15;3770:320;3814:6;3851:1;3845:4;3841:12;3831:22;;3898:1;3892:4;3888:12;3919:18;3909:81;;3975:4;3967:6;3963:17;3953:27;;3909:81;4037:2;4029:6;4026:14;4006:18;4003:38;4000:84;;4056:18;;:::i;:::-;4000:84;3821:269;3770:320;;;:::o;192:9332:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_491": {
									"entryPoint": 2656,
									"id": 491,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_399": {
									"entryPoint": 4068,
									"id": 399,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1348": {
									"entryPoint": 2648,
									"id": 1348,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setOwner_726": {
									"entryPoint": 3872,
									"id": 726,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_353": {
									"entryPoint": 3113,
									"id": 353,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@add_903": {
									"entryPoint": 3850,
									"id": 903,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_158": {
									"entryPoint": 2266,
									"id": 158,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_179": {
									"entryPoint": 1009,
									"id": 179,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_119": {
									"entryPoint": 1468,
									"id": 119,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_85": {
									"entryPoint": 1266,
									"id": 85,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_274": {
									"entryPoint": 2031,
									"id": 274,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getOwner_65": {
									"entryPoint": 1677,
									"id": 65,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@increaseAllowance_245": {
									"entryPoint": 1289,
									"id": 245,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_293": {
									"entryPoint": 1879,
									"id": 293,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_75": {
									"entryPoint": 863,
									"id": 75,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_656": {
									"entryPoint": 1692,
									"id": 656,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_684": {
									"entryPoint": 1541,
									"id": 684,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_988": {
									"entryPoint": 3765,
									"id": 988,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@symbol_95": {
									"entryPoint": 1733,
									"id": 95,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_105": {
									"entryPoint": 1039,
									"id": 105,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_217": {
									"entryPoint": 1049,
									"id": 217,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_707": {
									"entryPoint": 2401,
									"id": 707,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_140": {
									"entryPoint": 2236,
									"id": 140,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4726,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4780,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5099,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5231,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4961,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4801,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5186,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5144,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4877,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4557,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6016,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5724,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6403,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5432,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6162,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5870,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4919,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5057,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5159,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4892,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4614,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6051,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5759,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5613,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6438,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5467,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6197,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5905,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4934,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5072,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4461,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4472,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6276,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4685,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4865,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4653,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4747,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5044,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 4489,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5342,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6229,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5295,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4648,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4540,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57": {
									"entryPoint": 5937,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4": {
									"entryPoint": 5645,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 5499,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3": {
									"entryPoint": 6362,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 5391,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2": {
									"entryPoint": 6083,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5": {
									"entryPoint": 5791,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4703,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4757,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:14508:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:6",
														"type": ""
													}
												],
												"src": "7:99:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:6",
														"type": ""
													}
												],
												"src": "112:169:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "336:258:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "346:10:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "355:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "350:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "415:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "440:3:6"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "445:1:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "436:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "436:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "459:3:6"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "464:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "455:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "455:11:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "449:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:18:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "429:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "429:39:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "429:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "376:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "379:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "373:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "373:13:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "387:19:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "389:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "398:1:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "401:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "394:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "394:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "389:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "369:3:6",
																"statements": []
															},
															"src": "365:113:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "512:76:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "562:3:6"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "567:6:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "558:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "558:16:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "576:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "551:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "551:27:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "551:27:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "493:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "496:6:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "490:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "490:13:6"
															},
															"nodeType": "YulIf",
															"src": "487:101:6"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "318:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "323:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "328:6:6",
														"type": ""
													}
												],
												"src": "287:307:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "648:54:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "658:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "676:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "683:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "672:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "672:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "692:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "688:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "688:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "668:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "668:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "658:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "631:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "641:6:6",
														"type": ""
													}
												],
												"src": "600:102:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "800:272:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "810:53:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "857:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "824:32:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "824:39:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "814:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "872:78:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "938:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "943:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "879:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "879:71:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "985:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "992:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "981:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "981:16:6"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "999:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1004:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "959:21:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "959:52:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "959:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1020:46:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1031:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1058:6:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "1036:21:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:29:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1027:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1027:39:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1020:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "781:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "788:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "796:3:6",
														"type": ""
													}
												],
												"src": "708:364:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1196:195:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1206:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1218:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1229:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1214:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1214:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1206:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1253:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1264:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1249:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1249:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1272:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1278:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1268:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1242:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1242:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1242:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1298:86:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1370:6:6"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1379:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1306:63:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1306:78:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1298:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1168:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1180:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1191:4:6",
														"type": ""
													}
												],
												"src": "1078:313:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1437:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1447:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1463:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1457:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1457:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1447:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1430:6:6",
														"type": ""
													}
												],
												"src": "1397:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1567:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1584:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1587:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1577:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1577:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1577:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1478:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1690:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1707:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1710:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1700:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1700:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1700:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1601:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1769:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1779:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1794:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1801:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1790:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1790:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1779:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1751:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1761:7:6",
														"type": ""
													}
												],
												"src": "1724:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1901:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1911:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1940:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1922:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1922:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1911:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1883:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1893:7:6",
														"type": ""
													}
												],
												"src": "1856:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2001:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2058:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2067:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2070:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2060:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2060:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2060:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2024:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2049:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2031:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2031:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2021:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2021:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2014:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2014:43:6"
															},
															"nodeType": "YulIf",
															"src": "2011:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1994:5:6",
														"type": ""
													}
												],
												"src": "1958:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2138:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2148:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2170:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2157:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2157:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2148:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2213:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2186:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2186:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2186:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2116:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2124:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2132:5:6",
														"type": ""
													}
												],
												"src": "2086:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2276:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2286:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2297:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2286:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2258:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2268:7:6",
														"type": ""
													}
												],
												"src": "2231:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2357:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2414:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2423:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2426:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2416:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2416:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2416:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2380:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2405:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2387:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2387:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2377:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2377:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2370:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2370:43:6"
															},
															"nodeType": "YulIf",
															"src": "2367:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2350:5:6",
														"type": ""
													}
												],
												"src": "2314:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2494:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2504:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2526:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2513:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2513:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2504:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2569:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2542:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2542:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2542:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2472:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2480:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2488:5:6",
														"type": ""
													}
												],
												"src": "2442:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2670:391:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2716:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2718:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2718:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2718:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2691:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2700:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2687:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2687:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2712:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2683:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2683:32:6"
															},
															"nodeType": "YulIf",
															"src": "2680:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "2809:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2824:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2838:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2828:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2853:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2888:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2899:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2884:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2884:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2908:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2863:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2863:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2853:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2936:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2951:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2965:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2955:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2981:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3016:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3027:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3012:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3012:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3036:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2991:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2991:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2981:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2632:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2643:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2655:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2663:6:6",
														"type": ""
													}
												],
												"src": "2587:474:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3109:48:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3119:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3144:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3137:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3137:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3130:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3130:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3119:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3091:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3101:7:6",
														"type": ""
													}
												],
												"src": "3067:90:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3222:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3239:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3259:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3244:14:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3244:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3232:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3232:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3232:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3210:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3217:3:6",
														"type": ""
													}
												],
												"src": "3163:109:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3370:118:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3380:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3392:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3403:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3388:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3388:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3380:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3454:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3467:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3478:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3463:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3463:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3416:37:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3416:65:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3416:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3342:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3354:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3365:4:6",
														"type": ""
													}
												],
												"src": "3278:210:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3559:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3576:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3599:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3581:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3581:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3569:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3569:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3569:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3547:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3554:3:6",
														"type": ""
													}
												],
												"src": "3494:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3716:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3726:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3738:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3749:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3734:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3734:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3726:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3806:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3819:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3830:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3815:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3815:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3762:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3762:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3762:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3688:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3700:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3711:4:6",
														"type": ""
													}
												],
												"src": "3618:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3946:519:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3992:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3994:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3994:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3994:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3967:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3976:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3963:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3963:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3988:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3959:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3959:32:6"
															},
															"nodeType": "YulIf",
															"src": "3956:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "4085:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4100:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4114:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4104:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4129:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4164:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4175:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4160:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4160:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4184:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4139:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4139:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4129:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4212:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4227:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4241:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4231:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4257:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4292:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4303:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4288:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4288:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4312:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4267:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4267:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4257:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4340:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4355:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4369:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4359:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4385:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4420:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4431:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4416:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4416:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4440:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4395:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4395:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4385:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3900:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3911:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3923:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3931:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3939:6:6",
														"type": ""
													}
												],
												"src": "3846:619:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4514:43:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4524:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4539:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4546:4:6",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4535:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4535:16:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4524:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4496:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4506:7:6",
														"type": ""
													}
												],
												"src": "4471:86:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4624:51:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4641:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4662:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "4646:15:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4646:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4634:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4634:35:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4634:35:6"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4612:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4619:3:6",
														"type": ""
													}
												],
												"src": "4563:112:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4775:120:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4785:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4797:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4808:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4793:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4793:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4785:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4861:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4874:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4885:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4870:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4870:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4821:39:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4821:67:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4821:67:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4747:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4759:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4770:4:6",
														"type": ""
													}
												],
												"src": "4681:214:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4967:263:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5013:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5015:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5015:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5015:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4988:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4997:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4984:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4984:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5009:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4980:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4980:32:6"
															},
															"nodeType": "YulIf",
															"src": "4977:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "5106:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5121:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5135:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5125:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5150:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5185:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5196:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5181:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5181:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5205:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5160:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5160:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5150:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4937:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4948:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4960:6:6",
														"type": ""
													}
												],
												"src": "4901:329:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5301:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5318:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5341:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5323:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5323:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5311:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5311:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5311:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5289:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5296:3:6",
														"type": ""
													}
												],
												"src": "5236:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5458:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5468:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5480:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5491:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5476:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5476:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5468:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5548:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5561:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5572:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5557:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5557:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5504:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5504:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5504:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5430:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5442:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5453:4:6",
														"type": ""
													}
												],
												"src": "5360:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5654:263:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5700:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5702:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5702:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5702:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5675:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5684:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5671:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5671:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5696:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5667:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5667:32:6"
															},
															"nodeType": "YulIf",
															"src": "5664:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "5793:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5808:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5822:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5812:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5837:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5872:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5883:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5868:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5868:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5892:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5847:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5847:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5837:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5624:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5635:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5647:6:6",
														"type": ""
													}
												],
												"src": "5588:329:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6006:391:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6052:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6054:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6054:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6054:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6027:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6036:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6023:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6023:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6048:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6019:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6019:32:6"
															},
															"nodeType": "YulIf",
															"src": "6016:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "6145:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6160:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6174:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6164:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6189:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6224:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6235:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6220:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6220:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6244:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6199:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6199:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6189:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6272:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6287:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6301:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6291:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6317:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6352:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6363:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6348:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6348:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6372:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6327:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6327:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6317:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5968:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5979:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5991:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5999:6:6",
														"type": ""
													}
												],
												"src": "5923:474:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6431:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6448:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6451:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6441:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6441:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6441:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6545:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6548:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6538:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6538:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6538:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6569:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6572:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6562:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6562:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6562:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "6403:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6640:269:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6650:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6664:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6670:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "6660:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6660:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6650:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6681:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6711:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6717:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6707:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6707:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "6685:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6758:51:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6772:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "6786:6:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6794:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6782:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6782:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6772:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6738:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6731:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6731:26:6"
															},
															"nodeType": "YulIf",
															"src": "6728:81:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6861:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "6875:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6875:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6875:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6825:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6848:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6856:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6845:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6845:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6822:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6822:38:6"
															},
															"nodeType": "YulIf",
															"src": "6819:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6624:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6633:6:6",
														"type": ""
													}
												],
												"src": "6589:320:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7021:76:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7043:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7051:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7039:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7039:14:6"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7055:34:6",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7032:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7032:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7032:58:6"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7013:6:6",
														"type": ""
													}
												],
												"src": "6915:182:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7249:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7259:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7325:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7330:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7266:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7266:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7259:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7431:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "7342:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7342:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7342:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7444:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7455:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7460:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7451:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7451:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7444:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7237:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7245:3:6",
														"type": ""
													}
												],
												"src": "7103:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7646:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7656:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7668:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7679:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7664:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7664:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7656:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7703:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7714:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7699:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7699:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7722:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7728:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7718:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7718:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7692:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7692:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7692:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7748:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7882:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7756:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7756:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7748:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7626:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7641:4:6",
														"type": ""
													}
												],
												"src": "7475:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8006:119:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8028:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8036:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8024:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8024:14:6"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8040:34:6",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8017:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8017:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8017:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8096:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8104:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8092:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8092:15:6"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8109:8:6",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8085:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8085:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8085:33:6"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7998:6:6",
														"type": ""
													}
												],
												"src": "7900:225:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8277:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8287:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8353:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8358:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8294:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8294:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8287:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8459:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "8370:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8370:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8370:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8472:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8483:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8488:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8479:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8479:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8472:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8265:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8273:3:6",
														"type": ""
													}
												],
												"src": "8131:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8674:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8684:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8696:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8707:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8692:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8692:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8684:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8731:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8742:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8727:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8727:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8750:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8756:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8746:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8746:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8720:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8720:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8720:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8776:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8910:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8784:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8784:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8776:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8654:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8669:4:6",
														"type": ""
													}
												],
												"src": "8503:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9034:117:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9056:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9064:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9052:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9052:14:6"
																	},
																	{
																		"hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9068:34:6",
																		"type": "",
																		"value": "BEP20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9045:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9045:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9045:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9124:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9132:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9120:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9120:15:6"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9137:6:6",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9113:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9113:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9113:31:6"
														}
													]
												},
												"name": "store_literal_in_memory_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9026:6:6",
														"type": ""
													}
												],
												"src": "8928:223:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9303:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9313:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9379:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9384:2:6",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9320:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9320:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9313:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9485:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																	"nodeType": "YulIdentifier",
																	"src": "9396:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9396:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9396:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9498:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9509:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9514:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9505:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9505:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9498:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9291:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9299:3:6",
														"type": ""
													}
												],
												"src": "9157:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9700:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9710:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9722:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9733:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9718:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9718:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9710:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9757:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9768:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9753:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9753:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9776:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9782:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9772:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9772:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9746:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9746:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9746:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9802:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9936:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9810:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9810:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9802:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9680:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9695:4:6",
														"type": ""
													}
												],
												"src": "9529:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10060:115:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10082:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10090:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10078:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10078:14:6"
																	},
																	{
																		"hexValue": "42455032303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10094:34:6",
																		"type": "",
																		"value": "BEP20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10071:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10071:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10071:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10150:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10158:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10146:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10146:15:6"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10163:4:6",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10139:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10139:29:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10139:29:6"
														}
													]
												},
												"name": "store_literal_in_memory_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10052:6:6",
														"type": ""
													}
												],
												"src": "9954:221:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10327:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10337:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10403:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10408:2:6",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10344:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10344:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10337:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10509:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																	"nodeType": "YulIdentifier",
																	"src": "10420:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10420:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10420:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10522:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10533:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10538:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10529:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10529:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10522:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10315:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10323:3:6",
														"type": ""
													}
												],
												"src": "10181:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10724:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10734:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10746:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10757:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10742:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10742:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10734:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10781:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10792:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10777:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10777:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10800:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10806:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10796:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10796:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10770:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10770:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10770:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10826:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10960:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10834:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10834:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10826:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10704:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10719:4:6",
														"type": ""
													}
												],
												"src": "10553:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11084:118:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11106:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11114:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11102:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11102:14:6"
																	},
																	{
																		"hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11118:34:6",
																		"type": "",
																		"value": "BEP20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11095:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11095:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11095:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11174:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11182:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11170:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11170:15:6"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11187:7:6",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11163:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11163:32:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11163:32:6"
														}
													]
												},
												"name": "store_literal_in_memory_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11076:6:6",
														"type": ""
													}
												],
												"src": "10978:224:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11354:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11364:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11430:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11435:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11371:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11371:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11364:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11536:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																	"nodeType": "YulIdentifier",
																	"src": "11447:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11447:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11447:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11549:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11560:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11565:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11556:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11556:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11549:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11342:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11350:3:6",
														"type": ""
													}
												],
												"src": "11208:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11751:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11761:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11773:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11784:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11769:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11769:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11761:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11808:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11819:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11804:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11804:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11827:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11833:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11823:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11823:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11797:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11797:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11797:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11853:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11987:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11861:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11861:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11853:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11731:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11746:4:6",
														"type": ""
													}
												],
												"src": "11580:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12111:116:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12133:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12141:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12129:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12129:14:6"
																	},
																	{
																		"hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12145:34:6",
																		"type": "",
																		"value": "BEP20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12122:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12122:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12122:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12201:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12209:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12197:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12197:15:6"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12214:5:6",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12190:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12190:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12190:30:6"
														}
													]
												},
												"name": "store_literal_in_memory_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12103:6:6",
														"type": ""
													}
												],
												"src": "12005:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12379:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12389:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12455:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12460:2:6",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12396:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12396:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12389:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12561:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																	"nodeType": "YulIdentifier",
																	"src": "12472:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12472:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12472:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12574:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12585:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12590:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12581:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12581:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12574:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12367:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12375:3:6",
														"type": ""
													}
												],
												"src": "12233:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12776:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12786:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12798:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12809:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12794:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12794:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12786:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12833:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12844:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12829:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12829:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12852:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12858:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12848:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12848:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12822:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12822:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12822:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12878:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13012:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12886:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12886:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12878:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12756:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12771:4:6",
														"type": ""
													}
												],
												"src": "12605:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13058:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13075:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13078:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13068:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13068:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13068:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13172:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13175:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13165:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13165:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13165:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13196:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13199:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13189:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13189:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13189:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "13030:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13260:261:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13270:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13293:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13275:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13275:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "13270:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13304:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13327:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13309:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13309:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "13304:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13467:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13469:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13469:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13469:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13388:1:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13395:66:6",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "13463:1:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13391:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13391:74:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13385:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13385:81:6"
															},
															"nodeType": "YulIf",
															"src": "13382:107:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13499:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13510:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13513:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13506:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13506:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "13499:3:6"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13247:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13250:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "13256:3:6",
														"type": ""
													}
												],
												"src": "13216:305:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13633:75:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13655:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13663:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13651:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13651:14:6"
																	},
																	{
																		"hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13667:33:6",
																		"type": "",
																		"value": "BEP20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13644:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13644:57:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13644:57:6"
														}
													]
												},
												"name": "store_literal_in_memory_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13625:6:6",
														"type": ""
													}
												],
												"src": "13527:181:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13860:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13870:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13936:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13941:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13877:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13877:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13870:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14042:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																	"nodeType": "YulIdentifier",
																	"src": "13953:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13953:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13953:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14055:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14066:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14071:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14062:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14062:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14055:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13848:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13856:3:6",
														"type": ""
													}
												],
												"src": "13714:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14257:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14267:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14279:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14290:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14275:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14275:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14267:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14314:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14325:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14310:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14310:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14333:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14339:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14329:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14329:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14303:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14303:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14303:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14359:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14493:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14367:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14367:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14359:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14237:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14252:4:6",
														"type": ""
													}
												],
												"src": "14086:419:6"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4(memPtr) {\n\n        mstore(add(memPtr, 0), \"BEP20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5(memPtr) {\n\n        mstore(add(memPtr, 0), \"BEP20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57(memPtr) {\n\n        mstore(add(memPtr, 0), \"BEP20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2(memPtr) {\n\n        mstore(add(memPtr, 0), \"BEP20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3(memPtr) {\n\n        mstore(add(memPtr, 0), \"BEP20: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101005760003560e01c8063893d20e811610097578063a457c2d711610066578063a457c2d7146102b3578063a9059cbb146102e3578063dd62ed3e14610313578063f2fde38b1461034357610100565b8063893d20e8146102295780638da5cb5b1461024757806395d89b4114610265578063a0712d681461028357610100565b8063313ce567116100d3578063313ce567146101a157806339509351146101bf57806370a08231146101ef578063715018a61461021f57610100565b806306fdde0314610105578063095ea7b31461012357806318160ddd1461015357806323b872dd14610171575b600080fd5b61010d61035f565b60405161011a9190611206565b60405180910390f35b61013d600480360381019061013891906112c1565b6103f1565b60405161014a919061131c565b60405180910390f35b61015b61040f565b6040516101689190611346565b60405180910390f35b61018b60048036038101906101869190611361565b610419565b604051610198919061131c565b60405180910390f35b6101a96104f2565b6040516101b691906113d0565b60405180910390f35b6101d960048036038101906101d491906112c1565b610509565b6040516101e6919061131c565b60405180910390f35b610209600480360381019061020491906113eb565b6105bc565b6040516102169190611346565b60405180910390f35b610227610605565b005b61023161068d565b60405161023e9190611427565b60405180910390f35b61024f61069c565b60405161025c9190611427565b60405180910390f35b61026d6106c5565b60405161027a9190611206565b60405180910390f35b61029d60048036038101906102989190611442565b610757565b6040516102aa919061131c565b60405180910390f35b6102cd60048036038101906102c891906112c1565b6107ef565b6040516102da919061131c565b60405180910390f35b6102fd60048036038101906102f891906112c1565b6108bc565b60405161030a919061131c565b60405180910390f35b61032d6004803603810190610328919061146f565b6108da565b60405161033a9190611346565b60405180910390f35b61035d600480360381019061035891906113eb565b610961565b005b60606006805461036e906114de565b80601f016020809104026020016040519081016040528092919081815260200182805461039a906114de565b80156103e75780601f106103bc576101008083540402835291602001916103e7565b820191906000526020600020905b8154815290600101906020018083116103ca57829003601f168201915b5050505050905090565b60006104056103fe610a58565b8484610a60565b6001905092915050565b6000600354905090565b6000610426848484610c29565b6104e784610432610a58565b6104e28560405180606001604052806028815260200161194760289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610498610a58565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610eb59092919063ffffffff16565b610a60565b600190509392505050565b6000600460009054906101000a900460ff16905090565b60006105b2610516610a58565b846105ad8560026000610527610a58565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f0a90919063ffffffff16565b610a60565b6001905092915050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61060d610a58565b73ffffffffffffffffffffffffffffffffffffffff1661062b61069c565b73ffffffffffffffffffffffffffffffffffffffff1614610681576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106789061155b565b60405180910390fd5b61068b6000610f20565b565b600061069761069c565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600580546106d4906114de565b80601f0160208091040260200160405190810160405280929190818152602001828054610700906114de565b801561074d5780601f106107225761010080835404028352916020019161074d565b820191906000526020600020905b81548152906001019060200180831161073057829003601f168201915b5050505050905090565b6000610761610a58565b73ffffffffffffffffffffffffffffffffffffffff1661077f61069c565b73ffffffffffffffffffffffffffffffffffffffff16146107d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107cc9061155b565b60405180910390fd5b6107e66107e0610a58565b83610fe4565b60019050919050565b60006108b26107fc610a58565b846108ad856040518060600160405280602581526020016119956025913960026000610826610a58565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610eb59092919063ffffffff16565b610a60565b6001905092915050565b60006108d06108c9610a58565b8484610c29565b6001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610969610a58565b73ffffffffffffffffffffffffffffffffffffffff1661098761069c565b73ffffffffffffffffffffffffffffffffffffffff16146109dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d49061155b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a43906115ed565b60405180910390fd5b610a5581610f20565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610acf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac69061167f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b3e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3590611711565b60405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610c1c9190611346565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8f906117a3565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d07576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cfe90611835565b60405180910390fd5b610d738160405180606001604052806026815260200161196f60269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610eb59092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610e0881600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f0a90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610ea89190611346565b60405180910390a3505050565b6000838311158290610efd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef49190611206565b60405180910390fd5b5082840390509392505050565b60008183610f189190611884565b905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611053576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104a90611926565b60405180910390fd5b61106881600354610f0a90919063ffffffff16565b6003819055506110c081600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f0a90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516111619190611346565b60405180910390a35050565b600081519050919050565b600082825260208201905092915050565b60005b838110156111a757808201518184015260208101905061118c565b838111156111b6576000848401525b50505050565b6000601f19601f8301169050919050565b60006111d88261116d565b6111e28185611178565b93506111f2818560208601611189565b6111fb816111bc565b840191505092915050565b6000602082019050818103600083015261122081846111cd565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006112588261122d565b9050919050565b6112688161124d565b811461127357600080fd5b50565b6000813590506112858161125f565b92915050565b6000819050919050565b61129e8161128b565b81146112a957600080fd5b50565b6000813590506112bb81611295565b92915050565b600080604083850312156112d8576112d7611228565b5b60006112e685828601611276565b92505060206112f7858286016112ac565b9150509250929050565b60008115159050919050565b61131681611301565b82525050565b6000602082019050611331600083018461130d565b92915050565b6113408161128b565b82525050565b600060208201905061135b6000830184611337565b92915050565b60008060006060848603121561137a57611379611228565b5b600061138886828701611276565b935050602061139986828701611276565b92505060406113aa868287016112ac565b9150509250925092565b600060ff82169050919050565b6113ca816113b4565b82525050565b60006020820190506113e560008301846113c1565b92915050565b60006020828403121561140157611400611228565b5b600061140f84828501611276565b91505092915050565b6114218161124d565b82525050565b600060208201905061143c6000830184611418565b92915050565b60006020828403121561145857611457611228565b5b6000611466848285016112ac565b91505092915050565b6000806040838503121561148657611485611228565b5b600061149485828601611276565b92505060206114a585828601611276565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806114f657607f821691505b602082108103611509576115086114af565b5b50919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611545602083611178565b91506115508261150f565b602082019050919050565b6000602082019050818103600083015261157481611538565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006115d7602683611178565b91506115e28261157b565b604082019050919050565b60006020820190508181036000830152611606816115ca565b9050919050565b7f42455032303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611669602483611178565b91506116748261160d565b604082019050919050565b600060208201905081810360008301526116988161165c565b9050919050565b7f42455032303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006116fb602283611178565b91506117068261169f565b604082019050919050565b6000602082019050818103600083015261172a816116ee565b9050919050565b7f42455032303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061178d602583611178565b915061179882611731565b604082019050919050565b600060208201905081810360008301526117bc81611780565b9050919050565b7f42455032303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b600061181f602383611178565b915061182a826117c3565b604082019050919050565b6000602082019050818103600083015261184e81611812565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061188f8261128b565b915061189a8361128b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156118cf576118ce611855565b5b828201905092915050565b7f42455032303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611910601f83611178565b915061191b826118da565b602082019050919050565b6000602082019050818103600083015261193f81611903565b905091905056fe42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220a0b0b44a932aeb9f89af0c752ce8d2697cad7a4d463610fd4b3167940842c49e64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x343 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x283 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x21F JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x171 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x35F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x1206 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x12C1 JUMP JUMPDEST PUSH2 0x3F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x131C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH2 0x40F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x1346 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x1361 JUMP JUMPDEST PUSH2 0x419 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x131C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A9 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x13D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x12C1 JUMP JUMPDEST PUSH2 0x509 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x131C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x13EB JUMP JUMPDEST PUSH2 0x5BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x1346 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x227 PUSH2 0x605 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x231 PUSH2 0x68D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x1427 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH2 0x69C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x1427 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26D PUSH2 0x6C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x1206 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x1442 JUMP JUMPDEST PUSH2 0x757 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0x131C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x12C1 JUMP JUMPDEST PUSH2 0x7EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x131C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0x12C1 JUMP JUMPDEST PUSH2 0x8BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30A SWAP2 SWAP1 PUSH2 0x131C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x146F JUMP JUMPDEST PUSH2 0x8DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x1346 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x13EB JUMP JUMPDEST PUSH2 0x961 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x36E SWAP1 PUSH2 0x14DE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x39A SWAP1 PUSH2 0x14DE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3BC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3E7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3CA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x405 PUSH2 0x3FE PUSH2 0xA58 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xA60 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x426 DUP5 DUP5 DUP5 PUSH2 0xC29 JUMP JUMPDEST PUSH2 0x4E7 DUP5 PUSH2 0x432 PUSH2 0xA58 JUMP JUMPDEST PUSH2 0x4E2 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1947 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x498 PUSH2 0xA58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xEB5 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xA60 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B2 PUSH2 0x516 PUSH2 0xA58 JUMP JUMPDEST DUP5 PUSH2 0x5AD DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x527 PUSH2 0xA58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF0A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xA60 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x60D PUSH2 0xA58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x62B PUSH2 0x69C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x681 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x678 SWAP1 PUSH2 0x155B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x68B PUSH1 0x0 PUSH2 0xF20 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x697 PUSH2 0x69C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x6D4 SWAP1 PUSH2 0x14DE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x700 SWAP1 PUSH2 0x14DE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x74D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x722 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x74D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x730 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x761 PUSH2 0xA58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x77F PUSH2 0x69C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CC SWAP1 PUSH2 0x155B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7E6 PUSH2 0x7E0 PUSH2 0xA58 JUMP JUMPDEST DUP4 PUSH2 0xFE4 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8B2 PUSH2 0x7FC PUSH2 0xA58 JUMP JUMPDEST DUP5 PUSH2 0x8AD DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1995 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0x826 PUSH2 0xA58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xEB5 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xA60 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8D0 PUSH2 0x8C9 PUSH2 0xA58 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xC29 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x969 PUSH2 0xA58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x987 PUSH2 0x69C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D4 SWAP1 PUSH2 0x155B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA4C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA43 SWAP1 PUSH2 0x15ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA55 DUP2 PUSH2 0xF20 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xACF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC6 SWAP1 PUSH2 0x167F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB3E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB35 SWAP1 PUSH2 0x1711 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC1C SWAP2 SWAP1 PUSH2 0x1346 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC98 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC8F SWAP1 PUSH2 0x17A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD07 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCFE SWAP1 PUSH2 0x1835 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD73 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x196F PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xEB5 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xE08 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF0A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xEA8 SWAP2 SWAP1 PUSH2 0x1346 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xEFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF4 SWAP2 SWAP1 PUSH2 0x1206 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 SUB SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xF18 SWAP2 SWAP1 PUSH2 0x1884 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1053 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104A SWAP1 PUSH2 0x1926 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1068 DUP2 PUSH1 0x3 SLOAD PUSH2 0xF0A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x10C0 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF0A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1161 SWAP2 SWAP1 PUSH2 0x1346 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11A7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x118C JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x11B6 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11D8 DUP3 PUSH2 0x116D JUMP JUMPDEST PUSH2 0x11E2 DUP2 DUP6 PUSH2 0x1178 JUMP JUMPDEST SWAP4 POP PUSH2 0x11F2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1189 JUMP JUMPDEST PUSH2 0x11FB DUP2 PUSH2 0x11BC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1220 DUP2 DUP5 PUSH2 0x11CD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1258 DUP3 PUSH2 0x122D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1268 DUP2 PUSH2 0x124D JUMP JUMPDEST DUP2 EQ PUSH2 0x1273 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1285 DUP2 PUSH2 0x125F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x129E DUP2 PUSH2 0x128B JUMP JUMPDEST DUP2 EQ PUSH2 0x12A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12BB DUP2 PUSH2 0x1295 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12D8 JUMPI PUSH2 0x12D7 PUSH2 0x1228 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12E6 DUP6 DUP3 DUP7 ADD PUSH2 0x1276 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12F7 DUP6 DUP3 DUP7 ADD PUSH2 0x12AC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1316 DUP2 PUSH2 0x1301 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1331 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x130D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1340 DUP2 PUSH2 0x128B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x135B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1337 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x137A JUMPI PUSH2 0x1379 PUSH2 0x1228 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1388 DUP7 DUP3 DUP8 ADD PUSH2 0x1276 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1399 DUP7 DUP3 DUP8 ADD PUSH2 0x1276 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x13AA DUP7 DUP3 DUP8 ADD PUSH2 0x12AC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13CA DUP2 PUSH2 0x13B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13E5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1401 JUMPI PUSH2 0x1400 PUSH2 0x1228 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x140F DUP5 DUP3 DUP6 ADD PUSH2 0x1276 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1421 DUP2 PUSH2 0x124D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x143C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1418 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1458 JUMPI PUSH2 0x1457 PUSH2 0x1228 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1466 DUP5 DUP3 DUP6 ADD PUSH2 0x12AC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1486 JUMPI PUSH2 0x1485 PUSH2 0x1228 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1494 DUP6 DUP3 DUP7 ADD PUSH2 0x1276 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14A5 DUP6 DUP3 DUP7 ADD PUSH2 0x1276 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x14F6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1509 JUMPI PUSH2 0x1508 PUSH2 0x14AF JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1545 PUSH1 0x20 DUP4 PUSH2 0x1178 JUMP JUMPDEST SWAP2 POP PUSH2 0x1550 DUP3 PUSH2 0x150F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1574 DUP2 PUSH2 0x1538 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15D7 PUSH1 0x26 DUP4 PUSH2 0x1178 JUMP JUMPDEST SWAP2 POP PUSH2 0x15E2 DUP3 PUSH2 0x157B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1606 DUP2 PUSH2 0x15CA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1669 PUSH1 0x24 DUP4 PUSH2 0x1178 JUMP JUMPDEST SWAP2 POP PUSH2 0x1674 DUP3 PUSH2 0x160D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1698 DUP2 PUSH2 0x165C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16FB PUSH1 0x22 DUP4 PUSH2 0x1178 JUMP JUMPDEST SWAP2 POP PUSH2 0x1706 DUP3 PUSH2 0x169F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x172A DUP2 PUSH2 0x16EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x178D PUSH1 0x25 DUP4 PUSH2 0x1178 JUMP JUMPDEST SWAP2 POP PUSH2 0x1798 DUP3 PUSH2 0x1731 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17BC DUP2 PUSH2 0x1780 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x181F PUSH1 0x23 DUP4 PUSH2 0x1178 JUMP JUMPDEST SWAP2 POP PUSH2 0x182A DUP3 PUSH2 0x17C3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x184E DUP2 PUSH2 0x1812 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x188F DUP3 PUSH2 0x128B JUMP JUMPDEST SWAP2 POP PUSH2 0x189A DUP4 PUSH2 0x128B JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x18CF JUMPI PUSH2 0x18CE PUSH2 0x1855 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1910 PUSH1 0x1F DUP4 PUSH2 0x1178 JUMP JUMPDEST SWAP2 POP PUSH2 0x191B DUP3 PUSH2 0x18DA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x193F DUP2 PUSH2 0x1903 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636542455032303A20747261 PUSH15 0x7366657220616D6F756E7420657863 PUSH6 0x656473206261 PUSH13 0x616E636542455032303A206465 PUSH4 0x72656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726FA26469706673582212 KECCAK256 LOG0 0xB0 0xB4 0x4A SWAP4 0x2A 0xEB SWAP16 DUP10 0xAF 0xC PUSH22 0x2CE8D2697CAD7A4D463610FD4B3167940842C49E6473 PUSH16 0x6C634300080D00330000000000000000 ",
							"sourceMap": "192:9332:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1260:92;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2820:193;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1736:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3484:446;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1419:92;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4338:283;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1898:119;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1657:94:2;;;:::i;:::-;;1103::0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1006:87:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1576:96:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5724:130;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5123:383;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2229:199;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2490:184;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1906:192:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1260:92:0;1306:13;1339:5;1332:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1260:92;:::o;2820:193::-;2922:4;2944:39;2953:12;:10;:12::i;:::-;2967:7;2976:6;2944:8;:39::i;:::-;3001:4;2994:11;;2820:193;;;;:::o;1736:100::-;1789:7;1816:12;;1809:19;;1736:100;:::o;3484:446::-;3616:4;3633:36;3643:6;3651:9;3662:6;3633:9;:36::i;:::-;3680:220;3703:6;3724:12;:10;:12::i;:::-;3751:138;3807:6;3751:138;;;;;;;;;;;;;;;;;:11;:19;3763:6;3751:19;;;;;;;;;;;;;;;:33;3771:12;:10;:12::i;:::-;3751:33;;;;;;;;;;;;;;;;:37;;:138;;;;;:::i;:::-;3680:8;:220::i;:::-;3918:4;3911:11;;3484:446;;;;;:::o;1419:92::-;1469:5;1494:9;;;;;;;;;;;1487:16;;1419:92;:::o;4338:283::-;4436:4;4458:133;4481:12;:10;:12::i;:::-;4508:7;4530:50;4569:10;4530:11;:25;4542:12;:10;:12::i;:::-;4530:25;;;;;;;;;;;;;;;:34;4556:7;4530:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;4458:8;:133::i;:::-;4609:4;4602:11;;4338:283;;;;:::o;1898:119::-;1964:7;1991:9;:18;2001:7;1991:18;;;;;;;;;;;;;;;;1984:25;;1898:119;;;:::o;1657:94:2:-;1237:12;:10;:12::i;:::-;1226:23;;:7;:5;:7::i;:::-;:23;;;1218:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1722:21:::1;1740:1;1722:9;:21::i;:::-;1657:94::o:0;1103::0:-;1155:7;1182;:5;:7::i;:::-;1175:14;;1103:94;:::o;1006:87:2:-;1052:7;1079:6;;;;;;;;;;;1072:13;;1006:87;:::o;1576:96:0:-;1624:13;1657:7;1650:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1576:96;:::o;5724:130::-;5780:4;1237:12:2;:10;:12::i;:::-;1226:23;;:7;:5;:7::i;:::-;:23;;;1218:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;5797:27:0::1;5803:12;:10;:12::i;:::-;5817:6;5797:5;:27::i;:::-;5842:4;5835:11;;5724:130:::0;;;:::o;5123:383::-;5226:4;5248:228;5271:12;:10;:12::i;:::-;5298:7;5320:145;5377:15;5320:145;;;;;;;;;;;;;;;;;:11;:25;5332:12;:10;:12::i;:::-;5320:25;;;;;;;;;;;;;;;:34;5346:7;5320:34;;;;;;;;;;;;;;;;:38;;:145;;;;;:::i;:::-;5248:8;:228::i;:::-;5494:4;5487:11;;5123:383;;;;:::o;2229:199::-;2334:4;2356:42;2366:12;:10;:12::i;:::-;2380:9;2391:6;2356:9;:42::i;:::-;2416:4;2409:11;;2229:199;;;;:::o;2490:184::-;2607:7;2639:11;:18;2651:5;2639:18;;;;;;;;;;;;;;;:27;2658:7;2639:27;;;;;;;;;;;;;;;;2632:34;;2490:184;;;;:::o;1906:192:2:-;1237:12;:10;:12::i;:::-;1226:23;;:7;:5;:7::i;:::-;:23;;;1218:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2015:1:::1;1995:22;;:8;:22;;::::0;1987:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2071:19;2081:8;2071:9;:19::i;:::-;1906:192:::0;:::o;602:98:5:-;655:7;682:10;675:17;;602:98;:::o;8632:372:0:-;8777:1;8760:19;;:5;:19;;;8752:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;8858:1;8839:21;;:7;:21;;;8831:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;8942:6;8912:11;:18;8924:5;8912:18;;;;;;;;;;;;;;;:27;8931:7;8912:27;;;;;;;;;;;;;;;:36;;;;8980:7;8964:32;;8973:5;8964:32;;;8989:6;8964:32;;;;;;:::i;:::-;;;;;;;;8632:372;;;:::o;6344:542::-;6494:1;6476:20;;:6;:20;;;6468:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;6578:1;6557:23;;:9;:23;;;6549:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;6653:108;6689:6;6653:108;;;;;;;;;;;;;;;;;:9;:17;6663:6;6653:17;;;;;;;;;;;;;;;;:21;;:108;;;;;:::i;:::-;6633:9;:17;6643:6;6633:17;;;;;;;;;;;;;;;:128;;;;6795:32;6820:6;6795:9;:20;6805:9;6795:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;6772:9;:20;6782:9;6772:20;;;;;;;;;;;;;;;:55;;;;6860:9;6843:35;;6852:6;6843:35;;;6871:6;6843:35;;;;;;:::i;:::-;;;;;;;;6344:542;;;:::o;5042:240:3:-;5162:7;5220:1;5215;:6;;5223:12;5207:29;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5262:1;5258;:5;5251:12;;5042:240;;;;;:::o;2763:98::-;2821:7;2852:1;2848;:5;;;;:::i;:::-;2841:12;;2763:98;;;;:::o;2106:173:2:-;2162:16;2181:6;;;;;;;;;;;2162:25;;2207:8;2198:6;;:17;;;;;;;;;;;;;;;;;;2262:8;2231:40;;2252:8;2231:40;;;;;;;;;;;;2151:128;2106:173;:::o;7167:308:0:-;7262:1;7243:21;;:7;:21;;;7235:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;7328:24;7345:6;7328:12;;:16;;:24;;;;:::i;:::-;7313:12;:39;;;;7384:30;7407:6;7384:9;:18;7394:7;7384:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;7363:9;:18;7373:7;7363:18;;;;;;;;;;;;;;;:51;;;;7451:7;7430:37;;7447:1;7430:37;;;7460:6;7430:37;;;;;;:::i;:::-;;;;;;;;7167:308;;:::o;7:99:6:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:307::-;355:1;365:113;379:6;376:1;373:13;365:113;;;464:1;459:3;455:11;449:18;445:1;440:3;436:11;429:39;401:2;398:1;394:10;389:15;;365:113;;;496:6;493:1;490:13;487:101;;;576:1;567:6;562:3;558:16;551:27;487:101;336:258;287:307;;;:::o;600:102::-;641:6;692:2;688:7;683:2;676:5;672:14;668:28;658:38;;600:102;;;:::o;708:364::-;796:3;824:39;857:5;824:39;:::i;:::-;879:71;943:6;938:3;879:71;:::i;:::-;872:78;;959:52;1004:6;999:3;992:4;985:5;981:16;959:52;:::i;:::-;1036:29;1058:6;1036:29;:::i;:::-;1031:3;1027:39;1020:46;;800:272;708:364;;;;:::o;1078:313::-;1191:4;1229:2;1218:9;1214:18;1206:26;;1278:9;1272:4;1268:20;1264:1;1253:9;1249:17;1242:47;1306:78;1379:4;1370:6;1306:78;:::i;:::-;1298:86;;1078:313;;;;:::o;1478:117::-;1587:1;1584;1577:12;1724:126;1761:7;1801:42;1794:5;1790:54;1779:65;;1724:126;;;:::o;1856:96::-;1893:7;1922:24;1940:5;1922:24;:::i;:::-;1911:35;;1856:96;;;:::o;1958:122::-;2031:24;2049:5;2031:24;:::i;:::-;2024:5;2021:35;2011:63;;2070:1;2067;2060:12;2011:63;1958:122;:::o;2086:139::-;2132:5;2170:6;2157:20;2148:29;;2186:33;2213:5;2186:33;:::i;:::-;2086:139;;;;:::o;2231:77::-;2268:7;2297:5;2286:16;;2231:77;;;:::o;2314:122::-;2387:24;2405:5;2387:24;:::i;:::-;2380:5;2377:35;2367:63;;2426:1;2423;2416:12;2367:63;2314:122;:::o;2442:139::-;2488:5;2526:6;2513:20;2504:29;;2542:33;2569:5;2542:33;:::i;:::-;2442:139;;;;:::o;2587:474::-;2655:6;2663;2712:2;2700:9;2691:7;2687:23;2683:32;2680:119;;;2718:79;;:::i;:::-;2680:119;2838:1;2863:53;2908:7;2899:6;2888:9;2884:22;2863:53;:::i;:::-;2853:63;;2809:117;2965:2;2991:53;3036:7;3027:6;3016:9;3012:22;2991:53;:::i;:::-;2981:63;;2936:118;2587:474;;;;;:::o;3067:90::-;3101:7;3144:5;3137:13;3130:21;3119:32;;3067:90;;;:::o;3163:109::-;3244:21;3259:5;3244:21;:::i;:::-;3239:3;3232:34;3163:109;;:::o;3278:210::-;3365:4;3403:2;3392:9;3388:18;3380:26;;3416:65;3478:1;3467:9;3463:17;3454:6;3416:65;:::i;:::-;3278:210;;;;:::o;3494:118::-;3581:24;3599:5;3581:24;:::i;:::-;3576:3;3569:37;3494:118;;:::o;3618:222::-;3711:4;3749:2;3738:9;3734:18;3726:26;;3762:71;3830:1;3819:9;3815:17;3806:6;3762:71;:::i;:::-;3618:222;;;;:::o;3846:619::-;3923:6;3931;3939;3988:2;3976:9;3967:7;3963:23;3959:32;3956:119;;;3994:79;;:::i;:::-;3956:119;4114:1;4139:53;4184:7;4175:6;4164:9;4160:22;4139:53;:::i;:::-;4129:63;;4085:117;4241:2;4267:53;4312:7;4303:6;4292:9;4288:22;4267:53;:::i;:::-;4257:63;;4212:118;4369:2;4395:53;4440:7;4431:6;4420:9;4416:22;4395:53;:::i;:::-;4385:63;;4340:118;3846:619;;;;;:::o;4471:86::-;4506:7;4546:4;4539:5;4535:16;4524:27;;4471:86;;;:::o;4563:112::-;4646:22;4662:5;4646:22;:::i;:::-;4641:3;4634:35;4563:112;;:::o;4681:214::-;4770:4;4808:2;4797:9;4793:18;4785:26;;4821:67;4885:1;4874:9;4870:17;4861:6;4821:67;:::i;:::-;4681:214;;;;:::o;4901:329::-;4960:6;5009:2;4997:9;4988:7;4984:23;4980:32;4977:119;;;5015:79;;:::i;:::-;4977:119;5135:1;5160:53;5205:7;5196:6;5185:9;5181:22;5160:53;:::i;:::-;5150:63;;5106:117;4901:329;;;;:::o;5236:118::-;5323:24;5341:5;5323:24;:::i;:::-;5318:3;5311:37;5236:118;;:::o;5360:222::-;5453:4;5491:2;5480:9;5476:18;5468:26;;5504:71;5572:1;5561:9;5557:17;5548:6;5504:71;:::i;:::-;5360:222;;;;:::o;5588:329::-;5647:6;5696:2;5684:9;5675:7;5671:23;5667:32;5664:119;;;5702:79;;:::i;:::-;5664:119;5822:1;5847:53;5892:7;5883:6;5872:9;5868:22;5847:53;:::i;:::-;5837:63;;5793:117;5588:329;;;;:::o;5923:474::-;5991:6;5999;6048:2;6036:9;6027:7;6023:23;6019:32;6016:119;;;6054:79;;:::i;:::-;6016:119;6174:1;6199:53;6244:7;6235:6;6224:9;6220:22;6199:53;:::i;:::-;6189:63;;6145:117;6301:2;6327:53;6372:7;6363:6;6352:9;6348:22;6327:53;:::i;:::-;6317:63;;6272:118;5923:474;;;;;:::o;6403:180::-;6451:77;6448:1;6441:88;6548:4;6545:1;6538:15;6572:4;6569:1;6562:15;6589:320;6633:6;6670:1;6664:4;6660:12;6650:22;;6717:1;6711:4;6707:12;6738:18;6728:81;;6794:4;6786:6;6782:17;6772:27;;6728:81;6856:2;6848:6;6845:14;6825:18;6822:38;6819:84;;6875:18;;:::i;:::-;6819:84;6640:269;6589:320;;;:::o;6915:182::-;7055:34;7051:1;7043:6;7039:14;7032:58;6915:182;:::o;7103:366::-;7245:3;7266:67;7330:2;7325:3;7266:67;:::i;:::-;7259:74;;7342:93;7431:3;7342:93;:::i;:::-;7460:2;7455:3;7451:12;7444:19;;7103:366;;;:::o;7475:419::-;7641:4;7679:2;7668:9;7664:18;7656:26;;7728:9;7722:4;7718:20;7714:1;7703:9;7699:17;7692:47;7756:131;7882:4;7756:131;:::i;:::-;7748:139;;7475:419;;;:::o;7900:225::-;8040:34;8036:1;8028:6;8024:14;8017:58;8109:8;8104:2;8096:6;8092:15;8085:33;7900:225;:::o;8131:366::-;8273:3;8294:67;8358:2;8353:3;8294:67;:::i;:::-;8287:74;;8370:93;8459:3;8370:93;:::i;:::-;8488:2;8483:3;8479:12;8472:19;;8131:366;;;:::o;8503:419::-;8669:4;8707:2;8696:9;8692:18;8684:26;;8756:9;8750:4;8746:20;8742:1;8731:9;8727:17;8720:47;8784:131;8910:4;8784:131;:::i;:::-;8776:139;;8503:419;;;:::o;8928:223::-;9068:34;9064:1;9056:6;9052:14;9045:58;9137:6;9132:2;9124:6;9120:15;9113:31;8928:223;:::o;9157:366::-;9299:3;9320:67;9384:2;9379:3;9320:67;:::i;:::-;9313:74;;9396:93;9485:3;9396:93;:::i;:::-;9514:2;9509:3;9505:12;9498:19;;9157:366;;;:::o;9529:419::-;9695:4;9733:2;9722:9;9718:18;9710:26;;9782:9;9776:4;9772:20;9768:1;9757:9;9753:17;9746:47;9810:131;9936:4;9810:131;:::i;:::-;9802:139;;9529:419;;;:::o;9954:221::-;10094:34;10090:1;10082:6;10078:14;10071:58;10163:4;10158:2;10150:6;10146:15;10139:29;9954:221;:::o;10181:366::-;10323:3;10344:67;10408:2;10403:3;10344:67;:::i;:::-;10337:74;;10420:93;10509:3;10420:93;:::i;:::-;10538:2;10533:3;10529:12;10522:19;;10181:366;;;:::o;10553:419::-;10719:4;10757:2;10746:9;10742:18;10734:26;;10806:9;10800:4;10796:20;10792:1;10781:9;10777:17;10770:47;10834:131;10960:4;10834:131;:::i;:::-;10826:139;;10553:419;;;:::o;10978:224::-;11118:34;11114:1;11106:6;11102:14;11095:58;11187:7;11182:2;11174:6;11170:15;11163:32;10978:224;:::o;11208:366::-;11350:3;11371:67;11435:2;11430:3;11371:67;:::i;:::-;11364:74;;11447:93;11536:3;11447:93;:::i;:::-;11565:2;11560:3;11556:12;11549:19;;11208:366;;;:::o;11580:419::-;11746:4;11784:2;11773:9;11769:18;11761:26;;11833:9;11827:4;11823:20;11819:1;11808:9;11804:17;11797:47;11861:131;11987:4;11861:131;:::i;:::-;11853:139;;11580:419;;;:::o;12005:222::-;12145:34;12141:1;12133:6;12129:14;12122:58;12214:5;12209:2;12201:6;12197:15;12190:30;12005:222;:::o;12233:366::-;12375:3;12396:67;12460:2;12455:3;12396:67;:::i;:::-;12389:74;;12472:93;12561:3;12472:93;:::i;:::-;12590:2;12585:3;12581:12;12574:19;;12233:366;;;:::o;12605:419::-;12771:4;12809:2;12798:9;12794:18;12786:26;;12858:9;12852:4;12848:20;12844:1;12833:9;12829:17;12822:47;12886:131;13012:4;12886:131;:::i;:::-;12878:139;;12605:419;;;:::o;13030:180::-;13078:77;13075:1;13068:88;13175:4;13172:1;13165:15;13199:4;13196:1;13189:15;13216:305;13256:3;13275:20;13293:1;13275:20;:::i;:::-;13270:25;;13309:20;13327:1;13309:20;:::i;:::-;13304:25;;13463:1;13395:66;13391:74;13388:1;13385:81;13382:107;;;13469:18;;:::i;:::-;13382:107;13513:1;13510;13506:9;13499:16;;13216:305;;;;:::o;13527:181::-;13667:33;13663:1;13655:6;13651:14;13644:57;13527:181;:::o;13714:366::-;13856:3;13877:67;13941:2;13936:3;13877:67;:::i;:::-;13870:74;;13953:93;14042:3;13953:93;:::i;:::-;14071:2;14066:3;14062:12;14055:19;;13714:366;;;:::o;14086:419::-;14252:4;14290:2;14279:9;14275:18;14267:26;;14339:9;14333:4;14329:20;14325:1;14314:9;14310:17;14303:47;14367:131;14493:4;14367:131;:::i;:::-;14359:139;;14086:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1327800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2908",
								"decimals()": "2502",
								"decreaseAllowance(address,uint256)": "infinite",
								"getOwner()": "2580",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2567",
								"renounceOwnership()": "30463",
								"symbol()": "infinite",
								"totalSupply()": "2505",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "30808"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_burnFrom(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 894,
									"end": 917,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 904,
									"end": 916,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 904,
									"end": 914,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 904,
									"end": 914,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 904,
									"end": 914,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 904,
									"end": 916,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 904,
									"end": 916,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 904,
									"end": 916,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 904,
									"end": 916,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 904,
									"end": 916,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 894,
									"end": 903,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 894,
									"end": 903,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 894,
									"end": 903,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 894,
									"end": 917,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 894,
									"end": 917,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 894,
									"end": 917,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 894,
									"end": 917,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 894,
									"end": 917,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 961,
									"end": 970,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 953,
									"end": 958,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 953,
									"end": 970,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 953,
									"end": 970,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 953,
									"end": 970,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 953,
									"end": 970,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 953,
									"end": 970,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 953,
									"end": 970,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 953,
									"end": 970,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 953,
									"end": 970,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 953,
									"end": 970,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 953,
									"end": 970,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 953,
									"end": 970,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 953,
									"end": 970,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 953,
									"end": 970,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 953,
									"end": 970,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 953,
									"end": 970,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 953,
									"end": 970,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 991,
									"end": 1002,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 981,
									"end": 988,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 981,
									"end": 1002,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 981,
									"end": 1002,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 981,
									"end": 1002,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 981,
									"end": 1002,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 981,
									"end": 1002,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 981,
									"end": 1002,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 981,
									"end": 1002,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 981,
									"end": 1002,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 981,
									"end": 1002,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 981,
									"end": 1002,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 981,
									"end": 1002,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 981,
									"end": 1002,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 981,
									"end": 1002,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 981,
									"end": 1002,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 981,
									"end": 1002,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 981,
									"end": 1002,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1025,
									"end": 1027,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1013,
									"end": 1022,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1013,
									"end": 1022,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1013,
									"end": 1027,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1013,
									"end": 1027,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1027,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1027,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1027,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1027,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 1013,
									"end": 1027,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1027,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1027,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1027,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1027,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1027,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 1013,
									"end": 1027,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1027,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1027,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1027,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1027,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1027,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 602,
									"end": 700,
									"name": "tag",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 602,
									"end": 700,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 655,
									"end": 662,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 682,
									"end": 692,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 675,
									"end": 692,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 675,
									"end": 692,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 602,
									"end": 700,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 602,
									"end": 700,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 2106,
									"end": 2279,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 2106,
									"end": 2279,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2162,
									"end": 2178,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2181,
									"end": 2187,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2181,
									"end": 2187,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2181,
									"end": 2187,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2181,
									"end": 2187,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 2181,
									"end": 2187,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2181,
									"end": 2187,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 2181,
									"end": 2187,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 2181,
									"end": 2187,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2181,
									"end": 2187,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 2181,
									"end": 2187,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2181,
									"end": 2187,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2162,
									"end": 2187,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2162,
									"end": 2187,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2207,
									"end": 2215,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2198,
									"end": 2204,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2198,
									"end": 2204,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2198,
									"end": 2215,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 2198,
									"end": 2215,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 2198,
									"end": 2215,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2198,
									"end": 2215,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 2198,
									"end": 2215,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2198,
									"end": 2215,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2198,
									"end": 2215,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 2198,
									"end": 2215,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 2198,
									"end": 2215,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2198,
									"end": 2215,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2198,
									"end": 2215,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2198,
									"end": 2215,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2198,
									"end": 2215,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2198,
									"end": 2215,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 2198,
									"end": 2215,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 2198,
									"end": 2215,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2198,
									"end": 2215,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 2198,
									"end": 2215,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2262,
									"end": 2270,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2231,
									"end": 2271,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2231,
									"end": 2271,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2252,
									"end": 2260,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2231,
									"end": 2271,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2231,
									"end": 2271,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2231,
									"end": 2271,
									"name": "PUSH",
									"source": 2,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2231,
									"end": 2271,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2231,
									"end": 2271,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2231,
									"end": 2271,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2231,
									"end": 2271,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2231,
									"end": 2271,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2231,
									"end": 2271,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2231,
									"end": 2271,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 2231,
									"end": 2271,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2231,
									"end": 2271,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 2151,
									"end": 2279,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2106,
									"end": 2279,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2106,
									"end": 2279,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1678,
									"end": 1679,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "tag",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1702,
									"end": 1708,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1699,
									"end": 1700,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1696,
									"end": 1709,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1787,
									"end": 1788,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1782,
									"end": 1785,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1778,
									"end": 1789,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1772,
									"end": 1790,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1768,
									"end": 1769,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1763,
									"end": 1766,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1759,
									"end": 1770,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1752,
									"end": 1791,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1724,
									"end": 1726,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1721,
									"end": 1722,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1717,
									"end": 1727,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1712,
									"end": 1727,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1712,
									"end": 1727,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "tag",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1819,
									"end": 1825,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1816,
									"end": 1817,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1813,
									"end": 1826,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1899,
									"end": 1900,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1890,
									"end": 1896,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1885,
									"end": 1888,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1881,
									"end": 1897,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1874,
									"end": 1901,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "tag",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1659,
									"end": 1917,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2012,
									"end": 2017,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 2095,
									"end": 2101,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "tag",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "tag",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2028,
									"end": 2103,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2028,
									"end": 2103,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2126,
									"end": 2132,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2119,
									"end": 2124,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2112,
									"end": 2133,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2164,
									"end": 2168,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2157,
									"end": 2162,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2153,
									"end": 2169,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2202,
									"end": 2205,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2193,
									"end": 2199,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2188,
									"end": 2191,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2184,
									"end": 2200,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2181,
									"end": 2206,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "tag",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "tag",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 2331,
									"end": 2337,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2326,
									"end": 2329,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2321,
									"end": 2324,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "tag",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2018,
									"end": 2344,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2431,
									"end": 2436,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2480,
									"end": 2483,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2473,
									"end": 2477,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2465,
									"end": 2471,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2461,
									"end": 2478,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2457,
									"end": 2484,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "74"
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "tag",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "tag",
									"source": 6,
									"value": "74"
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2598,
									"end": 2604,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2592,
									"end": 2605,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "76"
								},
								{
									"begin": 2709,
									"end": 2712,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2701,
									"end": 2707,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2694,
									"end": 2698,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2686,
									"end": 2692,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2682,
									"end": 2699,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "tag",
									"source": 6,
									"value": "76"
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2614,
									"end": 2713,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2614,
									"end": 2713,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2437,
									"end": 2719,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2824,
									"end": 2830,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2832,
									"end": 2838,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2881,
									"end": 2883,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2869,
									"end": 2878,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2860,
									"end": 2867,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2856,
									"end": 2879,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2852,
									"end": 2884,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 2849,
									"end": 2968,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2849,
									"end": 2968,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 2849,
									"end": 2968,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2887,
									"end": 2966,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 2887,
									"end": 2966,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 2887,
									"end": 2966,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 2887,
									"end": 2966,
									"name": "tag",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 2887,
									"end": 2966,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2849,
									"end": 2968,
									"name": "tag",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 2849,
									"end": 2968,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3028,
									"end": 3029,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3017,
									"end": 3026,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3013,
									"end": 3030,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3007,
									"end": 3031,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3058,
									"end": 3076,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3050,
									"end": 3056,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3047,
									"end": 3077,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3044,
									"end": 3161,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3044,
									"end": 3161,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 3044,
									"end": 3161,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3080,
									"end": 3159,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 3080,
									"end": 3159,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 3080,
									"end": 3159,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 3080,
									"end": 3159,
									"name": "tag",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 3080,
									"end": 3159,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3044,
									"end": 3161,
									"name": "tag",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 3044,
									"end": 3161,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3185,
									"end": 3259,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 3251,
									"end": 3258,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3242,
									"end": 3248,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3231,
									"end": 3240,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3227,
									"end": 3249,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3185,
									"end": 3259,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 3185,
									"end": 3259,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 3185,
									"end": 3259,
									"name": "tag",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 3185,
									"end": 3259,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3175,
									"end": 3259,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3175,
									"end": 3259,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2978,
									"end": 3269,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3329,
									"end": 3331,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3318,
									"end": 3327,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3314,
									"end": 3332,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3308,
									"end": 3333,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3360,
									"end": 3378,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3352,
									"end": 3358,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3349,
									"end": 3379,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3346,
									"end": 3463,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3346,
									"end": 3463,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 3346,
									"end": 3463,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3382,
									"end": 3461,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 3382,
									"end": 3461,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 3382,
									"end": 3461,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 3382,
									"end": 3461,
									"name": "tag",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 3382,
									"end": 3461,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3346,
									"end": 3463,
									"name": "tag",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 3346,
									"end": 3463,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3487,
									"end": 3561,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 3553,
									"end": 3560,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3544,
									"end": 3550,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3533,
									"end": 3542,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3529,
									"end": 3551,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3487,
									"end": 3561,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 3487,
									"end": 3561,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 3487,
									"end": 3561,
									"name": "tag",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 3487,
									"end": 3561,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3477,
									"end": 3561,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3477,
									"end": 3561,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3279,
									"end": 3571,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 3584,
									"end": 3764,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 3584,
									"end": 3764,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3632,
									"end": 3709,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3629,
									"end": 3630,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3622,
									"end": 3710,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3729,
									"end": 3733,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 3726,
									"end": 3727,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 3719,
									"end": 3734,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3753,
									"end": 3757,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 3750,
									"end": 3751,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3743,
									"end": 3758,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 3770,
									"end": 4090,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 3770,
									"end": 4090,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3814,
									"end": 3820,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3851,
									"end": 3852,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 3845,
									"end": 3849,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3841,
									"end": 3853,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 3831,
									"end": 3853,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3831,
									"end": 3853,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3898,
									"end": 3899,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3892,
									"end": 3896,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3888,
									"end": 3900,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3919,
									"end": 3937,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3909,
									"end": 3990,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 3909,
									"end": 3990,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3975,
									"end": 3979,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 3967,
									"end": 3973,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3963,
									"end": 3980,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3953,
									"end": 3980,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3953,
									"end": 3980,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3909,
									"end": 3990,
									"name": "tag",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 3909,
									"end": 3990,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4037,
									"end": 4039,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4029,
									"end": 4035,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4026,
									"end": 4040,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4003,
									"end": 4041,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 4000,
									"end": 4084,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 4000,
									"end": 4084,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4056,
									"end": 4074,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 4056,
									"end": 4074,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 4056,
									"end": 4074,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 4056,
									"end": 4074,
									"name": "tag",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 4056,
									"end": 4074,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4000,
									"end": 4084,
									"name": "tag",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 4000,
									"end": 4084,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3821,
									"end": 4090,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3770,
									"end": 4090,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3770,
									"end": 4090,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3770,
									"end": 4090,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3770,
									"end": 4090,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a0b0b44a932aeb9f89af0c752ce8d2697cad7a4d463610fd4b3167940842c49e64736f6c634300080d0033",
									".code": [
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH",
											"source": 0,
											"value": "893D20E8"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH",
											"source": 0,
											"value": "893D20E8"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH",
											"source": 0,
											"value": "A0712D68"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1836,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1736,
											"end": 1836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1736,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1736,
											"end": 1836,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1736,
											"end": 1836,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1736,
											"end": 1836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1836,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1736,
											"end": 1836,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1736,
											"end": 1836,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1736,
											"end": 1836,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1736,
											"end": 1836,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1736,
											"end": 1836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1836,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1736,
											"end": 1836,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1836,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1836,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1836,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1836,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1419,
											"end": 1511,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1419,
											"end": 1511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1419,
											"end": 1511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1419,
											"end": 1511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1419,
											"end": 1511,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1419,
											"end": 1511,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1419,
											"end": 1511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1419,
											"end": 1511,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1419,
											"end": 1511,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1419,
											"end": 1511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1419,
											"end": 1511,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1419,
											"end": 1511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1419,
											"end": 1511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1419,
											"end": 1511,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1419,
											"end": 1511,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1419,
											"end": 1511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1419,
											"end": 1511,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1419,
											"end": 1511,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1419,
											"end": 1511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1419,
											"end": 1511,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1419,
											"end": 1511,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1419,
											"end": 1511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1419,
											"end": 1511,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1657,
											"end": 1751,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1657,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1657,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1657,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1657,
											"end": 1751,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1657,
											"end": 1751,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1657,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1657,
											"end": 1751,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1197,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1103,
											"end": 1197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1103,
											"end": 1197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1103,
											"end": 1197,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1103,
											"end": 1197,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1103,
											"end": 1197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1197,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1103,
											"end": 1197,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1103,
											"end": 1197,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1103,
											"end": 1197,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1103,
											"end": 1197,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1103,
											"end": 1197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1197,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1103,
											"end": 1197,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1197,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1197,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1197,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1197,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1093,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1006,
											"end": 1093,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1006,
											"end": 1093,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1006,
											"end": 1093,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1006,
											"end": 1093,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1006,
											"end": 1093,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1006,
											"end": 1093,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1006,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1006,
											"end": 1093,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1006,
											"end": 1093,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1006,
											"end": 1093,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1006,
											"end": 1093,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1006,
											"end": 1093,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1006,
											"end": 1093,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1006,
											"end": 1093,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1006,
											"end": 1093,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1006,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1006,
											"end": 1093,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1006,
											"end": 1093,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1006,
											"end": 1093,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1006,
											"end": 1093,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1006,
											"end": 1093,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1006,
											"end": 1093,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1576,
											"end": 1672,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1576,
											"end": 1672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1576,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1576,
											"end": 1672,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1576,
											"end": 1672,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1576,
											"end": 1672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1672,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1576,
											"end": 1672,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1576,
											"end": 1672,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1576,
											"end": 1672,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1576,
											"end": 1672,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1576,
											"end": 1672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1672,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1576,
											"end": 1672,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1672,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1672,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1672,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1672,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1906,
											"end": 2098,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1906,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1906,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1906,
											"end": 2098,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1906,
											"end": 2098,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1906,
											"end": 2098,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1906,
											"end": 2098,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1906,
											"end": 2098,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1906,
											"end": 2098,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1906,
											"end": 2098,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1906,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1906,
											"end": 2098,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1906,
											"end": 2098,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1906,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1906,
											"end": 2098,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1906,
											"end": 2098,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1906,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1906,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1906,
											"end": 2098,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1906,
											"end": 2098,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1906,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1906,
											"end": 2098,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1306,
											"end": 1319,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1339,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 2926,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2944,
											"end": 2983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2953,
											"end": 2965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2953,
											"end": 2963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2953,
											"end": 2965,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2953,
											"end": 2965,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2953,
											"end": 2965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2967,
											"end": 2974,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2976,
											"end": 2982,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2944,
											"end": 2952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2944,
											"end": 2983,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2944,
											"end": 2983,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2944,
											"end": 2983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3001,
											"end": 3005,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2994,
											"end": 3005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2994,
											"end": 3005,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1736,
											"end": 1836,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1736,
											"end": 1836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1796,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1816,
											"end": 1828,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1816,
											"end": 1828,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1809,
											"end": 1828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1809,
											"end": 1828,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1836,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3616,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3633,
											"end": 3669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3643,
											"end": 3649,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3651,
											"end": 3660,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3662,
											"end": 3668,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3633,
											"end": 3642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3633,
											"end": 3669,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3633,
											"end": 3669,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3633,
											"end": 3669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3703,
											"end": 3709,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3724,
											"end": 3736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3724,
											"end": 3734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3724,
											"end": 3736,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3724,
											"end": 3736,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3724,
											"end": 3736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 3807,
											"end": 3813,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "PUSH data",
											"source": 0,
											"value": "4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E"
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3762,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3763,
											"end": 3769,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3784,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 3771,
											"end": 3781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3771,
											"end": 3783,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3771,
											"end": 3783,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 3771,
											"end": 3783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3784,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3751,
											"end": 3784,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3784,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3751,
											"end": 3784,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3784,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3784,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3784,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3751,
											"end": 3784,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3784,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3784,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3784,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3751,
											"end": 3784,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3784,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3751,
											"end": 3784,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3784,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 3751,
											"end": 3788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3680,
											"end": 3900,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3680,
											"end": 3900,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3680,
											"end": 3900,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3918,
											"end": 3922,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3911,
											"end": 3922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3911,
											"end": 3922,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1419,
											"end": 1511,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1419,
											"end": 1511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1474,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1494,
											"end": 1503,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1494,
											"end": 1503,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1494,
											"end": 1503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1494,
											"end": 1503,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1494,
											"end": 1503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1494,
											"end": 1503,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1494,
											"end": 1503,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1494,
											"end": 1503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1494,
											"end": 1503,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1494,
											"end": 1503,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1494,
											"end": 1503,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1503,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1419,
											"end": 1511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1419,
											"end": 1511,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 4440,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4458,
											"end": 4591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 4481,
											"end": 4493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 4481,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 4481,
											"end": 4493,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4481,
											"end": 4493,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 4481,
											"end": 4493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4515,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 4569,
											"end": 4579,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4541,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4530,
											"end": 4555,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4542,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 4542,
											"end": 4552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 4542,
											"end": 4554,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4542,
											"end": 4554,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 4542,
											"end": 4554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4555,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4530,
											"end": 4555,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4555,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4530,
											"end": 4555,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4555,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4555,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4530,
											"end": 4555,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4555,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4555,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4530,
											"end": 4555,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4555,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4530,
											"end": 4555,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4564,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4556,
											"end": 4563,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4564,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4530,
											"end": 4564,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4564,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4530,
											"end": 4564,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4564,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4564,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4530,
											"end": 4564,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4564,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4564,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4530,
											"end": 4564,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4564,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4530,
											"end": 4564,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4564,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 4530,
											"end": 4568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4580,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4580,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4530,
											"end": 4580,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4580,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4530,
											"end": 4580,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 4530,
											"end": 4580,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4458,
											"end": 4466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4458,
											"end": 4591,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4458,
											"end": 4591,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 4458,
											"end": 4591,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4609,
											"end": 4613,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4602,
											"end": 4613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1964,
											"end": 1971,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1991,
											"end": 2000,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1991,
											"end": 2009,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2001,
											"end": 2008,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1991,
											"end": 2009,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1991,
											"end": 2009,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1991,
											"end": 2009,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1991,
											"end": 2009,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1991,
											"end": 2009,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1991,
											"end": 2009,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1991,
											"end": 2009,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1991,
											"end": 2009,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1991,
											"end": 2009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1991,
											"end": 2009,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1991,
											"end": 2009,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1991,
											"end": 2009,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1991,
											"end": 2009,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1991,
											"end": 2009,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1991,
											"end": 2009,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1991,
											"end": 2009,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1984,
											"end": 2009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1984,
											"end": 2009,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1657,
											"end": 1751,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1657,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1237,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1237,
											"end": 1249,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1237,
											"end": 1249,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1237,
											"end": 1249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1249,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1226,
											"end": 1249,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 1226,
											"end": 1231,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1226,
											"end": 1233,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1226,
											"end": 1233,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 1226,
											"end": 1233,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1249,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1226,
											"end": 1249,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1249,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1722,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 1740,
											"end": 1741,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1722,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 1722,
											"end": 1743,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1722,
											"end": 1743,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 1722,
											"end": 1743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1657,
											"end": 1751,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1103,
											"end": 1197,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1103,
											"end": 1197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 1162,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1182,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1182,
											"end": 1187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1182,
											"end": 1189,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1182,
											"end": 1189,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1182,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1197,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1006,
											"end": 1093,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1006,
											"end": 1093,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1052,
											"end": 1059,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1079,
											"end": 1085,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1085,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1079,
											"end": 1085,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1085,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1085,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1085,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1079,
											"end": 1085,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1085,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1085,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1085,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1079,
											"end": 1085,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1072,
											"end": 1085,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1072,
											"end": 1085,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1006,
											"end": 1093,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1006,
											"end": 1093,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1576,
											"end": 1672,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1576,
											"end": 1672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1624,
											"end": 1637,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1657,
											"end": 1664,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1672,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5780,
											"end": 5784,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1237,
											"end": 1249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 1237,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1237,
											"end": 1249,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1237,
											"end": 1249,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 1237,
											"end": 1249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1249,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1226,
											"end": 1249,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 1226,
											"end": 1231,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1226,
											"end": 1233,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1226,
											"end": 1233,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 1226,
											"end": 1233,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1249,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1226,
											"end": 1249,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1249,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5797,
											"end": 5824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 5803,
											"end": 5815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 5803,
											"end": 5813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 5803,
											"end": 5815,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5803,
											"end": 5815,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 5803,
											"end": 5815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5817,
											"end": 5823,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5797,
											"end": 5802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 5797,
											"end": 5824,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5797,
											"end": 5824,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 5797,
											"end": 5824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5842,
											"end": 5846,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5835,
											"end": 5846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5835,
											"end": 5846,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5226,
											"end": 5230,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5248,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 5271,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 5271,
											"end": 5281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 5271,
											"end": 5283,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5271,
											"end": 5283,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 5271,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5298,
											"end": 5305,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 5377,
											"end": 5392,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "PUSH data",
											"source": 0,
											"value": "B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22"
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5331,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5320,
											"end": 5345,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5332,
											"end": 5344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 5332,
											"end": 5342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 5332,
											"end": 5344,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5332,
											"end": 5344,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 5332,
											"end": 5344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5345,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5320,
											"end": 5345,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5345,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5320,
											"end": 5345,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5345,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5345,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5345,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5320,
											"end": 5345,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5345,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5345,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5345,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5320,
											"end": 5345,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5345,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5320,
											"end": 5345,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5354,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5346,
											"end": 5353,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5354,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5320,
											"end": 5354,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5354,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5320,
											"end": 5354,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5354,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5354,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5354,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5320,
											"end": 5354,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5354,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5354,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5354,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5320,
											"end": 5354,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5354,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5320,
											"end": 5354,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5354,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 5320,
											"end": 5358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5248,
											"end": 5256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 5248,
											"end": 5476,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5248,
											"end": 5476,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 5248,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5494,
											"end": 5498,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5487,
											"end": 5498,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5487,
											"end": 5498,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2338,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2356,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2366,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2366,
											"end": 2376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2366,
											"end": 2378,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2366,
											"end": 2378,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2366,
											"end": 2378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2389,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2391,
											"end": 2397,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2356,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2356,
											"end": 2398,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2356,
											"end": 2398,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2356,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2420,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2409,
											"end": 2420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2420,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2607,
											"end": 2614,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2639,
											"end": 2650,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2651,
											"end": 2656,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2658,
											"end": 2665,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2632,
											"end": 2666,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2632,
											"end": 2666,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1906,
											"end": 2098,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1906,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 1237,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1237,
											"end": 1249,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1237,
											"end": 1249,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 1237,
											"end": 1249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1249,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1226,
											"end": 1249,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 1226,
											"end": 1231,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1226,
											"end": 1233,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1226,
											"end": 1233,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 1226,
											"end": 1233,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1249,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1226,
											"end": 1249,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1249,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2015,
											"end": 2016,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1995,
											"end": 2017,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1995,
											"end": 2017,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1995,
											"end": 2003,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1995,
											"end": 2017,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1995,
											"end": 2017,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1995,
											"end": 2017,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 1987,
											"end": 2060,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2060,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1987,
											"end": 2060,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2060,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1987,
											"end": 2060,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2060,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2060,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1987,
											"end": 2060,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 1987,
											"end": 2060,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 1987,
											"end": 2060,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1987,
											"end": 2060,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 1987,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2060,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1987,
											"end": 2060,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2060,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2060,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2060,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2060,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2060,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2060,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 1987,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2071,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 2081,
											"end": 2089,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2071,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2071,
											"end": 2090,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2071,
											"end": 2090,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 2071,
											"end": 2090,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1906,
											"end": 2098,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1906,
											"end": 2098,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 602,
											"end": 700,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 602,
											"end": 700,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 655,
											"end": 662,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 682,
											"end": 692,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 675,
											"end": 692,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 675,
											"end": 692,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 602,
											"end": 700,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 602,
											"end": 700,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8632,
											"end": 9004,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 8632,
											"end": 9004,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8777,
											"end": 8778,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8760,
											"end": 8779,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8760,
											"end": 8779,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8760,
											"end": 8765,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8760,
											"end": 8779,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8760,
											"end": 8779,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8760,
											"end": 8779,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8858,
											"end": 8859,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8839,
											"end": 8860,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8839,
											"end": 8860,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8839,
											"end": 8846,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8839,
											"end": 8860,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8839,
											"end": 8860,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8839,
											"end": 8860,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 8831,
											"end": 8899,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8899,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8831,
											"end": 8899,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8899,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8831,
											"end": 8899,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8899,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8899,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8831,
											"end": 8899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 8831,
											"end": 8899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 8831,
											"end": 8899,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8831,
											"end": 8899,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 8831,
											"end": 8899,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8899,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8831,
											"end": 8899,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8899,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8899,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8899,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8899,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8899,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 8831,
											"end": 8899,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 8948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8923,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8912,
											"end": 8930,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8924,
											"end": 8929,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8930,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8912,
											"end": 8930,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8930,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8912,
											"end": 8930,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8930,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8930,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8912,
											"end": 8930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8930,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8930,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8912,
											"end": 8930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8930,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8912,
											"end": 8930,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8939,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8931,
											"end": 8938,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8939,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8912,
											"end": 8939,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8939,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8912,
											"end": 8939,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8939,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8939,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8912,
											"end": 8939,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8939,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8939,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8912,
											"end": 8939,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8939,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8912,
											"end": 8939,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8948,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8980,
											"end": 8987,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8964,
											"end": 8996,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8964,
											"end": 8996,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8973,
											"end": 8978,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8964,
											"end": 8996,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8964,
											"end": 8996,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8964,
											"end": 8996,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 8989,
											"end": 8995,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8964,
											"end": 8996,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8964,
											"end": 8996,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8964,
											"end": 8996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 8964,
											"end": 8996,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8964,
											"end": 8996,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8964,
											"end": 8996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 8964,
											"end": 8996,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8964,
											"end": 8996,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 8964,
											"end": 8996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8964,
											"end": 8996,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8964,
											"end": 8996,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8964,
											"end": 8996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8964,
											"end": 8996,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8964,
											"end": 8996,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8964,
											"end": 8996,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8964,
											"end": 8996,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 8632,
											"end": 9004,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8632,
											"end": 9004,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8632,
											"end": 9004,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8632,
											"end": 9004,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6344,
											"end": 6886,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 6344,
											"end": 6886,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6494,
											"end": 6495,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6476,
											"end": 6496,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6476,
											"end": 6496,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6482,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6496,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6476,
											"end": 6496,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6496,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6468,
											"end": 6538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 6468,
											"end": 6538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6468,
											"end": 6538,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6468,
											"end": 6538,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6468,
											"end": 6538,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6468,
											"end": 6538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6468,
											"end": 6538,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6468,
											"end": 6538,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6468,
											"end": 6538,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6468,
											"end": 6538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 6468,
											"end": 6538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6468,
											"end": 6538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 6468,
											"end": 6538,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6468,
											"end": 6538,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 6468,
											"end": 6538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6468,
											"end": 6538,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6468,
											"end": 6538,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6468,
											"end": 6538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6468,
											"end": 6538,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6468,
											"end": 6538,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6468,
											"end": 6538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6468,
											"end": 6538,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6468,
											"end": 6538,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 6468,
											"end": 6538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6578,
											"end": 6579,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6557,
											"end": 6580,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6557,
											"end": 6580,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6557,
											"end": 6566,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6557,
											"end": 6580,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6557,
											"end": 6580,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6557,
											"end": 6580,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 6549,
											"end": 6620,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6620,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6549,
											"end": 6620,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6620,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6549,
											"end": 6620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6620,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6620,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6549,
											"end": 6620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 6549,
											"end": 6620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 6549,
											"end": 6620,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6549,
											"end": 6620,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 6549,
											"end": 6620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6620,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6549,
											"end": 6620,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6620,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6620,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6620,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6620,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 6549,
											"end": 6620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 6689,
											"end": 6695,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "PUSH data",
											"source": 0,
											"value": "A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73"
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6662,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6653,
											"end": 6670,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6663,
											"end": 6669,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6670,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6653,
											"end": 6670,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6670,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6653,
											"end": 6670,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6670,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6670,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6670,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6653,
											"end": 6670,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6670,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6670,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6670,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6670,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6653,
											"end": 6670,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6670,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6653,
											"end": 6670,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6670,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 6653,
											"end": 6674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6633,
											"end": 6642,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6633,
											"end": 6650,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6643,
											"end": 6649,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6633,
											"end": 6650,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6633,
											"end": 6650,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6633,
											"end": 6650,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6633,
											"end": 6650,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6633,
											"end": 6650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6633,
											"end": 6650,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6633,
											"end": 6650,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6633,
											"end": 6650,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6633,
											"end": 6650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6633,
											"end": 6650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6633,
											"end": 6650,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6633,
											"end": 6650,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6633,
											"end": 6650,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6633,
											"end": 6650,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6633,
											"end": 6650,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6633,
											"end": 6761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6633,
											"end": 6761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6633,
											"end": 6761,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6633,
											"end": 6761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 6820,
											"end": 6826,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6804,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6795,
											"end": 6815,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6805,
											"end": 6814,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6815,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6795,
											"end": 6815,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6815,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6795,
											"end": 6815,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6815,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6795,
											"end": 6815,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6815,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6795,
											"end": 6815,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6815,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6795,
											"end": 6815,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6815,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 6795,
											"end": 6819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6827,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6827,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6795,
											"end": 6827,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6827,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6795,
											"end": 6827,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 6795,
											"end": 6827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6781,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6772,
											"end": 6792,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6782,
											"end": 6791,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6792,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6772,
											"end": 6792,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6792,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6772,
											"end": 6792,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6792,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6792,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6792,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6772,
											"end": 6792,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6792,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6792,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6792,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6772,
											"end": 6792,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6792,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6772,
											"end": 6792,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6827,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6827,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6860,
											"end": 6869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6852,
											"end": 6858,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 6871,
											"end": 6877,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 6344,
											"end": 6886,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6344,
											"end": 6886,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6344,
											"end": 6886,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6344,
											"end": 6886,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5042,
											"end": 5282,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 5042,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5162,
											"end": 5169,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5220,
											"end": 5221,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5215,
											"end": 5216,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5215,
											"end": 5221,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 5215,
											"end": 5221,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5223,
											"end": 5235,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5207,
											"end": 5236,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5207,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 5207,
											"end": 5236,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5207,
											"end": 5236,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5207,
											"end": 5236,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5207,
											"end": 5236,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5207,
											"end": 5236,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5207,
											"end": 5236,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5207,
											"end": 5236,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5207,
											"end": 5236,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5207,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 5207,
											"end": 5236,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5207,
											"end": 5236,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5207,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 5207,
											"end": 5236,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5207,
											"end": 5236,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 5207,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5207,
											"end": 5236,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5207,
											"end": 5236,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5207,
											"end": 5236,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5207,
											"end": 5236,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5207,
											"end": 5236,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5207,
											"end": 5236,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5207,
											"end": 5236,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5207,
											"end": 5236,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 5207,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5207,
											"end": 5236,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5262,
											"end": 5263,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5258,
											"end": 5259,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5258,
											"end": 5263,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5251,
											"end": 5263,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5251,
											"end": 5263,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5042,
											"end": 5282,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5042,
											"end": 5282,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5042,
											"end": 5282,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5042,
											"end": 5282,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5042,
											"end": 5282,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5042,
											"end": 5282,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2763,
											"end": 2861,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 2763,
											"end": 2861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2821,
											"end": 2828,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2852,
											"end": 2853,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2848,
											"end": 2849,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2848,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 2848,
											"end": 2853,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2848,
											"end": 2853,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2848,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 2848,
											"end": 2853,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2848,
											"end": 2853,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 2848,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2841,
											"end": 2853,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2841,
											"end": 2853,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2763,
											"end": 2861,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2763,
											"end": 2861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2763,
											"end": 2861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2763,
											"end": 2861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2763,
											"end": 2861,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2106,
											"end": 2279,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2106,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2162,
											"end": 2178,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2181,
											"end": 2187,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2181,
											"end": 2187,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2181,
											"end": 2187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2181,
											"end": 2187,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2181,
											"end": 2187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2181,
											"end": 2187,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2181,
											"end": 2187,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2181,
											"end": 2187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2181,
											"end": 2187,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2181,
											"end": 2187,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2181,
											"end": 2187,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2162,
											"end": 2187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2162,
											"end": 2187,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2215,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2198,
											"end": 2204,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2198,
											"end": 2204,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2198,
											"end": 2215,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2198,
											"end": 2215,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2198,
											"end": 2215,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2198,
											"end": 2215,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2198,
											"end": 2215,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2198,
											"end": 2215,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2198,
											"end": 2215,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2198,
											"end": 2215,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2198,
											"end": 2215,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2198,
											"end": 2215,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2198,
											"end": 2215,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2198,
											"end": 2215,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2198,
											"end": 2215,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2198,
											"end": 2215,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2198,
											"end": 2215,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2198,
											"end": 2215,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2198,
											"end": 2215,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2198,
											"end": 2215,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2262,
											"end": 2270,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2231,
											"end": 2271,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2231,
											"end": 2271,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2252,
											"end": 2260,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2231,
											"end": 2271,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2231,
											"end": 2271,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2231,
											"end": 2271,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2231,
											"end": 2271,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2231,
											"end": 2271,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2231,
											"end": 2271,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2231,
											"end": 2271,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2231,
											"end": 2271,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2231,
											"end": 2271,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2231,
											"end": 2271,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2231,
											"end": 2271,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2231,
											"end": 2271,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2279,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2106,
											"end": 2279,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2106,
											"end": 2279,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7167,
											"end": 7475,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 7167,
											"end": 7475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7263,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7243,
											"end": 7264,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7243,
											"end": 7264,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7250,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7264,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7243,
											"end": 7264,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7264,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7235,
											"end": 7300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 7235,
											"end": 7300,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7235,
											"end": 7300,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7235,
											"end": 7300,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7235,
											"end": 7300,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7235,
											"end": 7300,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7235,
											"end": 7300,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7235,
											"end": 7300,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7235,
											"end": 7300,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7235,
											"end": 7300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 7235,
											"end": 7300,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7235,
											"end": 7300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 7235,
											"end": 7300,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7235,
											"end": 7300,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 7235,
											"end": 7300,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7235,
											"end": 7300,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7235,
											"end": 7300,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7235,
											"end": 7300,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7235,
											"end": 7300,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7235,
											"end": 7300,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7235,
											"end": 7300,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7235,
											"end": 7300,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7235,
											"end": 7300,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 7235,
											"end": 7300,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7328,
											"end": 7352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 7345,
											"end": 7351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7328,
											"end": 7340,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7328,
											"end": 7340,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7328,
											"end": 7344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 7328,
											"end": 7344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7328,
											"end": 7352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7328,
											"end": 7352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7328,
											"end": 7352,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7328,
											"end": 7352,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7328,
											"end": 7352,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7328,
											"end": 7352,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 7328,
											"end": 7352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7313,
											"end": 7325,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7313,
											"end": 7352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7313,
											"end": 7352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7313,
											"end": 7352,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7313,
											"end": 7352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 7407,
											"end": 7413,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7393,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7384,
											"end": 7402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7394,
											"end": 7401,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7402,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7384,
											"end": 7402,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7402,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7384,
											"end": 7402,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7402,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7384,
											"end": 7402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7402,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7384,
											"end": 7402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7384,
											"end": 7402,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7402,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 7384,
											"end": 7406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7414,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7414,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7384,
											"end": 7414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7414,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7384,
											"end": 7414,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 7384,
											"end": 7414,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7372,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7363,
											"end": 7381,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7373,
											"end": 7380,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7381,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7363,
											"end": 7381,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7381,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7363,
											"end": 7381,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7381,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7381,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7363,
											"end": 7381,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7381,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7381,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7363,
											"end": 7381,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7381,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7363,
											"end": 7381,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7414,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7414,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7414,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7451,
											"end": 7458,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 7467,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7430,
											"end": 7467,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7447,
											"end": 7448,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7430,
											"end": 7467,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7430,
											"end": 7467,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 7467,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7460,
											"end": 7466,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 7467,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7430,
											"end": 7467,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 7467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 7430,
											"end": 7467,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 7467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 7467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 7430,
											"end": 7467,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7430,
											"end": 7467,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 7430,
											"end": 7467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 7467,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7430,
											"end": 7467,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 7467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 7467,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 7467,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 7467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 7467,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 7167,
											"end": 7475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7167,
											"end": 7475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7167,
											"end": 7475,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 287,
											"end": 594,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 287,
											"end": 594,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 355,
											"end": 356,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 365,
											"end": 478,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 365,
											"end": 478,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 379,
											"end": 385,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 376,
											"end": 377,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 373,
											"end": 386,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 365,
											"end": 478,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 365,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 365,
											"end": 478,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 465,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 459,
											"end": 462,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 455,
											"end": 466,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 449,
											"end": 467,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 445,
											"end": 446,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 440,
											"end": 443,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 436,
											"end": 447,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 429,
											"end": 468,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 401,
											"end": 403,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 398,
											"end": 399,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 394,
											"end": 404,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 389,
											"end": 404,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 389,
											"end": 404,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 365,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 365,
											"end": 478,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 365,
											"end": 478,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 365,
											"end": 478,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 496,
											"end": 502,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 493,
											"end": 494,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 490,
											"end": 503,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 487,
											"end": 588,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 487,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 487,
											"end": 588,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 576,
											"end": 577,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 567,
											"end": 573,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 562,
											"end": 565,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 558,
											"end": 574,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 551,
											"end": 578,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 487,
											"end": 588,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 487,
											"end": 588,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 336,
											"end": 594,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 594,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 594,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 594,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 594,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 600,
											"end": 702,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 600,
											"end": 702,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 641,
											"end": 647,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 692,
											"end": 694,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 688,
											"end": 695,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 683,
											"end": 685,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 676,
											"end": 681,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 672,
											"end": 686,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 668,
											"end": 696,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 658,
											"end": 696,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 658,
											"end": 696,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 600,
											"end": 702,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 600,
											"end": 702,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 702,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 600,
											"end": 702,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 796,
											"end": 799,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 824,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 857,
											"end": 862,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 824,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 824,
											"end": 863,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 824,
											"end": 863,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 824,
											"end": 863,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 879,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 943,
											"end": 949,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 938,
											"end": 941,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 879,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 879,
											"end": 950,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 879,
											"end": 950,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 879,
											"end": 950,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 872,
											"end": 950,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 872,
											"end": 950,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 1004,
											"end": 1010,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 999,
											"end": 1002,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 992,
											"end": 996,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 985,
											"end": 990,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 981,
											"end": 997,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 1058,
											"end": 1064,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 1036,
											"end": 1065,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1065,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 1036,
											"end": 1065,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1031,
											"end": 1034,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1027,
											"end": 1066,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 800,
											"end": 1072,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1191,
											"end": 1195,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1229,
											"end": 1231,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1218,
											"end": 1227,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1206,
											"end": 1232,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1206,
											"end": 1232,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1278,
											"end": 1287,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1276,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1268,
											"end": 1288,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1264,
											"end": 1265,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1262,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1249,
											"end": 1266,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1289,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1306,
											"end": 1384,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 1379,
											"end": 1383,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1370,
											"end": 1376,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1306,
											"end": 1384,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 1306,
											"end": 1384,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1306,
											"end": 1384,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 1306,
											"end": 1384,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1298,
											"end": 1384,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1298,
											"end": 1384,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1478,
											"end": 1595,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 1478,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1587,
											"end": 1588,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1585,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1589,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1724,
											"end": 1850,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 1724,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1761,
											"end": 1768,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1801,
											"end": 1843,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1794,
											"end": 1799,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1790,
											"end": 1844,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1844,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1844,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1724,
											"end": 1850,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1724,
											"end": 1850,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1724,
											"end": 1850,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1724,
											"end": 1850,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1856,
											"end": 1952,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 1856,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1900,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 1940,
											"end": 1945,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1946,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1946,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1856,
											"end": 1952,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1856,
											"end": 1952,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1856,
											"end": 1952,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1856,
											"end": 1952,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1958,
											"end": 2080,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 1958,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2031,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 2049,
											"end": 2054,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2031,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 2031,
											"end": 2055,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2031,
											"end": 2055,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 2031,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2024,
											"end": 2029,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2021,
											"end": 2056,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2011,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 2011,
											"end": 2074,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2070,
											"end": 2071,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2067,
											"end": 2068,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2072,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2011,
											"end": 2074,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 2011,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1958,
											"end": 2080,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1958,
											"end": 2080,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2086,
											"end": 2225,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 2086,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2132,
											"end": 2137,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2170,
											"end": 2176,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2157,
											"end": 2177,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2148,
											"end": 2177,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2148,
											"end": 2177,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 2213,
											"end": 2218,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 2186,
											"end": 2219,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2186,
											"end": 2219,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 2186,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2225,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2225,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2225,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2225,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2225,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2231,
											"end": 2308,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 2231,
											"end": 2308,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2268,
											"end": 2275,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2297,
											"end": 2302,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2286,
											"end": 2302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2286,
											"end": 2302,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2231,
											"end": 2308,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2231,
											"end": 2308,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2231,
											"end": 2308,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2231,
											"end": 2308,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2314,
											"end": 2436,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 2314,
											"end": 2436,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 2405,
											"end": 2410,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 2387,
											"end": 2411,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2387,
											"end": 2411,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 2387,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2380,
											"end": 2385,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2412,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 2367,
											"end": 2430,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2426,
											"end": 2427,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2423,
											"end": 2424,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2416,
											"end": 2428,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2430,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 2367,
											"end": 2430,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2314,
											"end": 2436,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2314,
											"end": 2436,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2442,
											"end": 2581,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 2442,
											"end": 2581,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2488,
											"end": 2493,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2526,
											"end": 2532,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2513,
											"end": 2533,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2504,
											"end": 2533,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2504,
											"end": 2533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2542,
											"end": 2575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 2569,
											"end": 2574,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2542,
											"end": 2575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 2542,
											"end": 2575,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2542,
											"end": 2575,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 2542,
											"end": 2575,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2442,
											"end": 2581,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2442,
											"end": 2581,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2442,
											"end": 2581,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2442,
											"end": 2581,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2442,
											"end": 2581,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2655,
											"end": 2661,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2663,
											"end": 2669,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2712,
											"end": 2714,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2700,
											"end": 2709,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2691,
											"end": 2698,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2687,
											"end": 2710,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2683,
											"end": 2715,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2680,
											"end": 2799,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2680,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 2680,
											"end": 2799,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2680,
											"end": 2799,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 2680,
											"end": 2799,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2838,
											"end": 2839,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 2908,
											"end": 2915,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2899,
											"end": 2905,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 2897,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2884,
											"end": 2906,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2853,
											"end": 2916,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2853,
											"end": 2916,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2809,
											"end": 2926,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2965,
											"end": 2967,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2991,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 3036,
											"end": 3043,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3027,
											"end": 3033,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3016,
											"end": 3025,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3012,
											"end": 3034,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2991,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 2991,
											"end": 3044,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2991,
											"end": 3044,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 2991,
											"end": 3044,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2981,
											"end": 3044,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2981,
											"end": 3044,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2936,
											"end": 3054,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3067,
											"end": 3157,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 3067,
											"end": 3157,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3101,
											"end": 3108,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3149,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3150,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3130,
											"end": 3151,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3119,
											"end": 3151,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3119,
											"end": 3151,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3067,
											"end": 3157,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3067,
											"end": 3157,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3067,
											"end": 3157,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3067,
											"end": 3157,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3163,
											"end": 3272,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 3163,
											"end": 3272,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 3259,
											"end": 3264,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3239,
											"end": 3242,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3232,
											"end": 3266,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3163,
											"end": 3272,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3163,
											"end": 3272,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3163,
											"end": 3272,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3278,
											"end": 3488,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 3278,
											"end": 3488,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3365,
											"end": 3369,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3403,
											"end": 3405,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3392,
											"end": 3401,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3388,
											"end": 3406,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3380,
											"end": 3406,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3380,
											"end": 3406,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3416,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 3478,
											"end": 3479,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3467,
											"end": 3476,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3480,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3454,
											"end": 3460,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3416,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 3416,
											"end": 3481,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3416,
											"end": 3481,
											"name": "tag",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 3416,
											"end": 3481,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3278,
											"end": 3488,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3278,
											"end": 3488,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3278,
											"end": 3488,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3278,
											"end": 3488,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3278,
											"end": 3488,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3494,
											"end": 3612,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 3494,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3581,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 3599,
											"end": 3604,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3581,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 3581,
											"end": 3605,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3581,
											"end": 3605,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 3581,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3576,
											"end": 3579,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3569,
											"end": 3606,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3494,
											"end": 3612,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3494,
											"end": 3612,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3494,
											"end": 3612,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3618,
											"end": 3840,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 3618,
											"end": 3840,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3711,
											"end": 3715,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3751,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3738,
											"end": 3747,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3734,
											"end": 3752,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3726,
											"end": 3752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3726,
											"end": 3752,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3762,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 3830,
											"end": 3831,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3819,
											"end": 3828,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3815,
											"end": 3832,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3806,
											"end": 3812,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3762,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 3762,
											"end": 3833,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3762,
											"end": 3833,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 3762,
											"end": 3833,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3618,
											"end": 3840,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3618,
											"end": 3840,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3618,
											"end": 3840,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3618,
											"end": 3840,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3618,
											"end": 3840,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3923,
											"end": 3929,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3931,
											"end": 3937,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3939,
											"end": 3945,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3988,
											"end": 3990,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3976,
											"end": 3985,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3967,
											"end": 3974,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3963,
											"end": 3986,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3959,
											"end": 3991,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3956,
											"end": 4075,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3956,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 3956,
											"end": 4075,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3994,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 3994,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 3994,
											"end": 4073,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3994,
											"end": 4073,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 3994,
											"end": 4073,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3956,
											"end": 4075,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 3956,
											"end": 4075,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4114,
											"end": 4115,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4139,
											"end": 4192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 4184,
											"end": 4191,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4175,
											"end": 4181,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4164,
											"end": 4173,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4160,
											"end": 4182,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4139,
											"end": 4192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 4139,
											"end": 4192,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4139,
											"end": 4192,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 4139,
											"end": 4192,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4129,
											"end": 4192,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4129,
											"end": 4192,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4085,
											"end": 4202,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4241,
											"end": 4243,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4267,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 4312,
											"end": 4319,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4303,
											"end": 4309,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4292,
											"end": 4301,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4310,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4267,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 4267,
											"end": 4320,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4267,
											"end": 4320,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 4267,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4257,
											"end": 4320,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4257,
											"end": 4320,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4212,
											"end": 4330,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4369,
											"end": 4371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4395,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 4440,
											"end": 4447,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4431,
											"end": 4437,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4420,
											"end": 4429,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4416,
											"end": 4438,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4395,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 4395,
											"end": 4448,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4395,
											"end": 4448,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 4395,
											"end": 4448,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4385,
											"end": 4448,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4385,
											"end": 4448,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4340,
											"end": 4458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4471,
											"end": 4557,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 4471,
											"end": 4557,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4506,
											"end": 4513,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4546,
											"end": 4550,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4539,
											"end": 4544,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4535,
											"end": 4551,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4524,
											"end": 4551,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4524,
											"end": 4551,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4471,
											"end": 4557,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4471,
											"end": 4557,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4471,
											"end": 4557,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4471,
											"end": 4557,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4563,
											"end": 4675,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 4563,
											"end": 4675,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4646,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 4662,
											"end": 4667,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4646,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 4646,
											"end": 4668,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4646,
											"end": 4668,
											"name": "tag",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 4646,
											"end": 4668,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4641,
											"end": 4644,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4634,
											"end": 4669,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4563,
											"end": 4675,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4563,
											"end": 4675,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4563,
											"end": 4675,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4681,
											"end": 4895,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4681,
											"end": 4895,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4770,
											"end": 4774,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4808,
											"end": 4810,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4797,
											"end": 4806,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4793,
											"end": 4811,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4785,
											"end": 4811,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4785,
											"end": 4811,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 4885,
											"end": 4886,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4874,
											"end": 4883,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4870,
											"end": 4887,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4861,
											"end": 4867,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 4821,
											"end": 4888,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4821,
											"end": 4888,
											"name": "tag",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 4821,
											"end": 4888,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4681,
											"end": 4895,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4681,
											"end": 4895,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4681,
											"end": 4895,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4681,
											"end": 4895,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4681,
											"end": 4895,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4901,
											"end": 5230,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 4901,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4960,
											"end": 4966,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5009,
											"end": 5011,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4997,
											"end": 5006,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4988,
											"end": 4995,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4984,
											"end": 5007,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 5012,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4977,
											"end": 5096,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4977,
											"end": 5096,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 4977,
											"end": 5096,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5015,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 5015,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 5015,
											"end": 5094,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5015,
											"end": 5094,
											"name": "tag",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 5015,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4977,
											"end": 5096,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 4977,
											"end": 5096,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5135,
											"end": 5136,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5160,
											"end": 5213,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 5205,
											"end": 5212,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5196,
											"end": 5202,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5185,
											"end": 5194,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5181,
											"end": 5203,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5160,
											"end": 5213,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 5160,
											"end": 5213,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5160,
											"end": 5213,
											"name": "tag",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 5160,
											"end": 5213,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5150,
											"end": 5213,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5150,
											"end": 5213,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5106,
											"end": 5223,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4901,
											"end": 5230,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4901,
											"end": 5230,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4901,
											"end": 5230,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4901,
											"end": 5230,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4901,
											"end": 5230,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5236,
											"end": 5354,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 5236,
											"end": 5354,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5323,
											"end": 5347,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 5341,
											"end": 5346,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5323,
											"end": 5347,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 5323,
											"end": 5347,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5323,
											"end": 5347,
											"name": "tag",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 5323,
											"end": 5347,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5318,
											"end": 5321,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5311,
											"end": 5348,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5236,
											"end": 5354,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5236,
											"end": 5354,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5236,
											"end": 5354,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5360,
											"end": 5582,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 5360,
											"end": 5582,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5453,
											"end": 5457,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5491,
											"end": 5493,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5480,
											"end": 5489,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5468,
											"end": 5494,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5468,
											"end": 5494,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5504,
											"end": 5575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 5572,
											"end": 5573,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5561,
											"end": 5570,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5557,
											"end": 5574,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5548,
											"end": 5554,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5504,
											"end": 5575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 5504,
											"end": 5575,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5504,
											"end": 5575,
											"name": "tag",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 5504,
											"end": 5575,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5360,
											"end": 5582,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5360,
											"end": 5582,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5360,
											"end": 5582,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5360,
											"end": 5582,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5360,
											"end": 5582,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5588,
											"end": 5917,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 5588,
											"end": 5917,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5647,
											"end": 5653,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5696,
											"end": 5698,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5684,
											"end": 5693,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5675,
											"end": 5682,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5671,
											"end": 5694,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5667,
											"end": 5699,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5664,
											"end": 5783,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5664,
											"end": 5783,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 5664,
											"end": 5783,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5702,
											"end": 5781,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 5702,
											"end": 5781,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 5702,
											"end": 5781,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5702,
											"end": 5781,
											"name": "tag",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 5702,
											"end": 5781,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5664,
											"end": 5783,
											"name": "tag",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 5664,
											"end": 5783,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5822,
											"end": 5823,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5847,
											"end": 5900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 5892,
											"end": 5899,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5883,
											"end": 5889,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5872,
											"end": 5881,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5868,
											"end": 5890,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5847,
											"end": 5900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 5847,
											"end": 5900,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5847,
											"end": 5900,
											"name": "tag",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 5847,
											"end": 5900,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5837,
											"end": 5900,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5837,
											"end": 5900,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5910,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5588,
											"end": 5917,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5588,
											"end": 5917,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5588,
											"end": 5917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5588,
											"end": 5917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5588,
											"end": 5917,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5923,
											"end": 6397,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 5923,
											"end": 6397,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5991,
											"end": 5997,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5999,
											"end": 6005,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6048,
											"end": 6050,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6036,
											"end": 6045,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6027,
											"end": 6034,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6023,
											"end": 6046,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6019,
											"end": 6051,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 6016,
											"end": 6135,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6016,
											"end": 6135,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 6016,
											"end": 6135,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6054,
											"end": 6133,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 6054,
											"end": 6133,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 6054,
											"end": 6133,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6054,
											"end": 6133,
											"name": "tag",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 6054,
											"end": 6133,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6016,
											"end": 6135,
											"name": "tag",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 6016,
											"end": 6135,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6174,
											"end": 6175,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6199,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 6244,
											"end": 6251,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6235,
											"end": 6241,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6224,
											"end": 6233,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6220,
											"end": 6242,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6199,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 6199,
											"end": 6252,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6199,
											"end": 6252,
											"name": "tag",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 6199,
											"end": 6252,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6189,
											"end": 6252,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6189,
											"end": 6252,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6145,
											"end": 6262,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6301,
											"end": 6303,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6327,
											"end": 6380,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 6372,
											"end": 6379,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6363,
											"end": 6369,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6352,
											"end": 6361,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6348,
											"end": 6370,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6327,
											"end": 6380,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 6327,
											"end": 6380,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6327,
											"end": 6380,
											"name": "tag",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 6327,
											"end": 6380,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6272,
											"end": 6390,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5923,
											"end": 6397,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5923,
											"end": 6397,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5923,
											"end": 6397,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5923,
											"end": 6397,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5923,
											"end": 6397,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5923,
											"end": 6397,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6403,
											"end": 6583,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 6403,
											"end": 6583,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6451,
											"end": 6528,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6448,
											"end": 6449,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6441,
											"end": 6529,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6548,
											"end": 6552,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 6545,
											"end": 6546,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6538,
											"end": 6553,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6572,
											"end": 6576,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6569,
											"end": 6570,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6562,
											"end": 6577,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6589,
											"end": 6909,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 6589,
											"end": 6909,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6639,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6670,
											"end": 6671,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 6664,
											"end": 6668,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6660,
											"end": 6672,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6650,
											"end": 6672,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6650,
											"end": 6672,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6717,
											"end": 6718,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6711,
											"end": 6715,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6707,
											"end": 6719,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6738,
											"end": 6756,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6728,
											"end": 6809,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 6728,
											"end": 6809,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6794,
											"end": 6798,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 6786,
											"end": 6792,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6782,
											"end": 6799,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6772,
											"end": 6799,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6772,
											"end": 6799,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6728,
											"end": 6809,
											"name": "tag",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 6728,
											"end": 6809,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6856,
											"end": 6858,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6848,
											"end": 6854,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6845,
											"end": 6859,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6825,
											"end": 6843,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6822,
											"end": 6860,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6819,
											"end": 6903,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 6819,
											"end": 6903,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6875,
											"end": 6893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 6875,
											"end": 6893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 6875,
											"end": 6893,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6875,
											"end": 6893,
											"name": "tag",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 6875,
											"end": 6893,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6819,
											"end": 6903,
											"name": "tag",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 6819,
											"end": 6903,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6640,
											"end": 6909,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6589,
											"end": 6909,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6589,
											"end": 6909,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6589,
											"end": 6909,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6589,
											"end": 6909,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6915,
											"end": 7097,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 6915,
											"end": 7097,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7055,
											"end": 7089,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 7051,
											"end": 7052,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7043,
											"end": 7049,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7039,
											"end": 7053,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7032,
											"end": 7090,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6915,
											"end": 7097,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6915,
											"end": 7097,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7103,
											"end": 7469,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 7103,
											"end": 7469,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7245,
											"end": 7248,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7266,
											"end": 7333,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 7330,
											"end": 7332,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7325,
											"end": 7328,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7266,
											"end": 7333,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 7266,
											"end": 7333,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7266,
											"end": 7333,
											"name": "tag",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 7266,
											"end": 7333,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7259,
											"end": 7333,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7259,
											"end": 7333,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7342,
											"end": 7435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 7431,
											"end": 7434,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7342,
											"end": 7435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 7342,
											"end": 7435,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7342,
											"end": 7435,
											"name": "tag",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 7342,
											"end": 7435,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7460,
											"end": 7462,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7455,
											"end": 7458,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7451,
											"end": 7463,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7444,
											"end": 7463,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7444,
											"end": 7463,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7103,
											"end": 7469,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7103,
											"end": 7469,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7103,
											"end": 7469,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7103,
											"end": 7469,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7475,
											"end": 7894,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 7475,
											"end": 7894,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7641,
											"end": 7645,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7679,
											"end": 7681,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7668,
											"end": 7677,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7664,
											"end": 7682,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7656,
											"end": 7682,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7656,
											"end": 7682,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7728,
											"end": 7737,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7722,
											"end": 7726,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7718,
											"end": 7738,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7714,
											"end": 7715,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7703,
											"end": 7712,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7699,
											"end": 7716,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7692,
											"end": 7739,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7756,
											"end": 7887,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 7882,
											"end": 7886,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7756,
											"end": 7887,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 7756,
											"end": 7887,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7756,
											"end": 7887,
											"name": "tag",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 7756,
											"end": 7887,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7748,
											"end": 7887,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7748,
											"end": 7887,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7475,
											"end": 7894,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7475,
											"end": 7894,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7475,
											"end": 7894,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7475,
											"end": 7894,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7900,
											"end": 8125,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 7900,
											"end": 8125,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8040,
											"end": 8074,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 8036,
											"end": 8037,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8028,
											"end": 8034,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8024,
											"end": 8038,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8017,
											"end": 8075,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8109,
											"end": 8117,
											"name": "PUSH",
											"source": 6,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8104,
											"end": 8106,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8096,
											"end": 8102,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8092,
											"end": 8107,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8085,
											"end": 8118,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 8125,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 8125,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8131,
											"end": 8497,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 8131,
											"end": 8497,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8273,
											"end": 8276,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8294,
											"end": 8361,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 8358,
											"end": 8360,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 8353,
											"end": 8356,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8294,
											"end": 8361,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 8294,
											"end": 8361,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8294,
											"end": 8361,
											"name": "tag",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 8294,
											"end": 8361,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8287,
											"end": 8361,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8287,
											"end": 8361,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 8463,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 8459,
											"end": 8462,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 8463,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 8370,
											"end": 8463,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8370,
											"end": 8463,
											"name": "tag",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 8370,
											"end": 8463,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8488,
											"end": 8490,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8483,
											"end": 8486,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8479,
											"end": 8491,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8472,
											"end": 8491,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8472,
											"end": 8491,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8131,
											"end": 8497,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8131,
											"end": 8497,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8131,
											"end": 8497,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8131,
											"end": 8497,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8503,
											"end": 8922,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 8503,
											"end": 8922,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8669,
											"end": 8673,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8707,
											"end": 8709,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8696,
											"end": 8705,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8692,
											"end": 8710,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8684,
											"end": 8710,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8684,
											"end": 8710,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8756,
											"end": 8765,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8750,
											"end": 8754,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8746,
											"end": 8766,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8742,
											"end": 8743,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8731,
											"end": 8740,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8727,
											"end": 8744,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8720,
											"end": 8767,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8784,
											"end": 8915,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 8910,
											"end": 8914,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8784,
											"end": 8915,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 8784,
											"end": 8915,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8784,
											"end": 8915,
											"name": "tag",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 8784,
											"end": 8915,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8776,
											"end": 8915,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8776,
											"end": 8915,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8503,
											"end": 8922,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8503,
											"end": 8922,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8503,
											"end": 8922,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8503,
											"end": 8922,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8928,
											"end": 9151,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 8928,
											"end": 9151,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9068,
											"end": 9102,
											"name": "PUSH",
											"source": 6,
											"value": "42455032303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 9064,
											"end": 9065,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9056,
											"end": 9062,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9052,
											"end": 9066,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9045,
											"end": 9103,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9137,
											"end": 9143,
											"name": "PUSH",
											"source": 6,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9132,
											"end": 9134,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9124,
											"end": 9130,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9120,
											"end": 9135,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9113,
											"end": 9144,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8928,
											"end": 9151,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8928,
											"end": 9151,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9157,
											"end": 9523,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 9157,
											"end": 9523,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9299,
											"end": 9302,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9320,
											"end": 9387,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 9384,
											"end": 9386,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 9379,
											"end": 9382,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9320,
											"end": 9387,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 9320,
											"end": 9387,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9320,
											"end": 9387,
											"name": "tag",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 9320,
											"end": 9387,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9313,
											"end": 9387,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9313,
											"end": 9387,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9396,
											"end": 9489,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 9485,
											"end": 9488,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9396,
											"end": 9489,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 9396,
											"end": 9489,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9396,
											"end": 9489,
											"name": "tag",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 9396,
											"end": 9489,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9514,
											"end": 9516,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9509,
											"end": 9512,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9505,
											"end": 9517,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9498,
											"end": 9517,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9498,
											"end": 9517,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9157,
											"end": 9523,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9157,
											"end": 9523,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9157,
											"end": 9523,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9157,
											"end": 9523,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9529,
											"end": 9948,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 9529,
											"end": 9948,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9695,
											"end": 9699,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9733,
											"end": 9735,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9722,
											"end": 9731,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9718,
											"end": 9736,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9710,
											"end": 9736,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9710,
											"end": 9736,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9782,
											"end": 9791,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9776,
											"end": 9780,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9772,
											"end": 9792,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9768,
											"end": 9769,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9757,
											"end": 9766,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9753,
											"end": 9770,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9746,
											"end": 9793,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9810,
											"end": 9941,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 9936,
											"end": 9940,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9810,
											"end": 9941,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 9810,
											"end": 9941,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9810,
											"end": 9941,
											"name": "tag",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 9810,
											"end": 9941,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9802,
											"end": 9941,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9802,
											"end": 9941,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9529,
											"end": 9948,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9529,
											"end": 9948,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9529,
											"end": 9948,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9529,
											"end": 9948,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9954,
											"end": 10175,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 9954,
											"end": 10175,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10094,
											"end": 10128,
											"name": "PUSH",
											"source": 6,
											"value": "42455032303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 10090,
											"end": 10091,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10082,
											"end": 10088,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10078,
											"end": 10092,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10071,
											"end": 10129,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10163,
											"end": 10167,
											"name": "PUSH",
											"source": 6,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10158,
											"end": 10160,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10150,
											"end": 10156,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10146,
											"end": 10161,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10139,
											"end": 10168,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9954,
											"end": 10175,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9954,
											"end": 10175,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10181,
											"end": 10547,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 10181,
											"end": 10547,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10323,
											"end": 10326,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10344,
											"end": 10411,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 10408,
											"end": 10410,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 10403,
											"end": 10406,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10344,
											"end": 10411,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 10344,
											"end": 10411,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10344,
											"end": 10411,
											"name": "tag",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 10344,
											"end": 10411,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10337,
											"end": 10411,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10337,
											"end": 10411,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10420,
											"end": 10513,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 10509,
											"end": 10512,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10420,
											"end": 10513,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 10420,
											"end": 10513,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10420,
											"end": 10513,
											"name": "tag",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 10420,
											"end": 10513,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10538,
											"end": 10540,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10533,
											"end": 10536,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10529,
											"end": 10541,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10522,
											"end": 10541,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10522,
											"end": 10541,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10181,
											"end": 10547,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10181,
											"end": 10547,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10181,
											"end": 10547,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10181,
											"end": 10547,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10553,
											"end": 10972,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 10553,
											"end": 10972,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10719,
											"end": 10723,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10757,
											"end": 10759,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10746,
											"end": 10755,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10742,
											"end": 10760,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10734,
											"end": 10760,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10734,
											"end": 10760,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10806,
											"end": 10815,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10800,
											"end": 10804,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10796,
											"end": 10816,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10792,
											"end": 10793,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10781,
											"end": 10790,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10777,
											"end": 10794,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10770,
											"end": 10817,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10834,
											"end": 10965,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 10960,
											"end": 10964,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10834,
											"end": 10965,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 10834,
											"end": 10965,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10834,
											"end": 10965,
											"name": "tag",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 10834,
											"end": 10965,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10826,
											"end": 10965,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10826,
											"end": 10965,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10553,
											"end": 10972,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10553,
											"end": 10972,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10553,
											"end": 10972,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10553,
											"end": 10972,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10978,
											"end": 11202,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 10978,
											"end": 11202,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11118,
											"end": 11152,
											"name": "PUSH",
											"source": 6,
											"value": "42455032303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 11114,
											"end": 11115,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11106,
											"end": 11112,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11102,
											"end": 11116,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11095,
											"end": 11153,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11187,
											"end": 11194,
											"name": "PUSH",
											"source": 6,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11182,
											"end": 11184,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11174,
											"end": 11180,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11170,
											"end": 11185,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11163,
											"end": 11195,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10978,
											"end": 11202,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10978,
											"end": 11202,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11208,
											"end": 11574,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 11208,
											"end": 11574,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11350,
											"end": 11353,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11371,
											"end": 11438,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 11435,
											"end": 11437,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 11430,
											"end": 11433,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11371,
											"end": 11438,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 11371,
											"end": 11438,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11371,
											"end": 11438,
											"name": "tag",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 11371,
											"end": 11438,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11364,
											"end": 11438,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11364,
											"end": 11438,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11447,
											"end": 11540,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 11536,
											"end": 11539,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11447,
											"end": 11540,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 11447,
											"end": 11540,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11447,
											"end": 11540,
											"name": "tag",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 11447,
											"end": 11540,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11565,
											"end": 11567,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11560,
											"end": 11563,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11556,
											"end": 11568,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11549,
											"end": 11568,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11549,
											"end": 11568,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11208,
											"end": 11574,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11208,
											"end": 11574,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11208,
											"end": 11574,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11208,
											"end": 11574,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11580,
											"end": 11999,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 11580,
											"end": 11999,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11746,
											"end": 11750,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11784,
											"end": 11786,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11773,
											"end": 11782,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11769,
											"end": 11787,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11761,
											"end": 11787,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11761,
											"end": 11787,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11833,
											"end": 11842,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11827,
											"end": 11831,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11823,
											"end": 11843,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11819,
											"end": 11820,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11808,
											"end": 11817,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11804,
											"end": 11821,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11797,
											"end": 11844,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11861,
											"end": 11992,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 11987,
											"end": 11991,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11861,
											"end": 11992,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 11861,
											"end": 11992,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11861,
											"end": 11992,
											"name": "tag",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 11861,
											"end": 11992,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11853,
											"end": 11992,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11853,
											"end": 11992,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11580,
											"end": 11999,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11580,
											"end": 11999,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11580,
											"end": 11999,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11580,
											"end": 11999,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 12005,
											"end": 12227,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 12005,
											"end": 12227,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12145,
											"end": 12179,
											"name": "PUSH",
											"source": 6,
											"value": "42455032303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 12141,
											"end": 12142,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12133,
											"end": 12139,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12129,
											"end": 12143,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12122,
											"end": 12180,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12214,
											"end": 12219,
											"name": "PUSH",
											"source": 6,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12209,
											"end": 12211,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12201,
											"end": 12207,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12197,
											"end": 12212,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12190,
											"end": 12220,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12005,
											"end": 12227,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12005,
											"end": 12227,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 12233,
											"end": 12599,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 12233,
											"end": 12599,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12375,
											"end": 12378,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12396,
											"end": 12463,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 12460,
											"end": 12462,
											"name": "PUSH",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 12455,
											"end": 12458,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12396,
											"end": 12463,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 12396,
											"end": 12463,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 12396,
											"end": 12463,
											"name": "tag",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 12396,
											"end": 12463,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12389,
											"end": 12463,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12389,
											"end": 12463,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12472,
											"end": 12565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 12561,
											"end": 12564,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12472,
											"end": 12565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 12472,
											"end": 12565,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 12472,
											"end": 12565,
											"name": "tag",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 12472,
											"end": 12565,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12590,
											"end": 12592,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12585,
											"end": 12588,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12581,
											"end": 12593,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12574,
											"end": 12593,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12574,
											"end": 12593,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12233,
											"end": 12599,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12233,
											"end": 12599,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12233,
											"end": 12599,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12233,
											"end": 12599,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 12605,
											"end": 13024,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 12605,
											"end": 13024,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12771,
											"end": 12775,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12809,
											"end": 12811,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12798,
											"end": 12807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12794,
											"end": 12812,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12786,
											"end": 12812,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12786,
											"end": 12812,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12858,
											"end": 12867,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12852,
											"end": 12856,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12848,
											"end": 12868,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12844,
											"end": 12845,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12833,
											"end": 12842,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12829,
											"end": 12846,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12822,
											"end": 12869,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12886,
											"end": 13017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 13012,
											"end": 13016,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12886,
											"end": 13017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 12886,
											"end": 13017,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 12886,
											"end": 13017,
											"name": "tag",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 12886,
											"end": 13017,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12878,
											"end": 13017,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12878,
											"end": 13017,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12605,
											"end": 13024,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12605,
											"end": 13024,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12605,
											"end": 13024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12605,
											"end": 13024,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 13030,
											"end": 13210,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 13030,
											"end": 13210,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13078,
											"end": 13155,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13075,
											"end": 13076,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13068,
											"end": 13156,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13175,
											"end": 13179,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 13172,
											"end": 13173,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 13165,
											"end": 13180,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13199,
											"end": 13203,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 13196,
											"end": 13197,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13189,
											"end": 13204,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 13216,
											"end": 13521,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 13216,
											"end": 13521,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13256,
											"end": 13259,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13275,
											"end": 13295,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 13293,
											"end": 13294,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13275,
											"end": 13295,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 13275,
											"end": 13295,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 13275,
											"end": 13295,
											"name": "tag",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 13275,
											"end": 13295,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13270,
											"end": 13295,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13270,
											"end": 13295,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13309,
											"end": 13329,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 13327,
											"end": 13328,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13309,
											"end": 13329,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 13309,
											"end": 13329,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 13309,
											"end": 13329,
											"name": "tag",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 13309,
											"end": 13329,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13304,
											"end": 13329,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13304,
											"end": 13329,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13463,
											"end": 13464,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13395,
											"end": 13461,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13391,
											"end": 13465,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 13388,
											"end": 13389,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13385,
											"end": 13466,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 13382,
											"end": 13489,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 13382,
											"end": 13489,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 13382,
											"end": 13489,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13469,
											"end": 13487,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 13469,
											"end": 13487,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 13469,
											"end": 13487,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 13469,
											"end": 13487,
											"name": "tag",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 13469,
											"end": 13487,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13382,
											"end": 13489,
											"name": "tag",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 13382,
											"end": 13489,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13513,
											"end": 13514,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13510,
											"end": 13511,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13506,
											"end": 13515,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13499,
											"end": 13515,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13499,
											"end": 13515,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13216,
											"end": 13521,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13216,
											"end": 13521,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13216,
											"end": 13521,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13216,
											"end": 13521,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13216,
											"end": 13521,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 13527,
											"end": 13708,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 13527,
											"end": 13708,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13667,
											"end": 13700,
											"name": "PUSH",
											"source": 6,
											"value": "42455032303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 13663,
											"end": 13664,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13655,
											"end": 13661,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13651,
											"end": 13665,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13644,
											"end": 13701,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13527,
											"end": 13708,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13527,
											"end": 13708,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 13714,
											"end": 14080,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 13714,
											"end": 14080,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13856,
											"end": 13859,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13877,
											"end": 13944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 13941,
											"end": 13943,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 13936,
											"end": 13939,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13877,
											"end": 13944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 13877,
											"end": 13944,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 13877,
											"end": 13944,
											"name": "tag",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 13877,
											"end": 13944,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13870,
											"end": 13944,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13870,
											"end": 13944,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13953,
											"end": 14046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 14042,
											"end": 14045,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13953,
											"end": 14046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 13953,
											"end": 14046,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 13953,
											"end": 14046,
											"name": "tag",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 13953,
											"end": 14046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14071,
											"end": 14073,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14066,
											"end": 14069,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14062,
											"end": 14074,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14055,
											"end": 14074,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14055,
											"end": 14074,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13714,
											"end": 14080,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13714,
											"end": 14080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13714,
											"end": 14080,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13714,
											"end": 14080,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 14086,
											"end": 14505,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 14086,
											"end": 14505,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14252,
											"end": 14256,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14290,
											"end": 14292,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14279,
											"end": 14288,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14275,
											"end": 14293,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14267,
											"end": 14293,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14267,
											"end": 14293,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14339,
											"end": 14348,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14333,
											"end": 14337,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14329,
											"end": 14349,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 14325,
											"end": 14326,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14314,
											"end": 14323,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14310,
											"end": 14327,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14303,
											"end": 14350,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14367,
											"end": 14498,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 14493,
											"end": 14497,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14367,
											"end": 14498,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 14367,
											"end": 14498,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 14367,
											"end": 14498,
											"name": "tag",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 14367,
											"end": 14498,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14359,
											"end": 14498,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14359,
											"end": 14498,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14086,
											"end": 14505,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14086,
											"end": 14505,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14086,
											"end": 14505,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14086,
											"end": 14505,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										}
									],
									".data": {
										"4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getOwner()": "893d20e8",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {BEP20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {BEP20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {BEP20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(uint256)\":{\"details\":\"Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply. Requirements - `msg.sender` must be the token owner\"},\"name()\":{\"details\":\"Returns the token name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"See {BEP20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BEP20.sol\":\"BEP20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BEP20.sol\":{\"keccak256\":\"0x325eb627eb1acb2bf55f0836f9f460261fa4b408d04878df038260201b5d9c95\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://774f25742454ecfd4342eb5128ddf5d241e76982981629334b740b1eb69b3404\",\"dweb:/ipfs/QmdnBm7kHAN3wauyv5JrByt1yuehBUeiV5e9dw6QNwQ48S\"]},\"contracts/IBEP20.sol\":{\"keccak256\":\"0x08dc42fc8715fc0cee50f6d2fcd29a657d23f6144968197f865e5c0f94028ec8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://79c1cb76e371cbb5adf34470dfea7fc66ca48a43b29ad3f136eee6f900e6cee3\",\"dweb:/ipfs/QmQBf7YZ4LpKpp1yQcxsAzrdHzuAbmn2cf8qb9ky5WNp2D\"]},\"contracts/access/Ownable.sol\":{\"keccak256\":\"0xe3b365539b1e8a4a0dace6efed1c6364d3c3cb8b260b8717a7524ad6c5d20e86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://567953dca5bb4fbd23e93733d29b58232370935eb9c9dad09b4a8513c383ec62\",\"dweb:/ipfs/QmNwVwQwC8HZ5oL9g8QypjNwwYxRUxqp8hgfcdMdHpnFPR\"]},\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0xdf297ae5498c5a335398fac67c7dcb4479f2a0954c881ece4338637b44942a58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58c779928cd68ac59867d57bea855016f4d06e47c2d693a60230aa5bbf0acec1\",\"dweb:/ipfs/QmPWYTn5eNUUGiyCm3EJx4mEQPRh9baePiQ1oztr4bTLhr\"]},\"contracts/utils/Address.sol\":{\"keccak256\":\"0x626b62cca5971be750732929d782b30e1277e36dd6b4ec2a90ddbbb61c650066\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07c78b7f7894e0444db2c6c4c73e4eddb78beed6bd65cd6089e2e9434bea83b0\",\"dweb:/ipfs/QmczQU7ihPMBhAmUM9MxnumRWwwvnTiDMDHp3nJSgYXQim\"]},\"contracts/utils/Context.sol\":{\"keccak256\":\"0x851c3d8e30ea37c35947f620812e2e18718ac9312ef8d84b643fc46d94269540\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c02fec97a236e7eda6646bb8aef30a00f134710ffc29f1965c27dc257cc58a3\",\"dweb:/ipfs/QmNoqNHYS9HP9u8J3bG5kVztMNcQ42kYiiiKDN8tY94gvY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 631,
								"contract": "contracts/BEP20.sol:BEP20",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 19,
								"contract": "contracts/BEP20.sol:BEP20",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 25,
								"contract": "contracts/BEP20.sol:BEP20",
								"label": "_allowances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 27,
								"contract": "contracts/BEP20.sol:BEP20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 29,
								"contract": "contracts/BEP20.sol:BEP20",
								"label": "_decimals",
								"offset": 0,
								"slot": "4",
								"type": "t_uint8"
							},
							{
								"astId": 31,
								"contract": "contracts/BEP20.sol:BEP20",
								"label": "_symbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 33,
								"contract": "contracts/BEP20.sol:BEP20",
								"label": "_name",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IBEP20.sol": {
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IBEP20.sol\":\"IBEP20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IBEP20.sol\":{\"keccak256\":\"0x08dc42fc8715fc0cee50f6d2fcd29a657d23f6144968197f865e5c0f94028ec8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://79c1cb76e371cbb5adf34470dfea7fc66ca48a43b29ad3f136eee6f900e6cee3\",\"dweb:/ipfs/QmQBf7YZ4LpKpp1yQcxsAzrdHzuAbmn2cf8qb9ky5WNp2D\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/access/Ownable.sol\":{\"keccak256\":\"0xe3b365539b1e8a4a0dace6efed1c6364d3c3cb8b260b8717a7524ad6c5d20e86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://567953dca5bb4fbd23e93733d29b58232370935eb9c9dad09b4a8513c383ec62\",\"dweb:/ipfs/QmNwVwQwC8HZ5oL9g8QypjNwwYxRUxqp8hgfcdMdHpnFPR\"]},\"contracts/utils/Context.sol\":{\"keccak256\":\"0x851c3d8e30ea37c35947f620812e2e18718ac9312ef8d84b643fc46d94269540\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c02fec97a236e7eda6646bb8aef30a00f134710ffc29f1965c27dc257cc58a3\",\"dweb:/ipfs/QmNoqNHYS9HP9u8J3bG5kVztMNcQ42kYiiiKDN8tY94gvY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 631,
								"contract": "contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libraries/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/SafeMath.sol\":412:6924  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/SafeMath.sol\":412:6924  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ead5b36528a3cc62daeb0c073f14f6d4af331d0d7cf2c05a66360cc357a831a264736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ead5b36528a3cc62daeb0c073f14f6d4af331d0d7cf2c05a66360cc357a831a264736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA 0xD5 0xB3 PUSH6 0x28A3CC62DAEB 0xC SMOD EXTCODEHASH EQ 0xF6 0xD4 0xAF CALLER SAR 0xD PUSH29 0xF2C05A66360CC357A831A264736F6C634300080D003300000000000000 ",
							"sourceMap": "412:6512:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ead5b36528a3cc62daeb0c073f14f6d4af331d0d7cf2c05a66360cc357a831a264736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA 0xD5 0xB3 PUSH6 0x28A3CC62DAEB 0xC SMOD EXTCODEHASH EQ 0xF6 0xD4 0xAF CALLER SAR 0xD PUSH29 0xF2C05A66360CC357A831A264736F6C634300080D003300000000000000 ",
							"sourceMap": "412:6512:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 412,
									"end": 6924,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ead5b36528a3cc62daeb0c073f14f6d4af331d0d7cf2c05a66360cc357a831a264736f6c634300080d0033",
									".code": [
										{
											"begin": 412,
											"end": 6924,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 412,
											"end": 6924,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 412,
											"end": 6924,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 412,
											"end": 6924,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 412,
											"end": 6924,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 412,
											"end": 6924,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 412,
											"end": 6924,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 412,
											"end": 6924,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 412,
											"end": 6924,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0xdf297ae5498c5a335398fac67c7dcb4479f2a0954c881ece4338637b44942a58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58c779928cd68ac59867d57bea855016f4d06e47c2d693a60230aa5bbf0acec1\",\"dweb:/ipfs/QmPWYTn5eNUUGiyCm3EJx4mEQPRh9baePiQ1oztr4bTLhr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/utils/Address.sol\":133:8070  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/utils/Address.sol\":133:8070  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122044a211df23943cda221e1f4eed231a64b39e126c7d5f60e507d655936de3bcb664736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122044a211df23943cda221e1f4eed231a64b39e126c7d5f60e507d655936de3bcb664736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIFFICULTY LOG2 GT 0xDF 0x23 SWAP5 EXTCODECOPY 0xDA 0x22 0x1E 0x1F 0x4E 0xED 0x23 BYTE PUSH5 0xB39E126C7D 0x5F PUSH1 0xE5 SMOD 0xD6 SSTORE SWAP4 PUSH14 0xE3BCB664736F6C634300080D0033 ",
							"sourceMap": "133:7937:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122044a211df23943cda221e1f4eed231a64b39e126c7d5f60e507d655936de3bcb664736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIFFICULTY LOG2 GT 0xDF 0x23 SWAP5 EXTCODECOPY 0xDA 0x22 0x1E 0x1F 0x4E 0xED 0x23 BYTE PUSH5 0xB39E126C7D 0x5F PUSH1 0xE5 SMOD 0xD6 SSTORE SWAP4 PUSH14 0xE3BCB664736F6C634300080D0033 ",
							"sourceMap": "133:7937:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 133,
									"end": 8070,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122044a211df23943cda221e1f4eed231a64b39e126c7d5f60e507d655936de3bcb664736f6c634300080d0033",
									".code": [
										{
											"begin": 133,
											"end": 8070,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 133,
											"end": 8070,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 133,
											"end": 8070,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 133,
											"end": 8070,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 133,
											"end": 8070,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 133,
											"end": 8070,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 133,
											"end": 8070,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 133,
											"end": 8070,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 133,
											"end": 8070,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/utils/Address.sol\":{\"keccak256\":\"0x626b62cca5971be750732929d782b30e1277e36dd6b4ec2a90ddbbb61c650066\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07c78b7f7894e0444db2c6c4c73e4eddb78beed6bd65cd6089e2e9434bea83b0\",\"dweb:/ipfs/QmczQU7ihPMBhAmUM9MxnumRWwwvnTiDMDHp3nJSgYXQim\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/utils/Context.sol\":{\"keccak256\":\"0x851c3d8e30ea37c35947f620812e2e18718ac9312ef8d84b643fc46d94269540\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c02fec97a236e7eda6646bb8aef30a00f134710ffc29f1965c27dc257cc58a3\",\"dweb:/ipfs/QmNoqNHYS9HP9u8J3bG5kVztMNcQ42kYiiiKDN8tY94gvY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/BEP20.sol": {
				"ast": {
					"absolutePath": "contracts/BEP20.sol",
					"exportedSymbols": {
						"Address": [
							1336
						],
						"BEP20": [
							522
						],
						"Context": [
							1358
						],
						"IBEP20": [
							623
						],
						"Ownable": [
							727
						],
						"SafeMath": [
							1039
						]
					},
					"id": 523,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:0"
						},
						{
							"absolutePath": "contracts/access/Ownable.sol",
							"file": "./access/Ownable.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 523,
							"sourceUnit": 728,
							"src": "65:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/utils/Address.sol",
							"file": "./utils/Address.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 523,
							"sourceUnit": 1337,
							"src": "97:29:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/SafeMath.sol",
							"file": "./libraries/SafeMath.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 523,
							"sourceUnit": 1040,
							"src": "128:34:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/IBEP20.sol",
							"file": "./IBEP20.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 523,
							"sourceUnit": 624,
							"src": "166:22:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 6,
										"name": "IBEP20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 623,
										"src": "210:6:0"
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "210:6:0"
								},
								{
									"baseName": {
										"id": 8,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 727,
										"src": "218:7:0"
									},
									"id": 9,
									"nodeType": "InheritanceSpecifier",
									"src": "218:7:0"
								}
							],
							"canonicalName": "BEP20",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 522,
							"linearizedBaseContracts": [
								522,
								727,
								1358,
								623
							],
							"name": "BEP20",
							"nameLocation": "201:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 12,
									"libraryName": {
										"id": 10,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1039,
										"src": "239:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "233:27:0",
									"typeName": {
										"id": 11,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "252:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 15,
									"libraryName": {
										"id": 13,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1336,
										"src": "272:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "266:26:0",
									"typeName": {
										"id": 14,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "284:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 19,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "336:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 522,
									"src": "300:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 18,
										"keyType": {
											"id": 16,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "308:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "300:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 17,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "319:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 25,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "410:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 522,
									"src": "354:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 24,
										"keyType": {
											"id": 20,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "362:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "354:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 23,
											"keyType": {
												"id": 21,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "381:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "373:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 22,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "392:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "446:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 522,
									"src": "430:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 26,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "430:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 29,
									"mutability": "mutable",
									"name": "_decimals",
									"nameLocation": "479:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 522,
									"src": "465:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 28,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "465:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 31,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "510:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 522,
									"src": "495:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 30,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "495:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 33,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "539:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 522,
									"src": "524:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 32,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "524:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "942:93:0",
										"statements": [
											{
												"expression": {
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 41,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "953:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 42,
														"name": "tokenName",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "961:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "953:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 44,
												"nodeType": "ExpressionStatement",
												"src": "953:17:0"
											},
											{
												"expression": {
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 45,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "981:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 46,
														"name": "tokenSymbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "991:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "981:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "981:21:0"
											},
											{
												"expression": {
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 49,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "1013:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3138",
														"id": 50,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1025:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "1013:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1013:14:0"
											}
										]
									},
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "553:319:0",
										"text": " @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n a default value of 18.\n To select a different value for {decimals}, use {_setupDecimals}.\n All three of these values are immutable: they can only be set once during\n construction."
									},
									"id": 54,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "tokenName",
												"nameLocation": "904:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "890:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 35,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "890:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "tokenSymbol",
												"nameLocation": "929:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "915:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 37,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "915:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "889:52:0"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "942:0:0"
									},
									"scope": 522,
									"src": "878:157:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										554
									],
									"body": {
										"id": 64,
										"nodeType": "Block",
										"src": "1164:33:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 61,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 656,
														"src": "1182:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1182:7:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 60,
												"id": 63,
												"nodeType": "Return",
												"src": "1175:14:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1043:54:0",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 65,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "1112:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 57,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1137:8:0"
									},
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1120:2:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "1155:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1155:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1154:9:0"
									},
									"scope": 522,
									"src": "1103:94:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										548
									],
									"body": {
										"id": 74,
										"nodeType": "Block",
										"src": "1321:31:0",
										"statements": [
											{
												"expression": {
													"id": 72,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 33,
													"src": "1339:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 71,
												"id": 73,
												"nodeType": "Return",
												"src": "1332:12:0"
											}
										]
									},
									"documentation": {
										"id": 66,
										"nodeType": "StructuredDocumentation",
										"src": "1205:49:0",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 75,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1269:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 68,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1288:8:0"
									},
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1273:2:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "1306:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 69,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1306:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1305:15:0"
									},
									"scope": 522,
									"src": "1260:92:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										536
									],
									"body": {
										"id": 84,
										"nodeType": "Block",
										"src": "1476:35:0",
										"statements": [
											{
												"expression": {
													"id": 82,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 29,
													"src": "1494:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 81,
												"id": 83,
												"nodeType": "Return",
												"src": "1487:16:0"
											}
										]
									},
									"documentation": {
										"id": 76,
										"nodeType": "StructuredDocumentation",
										"src": "1360:53:0",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 85,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "1428:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 78,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1451:8:0"
									},
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1436:2:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "1469:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 79,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1469:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1468:7:0"
									},
									"scope": 522,
									"src": "1419:92:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										542
									],
									"body": {
										"id": 94,
										"nodeType": "Block",
										"src": "1639:33:0",
										"statements": [
											{
												"expression": {
													"id": 92,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 31,
													"src": "1657:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 91,
												"id": 93,
												"nodeType": "Return",
												"src": "1650:14:0"
											}
										]
									},
									"documentation": {
										"id": 86,
										"nodeType": "StructuredDocumentation",
										"src": "1519:51:0",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 95,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1585:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 88,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1606:8:0"
									},
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1591:2:0"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "1624:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 89,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1624:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1623:15:0"
									},
									"scope": 522,
									"src": "1576:96:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										530
									],
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "1798:38:0",
										"statements": [
											{
												"expression": {
													"id": 102,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "1816:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 101,
												"id": 103,
												"nodeType": "Return",
												"src": "1809:19:0"
											}
										]
									},
									"documentation": {
										"id": 96,
										"nodeType": "StructuredDocumentation",
										"src": "1680:50:0",
										"text": " @dev See {BEP20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1745:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 98,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1771:8:0"
									},
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1756:2:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "1789:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1789:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1788:9:0"
									},
									"scope": 522,
									"src": "1736:100:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										562
									],
									"body": {
										"id": 118,
										"nodeType": "Block",
										"src": "1973:44:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 114,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "1991:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 116,
													"indexExpression": {
														"id": 115,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 108,
														"src": "2001:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1991:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 113,
												"id": 117,
												"nodeType": "Return",
												"src": "1984:25:0"
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "1844:48:0",
										"text": " @dev See {BEP20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 119,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1907:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 110,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1946:8:0"
									},
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1925:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1917:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1917:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1916:17:0"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1964:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1964:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1963:9:0"
									},
									"scope": 522,
									"src": "1898:119:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										572
									],
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "2345:83:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 131,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1348,
																"src": "2366:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2366:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 133,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 122,
															"src": "2380:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 134,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 124,
															"src": "2391:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 130,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "2356:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2356:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 136,
												"nodeType": "ExpressionStatement",
												"src": "2356:42:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2416:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 129,
												"id": 138,
												"nodeType": "Return",
												"src": "2409:11:0"
											}
										]
									},
									"documentation": {
										"id": 120,
										"nodeType": "StructuredDocumentation",
										"src": "2025:198:0",
										"text": " @dev See {BEP20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "2238:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 126,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2307:8:0"
									},
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2255:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "2247:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2274:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "2266:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2266:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2246:35:0"
									},
									"returnParameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "2334:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 127,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2334:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2333:6:0"
									},
									"scope": 522,
									"src": "2229:199:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										582
									],
									"body": {
										"id": 157,
										"nodeType": "Block",
										"src": "2621:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 151,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "2639:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 153,
														"indexExpression": {
															"id": 152,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "2651:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2639:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 155,
													"indexExpression": {
														"id": 154,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "2658:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2639:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 150,
												"id": 156,
												"nodeType": "Return",
												"src": "2632:34:0"
											}
										]
									},
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "2436:48:0",
										"text": " @dev See {BEP20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "2499:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 147,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2580:8:0"
									},
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2517:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "2509:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2532:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "2524:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2524:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2508:32:0"
									},
									"returnParameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "2607:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2607:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2606:9:0"
									},
									"scope": 522,
									"src": "2490:184:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										592
									],
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "2933:80:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 170,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1348,
																"src": "2953:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2953:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 172,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "2967:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 173,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "2976:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 169,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "2944:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2944:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 175,
												"nodeType": "ExpressionStatement",
												"src": "2944:39:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3001:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 168,
												"id": 177,
												"nodeType": "Return",
												"src": "2994:11:0"
											}
										]
									},
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "2682:132:0",
										"text": " @dev See {BEP20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2829:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 165,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2895:8:0"
									},
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2845:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "2837:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2837:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2862:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "2854:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2854:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2836:33:0"
									},
									"returnParameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "2922:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 166,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2922:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2921:6:0"
									},
									"scope": 522,
									"src": "2820:193:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										604
									],
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "3622:308:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 193,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "3643:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 194,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "3651:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 195,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "3662:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 192,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "3633:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3633:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 197,
												"nodeType": "ExpressionStatement",
												"src": "3633:36:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 199,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "3703:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 200,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1348,
																"src": "3724:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3724:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 209,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 186,
																	"src": "3807:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3832:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	},
																	"value": "BEP20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 202,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 25,
																			"src": "3751:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 204,
																		"indexExpression": {
																			"id": 203,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 182,
																			"src": "3763:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3751:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 207,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 205,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1348,
																			"src": "3771:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3771:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3751:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 988,
																"src": "3751:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3751:138:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 198,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "3680:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3680:220:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 213,
												"nodeType": "ExpressionStatement",
												"src": "3680:220:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3918:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 191,
												"id": 215,
												"nodeType": "Return",
												"src": "3911:11:0"
											}
										]
									},
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "3021:457:0",
										"text": " @dev See {BEP20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {BEP20};\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for `sender`'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3493:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 188,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3598:8:0"
									},
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3524:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "3516:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3516:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3549:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "3541:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3541:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3577:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "3569:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3569:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3505:85:0"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "3616:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3616:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3615:6:0"
									},
									"scope": 522,
									"src": "3484:446:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 244,
										"nodeType": "Block",
										"src": "4447:174:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 228,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1348,
																"src": "4481:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 229,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4481:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 230,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 220,
															"src": "4508:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 238,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 222,
																	"src": "4569:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 231,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 25,
																			"src": "4530:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 234,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 232,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1348,
																				"src": "4542:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 233,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4542:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4530:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 236,
																	"indexExpression": {
																		"id": 235,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "4556:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4530:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 903,
																"src": "4530:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4530:50:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 227,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "4458:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4458:133:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 241,
												"nodeType": "ExpressionStatement",
												"src": "4458:133:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4609:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 226,
												"id": 243,
												"nodeType": "Return",
												"src": "4602:11:0"
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "3938:394:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {BEP20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "4347:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4373:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "4365:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4365:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "4390:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "4382:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4382:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4364:37:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "4436:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4436:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4435:6:0"
									},
									"scope": 522,
									"src": "4338:283:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 273,
										"nodeType": "Block",
										"src": "5237:269:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 256,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1348,
																"src": "5271:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5271:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 258,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "5298:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 266,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 250,
																	"src": "5377:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 267,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5411:39:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	},
																	"value": "BEP20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 259,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 25,
																			"src": "5320:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 262,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 260,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1348,
																				"src": "5332:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 261,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5332:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5320:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 264,
																	"indexExpression": {
																		"id": 263,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 248,
																		"src": "5346:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5320:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 265,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 988,
																"src": "5320:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5320:145:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 255,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "5248:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5248:228:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 270,
												"nodeType": "ExpressionStatement",
												"src": "5248:228:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5494:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 254,
												"id": 272,
												"nodeType": "Return",
												"src": "5487:11:0"
											}
										]
									},
									"documentation": {
										"id": 246,
										"nodeType": "StructuredDocumentation",
										"src": "4629:488:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {BEP20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "5132:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5158:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "5150:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5150:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "5175:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "5167:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5167:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5149:42:0"
									},
									"returnParameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "5226:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 252,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5226:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5225:6:0"
									},
									"scope": 522,
									"src": "5123:383:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 292,
										"nodeType": "Block",
										"src": "5786:68:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 285,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1348,
																"src": "5803:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5803:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 287,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 277,
															"src": "5817:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 284,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "5797:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5797:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 289,
												"nodeType": "ExpressionStatement",
												"src": "5797:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5842:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 283,
												"id": 291,
												"nodeType": "Return",
												"src": "5835:11:0"
											}
										]
									},
									"documentation": {
										"id": 275,
										"nodeType": "StructuredDocumentation",
										"src": "5514:204:0",
										"text": " @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\n the total supply.\n Requirements\n - `msg.sender` must be the token owner"
									},
									"functionSelector": "a0712d68",
									"id": 293,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 280,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 279,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 670,
												"src": "5761:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5761:9:0"
										}
									],
									"name": "mint",
									"nameLocation": "5733:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5746:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "5738:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5738:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5737:16:0"
									},
									"returnParameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "5780:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 281,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5780:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5779:6:0"
									},
									"scope": 522,
									"src": "5724:130:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "6457:429:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 304,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 296,
																"src": "6476:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 307,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6494:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 306,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6486:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 305,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6486:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 308,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6486:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6476:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 310,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6498:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															},
															"value": "BEP20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															}
														],
														"id": 303,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6468:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6468:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 312,
												"nodeType": "ExpressionStatement",
												"src": "6468:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 314,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 298,
																"src": "6557:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6578:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 316,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6570:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 315,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6570:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 318,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6570:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6557:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6582:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															},
															"value": "BEP20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															}
														],
														"id": 313,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6549:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6549:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 322,
												"nodeType": "ExpressionStatement",
												"src": "6549:71:0"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 323,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 19,
															"src": "6633:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 325,
														"indexExpression": {
															"id": 324,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "6643:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6633:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 330,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 300,
																"src": "6689:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 331,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6710:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																},
																"value": "BEP20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 326,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 19,
																	"src": "6653:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 328,
																"indexExpression": {
																	"id": 327,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 296,
																	"src": "6663:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6653:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 988,
															"src": "6653:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 332,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:108:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6633:128:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "6633:128:0"
											},
											{
												"expression": {
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 335,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 19,
															"src": "6772:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 337,
														"indexExpression": {
															"id": 336,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "6782:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6772:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 342,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 300,
																"src": "6820:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 338,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 19,
																	"src": "6795:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 340,
																"indexExpression": {
																	"id": 339,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 298,
																	"src": "6805:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6795:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 903,
															"src": "6795:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 343,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6795:32:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6772:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 345,
												"nodeType": "ExpressionStatement",
												"src": "6772:55:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 347,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "6852:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 348,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "6860:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 349,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "6871:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 346,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "6843:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6843:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 351,
												"nodeType": "EmitStatement",
												"src": "6838:40:0"
											}
										]
									},
									"documentation": {
										"id": 294,
										"nodeType": "StructuredDocumentation",
										"src": "5862:476:0",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "6353:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "6381:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "6373:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6373:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "6406:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "6398:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6398:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6434:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "6426:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6426:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6362:85:0"
									},
									"returnParameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6457:0:0"
									},
									"scope": 522,
									"src": "6344:542:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "7224:251:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 362,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 356,
																"src": "7243:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 365,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7262:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7254:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 363,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7254:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7254:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7243:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7266:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															},
															"value": "BEP20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															}
														],
														"id": 361,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7235:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7235:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 370,
												"nodeType": "ExpressionStatement",
												"src": "7235:65:0"
											},
											{
												"expression": {
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 371,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "7313:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 374,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 358,
																"src": "7345:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 372,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "7328:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 903,
															"src": "7328:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 375,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7328:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7313:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "7313:39:0"
											},
											{
												"expression": {
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 378,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 19,
															"src": "7363:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 380,
														"indexExpression": {
															"id": 379,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "7373:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7363:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 385,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 358,
																"src": "7407:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 381,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 19,
																	"src": "7384:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 383,
																"indexExpression": {
																	"id": 382,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 356,
																	"src": "7394:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7384:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 903,
															"src": "7384:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 386,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7384:30:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7363:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 388,
												"nodeType": "ExpressionStatement",
												"src": "7363:51:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7447:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 391,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7439:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 390,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7439:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7439:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 394,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "7451:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 395,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 358,
															"src": "7460:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 389,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "7430:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7430:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 397,
												"nodeType": "EmitStatement",
												"src": "7425:42:0"
											}
										]
									},
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "6894:267:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements\n - `to` cannot be the zero address."
									},
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7176:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7190:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "7182:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7182:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7207:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "7199:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7181:33:0"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7224:0:0"
									},
									"scope": 522,
									"src": "7167:308:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 445,
										"nodeType": "Block",
										"src": "7864:328:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 408,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 402,
																"src": "7883:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 411,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7902:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7894:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 409,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7894:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 412,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7894:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7883:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7906:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															},
															"value": "BEP20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															}
														],
														"id": 407,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7875:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7875:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "7875:67:0"
											},
											{
												"expression": {
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 417,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 19,
															"src": "7955:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 419,
														"indexExpression": {
															"id": 418,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "7965:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7955:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 424,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 404,
																"src": "8013:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 425,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8034:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																},
																"value": "BEP20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 420,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 19,
																	"src": "7976:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 422,
																"indexExpression": {
																	"id": 421,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 402,
																	"src": "7986:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7976:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 988,
															"src": "7976:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7976:105:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7955:126:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 428,
												"nodeType": "ExpressionStatement",
												"src": "7955:126:0"
											},
											{
												"expression": {
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 429,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "8092:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 432,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 404,
																"src": "8124:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 430,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "8107:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 918,
															"src": "8107:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 433,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8107:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8092:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 435,
												"nodeType": "ExpressionStatement",
												"src": "8092:39:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 437,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "8156:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 440,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 439,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 438,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 442,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "8177:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 436,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "8147:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8147:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 444,
												"nodeType": "EmitStatement",
												"src": "8142:42:0"
											}
										]
									},
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "7483:318:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7816:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7830:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "7822:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7822:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7847:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "7839:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7839:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7821:33:0"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7864:0:0"
									},
									"scope": 522,
									"src": "7807:385:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "8741:263:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 457,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 449,
																"src": "8760:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 460,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8777:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8769:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 458,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8769:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 461,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8769:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8760:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8781:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															},
															"value": "BEP20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															}
														],
														"id": 456,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8752:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8752:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 465,
												"nodeType": "ExpressionStatement",
												"src": "8752:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 467,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 451,
																"src": "8839:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 470,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8858:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8850:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 468,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8850:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 471,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8850:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8839:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8862:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															},
															"value": "BEP20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															}
														],
														"id": 466,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8831:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8831:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 475,
												"nodeType": "ExpressionStatement",
												"src": "8831:68:0"
											},
											{
												"expression": {
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 476,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 25,
																"src": "8912:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 479,
															"indexExpression": {
																"id": 477,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 449,
																"src": "8924:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8912:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 480,
														"indexExpression": {
															"id": 478,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "8931:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8912:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 481,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "8942:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8912:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 483,
												"nodeType": "ExpressionStatement",
												"src": "8912:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 485,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "8973:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "8980:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "8989:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 484,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 622,
														"src": "8964:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8964:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "EmitStatement",
												"src": "8959:37:0"
											}
										]
									},
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "8200:426:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n This is internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8641:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8668:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "8660:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8660:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8692:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "8684:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8718:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "8710:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8710:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8649:82:0"
									},
									"returnParameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8741:0:0"
									},
									"scope": 522,
									"src": "8632:372:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 520,
										"nodeType": "Block",
										"src": "9251:270:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 500,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "9268:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 501,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "9277:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 499,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 446,
														"src": "9262:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9262:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "9262:22:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 505,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "9318:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 506,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1348,
																"src": "9340:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9340:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 515,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 496,
																	"src": "9424:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "42455032303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9449:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	},
																	"value": "BEP20: burn amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 508,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 25,
																			"src": "9367:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 510,
																		"indexExpression": {
																			"id": 509,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 494,
																			"src": "9379:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9367:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 513,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 511,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1348,
																			"src": "9388:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9388:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9367:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 988,
																"src": "9367:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9367:135:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 504,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "9295:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9295:218:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 519,
												"nodeType": "ExpressionStatement",
												"src": "9295:218:0"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "9012:172:0",
										"text": " @dev Destroys `amount` tokens from `account`.`amount` is then deducted\n from the caller's allowance.\n See {_burn} and {_approve}."
									},
									"id": 521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnFrom",
									"nameLocation": "9199:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9217:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "9209:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9209:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9234:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "9226:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9226:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9208:33:0"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9251:0:0"
									},
									"scope": 522,
									"src": "9190:331:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 523,
							"src": "192:9332:0",
							"usedErrors": []
						}
					],
					"src": "37:9487:0"
				},
				"id": 0
			},
			"contracts/IBEP20.sol": {
				"ast": {
					"absolutePath": "contracts/IBEP20.sol",
					"exportedSymbols": {
						"IBEP20": [
							623
						]
					},
					"id": 624,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 524,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBEP20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 623,
							"linearizedBaseContracts": [
								623
							],
							"name": "IBEP20",
							"nameLocation": "75:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "89:68:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 530,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "172:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "183:2:1"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "209:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "209:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "208:9:1"
									},
									"scope": 623,
									"src": "163:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 531,
										"nodeType": "StructuredDocumentation",
										"src": "226:53:1",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 536,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "294:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "302:2:1"
									},
									"returnParameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "328:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 533,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "328:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "327:7:1"
									},
									"scope": 623,
									"src": "285:50:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 537,
										"nodeType": "StructuredDocumentation",
										"src": "343:51:1",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 542,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "409:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "415:2:1"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "441:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 539,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "441:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "440:15:1"
									},
									"scope": 623,
									"src": "400:56:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "464:49:1",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 548,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "528:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "532:2:1"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "558:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 545,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "558:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "557:15:1"
									},
									"scope": 623,
									"src": "519:54:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 549,
										"nodeType": "StructuredDocumentation",
										"src": "581:54:1",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 554,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "650:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "658:2:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "684:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "683:9:1"
									},
									"scope": 623,
									"src": "641:52:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "701:74:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 562,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "790:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "808:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "800:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "800:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "799:17:1"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "840:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "840:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "839:9:1"
									},
									"scope": 623,
									"src": "781:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "857:215:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 572,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1087:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1104:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "1096:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1096:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1123:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "1115:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1115:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1095:35:1"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "1167:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 569,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1167:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1166:6:1"
									},
									"scope": 623,
									"src": "1078:95:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 573,
										"nodeType": "StructuredDocumentation",
										"src": "1181:270:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 582,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1466:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1484:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "1476:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1476:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1500:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "1492:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1492:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1475:33:1"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "1559:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1559:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1558:9:1"
									},
									"scope": 623,
									"src": "1457:111:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 583,
										"nodeType": "StructuredDocumentation",
										"src": "1576:655:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 592,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2246:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2262:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "2254:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2254:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2279:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "2271:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 586,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2271:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2253:33:1"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "2305:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 589,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2305:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2304:6:1"
									},
									"scope": 623,
									"src": "2237:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 593,
										"nodeType": "StructuredDocumentation",
										"src": "2319:304:1",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 604,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2638:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2669:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "2661:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2661:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2694:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "2686:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2686:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2722:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "2714:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2714:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2650:85:1"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "2754:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 601,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2754:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2753:6:1"
									},
									"scope": 623,
									"src": "2629:131:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 605,
										"nodeType": "StructuredDocumentation",
										"src": "2768:163:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 613,
									"name": "Transfer",
									"nameLocation": "2943:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2968:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "2952:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2952:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2990:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "2974:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2974:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3002:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "2994:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2994:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2951:57:1"
									},
									"src": "2937:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 614,
										"nodeType": "StructuredDocumentation",
										"src": "3017:151:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 622,
									"name": "Approval",
									"nameLocation": "3180:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3215:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "3199:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3199:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3247:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "3231:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 617,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3231:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3273:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "3265:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3265:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3188:97:1"
									},
									"src": "3174:112:1"
								}
							],
							"scope": 624,
							"src": "65:3224:1",
							"usedErrors": []
						}
					],
					"src": "37:3252:1"
				},
				"id": 1
			},
			"contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1358
						],
						"Ownable": [
							727
						]
					},
					"id": 728,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 625,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:2"
						},
						{
							"absolutePath": "contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 626,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 728,
							"sourceUnit": 1359,
							"src": "62:30:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 628,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1358,
										"src": "632:7:2"
									},
									"id": 629,
									"nodeType": "InheritanceSpecifier",
									"src": "632:7:2"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 627,
								"nodeType": "StructuredDocumentation",
								"src": "96:505:2",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 727,
							"linearizedBaseContracts": [
								727,
								1358
							],
							"name": "Ownable",
							"nameLocation": "621:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 631,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "663:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 727,
									"src": "647:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 630,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "647:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 637,
									"name": "OwnershipTransferred",
									"nameLocation": "684:20:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "721:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "705:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "705:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "752:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "736:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "704:57:2"
									},
									"src": "678:84:2"
								},
								{
									"body": {
										"id": 646,
										"nodeType": "Block",
										"src": "883:42:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 642,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1348,
																"src": "904:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 643,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "904:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 641,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "894:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "894:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 645,
												"nodeType": "ExpressionStatement",
												"src": "894:23:2"
											}
										]
									},
									"documentation": {
										"id": 638,
										"nodeType": "StructuredDocumentation",
										"src": "770:93:2",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 647,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "880:2:2"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "883:0:2"
									},
									"scope": 727,
									"src": "869:56:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 655,
										"nodeType": "Block",
										"src": "1061:32:2",
										"statements": [
											{
												"expression": {
													"id": 653,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 631,
													"src": "1079:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 652,
												"id": 654,
												"nodeType": "Return",
												"src": "1072:13:2"
											}
										]
									},
									"documentation": {
										"id": 648,
										"nodeType": "StructuredDocumentation",
										"src": "933:67:2",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 656,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1015:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1020:2:2"
									},
									"returnParameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "1052:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1052:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1051:9:2"
									},
									"scope": 727,
									"src": "1006:87:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 669,
										"nodeType": "Block",
										"src": "1207:99:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 660,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 656,
																	"src": "1226:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1226:7:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 662,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1348,
																	"src": "1237:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 663,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1237:12:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1226:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 665,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1251:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 659,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1218:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1218:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 667,
												"nodeType": "ExpressionStatement",
												"src": "1218:68:2"
											},
											{
												"id": 668,
												"nodeType": "PlaceholderStatement",
												"src": "1297:1:2"
											}
										]
									},
									"documentation": {
										"id": 657,
										"nodeType": "StructuredDocumentation",
										"src": "1101:79:2",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 670,
									"name": "onlyOwner",
									"nameLocation": "1195:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1204:2:2"
									},
									"src": "1186:120:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 683,
										"nodeType": "Block",
										"src": "1711:40:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 679,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1740:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 678,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1732:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 677,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1732:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 680,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1732:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 676,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "1722:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1722:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 682,
												"nodeType": "ExpressionStatement",
												"src": "1722:21:2"
											}
										]
									},
									"documentation": {
										"id": 671,
										"nodeType": "StructuredDocumentation",
										"src": "1314:337:2",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 684,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 674,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 673,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 670,
												"src": "1701:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1701:9:2"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1666:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1683:2:2"
									},
									"returnParameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1711:0:2"
									},
									"scope": 727,
									"src": "1657:94:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 706,
										"nodeType": "Block",
										"src": "1976:122:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 693,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 687,
																"src": "1995:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2015:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2007:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 694,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2007:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 697,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2007:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1995:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 699,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2019:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 692,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1987:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1987:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 701,
												"nodeType": "ExpressionStatement",
												"src": "1987:73:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 703,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "2081:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 702,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "2071:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2071:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 705,
												"nodeType": "ExpressionStatement",
												"src": "2071:19:2"
											}
										]
									},
									"documentation": {
										"id": 685,
										"nodeType": "StructuredDocumentation",
										"src": "1759:141:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 707,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 690,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 689,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 670,
												"src": "1966:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1966:9:2"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1915:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1941:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "1933:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1933:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1932:18:2"
									},
									"returnParameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1976:0:2"
									},
									"scope": 727,
									"src": "1906:192:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 725,
										"nodeType": "Block",
										"src": "2151:128:2",
										"statements": [
											{
												"assignments": [
													713
												],
												"declarations": [
													{
														"constant": false,
														"id": 713,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2170:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 725,
														"src": "2162:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 712,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2162:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 715,
												"initialValue": {
													"id": 714,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 631,
													"src": "2181:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2162:25:2"
											},
											{
												"expression": {
													"id": 718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 716,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 631,
														"src": "2198:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 717,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 709,
														"src": "2207:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2198:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 719,
												"nodeType": "ExpressionStatement",
												"src": "2198:17:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 721,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 713,
															"src": "2252:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 722,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "2262:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 720,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "2231:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2231:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 724,
												"nodeType": "EmitStatement",
												"src": "2226:45:2"
											}
										]
									},
									"id": 726,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setOwner",
									"nameLocation": "2115:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2133:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "2125:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2125:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2124:18:2"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:2"
									},
									"scope": 727,
									"src": "2106:173:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 728,
							"src": "603:1679:2",
							"usedErrors": []
						}
					],
					"src": "35:2247:2"
				},
				"id": 2
			},
			"contracts/libraries/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1039
						]
					},
					"id": 1040,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 729,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 730,
								"nodeType": "StructuredDocumentation",
								"src": "219:191:3",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1039,
							"linearizedBaseContracts": [
								1039
							],
							"name": "SafeMath",
							"nameLocation": "420:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 761,
										"nodeType": "Block",
										"src": "653:146:3",
										"statements": [
											{
												"id": 760,
												"nodeType": "UncheckedBlock",
												"src": "664:128:3",
												"statements": [
													{
														"assignments": [
															743
														],
														"declarations": [
															{
																"constant": false,
																"id": 743,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "697:1:3",
																"nodeType": "VariableDeclaration",
																"scope": 760,
																"src": "689:9:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 742,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "689:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 747,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 744,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 733,
																"src": "701:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 745,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 735,
																"src": "705:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "701:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "689:17:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 748,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 743,
																"src": "725:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 749,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 733,
																"src": "729:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "725:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 755,
														"nodeType": "IfStatement",
														"src": "721:28:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 751,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "740:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 752,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "747:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 753,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "739:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 741,
															"id": 754,
															"nodeType": "Return",
															"src": "732:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "772:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 757,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 743,
																	"src": "778:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 758,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "771:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 741,
														"id": 759,
														"nodeType": "Return",
														"src": "764:16:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 731,
										"nodeType": "StructuredDocumentation",
										"src": "436:135:3",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 762,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "586:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "601:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "593:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 732,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "593:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "612:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "604:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 734,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "604:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "592:22:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "638:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 737,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "638:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "644:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "644:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "637:15:3"
									},
									"scope": 1039,
									"src": "577:222:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 789,
										"nodeType": "Block",
										"src": "1028:118:3",
										"statements": [
											{
												"id": 788,
												"nodeType": "UncheckedBlock",
												"src": "1039:100:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 776,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 774,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 767,
																"src": "1068:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 775,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 765,
																"src": "1072:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1068:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 781,
														"nodeType": "IfStatement",
														"src": "1064:28:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1083:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1090:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 779,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1082:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 773,
															"id": 780,
															"nodeType": "Return",
															"src": "1075:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1115:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 783,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 765,
																		"src": "1121:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 784,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 767,
																		"src": "1125:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1121:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 786,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1114:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 773,
														"id": 787,
														"nodeType": "Return",
														"src": "1107:20:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 763,
										"nodeType": "StructuredDocumentation",
										"src": "807:139:3",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 790,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "961:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "976:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "968:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "968:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "987:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "979:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "979:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "967:22:3"
									},
									"returnParameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "1013:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 769,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1013:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "1019:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1019:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1012:15:3"
									},
									"scope": 1039,
									"src": "952:194:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 831,
										"nodeType": "Block",
										"src": "1377:427:3",
										"statements": [
											{
												"id": 830,
												"nodeType": "UncheckedBlock",
												"src": "1388:409:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 804,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 802,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 793,
																"src": "1650:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 803,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1655:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1650:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 809,
														"nodeType": "IfStatement",
														"src": "1646:28:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1666:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 806,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1672:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 807,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1665:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 801,
															"id": 808,
															"nodeType": "Return",
															"src": "1658:16:3"
														}
													},
													{
														"assignments": [
															811
														],
														"declarations": [
															{
																"constant": false,
																"id": 811,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1697:1:3",
																"nodeType": "VariableDeclaration",
																"scope": 830,
																"src": "1689:9:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 810,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1689:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 815,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 814,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 812,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 793,
																"src": "1701:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 813,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 795,
																"src": "1705:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1701:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1689:17:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 818,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 816,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 811,
																	"src": "1725:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 817,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 793,
																	"src": "1729:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1725:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 819,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 795,
																"src": "1734:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1725:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 825,
														"nodeType": "IfStatement",
														"src": "1721:33:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 821,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1745:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 822,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1752:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 823,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1744:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 801,
															"id": 824,
															"nodeType": "Return",
															"src": "1737:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1777:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 827,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 811,
																	"src": "1783:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 828,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1776:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 801,
														"id": 829,
														"nodeType": "Return",
														"src": "1769:16:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 791,
										"nodeType": "StructuredDocumentation",
										"src": "1154:141:3",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 832,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1310:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1325:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "1317:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1317:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1336:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "1328:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1328:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1316:22:3"
									},
									"returnParameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "1362:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 797,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1362:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "1368:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 799,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1368:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1361:15:3"
									},
									"scope": 1039,
									"src": "1301:503:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 859,
										"nodeType": "Block",
										"src": "2036:119:3",
										"statements": [
											{
												"id": 858,
												"nodeType": "UncheckedBlock",
												"src": "2047:101:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 846,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 844,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 837,
																"src": "2076:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 845,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2081:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2076:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 851,
														"nodeType": "IfStatement",
														"src": "2072:29:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2092:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 848,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2099:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 849,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2091:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 843,
															"id": 850,
															"nodeType": "Return",
															"src": "2084:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 852,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2124:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 855,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 853,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 835,
																		"src": "2130:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 854,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 837,
																		"src": "2134:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2130:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 856,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2123:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 843,
														"id": 857,
														"nodeType": "Return",
														"src": "2116:20:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 833,
										"nodeType": "StructuredDocumentation",
										"src": "1812:142:3",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 860,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1969:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1984:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "1976:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1976:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1995:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "1987:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1987:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1975:22:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "2021:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 839,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2021:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "2027:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2027:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2020:15:3"
									},
									"scope": 1039,
									"src": "1960:195:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 887,
										"nodeType": "Block",
										"src": "2397:119:3",
										"statements": [
											{
												"id": 886,
												"nodeType": "UncheckedBlock",
												"src": "2408:101:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 872,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 865,
																"src": "2437:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 873,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2442:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2437:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 879,
														"nodeType": "IfStatement",
														"src": "2433:29:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 875,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2453:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 876,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 877,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2452:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 871,
															"id": 878,
															"nodeType": "Return",
															"src": "2445:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2485:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 883,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 881,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 863,
																		"src": "2491:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 882,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 865,
																		"src": "2495:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2491:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 884,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2484:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 871,
														"id": 885,
														"nodeType": "Return",
														"src": "2477:20:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 861,
										"nodeType": "StructuredDocumentation",
										"src": "2163:152:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2330:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2345:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "2337:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2337:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2356:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "2348:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2348:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2336:22:3"
									},
									"returnParameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "2382:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 867,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2382:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "2388:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2388:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2381:15:3"
									},
									"scope": 1039,
									"src": "2321:195:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 902,
										"nodeType": "Block",
										"src": "2830:31:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 898,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 891,
														"src": "2848:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 899,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 893,
														"src": "2852:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2848:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 897,
												"id": 901,
												"nodeType": "Return",
												"src": "2841:12:3"
											}
										]
									},
									"documentation": {
										"id": 889,
										"nodeType": "StructuredDocumentation",
										"src": "2524:233:3",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 903,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2772:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2784:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "2776:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2776:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2795:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "2787:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2787:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2775:22:3"
									},
									"returnParameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "2821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2820:9:3"
									},
									"scope": 1039,
									"src": "2763:98:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 917,
										"nodeType": "Block",
										"src": "3211:31:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 913,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "3229:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 914,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "3233:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3229:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 912,
												"id": 916,
												"nodeType": "Return",
												"src": "3222:12:3"
											}
										]
									},
									"documentation": {
										"id": 904,
										"nodeType": "StructuredDocumentation",
										"src": "2869:269:3",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3153:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3165:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "3157:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3157:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3176:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "3168:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3168:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3156:22:3"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "3202:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3202:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3201:9:3"
									},
									"scope": 1039,
									"src": "3144:98:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 932,
										"nodeType": "Block",
										"src": "3568:31:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 928,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 921,
														"src": "3586:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 929,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 923,
														"src": "3590:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3586:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 927,
												"id": 931,
												"nodeType": "Return",
												"src": "3579:12:3"
											}
										]
									},
									"documentation": {
										"id": 919,
										"nodeType": "StructuredDocumentation",
										"src": "3250:245:3",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 933,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3510:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3522:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "3514:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3514:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3533:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "3525:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3525:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3513:22:3"
									},
									"returnParameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "3559:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3559:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3558:9:3"
									},
									"scope": 1039,
									"src": "3501:98:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 947,
										"nodeType": "Block",
										"src": "3967:31:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 943,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 936,
														"src": "3985:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 944,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 938,
														"src": "3989:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3985:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 942,
												"id": 946,
												"nodeType": "Return",
												"src": "3978:12:3"
											}
										]
									},
									"documentation": {
										"id": 934,
										"nodeType": "StructuredDocumentation",
										"src": "3607:287:3",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 948,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3909:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3921:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "3913:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3913:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3932:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "3924:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 937,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3924:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3912:22:3"
									},
									"returnParameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "3958:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3958:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3957:9:3"
									},
									"scope": 1039,
									"src": "3900:98:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 962,
										"nodeType": "Block",
										"src": "4532:31:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 958,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "4550:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 959,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 953,
														"src": "4554:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4550:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 957,
												"id": 961,
												"nodeType": "Return",
												"src": "4543:12:3"
											}
										]
									},
									"documentation": {
										"id": 949,
										"nodeType": "StructuredDocumentation",
										"src": "4006:453:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 963,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4474:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4486:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "4478:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4478:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4497:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "4489:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4489:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4477:22:3"
									},
									"returnParameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "4523:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4523:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4522:9:3"
									},
									"scope": 1039,
									"src": "4465:98:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 987,
										"nodeType": "Block",
										"src": "5171:111:3",
										"statements": [
											{
												"id": 986,
												"nodeType": "UncheckedBlock",
												"src": "5182:93:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 978,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 976,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 968,
																		"src": "5215:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 977,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 966,
																		"src": "5220:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5215:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 979,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 970,
																	"src": "5223:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 975,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5207:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5207:29:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 981,
														"nodeType": "ExpressionStatement",
														"src": "5207:29:3"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 982,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 966,
																"src": "5258:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 983,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 968,
																"src": "5262:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5258:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 974,
														"id": 985,
														"nodeType": "Return",
														"src": "5251:12:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 964,
										"nodeType": "StructuredDocumentation",
										"src": "4571:465:3",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 988,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "5051:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5073:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "5065:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 965,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5065:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5093:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "5085:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5085:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5119:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "5105:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 969,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5105:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5054:84:3"
									},
									"returnParameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "5162:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5162:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5161:9:3"
									},
									"scope": 1039,
									"src": "5042:240:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1012,
										"nodeType": "Block",
										"src": "5909:110:3",
										"statements": [
											{
												"id": 1011,
												"nodeType": "UncheckedBlock",
												"src": "5920:92:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1003,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1001,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 993,
																		"src": "5953:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1002,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5957:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5953:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1004,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 995,
																	"src": "5960:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1000,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5945:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5945:28:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1006,
														"nodeType": "ExpressionStatement",
														"src": "5945:28:3"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1007,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 991,
																"src": "5995:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1008,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 993,
																"src": "5999:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5995:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 999,
														"id": 1010,
														"nodeType": "Return",
														"src": "5988:12:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 989,
										"nodeType": "StructuredDocumentation",
										"src": "5290:484:3",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1013,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5789:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5811:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "5803:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 990,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5803:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5831:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "5823:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5823:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5857:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "5843:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 994,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5843:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5792:84:3"
									},
									"returnParameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "5900:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5900:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5899:9:3"
									},
									"scope": 1039,
									"src": "5780:239:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1037,
										"nodeType": "Block",
										"src": "6811:110:3",
										"statements": [
											{
												"id": 1036,
												"nodeType": "UncheckedBlock",
												"src": "6822:92:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1026,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1018,
																		"src": "6855:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1027,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6859:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6855:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1029,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1020,
																	"src": "6862:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1025,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6847:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6847:28:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1031,
														"nodeType": "ExpressionStatement",
														"src": "6847:28:3"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1032,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1016,
																"src": "6897:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1033,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1018,
																"src": "6901:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6897:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1024,
														"id": 1035,
														"nodeType": "Return",
														"src": "6890:12:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1014,
										"nodeType": "StructuredDocumentation",
										"src": "6027:649:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1038,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6691:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6713:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "6705:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6705:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6733:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "6725:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1017,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6725:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6759:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "6745:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1019,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6745:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6694:84:3"
									},
									"returnParameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "6802:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6802:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6801:9:3"
									},
									"scope": 1039,
									"src": "6682:239:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1040,
							"src": "412:6512:3",
							"usedErrors": []
						}
					],
					"src": "35:6889:3"
				},
				"id": 3
			},
			"contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1336
						]
					},
					"id": 1337,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1041,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1042,
								"nodeType": "StructuredDocumentation",
								"src": "62:69:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1336,
							"linearizedBaseContracts": [
								1336
							],
							"name": "Address",
							"nameLocation": "141:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1058,
										"nodeType": "Block",
										"src": "809:321:4",
										"statements": [
											{
												"assignments": [
													1051
												],
												"declarations": [
													{
														"constant": false,
														"id": 1051,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "1019:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 1058,
														"src": "1011:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1050,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1011:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1052,
												"nodeType": "VariableDeclarationStatement",
												"src": "1011:12:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1043:54:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1058:28:4",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1078:7:4"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1066:11:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1066:20:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1058:4:4"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1045,
														"isOffset": false,
														"isSlot": false,
														"src": "1078:7:4",
														"valueSize": 1
													},
													{
														"declaration": 1051,
														"isOffset": false,
														"isSlot": false,
														"src": "1058:4:4",
														"valueSize": 1
													}
												],
												"id": 1053,
												"nodeType": "InlineAssembly",
												"src": "1034:63:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1054,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1051,
														"src": "1114:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1055,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1121:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1114:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1049,
												"id": 1057,
												"nodeType": "Return",
												"src": "1107:15:4"
											}
										]
									},
									"documentation": {
										"id": 1043,
										"nodeType": "StructuredDocumentation",
										"src": "156:581:4",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 1059,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "752:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "771:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "763:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1044,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "763:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "762:17:4"
									},
									"returnParameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "803:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1047,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "803:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:6:4"
									},
									"scope": 1336,
									"src": "743:387:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1092,
										"nodeType": "Block",
										"src": "2136:246:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1074,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1070,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2163:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1336",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1336",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1069,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2155:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1068,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2155:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1071,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2155:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1072,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2155:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1073,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1064,
																"src": "2180:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2155:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2188:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1067,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2147:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2147:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1077,
												"nodeType": "ExpressionStatement",
												"src": "2147:73:4"
											},
											{
												"assignments": [
													1079,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1079,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2239:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1092,
														"src": "2234:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1078,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2234:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1086,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1084,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2282:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1080,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1062,
																"src": "2252:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2252:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1083,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1082,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1064,
																"src": "2274:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2252:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2252:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2233:52:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1088,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1079,
															"src": "2304:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1089,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2313:60:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1087,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2296:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2296:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1091,
												"nodeType": "ExpressionStatement",
												"src": "2296:78:4"
											}
										]
									},
									"documentation": {
										"id": 1060,
										"nodeType": "StructuredDocumentation",
										"src": "1138:921:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1093,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2074:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2100:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "2084:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1061,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2084:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2119:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "2111:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2111:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2083:43:4"
									},
									"returnParameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2136:0:4"
									},
									"scope": 1336,
									"src": "2065:317:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1109,
										"nodeType": "Block",
										"src": "3233:86:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1104,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1096,
															"src": "3264:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1105,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1098,
															"src": "3272:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3278:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1103,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1110,
															1130
														],
														"referencedDeclaration": 1130,
														"src": "3251:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3251:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1102,
												"id": 1108,
												"nodeType": "Return",
												"src": "3244:67:4"
											}
										]
									},
									"documentation": {
										"id": 1094,
										"nodeType": "StructuredDocumentation",
										"src": "2390:748:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3153:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3174:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "3166:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3166:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3195:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "3182:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1097,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3182:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:35:4"
									},
									"returnParameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "3219:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1100,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3219:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:4"
									},
									"scope": 1336,
									"src": "3144:175:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1129,
										"nodeType": "Block",
										"src": "3700:78:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1123,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "3740:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1124,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "3748:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1125,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3754:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1126,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "3757:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1122,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1150,
															1200
														],
														"referencedDeclaration": 1200,
														"src": "3718:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3718:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1121,
												"id": 1128,
												"nodeType": "Return",
												"src": "3711:59:4"
											}
										]
									},
									"documentation": {
										"id": 1111,
										"nodeType": "StructuredDocumentation",
										"src": "3327:216:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3558:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3589:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "3581:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3581:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3619:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "3606:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1114,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3606:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3648:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "3634:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1116,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3634:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3570:97:4"
									},
									"returnParameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "3686:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1119,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3686:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3685:14:4"
									},
									"scope": 1336,
									"src": "3549:229:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1149,
										"nodeType": "Block",
										"src": "4300:113:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1143,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "4340:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1144,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "4348:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1145,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1137,
															"src": "4354:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4361:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1142,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1150,
															1200
														],
														"referencedDeclaration": 1200,
														"src": "4318:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4318:87:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1141,
												"id": 1148,
												"nodeType": "Return",
												"src": "4311:94:4"
											}
										]
									},
									"documentation": {
										"id": 1131,
										"nodeType": "StructuredDocumentation",
										"src": "3786:361:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4162:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4202:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "4194:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4194:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4232:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "4219:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1134,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4219:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4255:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "4247:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4247:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4183:84:4"
									},
									"returnParameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "4286:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1139,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4286:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4285:14:4"
									},
									"scope": 1336,
									"src": "4153:260:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1199,
										"nodeType": "Block",
										"src": "4853:326:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1167,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4880:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1336",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1336",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4872:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1165,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4872:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4872:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4872:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1170,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1157,
																"src": "4897:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4872:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4904:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1164,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4864:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4864:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1174,
												"nodeType": "ExpressionStatement",
												"src": "4864:81:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1177,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1153,
																	"src": "4975:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1176,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1059,
																"src": "4964:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4964:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1179,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4984:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1175,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4956:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4956:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1181,
												"nodeType": "ExpressionStatement",
												"src": "4956:60:4"
											},
											{
												"assignments": [
													1183,
													1185
												],
												"declarations": [
													{
														"constant": false,
														"id": 1183,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5035:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1199,
														"src": "5030:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1182,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5030:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1185,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5057:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1199,
														"src": "5044:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1184,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5044:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1192,
												"initialValue": {
													"arguments": [
														{
															"id": 1190,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1155,
															"src": "5097:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1186,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1153,
																"src": "5071:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5071:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1189,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1188,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1157,
																"src": "5090:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5071:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5071:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5029:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1194,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1183,
															"src": "5137:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1195,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1185,
															"src": "5146:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1196,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1159,
															"src": "5158:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1193,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1335,
														"src": "5120:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5120:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1163,
												"id": 1198,
												"nodeType": "Return",
												"src": "5113:58:4"
											}
										]
									},
									"documentation": {
										"id": 1151,
										"nodeType": "StructuredDocumentation",
										"src": "4421:242:4",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4678:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4718:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "4710:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4710:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4748:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "4735:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1154,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4735:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4771:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "4763:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4763:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4801:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "4787:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1158,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4787:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4699:121:4"
									},
									"returnParameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "4839:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4839:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4838:14:4"
									},
									"scope": 1336,
									"src": "4669:510:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1216,
										"nodeType": "Block",
										"src": "5464:99:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1211,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1203,
															"src": "5501:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1212,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1205,
															"src": "5509:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5515:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1210,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1217,
															1252
														],
														"referencedDeclaration": 1252,
														"src": "5482:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5482:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1209,
												"id": 1215,
												"nodeType": "Return",
												"src": "5475:80:4"
											}
										]
									},
									"documentation": {
										"id": 1201,
										"nodeType": "StructuredDocumentation",
										"src": "5187:171:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5373:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5400:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "5392:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5392:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5421:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "5408:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1204,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5408:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5391:35:4"
									},
									"returnParameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "5450:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1207,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5450:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5449:14:4"
									},
									"scope": 1336,
									"src": "5364:199:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1251,
										"nodeType": "Block",
										"src": "5917:233:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1231,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1220,
																	"src": "5947:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1230,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1059,
																"src": "5936:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5936:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5956:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1229,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5928:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5928:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1235,
												"nodeType": "ExpressionStatement",
												"src": "5928:67:4"
											},
											{
												"assignments": [
													1237,
													1239
												],
												"declarations": [
													{
														"constant": false,
														"id": 1237,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6014:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1251,
														"src": "6009:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1236,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6009:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1239,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6036:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1251,
														"src": "6023:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1238,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6023:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1244,
												"initialValue": {
													"arguments": [
														{
															"id": 1242,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1222,
															"src": "6068:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1240,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1220,
															"src": "6050:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1241,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6050:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6050:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6008:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1246,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1237,
															"src": "6108:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1247,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1239,
															"src": "6117:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1248,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1224,
															"src": "6129:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1245,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1335,
														"src": "6091:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6091:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1228,
												"id": 1250,
												"nodeType": "Return",
												"src": "6084:58:4"
											}
										]
									},
									"documentation": {
										"id": 1218,
										"nodeType": "StructuredDocumentation",
										"src": "5571:178:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5764:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5801:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "5793:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5793:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5831:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "5818:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1221,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5818:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5860:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "5846:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1223,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5846:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5782:97:4"
									},
									"returnParameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "5903:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1226,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5903:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5902:14:4"
									},
									"scope": 1336,
									"src": "5755:395:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1268,
										"nodeType": "Block",
										"src": "6434:103:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1263,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1255,
															"src": "6473:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1264,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1257,
															"src": "6481:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6487:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1262,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1269,
															1304
														],
														"referencedDeclaration": 1304,
														"src": "6452:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6452:77:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1261,
												"id": 1267,
												"nodeType": "Return",
												"src": "6445:84:4"
											}
										]
									},
									"documentation": {
										"id": 1253,
										"nodeType": "StructuredDocumentation",
										"src": "6158:173:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6346:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6375:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "6367:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6367:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6396:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "6383:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1256,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6383:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6366:35:4"
									},
									"returnParameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "6420:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1259,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6420:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6419:14:4"
									},
									"scope": 1336,
									"src": "6337:200:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1303,
										"nodeType": "Block",
										"src": "6890:237:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1283,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1272,
																	"src": "6920:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1282,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1059,
																"src": "6909:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6909:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1285,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6929:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1281,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6901:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6901:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1287,
												"nodeType": "ExpressionStatement",
												"src": "6901:69:4"
											},
											{
												"assignments": [
													1289,
													1291
												],
												"declarations": [
													{
														"constant": false,
														"id": 1289,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6989:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1303,
														"src": "6984:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1288,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6984:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1291,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7011:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1303,
														"src": "6998:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1290,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6998:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1296,
												"initialValue": {
													"arguments": [
														{
															"id": 1294,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1274,
															"src": "7045:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1292,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1272,
															"src": "7025:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1293,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7025:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7025:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6983:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1298,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1289,
															"src": "7085:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1299,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1291,
															"src": "7094:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1300,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1276,
															"src": "7106:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1297,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1335,
														"src": "7068:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7068:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1280,
												"id": 1302,
												"nodeType": "Return",
												"src": "7061:58:4"
											}
										]
									},
									"documentation": {
										"id": 1270,
										"nodeType": "StructuredDocumentation",
										"src": "6545:180:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6740:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6779:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "6771:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6771:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6809:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "6796:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1273,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6796:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6838:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "6824:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1275,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6824:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6760:97:4"
									},
									"returnParameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "6876:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1278,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6876:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6875:14:4"
									},
									"scope": 1336,
									"src": "6731:396:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1334,
										"nodeType": "Block",
										"src": "7519:548:4",
										"statements": [
											{
												"condition": {
													"id": 1316,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1307,
													"src": "7534:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1332,
													"nodeType": "Block",
													"src": "7593:467:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1320,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1309,
																		"src": "7679:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7679:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7699:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7679:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1330,
																"nodeType": "Block",
																"src": "7994:55:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1327,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1311,
																					"src": "8020:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1326,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8013:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1328,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8013:20:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1329,
																		"nodeType": "ExpressionStatement",
																		"src": "8013:20:4"
																	}
																]
															},
															"id": 1331,
															"nodeType": "IfStatement",
															"src": "7675:374:4",
															"trueBody": {
																"id": 1325,
																"nodeType": "Block",
																"src": "7702:286:4",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7825:148:4",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7848:40:4",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7877:10:4"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7871:5:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7871:17:4"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7852:15:4",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7921:2:4",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7925:10:4"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7917:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7917:19:4"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7938:15:4"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7910:6:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7910:44:4"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7910:44:4"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 1309,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7877:10:4",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1309,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7925:10:4",
																				"valueSize": 1
																			}
																		],
																		"id": 1324,
																		"nodeType": "InlineAssembly",
																		"src": "7816:157:4"
																	}
																]
															}
														}
													]
												},
												"id": 1333,
												"nodeType": "IfStatement",
												"src": "7530:530:4",
												"trueBody": {
													"id": 1319,
													"nodeType": "Block",
													"src": "7543:44:4",
													"statements": [
														{
															"expression": {
																"id": 1317,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1309,
																"src": "7565:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1315,
															"id": 1318,
															"nodeType": "Return",
															"src": "7558:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1305,
										"nodeType": "StructuredDocumentation",
										"src": "7135:214:4",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 1335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7364:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7396:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "7391:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1306,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7391:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7427:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "7414:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1308,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7414:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7462:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "7448:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1310,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7448:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7380:101:4"
									},
									"returnParameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "7505:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1313,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7505:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7504:14:4"
									},
									"scope": 1336,
									"src": "7355:712:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1337,
							"src": "133:7937:4",
							"usedErrors": []
						}
					],
					"src": "35:8035:4"
				},
				"id": 4
			},
			"contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1358
						]
					},
					"id": 1359,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1338,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1339,
								"nodeType": "StructuredDocumentation",
								"src": "62:505:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1358,
							"linearizedBaseContracts": [
								1358
							],
							"name": "Context",
							"nameLocation": "587:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1347,
										"nodeType": "Block",
										"src": "664:36:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1344,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "682:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "682:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1343,
												"id": 1346,
												"nodeType": "Return",
												"src": "675:17:5"
											}
										]
									},
									"id": 1348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "611:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "621:2:5"
									},
									"returnParameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "655:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:9:5"
									},
									"scope": 1358,
									"src": "602:98:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1356,
										"nodeType": "Block",
										"src": "775:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1353,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "793:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "793:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1352,
												"id": 1355,
												"nodeType": "Return",
												"src": "786:15:5"
											}
										]
									},
									"id": 1357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "717:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "725:2:5"
									},
									"returnParameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "759:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1350,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "759:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "758:16:5"
									},
									"scope": 1358,
									"src": "708:101:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1359,
							"src": "569:243:5",
							"usedErrors": []
						}
					],
					"src": "35:777:5"
				},
				"id": 5
			}
		}
	}
}
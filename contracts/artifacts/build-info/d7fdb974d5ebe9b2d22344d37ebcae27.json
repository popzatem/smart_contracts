{
	"id": "d7fdb974d5ebe9b2d22344d37ebcae27",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.14",
	"solcLongVersion": "0.8.14+commit.80d49f37",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/LandbaseToken.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.8.0;\r\n\r\nimport \"./structs/EnumerableSet.sol\";\r\n\r\nimport \"./BEP20.sol\";\r\n\r\n// LandbaseToken with Governance.\r\ncontract LandbaseToken is BEP20(\"Landbase Coin\", \"LBC\") {\r\n    using SafeMath for uint256;\r\n    using EnumerableSet for EnumerableSet.AddressSet;\r\n\r\n    EnumerableSet.AddressSet private _minters;\r\n\r\n    /// @notice Creates `_amount` token to `_to`. Must only be called by the owner (MasterChef).\r\n    function mint(address _to, uint256 _amount)\r\n        public\r\n        onlyMinter\r\n        returns (bool)\r\n    {\r\n        _mint(_to, _amount);\r\n        _moveDelegates(address(0), _delegates[_to], _amount);\r\n        return true;\r\n    }\r\n\r\n    /// @notice A record of each accounts delegate\r\n    mapping(address => address) internal _delegates;\r\n\r\n    /// @notice A checkpoint for marking number of votes from a given block\r\n    struct Checkpoint {\r\n        uint32 fromBlock;\r\n        uint256 votes;\r\n    }\r\n\r\n    /// @notice A record of votes checkpoints for each account, by index\r\n    mapping(address => mapping(uint32 => Checkpoint)) public checkpoints;\r\n\r\n    /// @notice The number of checkpoints for each account\r\n    mapping(address => uint32) public numCheckpoints;\r\n\r\n    /// @notice The EIP-712 typehash for the contract's domain\r\n    bytes32 public constant DOMAIN_TYPEHASH =\r\n        keccak256(\r\n            \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\"\r\n        );\r\n\r\n    /// @notice The EIP-712 typehash for the delegation struct used by the contract\r\n    bytes32 public constant DELEGATION_TYPEHASH =\r\n        keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\r\n\r\n    /// @notice A record of states for signing / validating signatures\r\n    mapping(address => uint256) public nonces;\r\n\r\n    /// @notice An event thats emitted when an account changes its delegate\r\n    event DelegateChanged(\r\n        address indexed delegator,\r\n        address indexed fromDelegate,\r\n        address indexed toDelegate\r\n    );\r\n\r\n    /// @notice An event thats emitted when a delegate account's vote balance changes\r\n    event DelegateVotesChanged(\r\n        address indexed delegate,\r\n        uint256 previousBalance,\r\n        uint256 newBalance\r\n    );\r\n\r\n    /**\r\n     * @notice Delegate votes from `msg.sender` to `delegatee`\r\n     * @param delegator The address to get delegatee for\r\n     */\r\n    function delegates(address delegator) external view returns (address) {\r\n        return _delegates[delegator];\r\n    }\r\n\r\n    /**\r\n     * @notice Delegate votes from `msg.sender` to `delegatee`\r\n     * @param delegatee The address to delegate votes to\r\n     */\r\n    function delegate(address delegatee) external {\r\n        return _delegate(msg.sender, delegatee);\r\n    }\r\n\r\n    /**\r\n     * @notice Delegates votes from signatory to `delegatee`\r\n     * @param delegatee The address to delegate votes to\r\n     * @param nonce The contract state required to match the signature\r\n     * @param expiry The time at which to expire the signature\r\n     * @param v The recovery byte of the signature\r\n     * @param r Half of the ECDSA signature pair\r\n     * @param s Half of the ECDSA signature pair\r\n     */\r\n    function delegateBySig(\r\n        address delegatee,\r\n        uint256 nonce,\r\n        uint256 expiry,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) external {\r\n        bytes32 domainSeparator = keccak256(\r\n            abi.encode(\r\n                DOMAIN_TYPEHASH,\r\n                keccak256(bytes(name())),\r\n                getChainId(),\r\n                address(this)\r\n            )\r\n        );\r\n\r\n        bytes32 structHash = keccak256(\r\n            abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry)\r\n        );\r\n\r\n        bytes32 digest = keccak256(\r\n            abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash)\r\n        );\r\n\r\n        address signatory = ecrecover(digest, v, r, s);\r\n        require(\r\n            signatory != address(0),\r\n            \"LANDBASE::delegateBySig: invalid signature\"\r\n        );\r\n        require(\r\n            nonce == nonces[signatory]++,\r\n            \"LANDBASE::delegateBySig: invalid nonce\"\r\n        );\r\n        require(\r\n            block.timestamp <= expiry,\r\n            \"LANDBASE::delegateBySig: signature expired\"\r\n        );\r\n        return _delegate(signatory, delegatee);\r\n    }\r\n\r\n    /**\r\n     * @notice Gets the current votes balance for `account`\r\n     * @param account The address to get votes balance\r\n     * @return The number of current votes for `account`\r\n     */\r\n    function getCurrentVotes(address account) external view returns (uint256) {\r\n        uint32 nCheckpoints = numCheckpoints[account];\r\n        return\r\n            nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0;\r\n    }\r\n\r\n    /**\r\n     * @notice Determine the prior number of votes for an account as of a block number\r\n     * @dev Block number must be a finalized block or else this function will revert to prevent misinformation.\r\n     * @param account The address of the account to check\r\n     * @param blockNumber The block number to get the vote balance at\r\n     * @return The number of votes the account had as of the given block\r\n     */\r\n    function getPriorVotes(address account, uint256 blockNumber)\r\n        external\r\n        view\r\n        returns (uint256)\r\n    {\r\n        require(\r\n            blockNumber < block.number,\r\n            \"LANDBASE::getPriorVotes: not yet determined\"\r\n        );\r\n\r\n        uint32 nCheckpoints = numCheckpoints[account];\r\n        if (nCheckpoints == 0) {\r\n            return 0;\r\n        }\r\n\r\n        // First check most recent balance\r\n        if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {\r\n            return checkpoints[account][nCheckpoints - 1].votes;\r\n        }\r\n\r\n        // Next check implicit zero balance\r\n        if (checkpoints[account][0].fromBlock > blockNumber) {\r\n            return 0;\r\n        }\r\n\r\n        uint32 lower = 0;\r\n        uint32 upper = nCheckpoints - 1;\r\n        while (upper > lower) {\r\n            uint32 center = upper - (upper - lower) / 2; // ceil, avoiding overflow\r\n            Checkpoint memory cp = checkpoints[account][center];\r\n            if (cp.fromBlock == blockNumber) {\r\n                return cp.votes;\r\n            } else if (cp.fromBlock < blockNumber) {\r\n                lower = center;\r\n            } else {\r\n                upper = center - 1;\r\n            }\r\n        }\r\n        return checkpoints[account][lower].votes;\r\n    }\r\n\r\n    function _delegate(address delegator, address delegatee) internal {\r\n        address currentDelegate = _delegates[delegator];\r\n        uint256 delegatorBalance = balanceOf(delegator); // balance of underlying PLEARNs (not scaled);\r\n        _delegates[delegator] = delegatee;\r\n\r\n        emit DelegateChanged(delegator, currentDelegate, delegatee);\r\n\r\n        _moveDelegates(currentDelegate, delegatee, delegatorBalance);\r\n    }\r\n\r\n    function _moveDelegates(\r\n        address srcRep,\r\n        address dstRep,\r\n        uint256 amount\r\n    ) internal {\r\n        if (srcRep != dstRep && amount > 0) {\r\n            if (srcRep != address(0)) {\r\n                // decrease old representative\r\n                uint32 srcRepNum = numCheckpoints[srcRep];\r\n                uint256 srcRepOld = srcRepNum > 0\r\n                    ? checkpoints[srcRep][srcRepNum - 1].votes\r\n                    : 0;\r\n                uint256 srcRepNew = srcRepOld.sub(amount);\r\n                _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew);\r\n            }\r\n\r\n            if (dstRep != address(0)) {\r\n                // increase new representative\r\n                uint32 dstRepNum = numCheckpoints[dstRep];\r\n                uint256 dstRepOld = dstRepNum > 0\r\n                    ? checkpoints[dstRep][dstRepNum - 1].votes\r\n                    : 0;\r\n                uint256 dstRepNew = dstRepOld.add(amount);\r\n                _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew);\r\n            }\r\n        }\r\n    }\r\n\r\n    function _writeCheckpoint(\r\n        address delegatee,\r\n        uint32 nCheckpoints,\r\n        uint256 oldVotes,\r\n        uint256 newVotes\r\n    ) internal {\r\n        uint32 blockNumber = safe32(\r\n            block.number,\r\n            \"LANDBASE::_writeCheckpoint: block number exceeds 32 bits\"\r\n        );\r\n\r\n        if (\r\n            nCheckpoints > 0 &&\r\n            checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber\r\n        ) {\r\n            checkpoints[delegatee][nCheckpoints - 1].votes = newVotes;\r\n        } else {\r\n            checkpoints[delegatee][nCheckpoints] = Checkpoint(\r\n                blockNumber,\r\n                newVotes\r\n            );\r\n            numCheckpoints[delegatee] = nCheckpoints + 1;\r\n        }\r\n\r\n        emit DelegateVotesChanged(delegatee, oldVotes, newVotes);\r\n    }\r\n\r\n    function safe32(uint256 n, string memory errorMessage)\r\n        internal\r\n        pure\r\n        returns (uint32)\r\n    {\r\n        require(n < 2**32, errorMessage);\r\n        return uint32(n);\r\n    }\r\n\r\n    function getChainId() internal view returns (uint256) {\r\n        uint256 chainId;\r\n        assembly {\r\n            chainId := chainid()\r\n        }\r\n        return chainId;\r\n    }\r\n\r\n    function addMinter(address _addMinter) public onlyOwner returns (bool) {\r\n        require(\r\n            _addMinter != address(0),\r\n            \"LANDBASE: _addMinter is the zero address\"\r\n        );\r\n        return EnumerableSet.add(_minters, _addMinter);\r\n    }\r\n\r\n    function delMinter(address _delMinter) public onlyOwner returns (bool) {\r\n        require(\r\n            _delMinter != address(0),\r\n            \"LANDBASE: _delMinter is the zero address\"\r\n        );\r\n        return EnumerableSet.remove(_minters, _delMinter);\r\n    }\r\n\r\n    function getMinterLength() public view returns (uint256) {\r\n        return EnumerableSet.length(_minters);\r\n    }\r\n\r\n    function isMinter(address account) public view returns (bool) {\r\n        return EnumerableSet.contains(_minters, account);\r\n    }\r\n\r\n    function getMinter(uint256 _index) public view onlyOwner returns (address) {\r\n        require(_index <= getMinterLength() - 1, \"LANDBASE: index out of bounds\");\r\n        return EnumerableSet.at(_minters, _index);\r\n    }\r\n\r\n    // modifier for mint function\r\n    modifier onlyMinter() {\r\n        require(isMinter(msg.sender), \"caller is not the minter\");\r\n        _;\r\n    }\r\n}"
			},
			"contracts/BEP20.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.8.0;\r\n\r\nimport \"./access/Ownable.sol\";\r\nimport \"./utils/Address.sol\";\r\nimport \"./libraries/SafeMath.sol\";\r\n\r\nimport \"./IBEP20.sol\";\r\n\r\ncontract BEP20 is IBEP20, Ownable {\r\n    using SafeMath for uint256;\r\n    using Address for address;\r\n\r\n    mapping(address => uint256) private _balances;\r\n\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n    uint8 private _decimals;\r\n    string private _symbol;\r\n    string private _name;\r\n\r\n    /**\r\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\r\n     * a default value of 18.\r\n     *\r\n     * To select a different value for {decimals}, use {_setupDecimals}.\r\n     *\r\n     * All three of these values are immutable: they can only be set once during\r\n     * construction.\r\n     */\r\n    constructor(string memory tokenName, string memory tokenSymbol) {\r\n        _name = tokenName;\r\n        _symbol = tokenSymbol;\r\n        _decimals = 18;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the bep token owner.\r\n     */\r\n    function getOwner() external view override returns (address) {\r\n        return owner();\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the token name.\r\n     */\r\n    function name() public view override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the token decimals.\r\n     */\r\n    function decimals() public view override returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the token symbol.\r\n     */\r\n    function symbol() public view override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev See {BEP20-totalSupply}.\r\n     */\r\n    function totalSupply() public view override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {BEP20-balanceOf}.\r\n     */\r\n    function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {BEP20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `recipient` cannot be the zero address.\r\n     * - the caller must have a balance of at least `amount`.\r\n     */\r\n    function transfer(address recipient, uint256 amount)\r\n        public\r\n        override\r\n        returns (bool)\r\n    {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {BEP20-allowance}.\r\n     */\r\n    function allowance(address owner, address spender)\r\n        public\r\n        view\r\n        override\r\n        returns (uint256)\r\n    {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {BEP20-approve}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function approve(address spender, uint256 amount)\r\n        public\r\n        override\r\n        returns (bool)\r\n    {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {BEP20-transferFrom}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance. This is not\r\n     * required by the EIP. See the note at the beginning of {BEP20};\r\n     *\r\n     * Requirements:\r\n     * - `sender` and `recipient` cannot be the zero address.\r\n     * - `sender` must have a balance of at least `amount`.\r\n     * - the caller must have allowance for `sender`'s tokens of at least\r\n     * `amount`.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) public override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        _approve(\r\n            sender,\r\n            _msgSender(),\r\n            _allowances[sender][_msgSender()].sub(\r\n                amount,\r\n                \"BEP20: transfer amount exceeds allowance\"\r\n            )\r\n        );\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {BEP20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function increaseAllowance(address spender, uint256 addedValue)\r\n        public\r\n        returns (bool)\r\n    {\r\n        _approve(\r\n            _msgSender(),\r\n            spender,\r\n            _allowances[_msgSender()][spender].add(addedValue)\r\n        );\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {BEP20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `spender` must have allowance for the caller of at least\r\n     * `subtractedValue`.\r\n     */\r\n    function decreaseAllowance(address spender, uint256 subtractedValue)\r\n        public\r\n        returns (bool)\r\n    {\r\n        _approve(\r\n            _msgSender(),\r\n            spender,\r\n            _allowances[_msgSender()][spender].sub(\r\n                subtractedValue,\r\n                \"BEP20: decreased allowance below zero\"\r\n            )\r\n        );\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\r\n     * the total supply.\r\n     *\r\n     * Requirements\r\n     *\r\n     * - `msg.sender` must be the token owner\r\n     */\r\n    function mint(uint256 amount) public onlyOwner returns (bool) {\r\n        _mint(_msgSender(), amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\r\n     *\r\n     * This is internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `sender` cannot be the zero address.\r\n     * - `recipient` cannot be the zero address.\r\n     * - `sender` must have a balance of at least `amount`.\r\n     */\r\n    function _transfer(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) internal {\r\n        require(sender != address(0), \"BEP20: transfer from the zero address\");\r\n        require(recipient != address(0), \"BEP20: transfer to the zero address\");\r\n\r\n        _balances[sender] = _balances[sender].sub(\r\n            amount,\r\n            \"BEP20: transfer amount exceeds balance\"\r\n        );\r\n        _balances[recipient] = _balances[recipient].add(amount);\r\n        emit Transfer(sender, recipient, amount);\r\n    }\r\n\r\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n     * the total supply.\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * Requirements\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     */\r\n    function _mint(address account, uint256 amount) internal {\r\n        require(account != address(0), \"BEP20: mint to the zero address\");\r\n\r\n        _totalSupply = _totalSupply.add(amount);\r\n        _balances[account] = _balances[account].add(amount);\r\n        emit Transfer(address(0), account, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens from `account`, reducing the\r\n     * total supply.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * Requirements\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     * - `account` must have at least `amount` tokens.\r\n     */\r\n    function _burn(address account, uint256 amount) internal {\r\n        require(account != address(0), \"BEP20: burn from the zero address\");\r\n\r\n        _balances[account] = _balances[account].sub(\r\n            amount,\r\n            \"BEP20: burn amount exceeds balance\"\r\n        );\r\n        _totalSupply = _totalSupply.sub(amount);\r\n        emit Transfer(account, address(0), amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\r\n     *\r\n     * This is internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function _approve(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal {\r\n        require(owner != address(0), \"BEP20: approve from the zero address\");\r\n        require(spender != address(0), \"BEP20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens from `account`.`amount` is then deducted\r\n     * from the caller's allowance.\r\n     *\r\n     * See {_burn} and {_approve}.\r\n     */\r\n    function _burnFrom(address account, uint256 amount) internal {\r\n        _burn(account, amount);\r\n        _approve(\r\n            account,\r\n            _msgSender(),\r\n            _allowances[account][_msgSender()].sub(\r\n                amount,\r\n                \"BEP20: burn amount exceeds allowance\"\r\n            )\r\n        );\r\n    }\r\n}"
			},
			"contracts/structs/EnumerableSet.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Library for managing\r\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\r\n * types.\r\n *\r\n * Sets have the following properties:\r\n *\r\n * - Elements are added, removed, and checked for existence in constant time\r\n * (O(1)).\r\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\r\n *\r\n * ```\r\n * contract Example {\r\n *     // Add the library methods\r\n *     using EnumerableSet for EnumerableSet.AddressSet;\r\n *\r\n *     // Declare a set state variable\r\n *     EnumerableSet.AddressSet private mySet;\r\n * }\r\n * ```\r\n *\r\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\r\n * and `uint256` (`UintSet`) are supported.\r\n */\r\nlibrary EnumerableSet {\r\n    // To implement this library for multiple types with as little code\r\n    // repetition as possible, we write it in terms of a generic Set type with\r\n    // bytes32 values.\r\n    // The Set implementation uses private functions, and user-facing\r\n    // implementations (such as AddressSet) are just wrappers around the\r\n    // underlying Set.\r\n    // This means that we can only create new EnumerableSets for types that fit\r\n    // in bytes32.\r\n\r\n    struct Set {\r\n        // Storage of set values\r\n        bytes32[] _values;\r\n        // Position of the value in the `values` array, plus 1 because index 0\r\n        // means a value is not in the set.\r\n        mapping(bytes32 => uint256) _indexes;\r\n    }\r\n\r\n    /**\r\n     * @dev Add a value to a set. O(1).\r\n     *\r\n     * Returns true if the value was added to the set, that is if it was not\r\n     * already present.\r\n     */\r\n    function _add(Set storage set, bytes32 value) private returns (bool) {\r\n        if (!_contains(set, value)) {\r\n            set._values.push(value);\r\n            // The value is stored at length-1, but we add 1 to all indexes\r\n            // and use 0 as a sentinel value\r\n            set._indexes[value] = set._values.length;\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the value was removed from the set, that is if it was\r\n     * present.\r\n     */\r\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\r\n        // We read and store the value's index to prevent multiple reads from the same storage slot\r\n        uint256 valueIndex = set._indexes[value];\r\n\r\n        if (valueIndex != 0) {\r\n            // Equivalent to contains(set, value)\r\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\r\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\r\n            // This modifies the order of the array, as noted in {at}.\r\n\r\n            uint256 toDeleteIndex = valueIndex - 1;\r\n            uint256 lastIndex = set._values.length - 1;\r\n\r\n            if (lastIndex != toDeleteIndex) {\r\n                bytes32 lastvalue = set._values[lastIndex];\r\n\r\n                // Move the last value to the index where the value to delete is\r\n                set._values[toDeleteIndex] = lastvalue;\r\n                // Update the index for the moved value\r\n                set._indexes[lastvalue] = valueIndex; // Replace lastvalue's index to valueIndex\r\n            }\r\n\r\n            // Delete the slot where the moved value was stored\r\n            set._values.pop();\r\n\r\n            // Delete the index for the deleted slot\r\n            delete set._indexes[value];\r\n\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the value is in the set. O(1).\r\n     */\r\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\r\n        return set._indexes[value] != 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of values on the set. O(1).\r\n     */\r\n    function _length(Set storage set) private view returns (uint256) {\r\n        return set._values.length;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value stored at position `index` in the set. O(1).\r\n     *\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\r\n        return set._values[index];\r\n    }\r\n\r\n    /**\r\n     * @dev Return the entire set in an array\r\n     *\r\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\r\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\r\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\r\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\r\n     */\r\n    function _values(Set storage set) private view returns (bytes32[] memory) {\r\n        return set._values;\r\n    }\r\n\r\n    // Bytes32Set\r\n\r\n    struct Bytes32Set {\r\n        Set _inner;\r\n    }\r\n\r\n    /**\r\n     * @dev Add a value to a set. O(1).\r\n     *\r\n     * Returns true if the value was added to the set, that is if it was not\r\n     * already present.\r\n     */\r\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\r\n        return _add(set._inner, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the value was removed from the set, that is if it was\r\n     * present.\r\n     */\r\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\r\n        return _remove(set._inner, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the value is in the set. O(1).\r\n     */\r\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\r\n        return _contains(set._inner, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of values in the set. O(1).\r\n     */\r\n    function length(Bytes32Set storage set) internal view returns (uint256) {\r\n        return _length(set._inner);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value stored at position `index` in the set. O(1).\r\n     *\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\r\n        return _at(set._inner, index);\r\n    }\r\n\r\n    /**\r\n     * @dev Return the entire set in an array\r\n     *\r\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\r\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\r\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\r\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\r\n     */\r\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\r\n        return _values(set._inner);\r\n    }\r\n\r\n    // AddressSet\r\n\r\n    struct AddressSet {\r\n        Set _inner;\r\n    }\r\n\r\n    /**\r\n     * @dev Add a value to a set. O(1).\r\n     *\r\n     * Returns true if the value was added to the set, that is if it was not\r\n     * already present.\r\n     */\r\n    function add(AddressSet storage set, address value) internal returns (bool) {\r\n        return _add(set._inner, bytes32(uint256(uint160(value))));\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the value was removed from the set, that is if it was\r\n     * present.\r\n     */\r\n    function remove(AddressSet storage set, address value) internal returns (bool) {\r\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the value is in the set. O(1).\r\n     */\r\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\r\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of values in the set. O(1).\r\n     */\r\n    function length(AddressSet storage set) internal view returns (uint256) {\r\n        return _length(set._inner);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value stored at position `index` in the set. O(1).\r\n     *\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\r\n        return address(uint160(uint256(_at(set._inner, index))));\r\n    }\r\n\r\n    /**\r\n     * @dev Return the entire set in an array\r\n     *\r\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\r\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\r\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\r\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\r\n     */\r\n    function values(AddressSet storage set) internal view returns (address[] memory) {\r\n        bytes32[] memory store = _values(set._inner);\r\n        address[] memory result;\r\n\r\n        assembly {\r\n            result := store\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    // UintSet\r\n\r\n    struct UintSet {\r\n        Set _inner;\r\n    }\r\n\r\n    /**\r\n     * @dev Add a value to a set. O(1).\r\n     *\r\n     * Returns true if the value was added to the set, that is if it was not\r\n     * already present.\r\n     */\r\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\r\n        return _add(set._inner, bytes32(value));\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the value was removed from the set, that is if it was\r\n     * present.\r\n     */\r\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\r\n        return _remove(set._inner, bytes32(value));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the value is in the set. O(1).\r\n     */\r\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\r\n        return _contains(set._inner, bytes32(value));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of values on the set. O(1).\r\n     */\r\n    function length(UintSet storage set) internal view returns (uint256) {\r\n        return _length(set._inner);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value stored at position `index` in the set. O(1).\r\n     *\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\r\n        return uint256(_at(set._inner, index));\r\n    }\r\n\r\n    /**\r\n     * @dev Return the entire set in an array\r\n     *\r\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\r\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\r\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\r\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\r\n     */\r\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\r\n        bytes32[] memory store = _values(set._inner);\r\n        uint256[] memory result;\r\n\r\n        assembly {\r\n            result := store\r\n        }\r\n\r\n        return result;\r\n    }\r\n}"
			},
			"contracts/IBEP20.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.6.0;\r\n\r\ninterface IBEP20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the token decimals.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n\r\n    /**\r\n     * @dev Returns the token symbol.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the token name.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the bep token owner.\r\n     */\r\n    function getOwner() external view returns (address);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount)\r\n        external\r\n        returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address _owner, address spender)\r\n        external\r\n        view\r\n        returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(\r\n        address indexed owner,\r\n        address indexed spender,\r\n        uint256 value\r\n    );\r\n}"
			},
			"contracts/libraries/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\n// CAUTION\r\n// This version of SafeMath should only be used with Solidity 0.8 or later,\r\n// because it relies on the compiler's built in overflow checks.\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations.\r\n *\r\n * NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler\r\n * now has built in overflow checking.\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            uint256 c = a + b;\r\n            if (c < a) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b > a) return (false, 0);\r\n            return (true, a - b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n            // benefit is lost if 'b' is also tested.\r\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n            if (a == 0) return (true, 0);\r\n            uint256 c = a * b;\r\n            if (c / a != b) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a / b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a % b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a + b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a * b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a / b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a % b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {trySub}.\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b <= a, errorMessage);\r\n            return a - b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a / b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting with custom message when dividing by zero.\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {tryMod}.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a % b;\r\n        }\r\n    }\r\n}"
			},
			"contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize, which returns 0 for contracts in\r\n        // construction, since the code is only stored at the end of the\r\n        // constructor execution.\r\n\r\n        uint256 size;\r\n        assembly {\r\n            size := extcodesize(account)\r\n        }\r\n        return size > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        require(isContract(target), \"Address: static call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(isContract(target), \"Address: delegate call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}"
			},
			"contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../utils/Context.sol\";\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _setOwner(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _setOwner(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _setOwner(newOwner);\r\n    }\r\n\r\n    function _setOwner(address newOwner) private {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}"
			},
			"contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/BEP20.sol": {
				"BEP20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "tokenName",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "tokenSymbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {BEP20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {BEP20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {BEP20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"mint(uint256)": {
								"details": "Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply. Requirements - `msg.sender` must be the token owner"
							},
							"name()": {
								"details": "Returns the token name."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "See {BEP20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/BEP20.sol\":192:9524  contract BEP20 is IBEP20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/BEP20.sol\":878:1035  constructor(string memory tokenName, string memory tokenSymbol) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/access/Ownable.sol\":894:917  _setOwner(_msgSender()) */\n  tag_7\n    /* \"contracts/utils/Context.sol\":682:692  msg.sender */\n  caller\n    /* \"contracts/access/Ownable.sol\":894:903  _setOwner */\n  tag_10\n    /* \"contracts/access/Ownable.sol\":894:917  _setOwner(_msgSender()) */\n  jump\t// in\ntag_7:\n    /* \"contracts/BEP20.sol\":953:970  _name = tokenName */\n  dup2\n  mload\n  tag_12\n  swap1\n    /* \"contracts/BEP20.sol\":953:958  _name */\n  0x06\n  swap1\n    /* \"contracts/BEP20.sol\":953:970  _name = tokenName */\n  0x20\n  dup6\n  add\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  pop\n    /* \"contracts/BEP20.sol\":981:1002  _symbol = tokenSymbol */\n  dup1\n  mload\n  tag_14\n  swap1\n    /* \"contracts/BEP20.sol\":981:988  _symbol */\n  0x05\n  swap1\n    /* \"contracts/BEP20.sol\":981:1002  _symbol = tokenSymbol */\n  0x20\n  dup5\n  add\n  swap1\n  tag_13\n  jump\t// in\ntag_14:\n  pop\n  pop\n    /* \"contracts/BEP20.sol\":1013:1022  _decimals */\n  0x04\n    /* \"contracts/BEP20.sol\":1013:1027  _decimals = 18 */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"contracts/BEP20.sol\":1025:1027  18 */\n  0x12\n    /* \"contracts/BEP20.sol\":1013:1027  _decimals = 18 */\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/BEP20.sol\":192:9524  contract BEP20 is IBEP20, Ownable {... */\n  jump(tag_31)\n    /* \"contracts/access/Ownable.sol\":2106:2279  function _setOwner(address newOwner) private {... */\ntag_10:\n    /* \"contracts/access/Ownable.sol\":2162:2178  address oldOwner */\n  0x00\n    /* \"contracts/access/Ownable.sol\":2181:2187  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/access/Ownable.sol\":2198:2215  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"contracts/access/Ownable.sol\":2231:2271  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"contracts/access/Ownable.sol\":2181:2187  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"contracts/access/Ownable.sol\":2231:2271  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"contracts/access/Ownable.sol\":2162:2178  address oldOwner */\n  swap1\n    /* \"contracts/access/Ownable.sol\":2231:2271  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"contracts/access/Ownable.sol\":2151:2279  {... */\n  pop\n    /* \"contracts/access/Ownable.sol\":2106:2279  function _setOwner(address newOwner) private {... */\n  pop\n  jump\t// out\n    /* \"contracts/BEP20.sol\":192:9524  contract BEP20 is IBEP20, Ownable {... */\ntag_13:\n  dup3\n  dup1\n  sload\n  tag_18\n  swap1\n  tag_19\n  jump\t// in\ntag_18:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_21\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_24)\ntag_21:\n  dup3\n  0x1f\n  lt\n  tag_22\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_24)\ntag_22:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_24\n  jumpi\n  swap2\n  dup3\n  add\ntag_23:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_24\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_23)\ntag_24:\n  pop\n  tag_25\n  swap3\n  swap2\n  pop\n  tag_26\n  jump\t// in\ntag_25:\n  pop\n  swap1\n  jump\t// out\ntag_26:\ntag_27:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_25\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_27)\n    /* \"#utility.yul\":14:141   */\ntag_29:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:1031   */\ntag_30:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_34\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_34:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_36\n  tag_29\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_38\n  tag_29\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_39:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_40:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_40)\ntag_42:\n    /* \"#utility.yul\":930:932   */\n  dup4\n    /* \"#utility.yul\":927:928   */\n  dup3\n    /* \"#utility.yul\":924:933   */\n  gt\n    /* \"#utility.yul\":921:1001   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":989:990   */\n  0x00\n    /* \"#utility.yul\":984:986   */\n  dup4\n    /* \"#utility.yul\":979:981   */\n  dup6\n    /* \"#utility.yul\":971:977   */\n  dup4\n    /* \"#utility.yul\":967:982   */\n  add\n    /* \"#utility.yul\":963:987   */\n  add\n    /* \"#utility.yul\":956:991   */\n  mstore\n    /* \"#utility.yul\":921:1001   */\ntag_43:\n    /* \"#utility.yul\":1019:1025   */\n  swap7\n    /* \"#utility.yul\":146:1031   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1036:1598   */\ntag_3:\n    /* \"#utility.yul\":1135:1141   */\n  0x00\n    /* \"#utility.yul\":1143:1149   */\n  dup1\n    /* \"#utility.yul\":1196:1198   */\n  0x40\n    /* \"#utility.yul\":1184:1193   */\n  dup4\n    /* \"#utility.yul\":1175:1182   */\n  dup6\n    /* \"#utility.yul\":1171:1194   */\n  sub\n    /* \"#utility.yul\":1167:1199   */\n  slt\n    /* \"#utility.yul\":1164:1216   */\n  iszero\n  tag_45\n  jumpi\n    /* \"#utility.yul\":1212:1213   */\n  0x00\n    /* \"#utility.yul\":1209:1210   */\n  dup1\n    /* \"#utility.yul\":1202:1214   */\n  revert\n    /* \"#utility.yul\":1164:1216   */\ntag_45:\n    /* \"#utility.yul\":1239:1255   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1304:1318   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1301:1335   */\n  iszero\n  tag_46\n  jumpi\n    /* \"#utility.yul\":1331:1332   */\n  0x00\n    /* \"#utility.yul\":1328:1329   */\n  dup1\n    /* \"#utility.yul\":1321:1333   */\n  revert\n    /* \"#utility.yul\":1301:1335   */\ntag_46:\n    /* \"#utility.yul\":1354:1415   */\n  tag_47\n    /* \"#utility.yul\":1407:1414   */\n  dup7\n    /* \"#utility.yul\":1398:1404   */\n  dup4\n    /* \"#utility.yul\":1387:1396   */\n  dup8\n    /* \"#utility.yul\":1383:1405   */\n  add\n    /* \"#utility.yul\":1354:1415   */\n  tag_30\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1344:1415   */\n  swap4\n  pop\n    /* \"#utility.yul\":1461:1463   */\n  0x20\n    /* \"#utility.yul\":1450:1459   */\n  dup6\n    /* \"#utility.yul\":1446:1464   */\n  add\n    /* \"#utility.yul\":1440:1465   */\n  mload\n    /* \"#utility.yul\":1424:1465   */\n  swap2\n  pop\n    /* \"#utility.yul\":1490:1492   */\n  dup1\n    /* \"#utility.yul\":1480:1488   */\n  dup3\n    /* \"#utility.yul\":1477:1493   */\n  gt\n    /* \"#utility.yul\":1474:1510   */\n  iszero\n  tag_48\n  jumpi\n    /* \"#utility.yul\":1506:1507   */\n  0x00\n    /* \"#utility.yul\":1503:1504   */\n  dup1\n    /* \"#utility.yul\":1496:1508   */\n  revert\n    /* \"#utility.yul\":1474:1510   */\ntag_48:\n  pop\n    /* \"#utility.yul\":1529:1592   */\n  tag_49\n    /* \"#utility.yul\":1584:1591   */\n  dup6\n    /* \"#utility.yul\":1573:1581   */\n  dup3\n    /* \"#utility.yul\":1562:1571   */\n  dup7\n    /* \"#utility.yul\":1558:1582   */\n  add\n    /* \"#utility.yul\":1529:1592   */\n  tag_30\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1519:1592   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":1036:1598   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1603:1983   */\ntag_19:\n    /* \"#utility.yul\":1682:1683   */\n  0x01\n    /* \"#utility.yul\":1678:1690   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1725:1737   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1746:1807   */\n  tag_51\n  jumpi\n    /* \"#utility.yul\":1800:1804   */\n  0x7f\n    /* \"#utility.yul\":1792:1798   */\n  dup3\n    /* \"#utility.yul\":1788:1805   */\n  and\n    /* \"#utility.yul\":1778:1805   */\n  swap2\n  pop\n    /* \"#utility.yul\":1746:1807   */\ntag_51:\n    /* \"#utility.yul\":1853:1855   */\n  0x20\n    /* \"#utility.yul\":1845:1851   */\n  dup3\n    /* \"#utility.yul\":1842:1856   */\n  lt\n    /* \"#utility.yul\":1822:1840   */\n  dup2\n    /* \"#utility.yul\":1819:1857   */\n  sub\n    /* \"#utility.yul\":1816:1977   */\n  tag_52\n  jumpi\n    /* \"#utility.yul\":1899:1909   */\n  0x4e487b71\n    /* \"#utility.yul\":1894:1897   */\n  0xe0\n    /* \"#utility.yul\":1890:1910   */\n  shl\n    /* \"#utility.yul\":1887:1888   */\n  0x00\n    /* \"#utility.yul\":1880:1911   */\n  mstore\n    /* \"#utility.yul\":1934:1938   */\n  0x22\n    /* \"#utility.yul\":1931:1932   */\n  0x04\n    /* \"#utility.yul\":1924:1939   */\n  mstore\n    /* \"#utility.yul\":1962:1966   */\n  0x24\n    /* \"#utility.yul\":1959:1960   */\n  0x00\n    /* \"#utility.yul\":1952:1967   */\n  revert\n    /* \"#utility.yul\":1816:1977   */\ntag_52:\n  pop\n    /* \"#utility.yul\":1603:1983   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_31:\n    /* \"contracts/BEP20.sol\":192:9524  contract BEP20 is IBEP20, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/BEP20.sol\":192:9524  contract BEP20 is IBEP20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x893d20e8\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup1\n      0x893d20e8\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x313ce567\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/BEP20.sol\":1260:1352  function name() public view override returns (string memory) {... */\n    tag_3:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20.sol\":2820:3013  function approve(address spender, uint256 amount)... */\n    tag_4:\n      tag_26\n      tag_27\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n        /* \"#utility.yul\":1218:1232   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1211:1233   */\n      iszero\n        /* \"#utility.yul\":1193:1234   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"contracts/BEP20.sol\":2820:3013  function approve(address spender, uint256 amount)... */\n      tag_24\n        /* \"#utility.yul\":1053:1240   */\n      jump\n        /* \"contracts/BEP20.sol\":1736:1836  function totalSupply() public view override returns (uint256) {... */\n    tag_5:\n        /* \"contracts/BEP20.sol\":1816:1828  _totalSupply */\n      sload(0x03)\n        /* \"contracts/BEP20.sol\":1736:1836  function totalSupply() public view override returns (uint256) {... */\n    tag_32:\n      mload(0x40)\n        /* \"#utility.yul\":1391:1416   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"contracts/BEP20.sol\":1736:1836  function totalSupply() public view override returns (uint256) {... */\n      tag_24\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"contracts/BEP20.sol\":3484:3930  function transferFrom(... */\n    tag_6:\n      tag_26\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n        /* \"contracts/BEP20.sol\":1419:1511  function decimals() public view override returns (uint8) {... */\n    tag_7:\n        /* \"contracts/BEP20.sol\":1494:1503  _decimals */\n      sload(0x04)\n        /* \"contracts/BEP20.sol\":1419:1511  function decimals() public view override returns (uint8) {... */\n      mload(0x40)\n        /* \"contracts/BEP20.sol\":1494:1503  _decimals */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1902:1938   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1890:1892   */\n      0x20\n        /* \"#utility.yul\":1875:1893   */\n      add\n        /* \"contracts/BEP20.sol\":1419:1511  function decimals() public view override returns (uint8) {... */\n      tag_24\n        /* \"#utility.yul\":1760:1944   */\n      jump\n        /* \"contracts/BEP20.sol\":4338:4621  function increaseAllowance(address spender, uint256 addedValue)... */\n    tag_8:\n      tag_26\n      tag_46\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n        /* \"contracts/BEP20.sol\":1898:2017  function balanceOf(address account) public view override returns (uint256) {... */\n    tag_9:\n      tag_32\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20.sol\":1991:2009  _balances[account] */\n      and\n        /* \"contracts/BEP20.sol\":1964:1971  uint256 */\n      0x00\n        /* \"contracts/BEP20.sol\":1991:2009  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/BEP20.sol\":1991:2000  _balances */\n      0x01\n        /* \"contracts/BEP20.sol\":1991:2009  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/BEP20.sol\":1898:2017  function balanceOf(address account) public view override returns (uint256) {... */\n      jump\n        /* \"contracts/access/Ownable.sol\":1657:1751  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      stop\n        /* \"contracts/BEP20.sol\":1103:1197  function getOwner() external view override returns (address) {... */\n    tag_11:\n        /* \"contracts/BEP20.sol\":1155:1162  address */\n      0x00\n        /* \"contracts/access/Ownable.sol\":1079:1085  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/BEP20.sol\":1103:1197  function getOwner() external view override returns (address) {... */\n    tag_56:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2304:2336   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2286:2337   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2274:2276   */\n      0x20\n        /* \"#utility.yul\":2259:2277   */\n      add\n        /* \"contracts/BEP20.sol\":1103:1197  function getOwner() external view override returns (address) {... */\n      tag_24\n        /* \"#utility.yul\":2140:2343   */\n      jump\n        /* \"contracts/access/Ownable.sol\":1006:1093  function owner() public view virtual returns (address) {... */\n    tag_12:\n        /* \"contracts/access/Ownable.sol\":1052:1059  address */\n      0x00\n        /* \"contracts/access/Ownable.sol\":1079:1085  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/access/Ownable.sol\":1006:1093  function owner() public view virtual returns (address) {... */\n      jump(tag_56)\n        /* \"contracts/BEP20.sol\":1576:1672  function symbol() public view override returns (string memory) {... */\n    tag_13:\n      tag_22\n      tag_64\n      jump\t// in\n        /* \"contracts/BEP20.sol\":5724:5854  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n    tag_14:\n      tag_26\n      tag_67\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n        /* \"contracts/BEP20.sol\":5123:5506  function decreaseAllowance(address spender, uint256 subtractedValue)... */\n    tag_15:\n      tag_26\n      tag_72\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n        /* \"contracts/BEP20.sol\":2229:2428  function transfer(address recipient, uint256 amount)... */\n    tag_16:\n      tag_26\n      tag_76\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n        /* \"contracts/BEP20.sol\":2490:2674  function allowance(address owner, address spender)... */\n    tag_17:\n      tag_32\n      tag_80\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_80:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20.sol\":2639:2657  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/BEP20.sol\":2607:2614  uint256 */\n      0x00\n        /* \"contracts/BEP20.sol\":2639:2657  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/BEP20.sol\":2639:2650  _allowances */\n      0x02\n        /* \"contracts/BEP20.sol\":2639:2657  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/BEP20.sol\":2639:2666  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/BEP20.sol\":2490:2674  function allowance(address owner, address spender)... */\n      jump\n        /* \"contracts/access/Ownable.sol\":1906:2098  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_18:\n      tag_54\n      tag_85\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n        /* \"contracts/BEP20.sol\":1260:1352  function name() public view override returns (string memory) {... */\n    tag_23:\n        /* \"contracts/BEP20.sol\":1306:1319  string memory */\n      0x60\n        /* \"contracts/BEP20.sol\":1339:1344  _name */\n      0x06\n        /* \"contracts/BEP20.sol\":1332:1344  return _name */\n      dup1\n      sload\n      tag_88\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_90\n      swap1\n      tag_89\n      jump\t// in\n    tag_90:\n      dup1\n      iszero\n      tag_91\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_92\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_91)\n    tag_92:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_93:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_93\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_91:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/BEP20.sol\":1260:1352  function name() public view override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/BEP20.sol\":2820:3013  function approve(address spender, uint256 amount)... */\n    tag_29:\n        /* \"contracts/BEP20.sol\":2922:2926  bool */\n      0x00\n        /* \"contracts/BEP20.sol\":2944:2983  _approve(_msgSender(), spender, amount) */\n      tag_95\n        /* \"contracts/utils/Context.sol\":682:692  msg.sender */\n      caller\n        /* \"contracts/BEP20.sol\":2967:2974  spender */\n      dup5\n        /* \"contracts/BEP20.sol\":2976:2982  amount */\n      dup5\n        /* \"contracts/BEP20.sol\":2944:2952  _approve */\n      tag_98\n        /* \"contracts/BEP20.sol\":2944:2983  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_95:\n      pop\n        /* \"contracts/BEP20.sol\":3001:3005  true */\n      0x01\n        /* \"contracts/BEP20.sol\":2820:3013  function approve(address spender, uint256 amount)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP20.sol\":3484:3930  function transferFrom(... */\n    tag_39:\n        /* \"contracts/BEP20.sol\":3616:3620  bool */\n      0x00\n        /* \"contracts/BEP20.sol\":3633:3669  _transfer(sender, recipient, amount) */\n      tag_101\n        /* \"contracts/BEP20.sol\":3643:3649  sender */\n      dup5\n        /* \"contracts/BEP20.sol\":3651:3660  recipient */\n      dup5\n        /* \"contracts/BEP20.sol\":3662:3668  amount */\n      dup5\n        /* \"contracts/BEP20.sol\":3633:3642  _transfer */\n      tag_102\n        /* \"contracts/BEP20.sol\":3633:3669  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_101:\n        /* \"contracts/BEP20.sol\":3680:3900  _approve(... */\n      tag_103\n        /* \"contracts/BEP20.sol\":3703:3709  sender */\n      dup5\n        /* \"contracts/utils/Context.sol\":682:692  msg.sender */\n      caller\n        /* \"contracts/BEP20.sol\":3751:3889  _allowances[sender][_msgSender()].sub(... */\n      tag_105\n        /* \"contracts/BEP20.sol\":3807:3813  amount */\n      dup6\n        /* \"contracts/BEP20.sol\":3751:3889  _allowances[sender][_msgSender()].sub(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e\n      0x28\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20.sol\":3751:3770  _allowances[sender] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/BEP20.sol\":3751:3762  _allowances */\n      0x02\n        /* \"contracts/BEP20.sol\":3751:3770  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/utils/Context.sol\":682:692  msg.sender */\n      caller\n        /* \"contracts/BEP20.sol\":3751:3784  _allowances[sender][_msgSender()] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n      swap1\n        /* \"contracts/BEP20.sol\":3751:3788  _allowances[sender][_msgSender()].sub */\n      tag_107\n        /* \"contracts/BEP20.sol\":3751:3889  _allowances[sender][_msgSender()].sub(... */\n      jump\t// in\n    tag_105:\n        /* \"contracts/BEP20.sol\":3680:3688  _approve */\n      tag_98\n        /* \"contracts/BEP20.sol\":3680:3900  _approve(... */\n      jump\t// in\n    tag_103:\n      pop\n        /* \"contracts/BEP20.sol\":3918:3922  true */\n      0x01\n        /* \"contracts/BEP20.sol\":3484:3930  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP20.sol\":4338:4621  function increaseAllowance(address spender, uint256 addedValue)... */\n    tag_47:\n        /* \"contracts/utils/Context.sol\":682:692  msg.sender */\n      caller\n        /* \"contracts/BEP20.sol\":4436:4440  bool */\n      0x00\n        /* \"contracts/BEP20.sol\":4530:4555  _allowances[_msgSender()] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/BEP20.sol\":4530:4541  _allowances */\n      0x02\n        /* \"contracts/BEP20.sol\":4530:4555  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20.sol\":4530:4564  _allowances[_msgSender()][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"contracts/BEP20.sol\":4436:4440  bool */\n      swap1\n      swap2\n        /* \"contracts/BEP20.sol\":4458:4591  _approve(... */\n      tag_95\n      swap2\n        /* \"contracts/BEP20.sol\":4508:4515  spender */\n      dup6\n      swap1\n        /* \"contracts/BEP20.sol\":4530:4580  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_105\n      swap1\n        /* \"contracts/BEP20.sol\":4569:4579  addedValue */\n      dup7\n        /* \"contracts/BEP20.sol\":4530:4568  _allowances[_msgSender()][spender].add */\n      tag_114\n        /* \"contracts/BEP20.sol\":4530:4580  _allowances[_msgSender()][spender].add(addedValue) */\n      jump\t// in\n        /* \"contracts/access/Ownable.sol\":1657:1751  function renounceOwnership() public virtual onlyOwner {... */\n    tag_55:\n        /* \"contracts/access/Ownable.sol\":1052:1059  address */\n      0x00\n        /* \"contracts/access/Ownable.sol\":1079:1085  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/utils/Context.sol\":682:692  msg.sender */\n      caller\n        /* \"contracts/access/Ownable.sol\":1226:1249  owner() == _msgSender() */\n      eq\n        /* \"contracts/access/Ownable.sol\":1218:1286  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n        /* \"contracts/access/Ownable.sol\":1722:1743  _setOwner(address(0)) */\n      tag_123\n        /* \"contracts/access/Ownable.sol\":1740:1741  0 */\n      0x00\n        /* \"contracts/access/Ownable.sol\":1722:1731  _setOwner */\n      tag_124\n        /* \"contracts/access/Ownable.sol\":1722:1743  _setOwner(address(0)) */\n      jump\t// in\n    tag_123:\n        /* \"contracts/access/Ownable.sol\":1657:1751  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/BEP20.sol\":1576:1672  function symbol() public view override returns (string memory) {... */\n    tag_64:\n        /* \"contracts/BEP20.sol\":1624:1637  string memory */\n      0x60\n        /* \"contracts/BEP20.sol\":1657:1664  _symbol */\n      0x05\n        /* \"contracts/BEP20.sol\":1650:1664  return _symbol */\n      dup1\n      sload\n      tag_88\n      swap1\n      tag_89\n      jump\t// in\n        /* \"contracts/BEP20.sol\":5724:5854  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n    tag_69:\n        /* \"contracts/BEP20.sol\":5780:5784  bool */\n      0x00\n        /* \"contracts/access/Ownable.sol\":1079:1085  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/utils/Context.sol\":682:692  msg.sender */\n      caller\n        /* \"contracts/access/Ownable.sol\":1226:1249  owner() == _msgSender() */\n      eq\n        /* \"contracts/access/Ownable.sol\":1218:1286  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_137\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap1\n      tag_121\n      jump\t// in\n    tag_137:\n        /* \"contracts/BEP20.sol\":5797:5824  _mint(_msgSender(), amount) */\n      tag_140\n        /* \"contracts/utils/Context.sol\":682:692  msg.sender */\n      caller\n        /* \"contracts/BEP20.sol\":5817:5823  amount */\n      dup4\n        /* \"contracts/BEP20.sol\":5797:5802  _mint */\n      tag_142\n        /* \"contracts/BEP20.sol\":5797:5824  _mint(_msgSender(), amount) */\n      jump\t// in\n    tag_140:\n      pop\n        /* \"contracts/BEP20.sol\":5842:5846  true */\n      0x01\n        /* \"contracts/access/Ownable.sol\":1297:1298  _ */\n    tag_139:\n        /* \"contracts/BEP20.sol\":5724:5854  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/BEP20.sol\":5123:5506  function decreaseAllowance(address spender, uint256 subtractedValue)... */\n    tag_73:\n        /* \"contracts/BEP20.sol\":5226:5230  bool */\n      0x00\n        /* \"contracts/BEP20.sol\":5248:5476  _approve(... */\n      tag_95\n        /* \"contracts/utils/Context.sol\":682:692  msg.sender */\n      caller\n        /* \"contracts/BEP20.sol\":5298:5305  spender */\n      dup5\n        /* \"contracts/BEP20.sol\":5320:5465  _allowances[_msgSender()][spender].sub(... */\n      tag_105\n        /* \"contracts/BEP20.sol\":5377:5392  subtractedValue */\n      dup6\n        /* \"contracts/BEP20.sol\":5320:5465  _allowances[_msgSender()][spender].sub(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22\n      0x25\n      swap2\n      codecopy\n        /* \"contracts/utils/Context.sol\":682:692  msg.sender */\n      caller\n        /* \"contracts/BEP20.sol\":5320:5345  _allowances[_msgSender()] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/BEP20.sol\":5320:5331  _allowances */\n      0x02\n        /* \"contracts/BEP20.sol\":5320:5345  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20.sol\":5320:5354  _allowances[_msgSender()][spender] */\n      dup14\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n      swap1\n        /* \"contracts/BEP20.sol\":5320:5358  _allowances[_msgSender()][spender].sub */\n      tag_107\n        /* \"contracts/BEP20.sol\":5320:5465  _allowances[_msgSender()][spender].sub(... */\n      jump\t// in\n        /* \"contracts/BEP20.sol\":2229:2428  function transfer(address recipient, uint256 amount)... */\n    tag_77:\n        /* \"contracts/BEP20.sol\":2334:2338  bool */\n      0x00\n        /* \"contracts/BEP20.sol\":2356:2398  _transfer(_msgSender(), recipient, amount) */\n      tag_95\n        /* \"contracts/utils/Context.sol\":682:692  msg.sender */\n      caller\n        /* \"contracts/BEP20.sol\":2380:2389  recipient */\n      dup5\n        /* \"contracts/BEP20.sol\":2391:2397  amount */\n      dup5\n        /* \"contracts/BEP20.sol\":2356:2365  _transfer */\n      tag_102\n        /* \"contracts/BEP20.sol\":2356:2398  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"contracts/access/Ownable.sol\":1906:2098  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_86:\n        /* \"contracts/access/Ownable.sol\":1052:1059  address */\n      0x00\n        /* \"contracts/access/Ownable.sol\":1079:1085  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/utils/Context.sol\":682:692  msg.sender */\n      caller\n        /* \"contracts/access/Ownable.sol\":1226:1249  owner() == _msgSender() */\n      eq\n        /* \"contracts/access/Ownable.sol\":1218:1286  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_155\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap1\n      tag_121\n      jump\t// in\n    tag_155:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/access/Ownable.sol\":1995:2017  newOwner != address(0) */\n      dup2\n      and\n        /* \"contracts/access/Ownable.sol\":1987:2060  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3746:3748   */\n      0x20\n        /* \"contracts/access/Ownable.sol\":1987:2060  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3728:3749   */\n      mstore\n        /* \"#utility.yul\":3785:3787   */\n      0x26\n        /* \"#utility.yul\":3765:3783   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3758:3788   */\n      mstore\n        /* \"#utility.yul\":3824:3858   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":3804:3822   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3797:3859   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":3875:3893   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3868:3904   */\n      mstore\n        /* \"#utility.yul\":3921:3940   */\n      0x84\n      add\n        /* \"contracts/access/Ownable.sol\":1987:2060  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_120\n        /* \"#utility.yul\":3544:3946   */\n      jump\n        /* \"contracts/access/Ownable.sol\":1987:2060  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_158:\n        /* \"contracts/access/Ownable.sol\":2071:2090  _setOwner(newOwner) */\n      tag_161\n        /* \"contracts/access/Ownable.sol\":2081:2089  newOwner */\n      dup2\n        /* \"contracts/access/Ownable.sol\":2071:2080  _setOwner */\n      tag_124\n        /* \"contracts/access/Ownable.sol\":2071:2090  _setOwner(newOwner) */\n      jump\t// in\n    tag_161:\n        /* \"contracts/access/Ownable.sol\":1906:2098  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/BEP20.sol\":8632:9004  function _approve(... */\n    tag_98:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20.sol\":8760:8779  owner != address(0) */\n      dup4\n      and\n        /* \"contracts/BEP20.sol\":8752:8820  require(owner != address(0), \"BEP20: approve from the zero address\") */\n      tag_164\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4153:4155   */\n      0x20\n        /* \"contracts/BEP20.sol\":8752:8820  require(owner != address(0), \"BEP20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4135:4156   */\n      mstore\n        /* \"#utility.yul\":4192:4194   */\n      0x24\n        /* \"#utility.yul\":4172:4190   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4165:4195   */\n      mstore\n        /* \"#utility.yul\":4231:4265   */\n      0x42455032303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":4211:4229   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4204:4266   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":4282:4300   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4275:4309   */\n      mstore\n        /* \"#utility.yul\":4326:4345   */\n      0x84\n      add\n        /* \"contracts/BEP20.sol\":8752:8820  require(owner != address(0), \"BEP20: approve from the zero address\") */\n      tag_120\n        /* \"#utility.yul\":3951:4351   */\n      jump\n        /* \"contracts/BEP20.sol\":8752:8820  require(owner != address(0), \"BEP20: approve from the zero address\") */\n    tag_164:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20.sol\":8839:8860  spender != address(0) */\n      dup3\n      and\n        /* \"contracts/BEP20.sol\":8831:8899  require(spender != address(0), \"BEP20: approve to the zero address\") */\n      tag_167\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4558:4560   */\n      0x20\n        /* \"contracts/BEP20.sol\":8831:8899  require(spender != address(0), \"BEP20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4540:4561   */\n      mstore\n        /* \"#utility.yul\":4597:4599   */\n      0x22\n        /* \"#utility.yul\":4577:4595   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4570:4600   */\n      mstore\n        /* \"#utility.yul\":4636:4670   */\n      0x42455032303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4616:4634   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4609:4671   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4687:4705   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4680:4712   */\n      mstore\n        /* \"#utility.yul\":4729:4748   */\n      0x84\n      add\n        /* \"contracts/BEP20.sol\":8831:8899  require(spender != address(0), \"BEP20: approve to the zero address\") */\n      tag_120\n        /* \"#utility.yul\":4356:4754   */\n      jump\n        /* \"contracts/BEP20.sol\":8831:8899  require(spender != address(0), \"BEP20: approve to the zero address\") */\n    tag_167:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20.sol\":8912:8930  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/BEP20.sol\":8912:8923  _allowances */\n      0x02\n        /* \"contracts/BEP20.sol\":8912:8930  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/BEP20.sol\":8912:8939  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/BEP20.sol\":8912:8948  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/BEP20.sol\":8964:8996  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1391:1416   */\n      dup5\n      dup2\n      mstore\n        /* \"contracts/BEP20.sol\":8964:8996  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"contracts/BEP20.sol\":8964:8996  Approval(owner, spender, amount) */\n    tag_170:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/BEP20.sol\":8632:9004  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP20.sol\":6344:6886  function _transfer(... */\n    tag_102:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20.sol\":6476:6496  sender != address(0) */\n      dup4\n      and\n        /* \"contracts/BEP20.sol\":6468:6538  require(sender != address(0), \"BEP20: transfer from the zero address\") */\n      tag_172\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4961:4963   */\n      0x20\n        /* \"contracts/BEP20.sol\":6468:6538  require(sender != address(0), \"BEP20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4943:4964   */\n      mstore\n        /* \"#utility.yul\":5000:5002   */\n      0x25\n        /* \"#utility.yul\":4980:4998   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4973:5003   */\n      mstore\n        /* \"#utility.yul\":5039:5073   */\n      0x42455032303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":5019:5037   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5012:5074   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":5090:5108   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5083:5118   */\n      mstore\n        /* \"#utility.yul\":5135:5154   */\n      0x84\n      add\n        /* \"contracts/BEP20.sol\":6468:6538  require(sender != address(0), \"BEP20: transfer from the zero address\") */\n      tag_120\n        /* \"#utility.yul\":4759:5160   */\n      jump\n        /* \"contracts/BEP20.sol\":6468:6538  require(sender != address(0), \"BEP20: transfer from the zero address\") */\n    tag_172:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20.sol\":6557:6580  recipient != address(0) */\n      dup3\n      and\n        /* \"contracts/BEP20.sol\":6549:6620  require(recipient != address(0), \"BEP20: transfer to the zero address\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5367:5369   */\n      0x20\n        /* \"contracts/BEP20.sol\":6549:6620  require(recipient != address(0), \"BEP20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5349:5370   */\n      mstore\n        /* \"#utility.yul\":5406:5408   */\n      0x23\n        /* \"#utility.yul\":5386:5404   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5379:5409   */\n      mstore\n        /* \"#utility.yul\":5445:5479   */\n      0x42455032303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5425:5443   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5418:5480   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5496:5514   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5489:5522   */\n      mstore\n        /* \"#utility.yul\":5539:5558   */\n      0x84\n      add\n        /* \"contracts/BEP20.sol\":6549:6620  require(recipient != address(0), \"BEP20: transfer to the zero address\") */\n      tag_120\n        /* \"#utility.yul\":5165:5564   */\n      jump\n        /* \"contracts/BEP20.sol\":6549:6620  require(recipient != address(0), \"BEP20: transfer to the zero address\") */\n    tag_175:\n        /* \"contracts/BEP20.sol\":6653:6761  _balances[sender].sub(... */\n      tag_178\n        /* \"contracts/BEP20.sol\":6689:6695  amount */\n      dup2\n        /* \"contracts/BEP20.sol\":6653:6761  _balances[sender].sub(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73\n      0x26\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20.sol\":6653:6670  _balances[sender] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/BEP20.sol\":6653:6662  _balances */\n      0x01\n        /* \"contracts/BEP20.sol\":6653:6670  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"contracts/BEP20.sol\":6653:6761  _balances[sender].sub(... */\n      swap1\n        /* \"contracts/BEP20.sol\":6653:6674  _balances[sender].sub */\n      tag_107\n        /* \"contracts/BEP20.sol\":6653:6761  _balances[sender].sub(... */\n      jump\t// in\n    tag_178:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20.sol\":6633:6650  _balances[sender] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/BEP20.sol\":6633:6642  _balances */\n      0x01\n        /* \"contracts/BEP20.sol\":6633:6650  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/BEP20.sol\":6633:6761  _balances[sender] = _balances[sender].sub(... */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/BEP20.sol\":6795:6815  _balances[recipient] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"contracts/BEP20.sol\":6795:6827  _balances[recipient].add(amount) */\n      tag_179\n      swap1\n        /* \"contracts/BEP20.sol\":6820:6826  amount */\n      dup3\n        /* \"contracts/BEP20.sol\":6795:6819  _balances[recipient].add */\n      tag_114\n        /* \"contracts/BEP20.sol\":6795:6827  _balances[recipient].add(amount) */\n      jump\t// in\n    tag_179:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20.sol\":6772:6792  _balances[recipient] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/BEP20.sol\":6772:6781  _balances */\n      0x01\n        /* \"contracts/BEP20.sol\":6772:6792  _balances[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/BEP20.sol\":6772:6827  _balances[recipient] = _balances[recipient].add(amount) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/BEP20.sol\":6843:6878  Transfer(sender, recipient, amount) */\n      swap2\n      mload\n      swap1\n      dup6\n      and\n      swap1\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n      tag_170\n      swap1\n        /* \"contracts/BEP20.sol\":6871:6877  amount */\n      dup6\n        /* \"#utility.yul\":1391:1416   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n      swap1\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"contracts/libraries/SafeMath.sol\":5042:5282  function sub(... */\n    tag_107:\n        /* \"contracts/libraries/SafeMath.sol\":5162:5169  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":5223:5235  errorMessage */\n      dup2\n        /* \"contracts/libraries/SafeMath.sol\":5215:5221  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"contracts/libraries/SafeMath.sol\":5207:5236  require(b <= a, errorMessage) */\n      tag_182\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_182:\n      pop\n      pop\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":5258:5263  a - b */\n      swap1\n      sub\n      swap1\n        /* \"contracts/libraries/SafeMath.sol\":5042:5282  function sub(... */\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":2763:2861  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_114:\n        /* \"contracts/libraries/SafeMath.sol\":2821:2828  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":2848:2853  a + b */\n      tag_185\n        /* \"contracts/libraries/SafeMath.sol\":2852:2853  b */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":2848:2849  a */\n      dup5\n        /* \"contracts/libraries/SafeMath.sol\":2848:2853  a + b */\n      tag_186\n      jump\t// in\n    tag_185:\n        /* \"contracts/libraries/SafeMath.sol\":2841:2853  return a + b */\n      swap4\n        /* \"contracts/libraries/SafeMath.sol\":2763:2861  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/access/Ownable.sol\":2106:2279  function _setOwner(address newOwner) private {... */\n    tag_124:\n        /* \"contracts/access/Ownable.sol\":2162:2178  address oldOwner */\n      0x00\n        /* \"contracts/access/Ownable.sol\":2181:2187  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/access/Ownable.sol\":2198:2215  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"contracts/access/Ownable.sol\":2231:2271  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"contracts/access/Ownable.sol\":2181:2187  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"contracts/access/Ownable.sol\":2231:2271  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"contracts/access/Ownable.sol\":2162:2178  address oldOwner */\n      swap1\n        /* \"contracts/access/Ownable.sol\":2231:2271  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"contracts/access/Ownable.sol\":2151:2279  {... */\n      pop\n        /* \"contracts/access/Ownable.sol\":2106:2279  function _setOwner(address newOwner) private {... */\n      pop\n      jump\t// out\n        /* \"contracts/BEP20.sol\":7167:7475  function _mint(address account, uint256 amount) internal {... */\n    tag_142:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20.sol\":7243:7264  account != address(0) */\n      dup3\n      and\n        /* \"contracts/BEP20.sol\":7235:7300  require(account != address(0), \"BEP20: mint to the zero address\") */\n      tag_189\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6001:6003   */\n      0x20\n        /* \"contracts/BEP20.sol\":7235:7300  require(account != address(0), \"BEP20: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5983:6004   */\n      mstore\n        /* \"#utility.yul\":6040:6042   */\n      0x1f\n        /* \"#utility.yul\":6020:6038   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6013:6043   */\n      mstore\n        /* \"#utility.yul\":6079:6112   */\n      0x42455032303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":6059:6077   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6052:6113   */\n      mstore\n        /* \"#utility.yul\":6130:6148   */\n      0x64\n      add\n        /* \"contracts/BEP20.sol\":7235:7300  require(account != address(0), \"BEP20: mint to the zero address\") */\n      tag_120\n        /* \"#utility.yul\":5799:6154   */\n      jump\n        /* \"contracts/BEP20.sol\":7235:7300  require(account != address(0), \"BEP20: mint to the zero address\") */\n    tag_189:\n        /* \"contracts/BEP20.sol\":7328:7340  _totalSupply */\n      sload(0x03)\n        /* \"contracts/BEP20.sol\":7328:7352  _totalSupply.add(amount) */\n      tag_192\n      swap1\n        /* \"contracts/BEP20.sol\":7345:7351  amount */\n      dup3\n        /* \"contracts/BEP20.sol\":7328:7344  _totalSupply.add */\n      tag_114\n        /* \"contracts/BEP20.sol\":7328:7352  _totalSupply.add(amount) */\n      jump\t// in\n    tag_192:\n        /* \"contracts/BEP20.sol\":7313:7325  _totalSupply */\n      0x03\n        /* \"contracts/BEP20.sol\":7313:7352  _totalSupply = _totalSupply.add(amount) */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20.sol\":7384:7402  _balances[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/BEP20.sol\":7384:7393  _balances */\n      0x01\n        /* \"contracts/BEP20.sol\":7384:7402  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/BEP20.sol\":7384:7414  _balances[account].add(amount) */\n      tag_193\n      swap1\n        /* \"contracts/BEP20.sol\":7407:7413  amount */\n      dup3\n        /* \"contracts/BEP20.sol\":7384:7406  _balances[account].add */\n      tag_114\n        /* \"contracts/BEP20.sol\":7384:7414  _balances[account].add(amount) */\n      jump\t// in\n    tag_193:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20.sol\":7363:7381  _balances[account] */\n      dup4\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/BEP20.sol\":7363:7372  _balances */\n      0x01\n        /* \"contracts/BEP20.sol\":7363:7381  _balances[account] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/BEP20.sol\":7363:7414  _balances[account] = _balances[account].add(amount) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/BEP20.sol\":7430:7467  Transfer(address(0), account, amount) */\n      swap2\n      mload\n        /* \"contracts/BEP20.sol\":7363:7381  _balances[account] */\n      swap1\n      swap2\n      swap1\n        /* \"contracts/BEP20.sol\":7430:7467  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n      tag_194\n      swap1\n        /* \"contracts/BEP20.sol\":7460:7466  amount */\n      dup6\n        /* \"#utility.yul\":1391:1416   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n      swap1\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"contracts/BEP20.sol\":7430:7467  Transfer(address(0), account, amount) */\n    tag_194:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/BEP20.sol\":7167:7475  function _mint(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:611   */\n    tag_25:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_198:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_200\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_198)\n    tag_200:\n        /* \"#utility.yul\":452:458   */\n      dup2\n        /* \"#utility.yul\":449:450   */\n      dup2\n        /* \"#utility.yul\":446:459   */\n      gt\n        /* \"#utility.yul\":443:534   */\n      iszero\n      tag_201\n      jumpi\n        /* \"#utility.yul\":522:523   */\n      0x00\n        /* \"#utility.yul\":517:519   */\n      0x40\n        /* \"#utility.yul\":508:514   */\n      dup4\n        /* \"#utility.yul\":497:506   */\n      dup8\n        /* \"#utility.yul\":493:515   */\n      add\n        /* \"#utility.yul\":489:520   */\n      add\n        /* \"#utility.yul\":482:524   */\n      mstore\n        /* \"#utility.yul\":443:534   */\n    tag_201:\n      pop\n        /* \"#utility.yul\":595:597   */\n      0x1f\n        /* \"#utility.yul\":574:589   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":570:599   */\n      and\n        /* \"#utility.yul\":555:600   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":602:604   */\n      0x40\n        /* \"#utility.yul\":551:605   */\n      add\n      swap4\n        /* \"#utility.yul\":14:611   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":616:789   */\n    tag_195:\n        /* \"#utility.yul\":684:704   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":733:764   */\n      dup2\n      and\n        /* \"#utility.yul\":723:765   */\n      dup2\n      eq\n        /* \"#utility.yul\":713:783   */\n      tag_139\n      jumpi\n        /* \"#utility.yul\":779:780   */\n      0x00\n        /* \"#utility.yul\":776:777   */\n      dup1\n        /* \"#utility.yul\":769:781   */\n      revert\n        /* \"#utility.yul\":794:1048   */\n    tag_28:\n        /* \"#utility.yul\":862:868   */\n      0x00\n        /* \"#utility.yul\":870:876   */\n      dup1\n        /* \"#utility.yul\":923:925   */\n      0x40\n        /* \"#utility.yul\":911:920   */\n      dup4\n        /* \"#utility.yul\":902:909   */\n      dup6\n        /* \"#utility.yul\":898:921   */\n      sub\n        /* \"#utility.yul\":894:926   */\n      slt\n        /* \"#utility.yul\":891:943   */\n      iszero\n      tag_205\n      jumpi\n        /* \"#utility.yul\":939:940   */\n      0x00\n        /* \"#utility.yul\":936:937   */\n      dup1\n        /* \"#utility.yul\":929:941   */\n      revert\n        /* \"#utility.yul\":891:943   */\n    tag_205:\n        /* \"#utility.yul\":962:991   */\n      tag_206\n        /* \"#utility.yul\":981:990   */\n      dup4\n        /* \"#utility.yul\":962:991   */\n      tag_195\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":952:991   */\n      swap5\n        /* \"#utility.yul\":1038:1040   */\n      0x20\n        /* \"#utility.yul\":1023:1041   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1010:1042   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":794:1048   */\n      jump\t// out\n        /* \"#utility.yul\":1427:1755   */\n    tag_38:\n        /* \"#utility.yul\":1504:1510   */\n      0x00\n        /* \"#utility.yul\":1512:1518   */\n      dup1\n        /* \"#utility.yul\":1520:1526   */\n      0x00\n        /* \"#utility.yul\":1573:1575   */\n      0x60\n        /* \"#utility.yul\":1561:1570   */\n      dup5\n        /* \"#utility.yul\":1552:1559   */\n      dup7\n        /* \"#utility.yul\":1548:1571   */\n      sub\n        /* \"#utility.yul\":1544:1576   */\n      slt\n        /* \"#utility.yul\":1541:1593   */\n      iszero\n      tag_210\n      jumpi\n        /* \"#utility.yul\":1589:1590   */\n      0x00\n        /* \"#utility.yul\":1586:1587   */\n      dup1\n        /* \"#utility.yul\":1579:1591   */\n      revert\n        /* \"#utility.yul\":1541:1593   */\n    tag_210:\n        /* \"#utility.yul\":1612:1641   */\n      tag_211\n        /* \"#utility.yul\":1631:1640   */\n      dup5\n        /* \"#utility.yul\":1612:1641   */\n      tag_195\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":1602:1641   */\n      swap3\n      pop\n        /* \"#utility.yul\":1660:1698   */\n      tag_212\n        /* \"#utility.yul\":1694:1696   */\n      0x20\n        /* \"#utility.yul\":1683:1692   */\n      dup6\n        /* \"#utility.yul\":1679:1697   */\n      add\n        /* \"#utility.yul\":1660:1698   */\n      tag_195\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":1650:1698   */\n      swap2\n      pop\n        /* \"#utility.yul\":1745:1747   */\n      0x40\n        /* \"#utility.yul\":1734:1743   */\n      dup5\n        /* \"#utility.yul\":1730:1748   */\n      add\n        /* \"#utility.yul\":1717:1749   */\n      calldataload\n        /* \"#utility.yul\":1707:1749   */\n      swap1\n      pop\n        /* \"#utility.yul\":1427:1755   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1949:2135   */\n    tag_51:\n        /* \"#utility.yul\":2008:2014   */\n      0x00\n        /* \"#utility.yul\":2061:2063   */\n      0x20\n        /* \"#utility.yul\":2049:2058   */\n      dup3\n        /* \"#utility.yul\":2040:2047   */\n      dup5\n        /* \"#utility.yul\":2036:2059   */\n      sub\n        /* \"#utility.yul\":2032:2064   */\n      slt\n        /* \"#utility.yul\":2029:2081   */\n      iszero\n      tag_215\n      jumpi\n        /* \"#utility.yul\":2077:2078   */\n      0x00\n        /* \"#utility.yul\":2074:2075   */\n      dup1\n        /* \"#utility.yul\":2067:2079   */\n      revert\n        /* \"#utility.yul\":2029:2081   */\n    tag_215:\n        /* \"#utility.yul\":2100:2129   */\n      tag_185\n        /* \"#utility.yul\":2119:2128   */\n      dup3\n        /* \"#utility.yul\":2100:2129   */\n      tag_195\n      jump\t// in\n        /* \"#utility.yul\":2348:2528   */\n    tag_68:\n        /* \"#utility.yul\":2407:2413   */\n      0x00\n        /* \"#utility.yul\":2460:2462   */\n      0x20\n        /* \"#utility.yul\":2448:2457   */\n      dup3\n        /* \"#utility.yul\":2439:2446   */\n      dup5\n        /* \"#utility.yul\":2435:2458   */\n      sub\n        /* \"#utility.yul\":2431:2463   */\n      slt\n        /* \"#utility.yul\":2428:2480   */\n      iszero\n      tag_219\n      jumpi\n        /* \"#utility.yul\":2476:2477   */\n      0x00\n        /* \"#utility.yul\":2473:2474   */\n      dup1\n        /* \"#utility.yul\":2466:2478   */\n      revert\n        /* \"#utility.yul\":2428:2480   */\n    tag_219:\n      pop\n        /* \"#utility.yul\":2499:2522   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2348:2528   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2533:2793   */\n    tag_81:\n        /* \"#utility.yul\":2601:2607   */\n      0x00\n        /* \"#utility.yul\":2609:2615   */\n      dup1\n        /* \"#utility.yul\":2662:2664   */\n      0x40\n        /* \"#utility.yul\":2650:2659   */\n      dup4\n        /* \"#utility.yul\":2641:2648   */\n      dup6\n        /* \"#utility.yul\":2637:2660   */\n      sub\n        /* \"#utility.yul\":2633:2665   */\n      slt\n        /* \"#utility.yul\":2630:2682   */\n      iszero\n      tag_221\n      jumpi\n        /* \"#utility.yul\":2678:2679   */\n      0x00\n        /* \"#utility.yul\":2675:2676   */\n      dup1\n        /* \"#utility.yul\":2668:2680   */\n      revert\n        /* \"#utility.yul\":2630:2682   */\n    tag_221:\n        /* \"#utility.yul\":2701:2730   */\n      tag_222\n        /* \"#utility.yul\":2720:2729   */\n      dup4\n        /* \"#utility.yul\":2701:2730   */\n      tag_195\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":2691:2730   */\n      swap2\n      pop\n        /* \"#utility.yul\":2749:2787   */\n      tag_223\n        /* \"#utility.yul\":2783:2785   */\n      0x20\n        /* \"#utility.yul\":2772:2781   */\n      dup5\n        /* \"#utility.yul\":2768:2786   */\n      add\n        /* \"#utility.yul\":2749:2787   */\n      tag_195\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":2739:2787   */\n      swap1\n      pop\n        /* \"#utility.yul\":2533:2793   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2798:3178   */\n    tag_89:\n        /* \"#utility.yul\":2877:2878   */\n      0x01\n        /* \"#utility.yul\":2873:2885   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2920:2932   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2941:3002   */\n      tag_225\n      jumpi\n        /* \"#utility.yul\":2995:2999   */\n      0x7f\n        /* \"#utility.yul\":2987:2993   */\n      dup3\n        /* \"#utility.yul\":2983:3000   */\n      and\n        /* \"#utility.yul\":2973:3000   */\n      swap2\n      pop\n        /* \"#utility.yul\":2941:3002   */\n    tag_225:\n        /* \"#utility.yul\":3048:3050   */\n      0x20\n        /* \"#utility.yul\":3040:3046   */\n      dup3\n        /* \"#utility.yul\":3037:3051   */\n      lt\n        /* \"#utility.yul\":3017:3035   */\n      dup2\n        /* \"#utility.yul\":3014:3052   */\n      sub\n        /* \"#utility.yul\":3011:3172   */\n      tag_226\n      jumpi\n        /* \"#utility.yul\":3094:3104   */\n      0x4e487b71\n        /* \"#utility.yul\":3089:3092   */\n      0xe0\n        /* \"#utility.yul\":3085:3105   */\n      shl\n        /* \"#utility.yul\":3082:3083   */\n      0x00\n        /* \"#utility.yul\":3075:3106   */\n      mstore\n        /* \"#utility.yul\":3129:3133   */\n      0x22\n        /* \"#utility.yul\":3126:3127   */\n      0x04\n        /* \"#utility.yul\":3119:3134   */\n      mstore\n        /* \"#utility.yul\":3157:3161   */\n      0x24\n        /* \"#utility.yul\":3154:3155   */\n      0x00\n        /* \"#utility.yul\":3147:3162   */\n      revert\n        /* \"#utility.yul\":3011:3172   */\n    tag_226:\n      pop\n        /* \"#utility.yul\":2798:3178   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3183:3539   */\n    tag_121:\n        /* \"#utility.yul\":3385:3387   */\n      0x20\n        /* \"#utility.yul\":3367:3388   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3404:3422   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":3397:3427   */\n      mstore\n        /* \"#utility.yul\":3463:3497   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":3458:3460   */\n      0x40\n        /* \"#utility.yul\":3443:3461   */\n      dup3\n      add\n        /* \"#utility.yul\":3436:3498   */\n      mstore\n        /* \"#utility.yul\":3530:3532   */\n      0x60\n        /* \"#utility.yul\":3515:3533   */\n      add\n      swap1\n        /* \"#utility.yul\":3183:3539   */\n      jump\t// out\n        /* \"#utility.yul\":5569:5794   */\n    tag_186:\n        /* \"#utility.yul\":5609:5612   */\n      0x00\n        /* \"#utility.yul\":5640:5641   */\n      dup3\n        /* \"#utility.yul\":5636:5642   */\n      not\n        /* \"#utility.yul\":5633:5634   */\n      dup3\n        /* \"#utility.yul\":5630:5643   */\n      gt\n        /* \"#utility.yul\":5627:5763   */\n      iszero\n      tag_234\n      jumpi\n        /* \"#utility.yul\":5685:5695   */\n      0x4e487b71\n        /* \"#utility.yul\":5680:5683   */\n      0xe0\n        /* \"#utility.yul\":5676:5696   */\n      shl\n        /* \"#utility.yul\":5673:5674   */\n      0x00\n        /* \"#utility.yul\":5666:5697   */\n      mstore\n        /* \"#utility.yul\":5720:5724   */\n      0x11\n        /* \"#utility.yul\":5717:5718   */\n      0x04\n        /* \"#utility.yul\":5710:5725   */\n      mstore\n        /* \"#utility.yul\":5748:5752   */\n      0x24\n        /* \"#utility.yul\":5745:5746   */\n      0x00\n        /* \"#utility.yul\":5738:5753   */\n      revert\n        /* \"#utility.yul\":5627:5763   */\n    tag_234:\n      pop\n        /* \"#utility.yul\":5779:5788   */\n      add\n      swap1\n        /* \"#utility.yul\":5569:5794   */\n      jump\t// out\n    stop\n    data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e 42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73 42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22 42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa2646970667358221220d5c15d20103eeab5e15c274871dfa4a6f303325d47d0b4304b13976d900d3d9064736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1416": {
									"entryPoint": null,
									"id": 1416,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_54": {
									"entryPoint": null,
									"id": 54,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_2716": {
									"entryPoint": null,
									"id": 2716,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setOwner_1495": {
									"entryPoint": 128,
									"id": 1495,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 396,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 579,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"extract_byte_array_length": {
									"entryPoint": 685,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 374,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1985:8",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:821:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:8"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:8"
															},
															"nodeType": "YulIf",
															"src": "220:55:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:8",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:8"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:8"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:8"
															},
															"nodeType": "YulIf",
															"src": "353:36:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:8"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:8"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:8"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:8",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:8"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:8"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:8",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:8"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:8"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:8"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:8"
															},
															"nodeType": "YulIf",
															"src": "536:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:8",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:8"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:8"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:8"
															},
															"nodeType": "YulIf",
															"src": "698:53:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:8"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:8"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:8"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:8"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:8"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:8",
																"statements": []
															},
															"src": "779:133:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "942:59:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "971:6:8"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "979:2:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "967:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "967:15:8"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "984:2:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "963:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "963:24:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "989:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "956:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:35:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "956:35:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "927:1:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "930:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "924:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "924:9:8"
															},
															"nodeType": "YulIf",
															"src": "921:80:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1010:15:8",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1019:6:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1010:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:8",
														"type": ""
													}
												],
												"src": "146:885:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1154:444:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1200:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1209:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1212:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1202:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1202:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1202:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1175:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1184:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1171:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1171:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1196:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1167:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1167:32:8"
															},
															"nodeType": "YulIf",
															"src": "1164:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1225:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1245:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1239:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1239:16:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1229:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1264:28:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1282:2:8",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1286:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1278:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1278:10:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1290:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1274:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1274:18:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1268:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1319:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1328:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1331:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1321:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1321:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1321:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1307:6:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1315:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1304:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1304:14:8"
															},
															"nodeType": "YulIf",
															"src": "1301:34:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1344:71:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1387:9:8"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1398:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1383:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1383:22:8"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1407:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1354:28:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1354:61:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1344:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1424:41:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1450:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1461:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1446:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1446:18:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1440:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:25:8"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1428:8:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1494:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1503:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1506:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1496:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1496:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1496:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1480:8:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1490:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1477:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1477:16:8"
															},
															"nodeType": "YulIf",
															"src": "1474:36:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1519:73:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1562:9:8"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1573:8:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1558:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1558:24:8"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1584:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1529:28:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:63:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1519:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1112:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1123:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1135:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1143:6:8",
														"type": ""
													}
												],
												"src": "1036:562:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1658:325:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1668:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1682:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1685:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1678:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1678:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1668:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1699:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1729:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1735:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1725:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1725:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1703:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1776:31:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1778:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1792:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1800:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1788:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1788:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1778:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1756:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1749:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1749:26:8"
															},
															"nodeType": "YulIf",
															"src": "1746:61:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1866:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1887:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1894:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1899:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1890:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1890:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1880:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1880:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1880:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1931:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1934:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1924:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1924:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1959:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1962:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1952:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1952:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1952:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1822:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1845:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1853:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1842:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1842:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1819:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1819:38:8"
															},
															"nodeType": "YulIf",
															"src": "1816:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1638:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1647:6:8",
														"type": ""
													}
												],
												"src": "1603:380:8"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000ee338038062000ee3833981016040819052620000349162000243565b6200003f3362000080565b815162000054906006906020850190620000d0565b5080516200006a906005906020840190620000d0565b50506004805460ff1916601217905550620002e9565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054620000de90620002ad565b90600052602060002090601f0160209004810192826200010257600085556200014d565b82601f106200011d57805160ff19168380011785556200014d565b828001600101855582156200014d579182015b828111156200014d57825182559160200191906001019062000130565b506200015b9291506200015f565b5090565b5b808211156200015b576000815560010162000160565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200019e57600080fd5b81516001600160401b0380821115620001bb57620001bb62000176565b604051601f8301601f19908116603f01168101908282118183101715620001e657620001e662000176565b816040528381526020925086838588010111156200020357600080fd5b600091505b8382101562000227578582018301518183018401529082019062000208565b83821115620002395760008385830101525b9695505050505050565b600080604083850312156200025757600080fd5b82516001600160401b03808211156200026f57600080fd5b6200027d868387016200018c565b935060208501519150808211156200029457600080fd5b50620002a3858286016200018c565b9150509250929050565b600181811c90821680620002c257607f821691505b602082108103620002e357634e487b7160e01b600052602260045260246000fd5b50919050565b610bea80620002f96000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063893d20e811610097578063a457c2d711610066578063a457c2d714610217578063a9059cbb1461022a578063dd62ed3e1461023d578063f2fde38b1461027657600080fd5b8063893d20e8146101c65780638da5cb5b146101eb57806395d89b41146101fc578063a0712d681461020457600080fd5b8063313ce567116100d3578063313ce5671461016b578063395093511461018057806370a0823114610193578063715018a6146101bc57600080fd5b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014657806323b872dd14610158575b600080fd5b61010d610289565b60405161011a9190610973565b60405180910390f35b6101366101313660046109df565b61031b565b604051901515815260200161011a565b6003545b60405190815260200161011a565b610136610166366004610a09565b610331565b60045460405160ff909116815260200161011a565b61013661018e3660046109df565b61039a565b61014a6101a1366004610a45565b6001600160a01b031660009081526001602052604090205490565b6101c46103d0565b005b6000546001600160a01b03165b6040516001600160a01b03909116815260200161011a565b6000546001600160a01b03166101d3565b61010d61040f565b610136610212366004610a60565b61041e565b6101366102253660046109df565b61045c565b6101366102383660046109df565b6104ab565b61014a61024b366004610a79565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6101c4610284366004610a45565b6104b8565b60606006805461029890610aac565b80601f01602080910402602001604051908101604052809291908181526020018280546102c490610aac565b80156103115780601f106102e657610100808354040283529160200191610311565b820191906000526020600020905b8154815290600101906020018083116102f457829003601f168201915b5050505050905090565b6000610328338484610553565b50600192915050565b600061033e848484610678565b610390843361038b85604051806060016040528060288152602001610b42602891396001600160a01b038a16600090815260026020908152604080832033845290915290205491906107fe565b610553565b5060019392505050565b3360008181526002602090815260408083206001600160a01b0387168452909152812054909161032891859061038b908661082a565b6000546001600160a01b031633146104035760405162461bcd60e51b81526004016103fa90610ae6565b60405180910390fd5b61040d600061083d565b565b60606005805461029890610aac565b600080546001600160a01b031633146104495760405162461bcd60e51b81526004016103fa90610ae6565b610453338361088d565b5060015b919050565b6000610328338461038b85604051806060016040528060258152602001610b90602591393360009081526002602090815260408083206001600160a01b038d16845290915290205491906107fe565b6000610328338484610678565b6000546001600160a01b031633146104e25760405162461bcd60e51b81526004016103fa90610ae6565b6001600160a01b0381166105475760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103fa565b6105508161083d565b50565b6001600160a01b0383166105b55760405162461bcd60e51b8152602060048201526024808201527f42455032303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103fa565b6001600160a01b0382166106165760405162461bcd60e51b815260206004820152602260248201527f42455032303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103fa565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166106dc5760405162461bcd60e51b815260206004820152602560248201527f42455032303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103fa565b6001600160a01b03821661073e5760405162461bcd60e51b815260206004820152602360248201527f42455032303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103fa565b61077b81604051806060016040528060268152602001610b6a602691396001600160a01b03861660009081526001602052604090205491906107fe565b6001600160a01b0380851660009081526001602052604080822093909355908416815220546107aa908261082a565b6001600160a01b0380841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061066b9085815260200190565b600081848411156108225760405162461bcd60e51b81526004016103fa9190610973565b505050900390565b60006108368284610b1b565b9392505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0382166108e35760405162461bcd60e51b815260206004820152601f60248201527f42455032303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103fa565b6003546108f0908261082a565b6003556001600160a01b038216600090815260016020526040902054610916908261082a565b6001600160a01b0383166000818152600160205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906109679085815260200190565b60405180910390a35050565b600060208083528351808285015260005b818110156109a057858101830151858201604001528201610984565b818111156109b2576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461045757600080fd5b600080604083850312156109f257600080fd5b6109fb836109c8565b946020939093013593505050565b600080600060608486031215610a1e57600080fd5b610a27846109c8565b9250610a35602085016109c8565b9150604084013590509250925092565b600060208284031215610a5757600080fd5b610836826109c8565b600060208284031215610a7257600080fd5b5035919050565b60008060408385031215610a8c57600080fd5b610a95836109c8565b9150610aa3602084016109c8565b90509250929050565b600181811c90821680610ac057607f821691505b602082108103610ae057634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115610b3c57634e487b7160e01b600052601160045260246000fd5b50019056fe42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220d5c15d20103eeab5e15c274871dfa4a6f303325d47d0b4304b13976d900d3d9064736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xEE3 CODESIZE SUB DUP1 PUSH3 0xEE3 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x243 JUMP JUMPDEST PUSH3 0x3F CALLER PUSH3 0x80 JUMP JUMPDEST DUP2 MLOAD PUSH3 0x54 SWAP1 PUSH1 0x6 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0xD0 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x6A SWAP1 PUSH1 0x5 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0xD0 JUMP JUMPDEST POP POP PUSH1 0x4 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE POP PUSH3 0x2E9 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0xDE SWAP1 PUSH3 0x2AD JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x102 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x14D JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x11D JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x14D JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x14D JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x14D JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x130 JUMP JUMPDEST POP PUSH3 0x15B SWAP3 SWAP2 POP PUSH3 0x15F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x15B JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x160 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1BB JUMPI PUSH3 0x1BB PUSH3 0x176 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x1E6 JUMPI PUSH3 0x1E6 PUSH3 0x176 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x203 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x227 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x208 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x239 JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x26F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x27D DUP7 DUP4 DUP8 ADD PUSH3 0x18C JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x2A3 DUP6 DUP3 DUP7 ADD PUSH3 0x18C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x2C2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2E3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBEA DUP1 PUSH3 0x2F9 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x276 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x158 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x289 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x973 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x9DF JUMP JUMPDEST PUSH2 0x31B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH1 0x3 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH2 0x136 PUSH2 0x166 CALLDATASIZE PUSH1 0x4 PUSH2 0xA09 JUMP JUMPDEST PUSH2 0x331 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH2 0x136 PUSH2 0x18E CALLDATASIZE PUSH1 0x4 PUSH2 0x9DF JUMP JUMPDEST PUSH2 0x39A JUMP JUMPDEST PUSH2 0x14A PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0xA45 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1C4 PUSH2 0x3D0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1D3 JUMP JUMPDEST PUSH2 0x10D PUSH2 0x40F JUMP JUMPDEST PUSH2 0x136 PUSH2 0x212 CALLDATASIZE PUSH1 0x4 PUSH2 0xA60 JUMP JUMPDEST PUSH2 0x41E JUMP JUMPDEST PUSH2 0x136 PUSH2 0x225 CALLDATASIZE PUSH1 0x4 PUSH2 0x9DF JUMP JUMPDEST PUSH2 0x45C JUMP JUMPDEST PUSH2 0x136 PUSH2 0x238 CALLDATASIZE PUSH1 0x4 PUSH2 0x9DF JUMP JUMPDEST PUSH2 0x4AB JUMP JUMPDEST PUSH2 0x14A PUSH2 0x24B CALLDATASIZE PUSH1 0x4 PUSH2 0xA79 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1C4 PUSH2 0x284 CALLDATASIZE PUSH1 0x4 PUSH2 0xA45 JUMP JUMPDEST PUSH2 0x4B8 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x298 SWAP1 PUSH2 0xAAC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2C4 SWAP1 PUSH2 0xAAC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x311 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2E6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x311 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2F4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x328 CALLER DUP5 DUP5 PUSH2 0x553 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33E DUP5 DUP5 DUP5 PUSH2 0x678 JUMP JUMPDEST PUSH2 0x390 DUP5 CALLER PUSH2 0x38B DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB42 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7FE JUMP JUMPDEST PUSH2 0x553 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x328 SWAP2 DUP6 SWAP1 PUSH2 0x38B SWAP1 DUP7 PUSH2 0x82A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x403 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3FA SWAP1 PUSH2 0xAE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x40D PUSH1 0x0 PUSH2 0x83D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x298 SWAP1 PUSH2 0xAAC JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x449 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3FA SWAP1 PUSH2 0xAE6 JUMP JUMPDEST PUSH2 0x453 CALLER DUP4 PUSH2 0x88D JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x328 CALLER DUP5 PUSH2 0x38B DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB90 PUSH1 0x25 SWAP2 CODECOPY CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x328 CALLER DUP5 DUP5 PUSH2 0x678 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3FA SWAP1 PUSH2 0xAE6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x547 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3FA JUMP JUMPDEST PUSH2 0x550 DUP2 PUSH2 0x83D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x42455032303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x73E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3FA JUMP JUMPDEST PUSH2 0x77B DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB6A PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x7AA SWAP1 DUP3 PUSH2 0x82A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x66B SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x822 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3FA SWAP2 SWAP1 PUSH2 0x973 JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x836 DUP3 DUP5 PUSH2 0xB1B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x8F0 SWAP1 DUP3 PUSH2 0x82A JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x916 SWAP1 DUP3 PUSH2 0x82A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x967 SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9A0 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x984 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x9B2 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x457 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9FB DUP4 PUSH2 0x9C8 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA27 DUP5 PUSH2 0x9C8 JUMP JUMPDEST SWAP3 POP PUSH2 0xA35 PUSH1 0x20 DUP6 ADD PUSH2 0x9C8 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x836 DUP3 PUSH2 0x9C8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA95 DUP4 PUSH2 0x9C8 JUMP JUMPDEST SWAP2 POP PUSH2 0xAA3 PUSH1 0x20 DUP5 ADD PUSH2 0x9C8 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xAC0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xAE0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xB3C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636542455032303A20747261 PUSH15 0x7366657220616D6F756E7420657863 PUSH6 0x656473206261 PUSH13 0x616E636542455032303A206465 PUSH4 0x72656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726FA26469706673582212 KECCAK256 0xD5 0xC1 0x5D KECCAK256 LT RETURNDATACOPY 0xEA 0xB5 0xE1 0x5C 0x27 BASEFEE PUSH18 0xDFA4A6F303325D47D0B4304B13976D900D3D SWAP1 PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "192:9332:0:-:0;;;878:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;894:23:3;682:10:7;894:9:3;:23::i;:::-;953:17:0;;;;:5;;:17;;;;;:::i;:::-;-1:-1:-1;981:21:0;;;;:7;;:21;;;;;:::i;:::-;-1:-1:-1;;1013:9:0;:14;;-1:-1:-1;;1013:14:0;1025:2;1013:14;;;-1:-1:-1;192:9332:0;;2106:173:3;2162:16;2181:6;;-1:-1:-1;;;;;2198:17:3;;;-1:-1:-1;;;;;;2198:17:3;;;;;;2231:40;;2181:6;;;;;;;2231:40;;2162:16;2231:40;2151:128;2106:173;:::o;192:9332:0:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;192:9332:0;;;-1:-1:-1;192:9332:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:8;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:8;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:8;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:8:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:8;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;:::-;192:9332:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_491": {
									"entryPoint": 1363,
									"id": 491,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_399": {
									"entryPoint": 2189,
									"id": 399,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_2716": {
									"entryPoint": null,
									"id": 2716,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setOwner_1495": {
									"entryPoint": 2109,
									"id": 1495,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_353": {
									"entryPoint": 1656,
									"id": 353,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@add_1672": {
									"entryPoint": 2090,
									"id": 1672,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_158": {
									"entryPoint": null,
									"id": 158,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_179": {
									"entryPoint": 795,
									"id": 179,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_119": {
									"entryPoint": null,
									"id": 119,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_85": {
									"entryPoint": null,
									"id": 85,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_274": {
									"entryPoint": 1116,
									"id": 274,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getOwner_65": {
									"entryPoint": null,
									"id": 65,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@increaseAllowance_245": {
									"entryPoint": 922,
									"id": 245,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_293": {
									"entryPoint": 1054,
									"id": 293,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_75": {
									"entryPoint": 649,
									"id": 75,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_1425": {
									"entryPoint": null,
									"id": 1425,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_1453": {
									"entryPoint": 976,
									"id": 1453,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_1757": {
									"entryPoint": 2046,
									"id": 1757,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@symbol_95": {
									"entryPoint": 1039,
									"id": 95,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_105": {
									"entryPoint": null,
									"id": 105,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_217": {
									"entryPoint": 817,
									"id": 217,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_1476": {
									"entryPoint": 1208,
									"id": 1476,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_140": {
									"entryPoint": 1195,
									"id": 140,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 2504,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2629,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2681,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2569,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2527,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2656,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2419,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2790,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2843,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2732,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6156:8",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:476:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:8",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:8"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:8",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:8"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:8"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:8"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:8"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:8",
																"statements": []
															},
															"src": "294:140:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "468:66:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "497:9:8"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "508:6:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "493:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "493:22:8"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "517:2:8",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "489:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "489:31:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "522:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "482:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "482:42:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "482:42:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "449:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "452:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "446:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "446:13:8"
															},
															"nodeType": "YulIf",
															"src": "443:91:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "543:62:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "559:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "578:6:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "586:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "574:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "574:15:8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "595:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "591:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "591:7:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "570:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "570:29:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "555:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "555:45:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "602:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "551:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:54:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "543:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:8",
														"type": ""
													}
												],
												"src": "14:597:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "665:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "675:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "697:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "684:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "684:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "675:5:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "767:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "776:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "779:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "769:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "769:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "726:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "737:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "752:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "757:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "748:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "748:11:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "761:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "744:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "744:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "733:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "733:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "723:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "723:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "716:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "716:50:8"
															},
															"nodeType": "YulIf",
															"src": "713:70:8"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "655:5:8",
														"type": ""
													}
												],
												"src": "616:173:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "881:167:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "927:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "936:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "939:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "929:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "929:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "929:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "902:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "911:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "898:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "898:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "923:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "894:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "894:32:8"
															},
															"nodeType": "YulIf",
															"src": "891:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "952:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "981:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "962:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "962:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "952:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1000:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1027:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1038:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1023:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1023:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1010:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1010:32:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1000:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "839:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "850:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "862:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "870:6:8",
														"type": ""
													}
												],
												"src": "794:254:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:92:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1225:6:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1218:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1218:14:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1211:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1211:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1193:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1193:41:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1193:41:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1117:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1128:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1139:4:8",
														"type": ""
													}
												],
												"src": "1053:187:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1346:76:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1356:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1368:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1379:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1364:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1364:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1356:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1398:9:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1409:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1391:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1391:25:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1391:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1315:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1326:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1337:4:8",
														"type": ""
													}
												],
												"src": "1245:177:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1531:224:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1577:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1586:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1589:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1579:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1579:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1579:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1552:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1561:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1548:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1548:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1573:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1544:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1544:32:8"
															},
															"nodeType": "YulIf",
															"src": "1541:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1602:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1631:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1612:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1612:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1602:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1650:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1694:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1679:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1660:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1660:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1707:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1734:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1745:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1730:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1730:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1717:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1717:32:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1707:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1481:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1492:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1504:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1512:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1520:6:8",
														"type": ""
													}
												],
												"src": "1427:328:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1857:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1867:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1879:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1890:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1875:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1875:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1867:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1909:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1932:4:8",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1920:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1920:17:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1902:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1902:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1902:36:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1826:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1837:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1848:4:8",
														"type": ""
													}
												],
												"src": "1760:184:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2019:116:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2065:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2074:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2077:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2067:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2067:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2067:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2040:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2049:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2036:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2036:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2061:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2032:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:32:8"
															},
															"nodeType": "YulIf",
															"src": "2029:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2090:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2119:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2100:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2100:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1985:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1996:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2008:6:8",
														"type": ""
													}
												],
												"src": "1949:186:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2241:102:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2251:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2263:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2274:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2259:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2259:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2251:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2293:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2308:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2324:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2329:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2320:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2320:11:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2333:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2316:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2316:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2304:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2304:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2286:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2286:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2286:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2210:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2221:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2232:4:8",
														"type": ""
													}
												],
												"src": "2140:203:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2418:110:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2464:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2473:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2476:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2466:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2466:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2466:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2439:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2448:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2435:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2435:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2460:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2431:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2431:32:8"
															},
															"nodeType": "YulIf",
															"src": "2428:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2489:33:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2512:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2499:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2499:23:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2489:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2384:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2395:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2407:6:8",
														"type": ""
													}
												],
												"src": "2348:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2620:173:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2666:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2675:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2678:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2668:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2668:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2668:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2641:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2650:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2637:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2637:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2662:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2633:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2633:32:8"
															},
															"nodeType": "YulIf",
															"src": "2630:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2691:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2720:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2701:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2701:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2691:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2739:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2772:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2783:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2768:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2768:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2749:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2749:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2739:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2578:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2589:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2601:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2609:6:8",
														"type": ""
													}
												],
												"src": "2533:260:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2853:325:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2863:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2877:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2880:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2873:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2873:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2863:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2894:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2924:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2930:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2920:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2920:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2898:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2971:31:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2973:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2987:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2995:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2983:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2983:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2973:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2951:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2944:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2944:26:8"
															},
															"nodeType": "YulIf",
															"src": "2941:61:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3061:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3082:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3089:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3094:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3085:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3085:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3075:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3075:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3075:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3126:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3129:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3119:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3119:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3119:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3154:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3157:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3147:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3147:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3147:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3017:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3040:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3048:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3037:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3037:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "3014:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3014:38:8"
															},
															"nodeType": "YulIf",
															"src": "3011:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2833:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2842:6:8",
														"type": ""
													}
												],
												"src": "2798:380:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3357:182:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3374:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3385:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3367:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3367:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3367:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3408:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3419:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3404:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3404:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3424:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3397:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3397:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3397:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3447:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3458:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3443:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3443:18:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3463:34:8",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3436:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3436:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3436:62:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3507:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3519:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3530:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3515:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3515:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3507:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3334:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3348:4:8",
														"type": ""
													}
												],
												"src": "3183:356:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3718:228:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3735:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3746:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3728:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3728:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3728:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3769:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3780:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3765:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3765:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3785:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3758:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3758:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3758:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3808:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3819:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3804:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3804:18:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3824:34:8",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3797:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3797:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3797:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3879:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3890:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3875:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3875:18:8"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3895:8:8",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3868:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3868:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3868:36:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3913:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3925:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3936:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3921:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3921:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3913:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3695:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3709:4:8",
														"type": ""
													}
												],
												"src": "3544:402:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4125:226:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4142:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4153:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4135:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4135:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4135:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4176:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4187:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4172:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4172:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4192:2:8",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4165:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4165:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4165:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4215:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4226:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4211:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4211:18:8"
																	},
																	{
																		"hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4231:34:8",
																		"type": "",
																		"value": "BEP20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4204:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4204:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4204:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4286:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4297:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4282:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4282:18:8"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4302:6:8",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4275:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4275:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4275:34:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4318:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4330:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4341:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4326:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4326:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4318:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4102:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4116:4:8",
														"type": ""
													}
												],
												"src": "3951:400:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4530:224:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4547:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4558:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4540:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4540:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4540:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4581:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4592:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4577:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4577:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4597:2:8",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4570:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4570:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4570:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4620:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4631:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4616:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4616:18:8"
																	},
																	{
																		"hexValue": "42455032303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4636:34:8",
																		"type": "",
																		"value": "BEP20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4609:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4609:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4609:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4691:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4702:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4687:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4687:18:8"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4707:4:8",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4680:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4680:32:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4680:32:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4721:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4733:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4744:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4729:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4729:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4721:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4507:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4521:4:8",
														"type": ""
													}
												],
												"src": "4356:398:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4933:227:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4950:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4961:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4943:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4943:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4943:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4984:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4995:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4980:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4980:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5000:2:8",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4973:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4973:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4973:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5023:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5034:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5019:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5019:18:8"
																	},
																	{
																		"hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5039:34:8",
																		"type": "",
																		"value": "BEP20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5012:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5012:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5012:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5094:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5105:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5090:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5090:18:8"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5110:7:8",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5083:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5083:35:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5083:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5127:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5139:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5150:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5135:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5135:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5127:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4910:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4924:4:8",
														"type": ""
													}
												],
												"src": "4759:401:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5339:225:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5356:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5367:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5349:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5349:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5349:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5390:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5401:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5386:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5386:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5406:2:8",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5379:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5379:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5379:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5429:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5440:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5425:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5425:18:8"
																	},
																	{
																		"hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5445:34:8",
																		"type": "",
																		"value": "BEP20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5418:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5418:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5418:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5500:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5511:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5496:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5496:18:8"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5516:5:8",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5489:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5489:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5489:33:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5531:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5543:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5554:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5539:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5539:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5531:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5316:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5330:4:8",
														"type": ""
													}
												],
												"src": "5165:399:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5617:177:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5652:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5673:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5680:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5685:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5676:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5676:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5666:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5666:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5666:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5717:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5720:4:8",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5710:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5710:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5710:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5745:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5748:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5738:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5738:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5738:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5633:1:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5640:1:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5636:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5636:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5630:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5630:13:8"
															},
															"nodeType": "YulIf",
															"src": "5627:136:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5772:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5783:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5786:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5779:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5779:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5772:3:8"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5600:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5603:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5609:3:8",
														"type": ""
													}
												],
												"src": "5569:225:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5973:181:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5990:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6001:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5983:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5983:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5983:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6024:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6035:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6020:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6020:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6040:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6013:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6013:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6013:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6063:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6074:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6059:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6059:18:8"
																	},
																	{
																		"hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6079:33:8",
																		"type": "",
																		"value": "BEP20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6052:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6052:61:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6052:61:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6122:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6134:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6145:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6130:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6130:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6122:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5950:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5964:4:8",
														"type": ""
													}
												],
												"src": "5799:355:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"BEP20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"BEP20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"BEP20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"BEP20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"BEP20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101005760003560e01c8063893d20e811610097578063a457c2d711610066578063a457c2d714610217578063a9059cbb1461022a578063dd62ed3e1461023d578063f2fde38b1461027657600080fd5b8063893d20e8146101c65780638da5cb5b146101eb57806395d89b41146101fc578063a0712d681461020457600080fd5b8063313ce567116100d3578063313ce5671461016b578063395093511461018057806370a0823114610193578063715018a6146101bc57600080fd5b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014657806323b872dd14610158575b600080fd5b61010d610289565b60405161011a9190610973565b60405180910390f35b6101366101313660046109df565b61031b565b604051901515815260200161011a565b6003545b60405190815260200161011a565b610136610166366004610a09565b610331565b60045460405160ff909116815260200161011a565b61013661018e3660046109df565b61039a565b61014a6101a1366004610a45565b6001600160a01b031660009081526001602052604090205490565b6101c46103d0565b005b6000546001600160a01b03165b6040516001600160a01b03909116815260200161011a565b6000546001600160a01b03166101d3565b61010d61040f565b610136610212366004610a60565b61041e565b6101366102253660046109df565b61045c565b6101366102383660046109df565b6104ab565b61014a61024b366004610a79565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6101c4610284366004610a45565b6104b8565b60606006805461029890610aac565b80601f01602080910402602001604051908101604052809291908181526020018280546102c490610aac565b80156103115780601f106102e657610100808354040283529160200191610311565b820191906000526020600020905b8154815290600101906020018083116102f457829003601f168201915b5050505050905090565b6000610328338484610553565b50600192915050565b600061033e848484610678565b610390843361038b85604051806060016040528060288152602001610b42602891396001600160a01b038a16600090815260026020908152604080832033845290915290205491906107fe565b610553565b5060019392505050565b3360008181526002602090815260408083206001600160a01b0387168452909152812054909161032891859061038b908661082a565b6000546001600160a01b031633146104035760405162461bcd60e51b81526004016103fa90610ae6565b60405180910390fd5b61040d600061083d565b565b60606005805461029890610aac565b600080546001600160a01b031633146104495760405162461bcd60e51b81526004016103fa90610ae6565b610453338361088d565b5060015b919050565b6000610328338461038b85604051806060016040528060258152602001610b90602591393360009081526002602090815260408083206001600160a01b038d16845290915290205491906107fe565b6000610328338484610678565b6000546001600160a01b031633146104e25760405162461bcd60e51b81526004016103fa90610ae6565b6001600160a01b0381166105475760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103fa565b6105508161083d565b50565b6001600160a01b0383166105b55760405162461bcd60e51b8152602060048201526024808201527f42455032303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103fa565b6001600160a01b0382166106165760405162461bcd60e51b815260206004820152602260248201527f42455032303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103fa565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166106dc5760405162461bcd60e51b815260206004820152602560248201527f42455032303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103fa565b6001600160a01b03821661073e5760405162461bcd60e51b815260206004820152602360248201527f42455032303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103fa565b61077b81604051806060016040528060268152602001610b6a602691396001600160a01b03861660009081526001602052604090205491906107fe565b6001600160a01b0380851660009081526001602052604080822093909355908416815220546107aa908261082a565b6001600160a01b0380841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061066b9085815260200190565b600081848411156108225760405162461bcd60e51b81526004016103fa9190610973565b505050900390565b60006108368284610b1b565b9392505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0382166108e35760405162461bcd60e51b815260206004820152601f60248201527f42455032303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103fa565b6003546108f0908261082a565b6003556001600160a01b038216600090815260016020526040902054610916908261082a565b6001600160a01b0383166000818152600160205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906109679085815260200190565b60405180910390a35050565b600060208083528351808285015260005b818110156109a057858101830151858201604001528201610984565b818111156109b2576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461045757600080fd5b600080604083850312156109f257600080fd5b6109fb836109c8565b946020939093013593505050565b600080600060608486031215610a1e57600080fd5b610a27846109c8565b9250610a35602085016109c8565b9150604084013590509250925092565b600060208284031215610a5757600080fd5b610836826109c8565b600060208284031215610a7257600080fd5b5035919050565b60008060408385031215610a8c57600080fd5b610a95836109c8565b9150610aa3602084016109c8565b90509250929050565b600181811c90821680610ac057607f821691505b602082108103610ae057634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115610b3c57634e487b7160e01b600052601160045260246000fd5b50019056fe42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220d5c15d20103eeab5e15c274871dfa4a6f303325d47d0b4304b13976d900d3d9064736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x276 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x158 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x289 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x973 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x9DF JUMP JUMPDEST PUSH2 0x31B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH1 0x3 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH2 0x136 PUSH2 0x166 CALLDATASIZE PUSH1 0x4 PUSH2 0xA09 JUMP JUMPDEST PUSH2 0x331 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH2 0x136 PUSH2 0x18E CALLDATASIZE PUSH1 0x4 PUSH2 0x9DF JUMP JUMPDEST PUSH2 0x39A JUMP JUMPDEST PUSH2 0x14A PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0xA45 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1C4 PUSH2 0x3D0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1D3 JUMP JUMPDEST PUSH2 0x10D PUSH2 0x40F JUMP JUMPDEST PUSH2 0x136 PUSH2 0x212 CALLDATASIZE PUSH1 0x4 PUSH2 0xA60 JUMP JUMPDEST PUSH2 0x41E JUMP JUMPDEST PUSH2 0x136 PUSH2 0x225 CALLDATASIZE PUSH1 0x4 PUSH2 0x9DF JUMP JUMPDEST PUSH2 0x45C JUMP JUMPDEST PUSH2 0x136 PUSH2 0x238 CALLDATASIZE PUSH1 0x4 PUSH2 0x9DF JUMP JUMPDEST PUSH2 0x4AB JUMP JUMPDEST PUSH2 0x14A PUSH2 0x24B CALLDATASIZE PUSH1 0x4 PUSH2 0xA79 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1C4 PUSH2 0x284 CALLDATASIZE PUSH1 0x4 PUSH2 0xA45 JUMP JUMPDEST PUSH2 0x4B8 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x298 SWAP1 PUSH2 0xAAC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2C4 SWAP1 PUSH2 0xAAC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x311 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2E6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x311 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2F4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x328 CALLER DUP5 DUP5 PUSH2 0x553 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33E DUP5 DUP5 DUP5 PUSH2 0x678 JUMP JUMPDEST PUSH2 0x390 DUP5 CALLER PUSH2 0x38B DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB42 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7FE JUMP JUMPDEST PUSH2 0x553 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x328 SWAP2 DUP6 SWAP1 PUSH2 0x38B SWAP1 DUP7 PUSH2 0x82A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x403 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3FA SWAP1 PUSH2 0xAE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x40D PUSH1 0x0 PUSH2 0x83D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x298 SWAP1 PUSH2 0xAAC JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x449 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3FA SWAP1 PUSH2 0xAE6 JUMP JUMPDEST PUSH2 0x453 CALLER DUP4 PUSH2 0x88D JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x328 CALLER DUP5 PUSH2 0x38B DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB90 PUSH1 0x25 SWAP2 CODECOPY CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x328 CALLER DUP5 DUP5 PUSH2 0x678 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3FA SWAP1 PUSH2 0xAE6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x547 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3FA JUMP JUMPDEST PUSH2 0x550 DUP2 PUSH2 0x83D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x42455032303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x73E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3FA JUMP JUMPDEST PUSH2 0x77B DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB6A PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x7AA SWAP1 DUP3 PUSH2 0x82A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x66B SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x822 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3FA SWAP2 SWAP1 PUSH2 0x973 JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x836 DUP3 DUP5 PUSH2 0xB1B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x8F0 SWAP1 DUP3 PUSH2 0x82A JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x916 SWAP1 DUP3 PUSH2 0x82A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x967 SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9A0 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x984 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x9B2 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x457 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9FB DUP4 PUSH2 0x9C8 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA27 DUP5 PUSH2 0x9C8 JUMP JUMPDEST SWAP3 POP PUSH2 0xA35 PUSH1 0x20 DUP6 ADD PUSH2 0x9C8 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x836 DUP3 PUSH2 0x9C8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA95 DUP4 PUSH2 0x9C8 JUMP JUMPDEST SWAP2 POP PUSH2 0xAA3 PUSH1 0x20 DUP5 ADD PUSH2 0x9C8 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xAC0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xAE0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xB3C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636542455032303A20747261 PUSH15 0x7366657220616D6F756E7420657863 PUSH6 0x656473206261 PUSH13 0x616E636542455032303A206465 PUSH4 0x72656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726FA26469706673582212 KECCAK256 0xD5 0xC1 0x5D KECCAK256 LT RETURNDATACOPY 0xEA 0xB5 0xE1 0x5C 0x27 BASEFEE PUSH18 0xDFA4A6F303325D47D0B4304B13976D900D3D SWAP1 PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "192:9332:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1260:92;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2820:193;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:8;;1211:22;1193:41;;1181:2;1166:18;2820:193:0;1053:187:8;1736:100:0;1816:12;;1736:100;;;1391:25:8;;;1379:2;1364:18;1736:100:0;1245:177:8;3484:446:0;;;;;;:::i;:::-;;:::i;1419:92::-;1494:9;;1419:92;;1494:9;;;;1902:36:8;;1890:2;1875:18;1419:92:0;1760:184:8;4338:283:0;;;;;;:::i;:::-;;:::i;1898:119::-;;;;;;:::i;:::-;-1:-1:-1;;;;;1991:18:0;1964:7;1991:18;;;:9;:18;;;;;;;1898:119;1657:94:3;;;:::i;:::-;;1103::0;1155:7;1079:6:3;-1:-1:-1;;;;;1079:6:3;1103:94:0;;;-1:-1:-1;;;;;2304:32:8;;;2286:51;;2274:2;2259:18;1103:94:0;2140:203:8;1006:87:3;1052:7;1079:6;-1:-1:-1;;;;;1079:6:3;1006:87;;1576:96:0;;;:::i;5724:130::-;;;;;;:::i;:::-;;:::i;5123:383::-;;;;;;:::i;:::-;;:::i;2229:199::-;;;;;;:::i;:::-;;:::i;2490:184::-;;;;;;:::i;:::-;-1:-1:-1;;;;;2639:18:0;;;2607:7;2639:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2490:184;1906:192:3;;;;;;:::i;:::-;;:::i;1260:92:0:-;1306:13;1339:5;1332:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1260:92;:::o;2820:193::-;2922:4;2944:39;682:10:7;2967:7:0;2976:6;2944:8;:39::i;:::-;-1:-1:-1;3001:4:0;2820:193;;;;:::o;3484:446::-;3616:4;3633:36;3643:6;3651:9;3662:6;3633:9;:36::i;:::-;3680:220;3703:6;682:10:7;3751:138:0;3807:6;3751:138;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3751:19:0;;;;;;:11;:19;;;;;;;;682:10:7;3751:33:0;;;;;;;;;;:37;:138::i;:::-;3680:8;:220::i;:::-;-1:-1:-1;3918:4:0;3484:446;;;;;:::o;4338:283::-;682:10:7;4436:4:0;4530:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;4530:34:0;;;;;;;;;;4436:4;;4458:133;;4508:7;;4530:50;;4569:10;4530:38;:50::i;1657:94:3:-;1052:7;1079:6;-1:-1:-1;;;;;1079:6:3;682:10:7;1226:23:3;1218:68;;;;-1:-1:-1;;;1218:68:3;;;;;;;:::i;:::-;;;;;;;;;1722:21:::1;1740:1;1722:9;:21::i;:::-;1657:94::o:0;1576:96:0:-;1624:13;1657:7;1650:14;;;;;:::i;5724:130::-;5780:4;1079:6:3;;-1:-1:-1;;;;;1079:6:3;682:10:7;1226:23:3;1218:68;;;;-1:-1:-1;;;1218:68:3;;;;;;;:::i;:::-;5797:27:0::1;682:10:7::0;5817:6:0::1;5797:5;:27::i;:::-;-1:-1:-1::0;5842:4:0::1;1297:1:3;5724:130:0::0;;;:::o;5123:383::-;5226:4;5248:228;682:10:7;5298:7:0;5320:145;5377:15;5320:145;;;;;;;;;;;;;;;;;682:10:7;5320:25:0;;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5320:34:0;;;;;;;;;;;;:38;:145::i;2229:199::-;2334:4;2356:42;682:10:7;2380:9:0;2391:6;2356:9;:42::i;1906:192:3:-;1052:7;1079:6;-1:-1:-1;;;;;1079:6:3;682:10:7;1226:23:3;1218:68;;;;-1:-1:-1;;;1218:68:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;1995:22:3;::::1;1987:73;;;::::0;-1:-1:-1;;;1987:73:3;;3746:2:8;1987:73:3::1;::::0;::::1;3728:21:8::0;3785:2;3765:18;;;3758:30;3824:34;3804:18;;;3797:62;-1:-1:-1;;;3875:18:8;;;3868:36;3921:19;;1987:73:3::1;3544:402:8::0;1987:73:3::1;2071:19;2081:8;2071:9;:19::i;:::-;1906:192:::0;:::o;8632:372:0:-;-1:-1:-1;;;;;8760:19:0;;8752:68;;;;-1:-1:-1;;;8752:68:0;;4153:2:8;8752:68:0;;;4135:21:8;4192:2;4172:18;;;4165:30;4231:34;4211:18;;;4204:62;-1:-1:-1;;;4282:18:8;;;4275:34;4326:19;;8752:68:0;3951:400:8;8752:68:0;-1:-1:-1;;;;;8839:21:0;;8831:68;;;;-1:-1:-1;;;8831:68:0;;4558:2:8;8831:68:0;;;4540:21:8;4597:2;4577:18;;;4570:30;4636:34;4616:18;;;4609:62;-1:-1:-1;;;4687:18:8;;;4680:32;4729:19;;8831:68:0;4356:398:8;8831:68:0;-1:-1:-1;;;;;8912:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;8964:32;;1391:25:8;;;8964:32:0;;1364:18:8;8964:32:0;;;;;;;;8632:372;;;:::o;6344:542::-;-1:-1:-1;;;;;6476:20:0;;6468:70;;;;-1:-1:-1;;;6468:70:0;;4961:2:8;6468:70:0;;;4943:21:8;5000:2;4980:18;;;4973:30;5039:34;5019:18;;;5012:62;-1:-1:-1;;;5090:18:8;;;5083:35;5135:19;;6468:70:0;4759:401:8;6468:70:0;-1:-1:-1;;;;;6557:23:0;;6549:71;;;;-1:-1:-1;;;6549:71:0;;5367:2:8;6549:71:0;;;5349:21:8;5406:2;5386:18;;;5379:30;5445:34;5425:18;;;5418:62;-1:-1:-1;;;5496:18:8;;;5489:33;5539:19;;6549:71:0;5165:399:8;6549:71:0;6653:108;6689:6;6653:108;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6653:17:0;;;;;;:9;:17;;;;;;;:108;:21;:108::i;:::-;-1:-1:-1;;;;;6633:17:0;;;;;;;:9;:17;;;;;;:128;;;;6795:20;;;;;;;:32;;6820:6;6795:24;:32::i;:::-;-1:-1:-1;;;;;6772:20:0;;;;;;;:9;:20;;;;;;;:55;;;;6843:35;;;;;;;;;;6871:6;1391:25:8;;1379:2;1364:18;;1245:177;5042:240:4;5162:7;5223:12;5215:6;;;;5207:29;;;;-1:-1:-1;;;5207:29:4;;;;;;;;:::i;:::-;-1:-1:-1;;;5258:5:4;;;5042:240::o;2763:98::-;2821:7;2848:5;2852:1;2848;:5;:::i;:::-;2841:12;2763:98;-1:-1:-1;;;2763:98:4:o;2106:173:3:-;2162:16;2181:6;;-1:-1:-1;;;;;2198:17:3;;;-1:-1:-1;;;;;;2198:17:3;;;;;;2231:40;;2181:6;;;;;;;2231:40;;2162:16;2231:40;2151:128;2106:173;:::o;7167:308:0:-;-1:-1:-1;;;;;7243:21:0;;7235:65;;;;-1:-1:-1;;;7235:65:0;;6001:2:8;7235:65:0;;;5983:21:8;6040:2;6020:18;;;6013:30;6079:33;6059:18;;;6052:61;6130:18;;7235:65:0;5799:355:8;7235:65:0;7328:12;;:24;;7345:6;7328:16;:24::i;:::-;7313:12;:39;-1:-1:-1;;;;;7384:18:0;;;;;;:9;:18;;;;;;:30;;7407:6;7384:22;:30::i;:::-;-1:-1:-1;;;;;7363:18:0;;;;;;:9;:18;;;;;;:51;;;;7430:37;;7363:18;;;7430:37;;;;7460:6;1391:25:8;;1379:2;1364:18;;1245:177;7430:37:0;;;;;;;;7167:308;;:::o;14:597:8:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:8;574:15;-1:-1:-1;;570:29:8;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:8:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:8;;723:42;;713:70;;779:1;776;769:12;794:254;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:8:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:186::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;2100:29;2119:9;2100:29;:::i;2348:180::-;2407:6;2460:2;2448:9;2439:7;2435:23;2431:32;2428:52;;;2476:1;2473;2466:12;2428:52;-1:-1:-1;2499:23:8;;2348:180;-1:-1:-1;2348:180:8:o;2533:260::-;2601:6;2609;2662:2;2650:9;2641:7;2637:23;2633:32;2630:52;;;2678:1;2675;2668:12;2630:52;2701:29;2720:9;2701:29;:::i;:::-;2691:39;;2749:38;2783:2;2772:9;2768:18;2749:38;:::i;:::-;2739:48;;2533:260;;;;;:::o;2798:380::-;2877:1;2873:12;;;;2920;;;2941:61;;2995:4;2987:6;2983:17;2973:27;;2941:61;3048:2;3040:6;3037:14;3017:18;3014:38;3011:161;;3094:10;3089:3;3085:20;3082:1;3075:31;3129:4;3126:1;3119:15;3157:4;3154:1;3147:15;3011:161;;2798:380;;;:::o;3183:356::-;3385:2;3367:21;;;3404:18;;;3397:30;3463:34;3458:2;3443:18;;3436:62;3530:2;3515:18;;3183:356::o;5569:225::-;5609:3;5640:1;5636:6;5633:1;5630:13;5627:136;;;5685:10;5680:3;5676:20;5673:1;5666:31;5720:4;5717:1;5710:15;5748:4;5745:1;5738:15;5627:136;-1:-1:-1;5779:9:8;;5569:225::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "610000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24643",
								"balanceOf(address)": "2604",
								"decimals()": "2312",
								"decreaseAllowance(address,uint256)": "infinite",
								"getOwner()": "2343",
								"increaseAllowance(address,uint256)": "27022",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2376",
								"renounceOwnership()": "28203",
								"symbol()": "infinite",
								"totalSupply()": "2349",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28397"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_burnFrom(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 878,
									"end": 1035,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 894,
									"end": 917,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 682,
									"end": 692,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 894,
									"end": 903,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 894,
									"end": 917,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 894,
									"end": 917,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 894,
									"end": 917,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 953,
									"end": 970,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 953,
									"end": 970,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 953,
									"end": 970,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 953,
									"end": 970,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 953,
									"end": 958,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 953,
									"end": 958,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 953,
									"end": 970,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 953,
									"end": 970,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 953,
									"end": 970,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 953,
									"end": 970,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 953,
									"end": 970,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 953,
									"end": 970,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 953,
									"end": 970,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 953,
									"end": 970,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 981,
									"end": 1002,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 981,
									"end": 1002,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 981,
									"end": 1002,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 981,
									"end": 1002,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 981,
									"end": 988,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 981,
									"end": 988,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 981,
									"end": 1002,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 981,
									"end": 1002,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 981,
									"end": 1002,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 981,
									"end": 1002,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 981,
									"end": 1002,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 981,
									"end": 1002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 981,
									"end": 1002,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 981,
									"end": 1002,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1013,
									"end": 1022,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1013,
									"end": 1027,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1027,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1013,
									"end": 1027,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1025,
									"end": 1027,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1013,
									"end": 1027,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1027,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1027,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2106,
									"end": 2279,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 2106,
									"end": 2279,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2162,
									"end": 2178,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2181,
									"end": 2187,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2181,
									"end": 2187,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2198,
									"end": 2215,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2198,
									"end": 2215,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2198,
									"end": 2215,
									"name": "AND",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2198,
									"end": 2215,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2198,
									"end": 2215,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2198,
									"end": 2215,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2198,
									"end": 2215,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 2198,
									"end": 2215,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2198,
									"end": 2215,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 2231,
									"end": 2271,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2231,
									"end": 2271,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2181,
									"end": 2187,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2181,
									"end": 2187,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2181,
									"end": 2187,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 2181,
									"end": 2187,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2181,
									"end": 2187,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 2181,
									"end": 2187,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2181,
									"end": 2187,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2231,
									"end": 2271,
									"name": "PUSH",
									"source": 3,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2231,
									"end": 2271,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2162,
									"end": 2178,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2231,
									"end": 2271,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 2151,
									"end": 2279,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2106,
									"end": 2279,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2106,
									"end": 2279,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 192,
									"end": 9524,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 192,
									"end": 9524,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "tag",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 8,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 930,
									"end": 932,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 927,
									"end": 928,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 924,
									"end": 933,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 989,
									"end": 990,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 984,
									"end": 986,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 979,
									"end": 981,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 971,
									"end": 977,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 967,
									"end": 982,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 963,
									"end": 987,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 956,
									"end": 991,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "tag",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1019,
									"end": 1025,
									"name": "SWAP7",
									"source": 8
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 1031,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1135,
									"end": 1141,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1143,
									"end": 1149,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1196,
									"end": 1198,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1184,
									"end": 1193,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1175,
									"end": 1182,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1171,
									"end": 1194,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1167,
									"end": 1199,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1212,
									"end": 1213,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1209,
									"end": 1210,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1202,
									"end": 1214,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "tag",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1239,
									"end": 1255,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1239,
									"end": 1255,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1331,
									"end": 1332,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1328,
									"end": 1329,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1321,
									"end": 1333,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "tag",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 1407,
									"end": 1414,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1398,
									"end": 1404,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1387,
									"end": 1396,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 1383,
									"end": 1405,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 1354,
									"end": 1415,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "tag",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1415,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1415,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1461,
									"end": 1463,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1450,
									"end": 1459,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1446,
									"end": 1464,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1440,
									"end": 1465,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1424,
									"end": 1465,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1424,
									"end": 1465,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1490,
									"end": 1492,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1480,
									"end": 1488,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1477,
									"end": 1493,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1506,
									"end": 1507,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1503,
									"end": 1504,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1496,
									"end": 1508,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "tag",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 1584,
									"end": 1591,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1573,
									"end": 1581,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1562,
									"end": 1571,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1558,
									"end": 1582,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 1529,
									"end": 1592,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "tag",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1036,
									"end": 1598,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "tag",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1682,
									"end": 1683,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1800,
									"end": 1804,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 1792,
									"end": 1798,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1788,
									"end": 1805,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1778,
									"end": 1805,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1778,
									"end": 1805,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "tag",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1853,
									"end": 1855,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1845,
									"end": 1851,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1842,
									"end": 1856,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1822,
									"end": 1840,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1819,
									"end": 1857,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1899,
									"end": 1909,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 1894,
									"end": 1897,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 1890,
									"end": 1910,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1887,
									"end": 1888,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1880,
									"end": 1911,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1934,
									"end": 1938,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1931,
									"end": 1932,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1924,
									"end": 1939,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1962,
									"end": 1966,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1959,
									"end": 1960,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1952,
									"end": 1967,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "tag",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1603,
									"end": 1983,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "tag",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 192,
									"end": 9524,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d5c15d20103eeab5e15c274871dfa4a6f303325d47d0b4304b13976d900d3d9064736f6c634300080e0033",
									".code": [
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH",
											"source": 0,
											"value": "893D20E8"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH",
											"source": 0,
											"value": "893D20E8"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH",
											"source": 0,
											"value": "A0712D68"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 9524,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1260,
											"end": 1352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1260,
											"end": 1352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2820,
											"end": 3013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2820,
											"end": 3013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1211,
											"end": 1233,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1053,
											"end": 1240,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1736,
											"end": 1836,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1736,
											"end": 1836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1816,
											"end": 1828,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1816,
											"end": 1828,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1836,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1736,
											"end": 1836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1836,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1736,
											"end": 1836,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1736,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3484,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3484,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1419,
											"end": 1511,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1419,
											"end": 1511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1494,
											"end": 1503,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1494,
											"end": 1503,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1419,
											"end": 1511,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1419,
											"end": 1511,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1494,
											"end": 1503,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1494,
											"end": 1503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1494,
											"end": 1503,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1494,
											"end": 1503,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1890,
											"end": 1892,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1760,
											"end": 1944,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 4338,
											"end": 4621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4338,
											"end": 4621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1898,
											"end": 2017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1991,
											"end": 2009,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1964,
											"end": 1971,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1991,
											"end": 2009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1991,
											"end": 2009,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1991,
											"end": 2009,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1991,
											"end": 2000,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1991,
											"end": 2009,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1991,
											"end": 2009,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1991,
											"end": 2009,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1991,
											"end": 2009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1991,
											"end": 2009,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1991,
											"end": 2009,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1991,
											"end": 2009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1657,
											"end": 1751,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1657,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1657,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1657,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1657,
											"end": 1751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1657,
											"end": 1751,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1657,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1657,
											"end": 1751,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1103,
											"end": 1197,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1103,
											"end": 1197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 1162,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1079,
											"end": 1085,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1079,
											"end": 1085,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1103,
											"end": 1197,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1103,
											"end": 1197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1197,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1103,
											"end": 1197,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2304,
											"end": 2336,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2304,
											"end": 2336,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2304,
											"end": 2336,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2286,
											"end": 2337,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2286,
											"end": 2337,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2274,
											"end": 2276,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2259,
											"end": 2277,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1103,
											"end": 1197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2140,
											"end": 2343,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1006,
											"end": 1093,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1006,
											"end": 1093,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1059,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1079,
											"end": 1085,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1079,
											"end": 1085,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1006,
											"end": 1093,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1006,
											"end": 1093,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1576,
											"end": 1672,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1576,
											"end": 1672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1576,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1576,
											"end": 1672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 5724,
											"end": 5854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 5724,
											"end": 5854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 5123,
											"end": 5506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5123,
											"end": 5506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2229,
											"end": 2428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2229,
											"end": 2428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2490,
											"end": 2674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2607,
											"end": 2614,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2650,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1906,
											"end": 2098,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1906,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1906,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1906,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1906,
											"end": 2098,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1906,
											"end": 2098,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1906,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1906,
											"end": 2098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1906,
											"end": 2098,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1906,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1906,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1906,
											"end": 2098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1306,
											"end": 1319,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1339,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1332,
											"end": 1344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1332,
											"end": 1344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 2926,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2944,
											"end": 2983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 682,
											"end": 692,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2967,
											"end": 2974,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2976,
											"end": 2982,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2944,
											"end": 2952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2944,
											"end": 2983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2944,
											"end": 2983,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2944,
											"end": 2983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3001,
											"end": 3005,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3616,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3633,
											"end": 3669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3643,
											"end": 3649,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3651,
											"end": 3660,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3662,
											"end": 3668,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3633,
											"end": 3642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3633,
											"end": 3669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3633,
											"end": 3669,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3633,
											"end": 3669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3703,
											"end": 3709,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 682,
											"end": 692,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 3807,
											"end": 3813,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "PUSH data",
											"source": 0,
											"value": "4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E"
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3762,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 682,
											"end": 692,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3751,
											"end": 3784,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3784,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3784,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3784,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3784,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3784,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3784,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 3751,
											"end": 3889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3680,
											"end": 3900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3900,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3680,
											"end": 3900,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3918,
											"end": 3922,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3484,
											"end": 3930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 682,
											"end": 692,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4436,
											"end": 4440,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4530,
											"end": 4555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4555,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4541,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4530,
											"end": 4555,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4530,
											"end": 4555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4555,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4555,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4530,
											"end": 4555,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4555,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4555,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4530,
											"end": 4564,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4564,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4564,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4564,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4564,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4564,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4564,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4564,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 4440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 4440,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4458,
											"end": 4591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 4458,
											"end": 4591,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4515,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 4530,
											"end": 4580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4569,
											"end": 4579,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 4530,
											"end": 4580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1657,
											"end": 1751,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1657,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1059,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1079,
											"end": 1085,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1079,
											"end": 1085,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 682,
											"end": 692,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1249,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 1218,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1722,
											"end": 1743,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 1740,
											"end": 1741,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1722,
											"end": 1731,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 1722,
											"end": 1743,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1722,
											"end": 1743,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 1722,
											"end": 1743,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1657,
											"end": 1751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1576,
											"end": 1672,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1576,
											"end": 1672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1624,
											"end": 1637,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1657,
											"end": 1664,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1650,
											"end": 1664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5780,
											"end": 5784,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1079,
											"end": 1085,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1079,
											"end": 1085,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1079,
											"end": 1085,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 682,
											"end": 692,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1249,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 1218,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5797,
											"end": 5824,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 682,
											"end": 692,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5817,
											"end": 5823,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5797,
											"end": 5802,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 5797,
											"end": 5824,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5797,
											"end": 5824,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 5797,
											"end": 5824,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5842,
											"end": 5846,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1297,
											"end": 1298,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 1297,
											"end": 1298,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5724,
											"end": 5854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5226,
											"end": 5230,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5248,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 682,
											"end": 692,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5305,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 5377,
											"end": 5392,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "PUSH data",
											"source": 0,
											"value": "B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22"
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 682,
											"end": 692,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5320,
											"end": 5345,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5320,
											"end": 5345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5345,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5345,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5331,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5320,
											"end": 5345,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5320,
											"end": 5345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5345,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5345,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5345,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5320,
											"end": 5345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5345,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5345,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5320,
											"end": 5354,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5354,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5354,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5354,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5354,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5354,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5354,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5354,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5354,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 5320,
											"end": 5465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2338,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2356,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 682,
											"end": 692,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2380,
											"end": 2389,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2391,
											"end": 2397,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2356,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2356,
											"end": 2398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1906,
											"end": 2098,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1906,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1059,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1079,
											"end": 1085,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1079,
											"end": 1085,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 682,
											"end": 692,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1249,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 1218,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1995,
											"end": 2017,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1995,
											"end": 2017,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1987,
											"end": 2060,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 1987,
											"end": 2060,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1987,
											"end": 2060,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1987,
											"end": 2060,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1987,
											"end": 2060,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1987,
											"end": 2060,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3746,
											"end": 3748,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1987,
											"end": 2060,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1987,
											"end": 2060,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1987,
											"end": 2060,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3728,
											"end": 3749,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3785,
											"end": 3787,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 3765,
											"end": 3783,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3765,
											"end": 3783,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3765,
											"end": 3783,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3758,
											"end": 3788,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3824,
											"end": 3858,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 3804,
											"end": 3822,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3804,
											"end": 3822,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3804,
											"end": 3822,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3797,
											"end": 3859,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3875,
											"end": 3893,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3875,
											"end": 3893,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3875,
											"end": 3893,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3868,
											"end": 3904,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3921,
											"end": 3940,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 3921,
											"end": 3940,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1987,
											"end": 2060,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 3544,
											"end": 3946,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1987,
											"end": 2060,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 1987,
											"end": 2060,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2071,
											"end": 2090,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 2081,
											"end": 2089,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2071,
											"end": 2080,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 2071,
											"end": 2090,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2071,
											"end": 2090,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 2071,
											"end": 2090,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1906,
											"end": 2098,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1906,
											"end": 2098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8632,
											"end": 9004,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 8632,
											"end": 9004,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8760,
											"end": 8779,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8760,
											"end": 8779,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4153,
											"end": 4155,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4135,
											"end": 4156,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4192,
											"end": 4194,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4172,
											"end": 4190,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4172,
											"end": 4190,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4172,
											"end": 4190,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4165,
											"end": 4195,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4231,
											"end": 4265,
											"name": "PUSH",
											"source": 8,
											"value": "42455032303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 4211,
											"end": 4229,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4211,
											"end": 4229,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4211,
											"end": 4229,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4204,
											"end": 4266,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4282,
											"end": 4300,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4282,
											"end": 4300,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4282,
											"end": 4300,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4275,
											"end": 4309,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4326,
											"end": 4345,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 4326,
											"end": 4345,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 3951,
											"end": 4351,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8839,
											"end": 8860,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8839,
											"end": 8860,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 8831,
											"end": 8899,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8899,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8831,
											"end": 8899,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8831,
											"end": 8899,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8899,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4558,
											"end": 4560,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8831,
											"end": 8899,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8831,
											"end": 8899,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4540,
											"end": 4561,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4597,
											"end": 4599,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 4577,
											"end": 4595,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4577,
											"end": 4595,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4577,
											"end": 4595,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4570,
											"end": 4600,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4636,
											"end": 4670,
											"name": "PUSH",
											"source": 8,
											"value": "42455032303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4616,
											"end": 4634,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4616,
											"end": 4634,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4616,
											"end": 4634,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4609,
											"end": 4671,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4687,
											"end": 4705,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4687,
											"end": 4705,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4687,
											"end": 4705,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4680,
											"end": 4712,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4729,
											"end": 4748,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 4729,
											"end": 4748,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8831,
											"end": 8899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 4356,
											"end": 4754,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8831,
											"end": 8899,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 8831,
											"end": 8899,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8912,
											"end": 8930,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8930,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8930,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8912,
											"end": 8930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8930,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8923,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8912,
											"end": 8930,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8912,
											"end": 8930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8930,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8912,
											"end": 8930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8930,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8930,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8939,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8939,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8939,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8939,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8939,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8939,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8939,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8939,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8939,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8939,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8939,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8948,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8948,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8964,
											"end": 8996,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8964,
											"end": 8996,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8964,
											"end": 8996,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 8964,
											"end": 8996,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8964,
											"end": 8996,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 8964,
											"end": 8996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8964,
											"end": 8996,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8964,
											"end": 8996,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8964,
											"end": 8996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8964,
											"end": 8996,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8964,
											"end": 8996,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8964,
											"end": 8996,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8964,
											"end": 8996,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 8632,
											"end": 9004,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8632,
											"end": 9004,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8632,
											"end": 9004,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8632,
											"end": 9004,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6344,
											"end": 6886,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 6344,
											"end": 6886,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6476,
											"end": 6496,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6496,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6468,
											"end": 6538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 6468,
											"end": 6538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6468,
											"end": 6538,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6468,
											"end": 6538,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6468,
											"end": 6538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6468,
											"end": 6538,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4961,
											"end": 4963,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6468,
											"end": 6538,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6468,
											"end": 6538,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6468,
											"end": 6538,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4943,
											"end": 4964,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5000,
											"end": 5002,
											"name": "PUSH",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 4980,
											"end": 4998,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4980,
											"end": 4998,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4980,
											"end": 4998,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4973,
											"end": 5003,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5039,
											"end": 5073,
											"name": "PUSH",
											"source": 8,
											"value": "42455032303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 5019,
											"end": 5037,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 5019,
											"end": 5037,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5019,
											"end": 5037,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5012,
											"end": 5074,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5090,
											"end": 5108,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5090,
											"end": 5108,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5090,
											"end": 5108,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5083,
											"end": 5118,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5135,
											"end": 5154,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 5135,
											"end": 5154,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6468,
											"end": 6538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 4759,
											"end": 5160,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6468,
											"end": 6538,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 6468,
											"end": 6538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6557,
											"end": 6580,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6557,
											"end": 6580,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 6549,
											"end": 6620,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6620,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6549,
											"end": 6620,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6549,
											"end": 6620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6620,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5367,
											"end": 5369,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6549,
											"end": 6620,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6549,
											"end": 6620,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5349,
											"end": 5370,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5406,
											"end": 5408,
											"name": "PUSH",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 5386,
											"end": 5404,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5386,
											"end": 5404,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5386,
											"end": 5404,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5379,
											"end": 5409,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5445,
											"end": 5479,
											"name": "PUSH",
											"source": 8,
											"value": "42455032303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5425,
											"end": 5443,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 5425,
											"end": 5443,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5425,
											"end": 5443,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5418,
											"end": 5480,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5496,
											"end": 5514,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5496,
											"end": 5514,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5496,
											"end": 5514,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5489,
											"end": 5522,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5539,
											"end": 5558,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 5539,
											"end": 5558,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6549,
											"end": 6620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 5165,
											"end": 5564,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6549,
											"end": 6620,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 6549,
											"end": 6620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 6689,
											"end": 6695,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "PUSH data",
											"source": 0,
											"value": "A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73"
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6653,
											"end": 6670,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6670,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6670,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6653,
											"end": 6670,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6670,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6670,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6662,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6653,
											"end": 6670,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6653,
											"end": 6670,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6670,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6653,
											"end": 6670,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6670,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6670,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6670,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 6653,
											"end": 6761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6633,
											"end": 6650,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6633,
											"end": 6650,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6633,
											"end": 6650,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6633,
											"end": 6650,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6633,
											"end": 6650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6633,
											"end": 6650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6633,
											"end": 6650,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6633,
											"end": 6642,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6633,
											"end": 6650,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6633,
											"end": 6650,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6633,
											"end": 6650,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6633,
											"end": 6650,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6633,
											"end": 6650,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6633,
											"end": 6650,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6633,
											"end": 6761,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6633,
											"end": 6761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6633,
											"end": 6761,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6633,
											"end": 6761,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6815,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6815,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6815,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6815,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 6795,
											"end": 6827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6820,
											"end": 6826,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 6795,
											"end": 6827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6827,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 6795,
											"end": 6827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6772,
											"end": 6792,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6792,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6792,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6792,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6772,
											"end": 6792,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6792,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6792,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6781,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6772,
											"end": 6792,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6772,
											"end": 6792,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6792,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6772,
											"end": 6792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6792,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6792,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6827,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6827,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6827,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6871,
											"end": 6877,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5042,
											"end": 5282,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 5042,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5162,
											"end": 5169,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5223,
											"end": 5235,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5215,
											"end": 5221,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5215,
											"end": 5221,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5215,
											"end": 5221,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5215,
											"end": 5221,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5207,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 5207,
											"end": 5236,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5207,
											"end": 5236,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5207,
											"end": 5236,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5207,
											"end": 5236,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5207,
											"end": 5236,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5207,
											"end": 5236,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5207,
											"end": 5236,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5207,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 5207,
											"end": 5236,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5207,
											"end": 5236,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5207,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 5207,
											"end": 5236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5207,
											"end": 5236,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 5207,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5258,
											"end": 5263,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5258,
											"end": 5263,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5258,
											"end": 5263,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5042,
											"end": 5282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2763,
											"end": 2861,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 2763,
											"end": 2861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2821,
											"end": 2828,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2848,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 2852,
											"end": 2853,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2848,
											"end": 2849,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2848,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 2848,
											"end": 2853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2848,
											"end": 2853,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 2848,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2841,
											"end": 2853,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2763,
											"end": 2861,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2763,
											"end": 2861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2106,
											"end": 2279,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 2106,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2178,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2181,
											"end": 2187,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2187,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2198,
											"end": 2215,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2198,
											"end": 2215,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2198,
											"end": 2215,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2198,
											"end": 2215,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2198,
											"end": 2215,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2198,
											"end": 2215,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2198,
											"end": 2215,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2198,
											"end": 2215,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2198,
											"end": 2215,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2231,
											"end": 2271,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2231,
											"end": 2271,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2187,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2187,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2187,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2187,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2187,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2187,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2187,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2231,
											"end": 2271,
											"name": "PUSH",
											"source": 3,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2231,
											"end": 2271,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2178,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2231,
											"end": 2271,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 2151,
											"end": 2279,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2106,
											"end": 2279,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2106,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7167,
											"end": 7475,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 7167,
											"end": 7475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7243,
											"end": 7264,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7264,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7235,
											"end": 7300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 7235,
											"end": 7300,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7235,
											"end": 7300,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7235,
											"end": 7300,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7235,
											"end": 7300,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7235,
											"end": 7300,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6001,
											"end": 6003,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7235,
											"end": 7300,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7235,
											"end": 7300,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7235,
											"end": 7300,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5983,
											"end": 6004,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6040,
											"end": 6042,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 6020,
											"end": 6038,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6020,
											"end": 6038,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6020,
											"end": 6038,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6013,
											"end": 6043,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6079,
											"end": 6112,
											"name": "PUSH",
											"source": 8,
											"value": "42455032303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 6059,
											"end": 6077,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 6059,
											"end": 6077,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6059,
											"end": 6077,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6052,
											"end": 6113,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6130,
											"end": 6148,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 6130,
											"end": 6148,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7235,
											"end": 7300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 5799,
											"end": 6154,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7235,
											"end": 7300,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 7235,
											"end": 7300,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7328,
											"end": 7340,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7328,
											"end": 7340,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7328,
											"end": 7352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 7328,
											"end": 7352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7345,
											"end": 7351,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7328,
											"end": 7344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 7328,
											"end": 7352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7328,
											"end": 7352,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 7328,
											"end": 7352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7313,
											"end": 7325,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7313,
											"end": 7352,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7384,
											"end": 7402,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7402,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7384,
											"end": 7402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7393,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7384,
											"end": 7402,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7384,
											"end": 7402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7402,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7384,
											"end": 7402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7402,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7402,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 7384,
											"end": 7414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7407,
											"end": 7413,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 7384,
											"end": 7414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7414,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 7384,
											"end": 7414,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7363,
											"end": 7381,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7381,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7381,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7363,
											"end": 7381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7381,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7372,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7363,
											"end": 7381,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7363,
											"end": 7381,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7381,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7363,
											"end": 7381,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7381,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7381,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7414,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7414,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7414,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 7467,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 7467,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7381,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 7467,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7430,
											"end": 7467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 7467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 7430,
											"end": 7467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7460,
											"end": 7466,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7430,
											"end": 7467,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 7430,
											"end": 7467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 7467,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7430,
											"end": 7467,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 7467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 7467,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 7467,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 7467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 7467,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 7167,
											"end": 7475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7167,
											"end": 7475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7167,
											"end": 7475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 611,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 452,
											"end": 458,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 449,
											"end": 450,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 446,
											"end": 459,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 443,
											"end": 534,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 443,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 522,
											"end": 523,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 514,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 497,
											"end": 506,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 493,
											"end": 515,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 489,
											"end": 520,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 482,
											"end": 524,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 443,
											"end": 534,
											"name": "tag",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 595,
											"end": 597,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 574,
											"end": 589,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 570,
											"end": 599,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 555,
											"end": 600,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 602,
											"end": 604,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 551,
											"end": 605,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 14,
											"end": 611,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 616,
											"end": 789,
											"name": "tag",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 616,
											"end": 789,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 684,
											"end": 704,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 684,
											"end": 704,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 733,
											"end": 764,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 733,
											"end": 764,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 723,
											"end": 765,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 723,
											"end": 765,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 713,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 776,
											"end": 777,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 769,
											"end": 781,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 862,
											"end": 868,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 870,
											"end": 876,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 923,
											"end": 925,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 911,
											"end": 920,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 902,
											"end": 909,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 898,
											"end": 921,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 894,
											"end": 926,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 891,
											"end": 943,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 891,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 939,
											"end": 940,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 937,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 929,
											"end": 941,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 891,
											"end": 943,
											"name": "tag",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 981,
											"end": 990,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 962,
											"end": 991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 962,
											"end": 991,
											"name": "tag",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 952,
											"end": 991,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 1038,
											"end": 1040,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 794,
											"end": 1048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1518,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1526,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1561,
											"end": 1570,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1559,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1548,
											"end": 1571,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1544,
											"end": 1576,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1590,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1587,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1579,
											"end": 1591,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "tag",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 1631,
											"end": 1640,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 1612,
											"end": 1641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "tag",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 1694,
											"end": 1696,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1683,
											"end": 1692,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1679,
											"end": 1697,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 1660,
											"end": 1698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "tag",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1747,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1734,
											"end": 1743,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1730,
											"end": 1748,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1717,
											"end": 1749,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1427,
											"end": 1755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2014,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2063,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2049,
											"end": 2058,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2040,
											"end": 2047,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2059,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2032,
											"end": 2064,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2077,
											"end": 2078,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2075,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2067,
											"end": 2079,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "tag",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 2119,
											"end": 2128,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 2100,
											"end": 2129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2348,
											"end": 2528,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 2348,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2413,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2460,
											"end": 2462,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2457,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2439,
											"end": 2446,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2435,
											"end": 2458,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2431,
											"end": 2463,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2428,
											"end": 2480,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2428,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 2428,
											"end": 2480,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2476,
											"end": 2477,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2473,
											"end": 2474,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2466,
											"end": 2478,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2428,
											"end": 2480,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 2428,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2499,
											"end": 2522,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2522,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2348,
											"end": 2528,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2348,
											"end": 2528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2533,
											"end": 2793,
											"name": "tag",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 2533,
											"end": 2793,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2601,
											"end": 2607,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2615,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2662,
											"end": 2664,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2650,
											"end": 2659,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2641,
											"end": 2648,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2637,
											"end": 2660,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2633,
											"end": 2665,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2682,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2682,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 2630,
											"end": 2682,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2678,
											"end": 2679,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2675,
											"end": 2676,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2668,
											"end": 2680,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2682,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 2630,
											"end": 2682,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 2720,
											"end": 2729,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 2701,
											"end": 2730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2730,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 2701,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2691,
											"end": 2730,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2691,
											"end": 2730,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2749,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 2783,
											"end": 2785,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2772,
											"end": 2781,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2786,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2749,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 2749,
											"end": 2787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2749,
											"end": 2787,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 2749,
											"end": 2787,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2739,
											"end": 2787,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2739,
											"end": 2787,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2533,
											"end": 2793,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2533,
											"end": 2793,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2533,
											"end": 2793,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2533,
											"end": 2793,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2533,
											"end": 2793,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2533,
											"end": 2793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 3178,
											"name": "tag",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 2798,
											"end": 3178,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2877,
											"end": 2878,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2873,
											"end": 2885,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2873,
											"end": 2885,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2873,
											"end": 2885,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 2873,
											"end": 2885,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2920,
											"end": 2932,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2920,
											"end": 2932,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2920,
											"end": 2932,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2941,
											"end": 3002,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 2941,
											"end": 3002,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2995,
											"end": 2999,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 2987,
											"end": 2993,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3000,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2973,
											"end": 3000,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2973,
											"end": 3000,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2941,
											"end": 3002,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 2941,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3048,
											"end": 3050,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3040,
											"end": 3046,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3051,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3017,
											"end": 3035,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3014,
											"end": 3052,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3011,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 3011,
											"end": 3172,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3094,
											"end": 3104,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 3089,
											"end": 3092,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 3085,
											"end": 3105,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 3082,
											"end": 3083,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3106,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3129,
											"end": 3133,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 3126,
											"end": 3127,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3119,
											"end": 3134,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3157,
											"end": 3161,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3154,
											"end": 3155,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3147,
											"end": 3162,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3011,
											"end": 3172,
											"name": "tag",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 3011,
											"end": 3172,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3011,
											"end": 3172,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 3178,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 3178,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 3178,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 3178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3183,
											"end": 3539,
											"name": "tag",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 3183,
											"end": 3539,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3385,
											"end": 3387,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3367,
											"end": 3388,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3367,
											"end": 3388,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3367,
											"end": 3388,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3404,
											"end": 3422,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3404,
											"end": 3422,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3404,
											"end": 3422,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3397,
											"end": 3427,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3497,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 3458,
											"end": 3460,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3443,
											"end": 3461,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3443,
											"end": 3461,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3436,
											"end": 3498,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3530,
											"end": 3532,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3515,
											"end": 3533,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3515,
											"end": 3533,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3183,
											"end": 3539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5569,
											"end": 5794,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 5569,
											"end": 5794,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5609,
											"end": 5612,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5640,
											"end": 5641,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5636,
											"end": 5642,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 5633,
											"end": 5634,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5630,
											"end": 5643,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5627,
											"end": 5763,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5627,
											"end": 5763,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 5627,
											"end": 5763,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5685,
											"end": 5695,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 5680,
											"end": 5683,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 5676,
											"end": 5696,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 5673,
											"end": 5674,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5666,
											"end": 5697,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5720,
											"end": 5724,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 5717,
											"end": 5718,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5710,
											"end": 5725,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5748,
											"end": 5752,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5745,
											"end": 5746,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5738,
											"end": 5753,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5627,
											"end": 5763,
											"name": "tag",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 5627,
											"end": 5763,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5779,
											"end": 5788,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5779,
											"end": 5788,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5569,
											"end": 5794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									],
									".data": {
										"4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							},
							"sourceList": [
								"contracts/BEP20.sol",
								"contracts/IBEP20.sol",
								"contracts/LandbaseToken.sol",
								"contracts/access/Ownable.sol",
								"contracts/libraries/SafeMath.sol",
								"contracts/structs/EnumerableSet.sol",
								"contracts/utils/Address.sol",
								"contracts/utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getOwner()": "893d20e8",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {BEP20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {BEP20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {BEP20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(uint256)\":{\"details\":\"Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply. Requirements - `msg.sender` must be the token owner\"},\"name()\":{\"details\":\"Returns the token name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"See {BEP20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BEP20.sol\":\"BEP20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BEP20.sol\":{\"keccak256\":\"0x325eb627eb1acb2bf55f0836f9f460261fa4b408d04878df038260201b5d9c95\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://774f25742454ecfd4342eb5128ddf5d241e76982981629334b740b1eb69b3404\",\"dweb:/ipfs/QmdnBm7kHAN3wauyv5JrByt1yuehBUeiV5e9dw6QNwQ48S\"]},\"contracts/IBEP20.sol\":{\"keccak256\":\"0x08dc42fc8715fc0cee50f6d2fcd29a657d23f6144968197f865e5c0f94028ec8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://79c1cb76e371cbb5adf34470dfea7fc66ca48a43b29ad3f136eee6f900e6cee3\",\"dweb:/ipfs/QmQBf7YZ4LpKpp1yQcxsAzrdHzuAbmn2cf8qb9ky5WNp2D\"]},\"contracts/access/Ownable.sol\":{\"keccak256\":\"0xe3b365539b1e8a4a0dace6efed1c6364d3c3cb8b260b8717a7524ad6c5d20e86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://567953dca5bb4fbd23e93733d29b58232370935eb9c9dad09b4a8513c383ec62\",\"dweb:/ipfs/QmNwVwQwC8HZ5oL9g8QypjNwwYxRUxqp8hgfcdMdHpnFPR\"]},\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0xdf297ae5498c5a335398fac67c7dcb4479f2a0954c881ece4338637b44942a58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58c779928cd68ac59867d57bea855016f4d06e47c2d693a60230aa5bbf0acec1\",\"dweb:/ipfs/QmPWYTn5eNUUGiyCm3EJx4mEQPRh9baePiQ1oztr4bTLhr\"]},\"contracts/utils/Address.sol\":{\"keccak256\":\"0x626b62cca5971be750732929d782b30e1277e36dd6b4ec2a90ddbbb61c650066\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07c78b7f7894e0444db2c6c4c73e4eddb78beed6bd65cd6089e2e9434bea83b0\",\"dweb:/ipfs/QmczQU7ihPMBhAmUM9MxnumRWwwvnTiDMDHp3nJSgYXQim\"]},\"contracts/utils/Context.sol\":{\"keccak256\":\"0x851c3d8e30ea37c35947f620812e2e18718ac9312ef8d84b643fc46d94269540\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c02fec97a236e7eda6646bb8aef30a00f134710ffc29f1965c27dc257cc58a3\",\"dweb:/ipfs/QmNoqNHYS9HP9u8J3bG5kVztMNcQ42kYiiiKDN8tY94gvY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1400,
								"contract": "contracts/BEP20.sol:BEP20",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 19,
								"contract": "contracts/BEP20.sol:BEP20",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 25,
								"contract": "contracts/BEP20.sol:BEP20",
								"label": "_allowances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 27,
								"contract": "contracts/BEP20.sol:BEP20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 29,
								"contract": "contracts/BEP20.sol:BEP20",
								"label": "_decimals",
								"offset": 0,
								"slot": "4",
								"type": "t_uint8"
							},
							{
								"astId": 31,
								"contract": "contracts/BEP20.sol:BEP20",
								"label": "_symbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 33,
								"contract": "contracts/BEP20.sol:BEP20",
								"label": "_name",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IBEP20.sol": {
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IBEP20.sol\":\"IBEP20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IBEP20.sol\":{\"keccak256\":\"0x08dc42fc8715fc0cee50f6d2fcd29a657d23f6144968197f865e5c0f94028ec8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://79c1cb76e371cbb5adf34470dfea7fc66ca48a43b29ad3f136eee6f900e6cee3\",\"dweb:/ipfs/QmQBf7YZ4LpKpp1yQcxsAzrdHzuAbmn2cf8qb9ky5WNp2D\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/LandbaseToken.sol": {
				"LandbaseToken": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "delegator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "fromDelegate",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "toDelegate",
									"type": "address"
								}
							],
							"name": "DelegateChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "previousBalance",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newBalance",
									"type": "uint256"
								}
							],
							"name": "DelegateVotesChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DELEGATION_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DOMAIN_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addMinter",
									"type": "address"
								}
							],
							"name": "addMinter",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"name": "checkpoints",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "fromBlock",
									"type": "uint32"
								},
								{
									"internalType": "uint256",
									"name": "votes",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_delMinter",
									"type": "address"
								}
							],
							"name": "delMinter",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatee",
									"type": "address"
								}
							],
							"name": "delegate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatee",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "expiry",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "delegateBySig",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegator",
									"type": "address"
								}
							],
							"name": "delegates",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getCurrentVotes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								}
							],
							"name": "getMinter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMinterLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								}
							],
							"name": "getPriorVotes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isMinter",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "numCheckpoints",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {BEP20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {BEP20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {BEP20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"delegate(address)": {
								"params": {
									"delegatee": "The address to delegate votes to"
								}
							},
							"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"params": {
									"delegatee": "The address to delegate votes to",
									"expiry": "The time at which to expire the signature",
									"nonce": "The contract state required to match the signature",
									"r": "Half of the ECDSA signature pair",
									"s": "Half of the ECDSA signature pair",
									"v": "The recovery byte of the signature"
								}
							},
							"delegates(address)": {
								"params": {
									"delegator": "The address to get delegatee for"
								}
							},
							"getCurrentVotes(address)": {
								"params": {
									"account": "The address to get votes balance"
								},
								"returns": {
									"_0": "The number of current votes for `account`"
								}
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"getPriorVotes(address,uint256)": {
								"details": "Block number must be a finalized block or else this function will revert to prevent misinformation.",
								"params": {
									"account": "The address of the account to check",
									"blockNumber": "The block number to get the vote balance at"
								},
								"returns": {
									"_0": "The number of votes the account had as of the given block"
								}
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"mint(uint256)": {
								"details": "Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply. Requirements - `msg.sender` must be the token owner"
							},
							"name()": {
								"details": "Returns the token name."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "See {BEP20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LandbaseToken.sol\":166:10436  contract LandbaseToken is BEP20(\"Landbase Coin\", \"LBC\") {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/BEP20.sol\":878:1035  constructor(string memory tokenName, string memory tokenSymbol) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0d\n  dup2\n  mstore\n  0x20\n  add\n  shl(0x99, 0x2630b7323130b9b29021b7b4b7)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe8, 0x4c4243)\n  dup2\n  mstore\n  pop\n    /* \"contracts/access/Ownable.sol\":894:917  _setOwner(_msgSender()) */\n  tag_5\n    /* \"contracts/access/Ownable.sol\":904:916  _msgSender() */\n  tag_6\n    /* \"contracts/access/Ownable.sol\":904:914  _msgSender */\n  shl(0x20, tag_7)\n    /* \"contracts/access/Ownable.sol\":904:916  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"contracts/access/Ownable.sol\":894:903  _setOwner */\n  tag_8\n    /* \"contracts/access/Ownable.sol\":894:917  _setOwner(_msgSender()) */\n  jump\t// in\ntag_5:\n    /* \"contracts/BEP20.sol\":953:970  _name = tokenName */\n  dup2\n  mload\n  tag_10\n  swap1\n    /* \"contracts/BEP20.sol\":953:958  _name */\n  0x06\n  swap1\n    /* \"contracts/BEP20.sol\":953:970  _name = tokenName */\n  0x20\n  dup6\n  add\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"contracts/BEP20.sol\":981:1002  _symbol = tokenSymbol */\n  dup1\n  mload\n  tag_12\n  swap1\n    /* \"contracts/BEP20.sol\":981:988  _symbol */\n  0x05\n  swap1\n    /* \"contracts/BEP20.sol\":981:1002  _symbol = tokenSymbol */\n  0x20\n  dup5\n  add\n  swap1\n  tag_11\n  jump\t// in\ntag_12:\n  pop\n  pop\n    /* \"contracts/BEP20.sol\":1013:1022  _decimals */\n  0x04\n    /* \"contracts/BEP20.sol\":1013:1027  _decimals = 18 */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"contracts/BEP20.sol\":1025:1027  18 */\n  0x12\n    /* \"contracts/BEP20.sol\":1013:1027  _decimals = 18 */\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/LandbaseToken.sol\":166:10436  contract LandbaseToken is BEP20(\"Landbase Coin\", \"LBC\") {... */\n  jump(tag_27)\n    /* \"contracts/utils/Context.sol\":602:700  function _msgSender() internal view virtual returns (address) {... */\ntag_7:\n    /* \"contracts/utils/Context.sol\":682:692  msg.sender */\n  caller\n  swap1\n    /* \"contracts/utils/Context.sol\":602:700  function _msgSender() internal view virtual returns (address) {... */\n  jump\t// out\n    /* \"contracts/access/Ownable.sol\":2106:2279  function _setOwner(address newOwner) private {... */\ntag_8:\n    /* \"contracts/access/Ownable.sol\":2162:2178  address oldOwner */\n  0x00\n    /* \"contracts/access/Ownable.sol\":2181:2187  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/access/Ownable.sol\":2198:2215  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"contracts/access/Ownable.sol\":2231:2271  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"contracts/access/Ownable.sol\":2181:2187  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"contracts/access/Ownable.sol\":2231:2271  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"contracts/access/Ownable.sol\":2162:2178  address oldOwner */\n  swap1\n    /* \"contracts/access/Ownable.sol\":2231:2271  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"contracts/access/Ownable.sol\":2151:2279  {... */\n  pop\n    /* \"contracts/access/Ownable.sol\":2106:2279  function _setOwner(address newOwner) private {... */\n  pop\n  jump\t// out\n    /* \"contracts/LandbaseToken.sol\":166:10436  contract LandbaseToken is BEP20(\"Landbase Coin\", \"LBC\") {... */\ntag_11:\n  dup3\n  dup1\n  sload\n  tag_16\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_19\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_22)\ntag_19:\n  dup3\n  0x1f\n  lt\n  tag_20\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_22)\ntag_20:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_22\n  jumpi\n  swap2\n  dup3\n  add\ntag_21:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_22\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_21)\ntag_22:\n  pop\n  tag_23\n  swap3\n  swap2\n  pop\n  tag_24\n  jump\t// in\ntag_23:\n  pop\n  swap1\n  jump\t// out\ntag_24:\ntag_25:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_23\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_25)\n    /* \"#utility.yul\":14:394   */\ntag_17:\n    /* \"#utility.yul\":93:94   */\n  0x01\n    /* \"#utility.yul\":89:101   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":136:148   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":157:218   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":211:215   */\n  0x7f\n    /* \"#utility.yul\":203:209   */\n  dup3\n    /* \"#utility.yul\":199:216   */\n  and\n    /* \"#utility.yul\":189:216   */\n  swap2\n  pop\n    /* \"#utility.yul\":157:218   */\ntag_29:\n    /* \"#utility.yul\":264:266   */\n  0x20\n    /* \"#utility.yul\":256:262   */\n  dup3\n    /* \"#utility.yul\":253:267   */\n  lt\n    /* \"#utility.yul\":233:251   */\n  dup2\n    /* \"#utility.yul\":230:268   */\n  sub\n    /* \"#utility.yul\":227:388   */\n  tag_30\n  jumpi\n    /* \"#utility.yul\":310:320   */\n  0x4e487b71\n    /* \"#utility.yul\":305:308   */\n  0xe0\n    /* \"#utility.yul\":301:321   */\n  shl\n    /* \"#utility.yul\":298:299   */\n  0x00\n    /* \"#utility.yul\":291:322   */\n  mstore\n    /* \"#utility.yul\":345:349   */\n  0x22\n    /* \"#utility.yul\":342:343   */\n  0x04\n    /* \"#utility.yul\":335:350   */\n  mstore\n    /* \"#utility.yul\":373:377   */\n  0x24\n    /* \"#utility.yul\":370:371   */\n  0x00\n    /* \"#utility.yul\":363:378   */\n  revert\n    /* \"#utility.yul\":227:388   */\ntag_30:\n  pop\n    /* \"#utility.yul\":14:394   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_27:\n    /* \"contracts/LandbaseToken.sol\":166:10436  contract LandbaseToken is BEP20(\"Landbase Coin\", \"LBC\") {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/LandbaseToken.sol\":166:10436  contract LandbaseToken is BEP20(\"Landbase Coin\", \"LBC\") {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x782d6fe1\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_36\n      jumpi\n      dup1\n      0xdd62ed3e\n      gt\n      tag_37\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xe7a324dc\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xf1127ed8\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0xa9059cbb\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xaa271e1a\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xb4b5ea57\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xc3cda520\n      eq\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup1\n      0x95d89b41\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x983b2d56\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0x782d6fe1\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x893d20e8\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0x39509351\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x5c19a95c\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x5c19a95c\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x6fcfff45\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      dup1\n      0x39509351\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x587cde1e\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x5b7121f8\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup1\n      0x20606b70\n      gt\n      tag_41\n      jumpi\n      dup1\n      0x20606b70\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23338b88\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      dup1\n      0x0323aac7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/LandbaseToken.sol\":9803:9916  function getMinterLength() public view returns (uint256) {... */\n    tag_3:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/LandbaseToken.sol\":9803:9916  function getMinterLength() public view returns (uint256) {... */\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20.sol\":1260:1352  function name() public view override returns (string memory) {... */\n    tag_4:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n        /* \"contracts/BEP20.sol\":2820:3013  function approve(address spender, uint256 amount)... */\n    tag_5:\n      tag_50\n      tag_51\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      mload(0x40)\n        /* \"#utility.yul\":1400:1414   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1393:1415   */\n      iszero\n        /* \"#utility.yul\":1375:1416   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1363:1365   */\n      0x20\n        /* \"#utility.yul\":1348:1366   */\n      add\n        /* \"contracts/BEP20.sol\":2820:3013  function approve(address spender, uint256 amount)... */\n      tag_44\n        /* \"#utility.yul\":1235:1422   */\n      jump\n        /* \"contracts/BEP20.sol\":1736:1836  function totalSupply() public view override returns (uint256) {... */\n    tag_6:\n        /* \"contracts/BEP20.sol\":1816:1828  _totalSupply */\n      sload(0x03)\n        /* \"contracts/BEP20.sol\":1736:1836  function totalSupply() public view override returns (uint256) {... */\n      jump(tag_42)\n        /* \"contracts/LandbaseToken.sol\":1309:1464  bytes32 public constant DOMAIN_TYPEHASH =... */\n    tag_7:\n      tag_42\n        /* \"contracts/LandbaseToken.sol\":1360:1464  keccak256(... */\n      0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866\n        /* \"contracts/LandbaseToken.sol\":1309:1464  bytes32 public constant DOMAIN_TYPEHASH =... */\n      dup2\n      jump\n        /* \"contracts/LandbaseToken.sol\":9531:9795  function delMinter(address _delMinter) public onlyOwner returns (bool) {... */\n    tag_8:\n      tag_50\n      tag_64\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n        /* \"contracts/BEP20.sol\":3484:3930  function transferFrom(... */\n    tag_9:\n      tag_50\n      tag_69\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n        /* \"contracts/BEP20.sol\":1419:1511  function decimals() public view override returns (uint8) {... */\n    tag_10:\n        /* \"contracts/BEP20.sol\":1494:1503  _decimals */\n      sload(0x04)\n        /* \"contracts/BEP20.sol\":1419:1511  function decimals() public view override returns (uint8) {... */\n      mload(0x40)\n        /* \"contracts/BEP20.sol\":1494:1503  _decimals */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2275:2311   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2263:2265   */\n      0x20\n        /* \"#utility.yul\":2248:2266   */\n      add\n        /* \"contracts/BEP20.sol\":1419:1511  function decimals() public view override returns (uint8) {... */\n      tag_44\n        /* \"#utility.yul\":2133:2317   */\n      jump\n        /* \"contracts/BEP20.sol\":4338:4621  function increaseAllowance(address spender, uint256 addedValue)... */\n    tag_11:\n      tag_50\n      tag_78\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n        /* \"contracts/LandbaseToken.sol\":467:699  function mint(address _to, uint256 _amount)... */\n    tag_12:\n      tag_50\n      tag_82\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n        /* \"contracts/LandbaseToken.sol\":2408:2525  function delegates(address delegator) external view returns (address) {... */\n    tag_13:\n      tag_85\n      tag_86\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_86:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LandbaseToken.sol\":2496:2517  _delegates[delegator] */\n      swap1\n      dup2\n      and\n        /* \"contracts/LandbaseToken.sol\":2469:2476  address */\n      0x00\n        /* \"contracts/LandbaseToken.sol\":2496:2517  _delegates[delegator] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/LandbaseToken.sol\":2496:2506  _delegates */\n      0x09\n        /* \"contracts/LandbaseToken.sol\":2496:2517  _delegates[delegator] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      and\n      swap1\n        /* \"contracts/LandbaseToken.sol\":2408:2525  function delegates(address delegator) external view returns (address) {... */\n      jump\n    tag_85:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2486:2518   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2468:2519   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2456:2458   */\n      0x20\n        /* \"#utility.yul\":2441:2459   */\n      add\n        /* \"contracts/LandbaseToken.sol\":2408:2525  function delegates(address delegator) external view returns (address) {... */\n      tag_44\n        /* \"#utility.yul\":2322:2525   */\n      jump\n        /* \"contracts/LandbaseToken.sol\":10061:10280  function getMinter(uint256 _index) public view onlyOwner returns (address) {... */\n    tag_14:\n      tag_85\n      tag_91\n      calldatasize\n      0x04\n      tag_92\n      jump\t// in\n    tag_91:\n      tag_93\n      jump\t// in\n        /* \"contracts/LandbaseToken.sol\":2673:2777  function delegate(address delegatee) external {... */\n    tag_15:\n      tag_95\n      tag_96\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n    tag_95:\n      stop\n        /* \"contracts/LandbaseToken.sol\":1188:1236  mapping(address => uint32) public numCheckpoints */\n    tag_16:\n      tag_98\n      tag_99\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_99:\n      mstore(0x20, 0x0b)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xffffffff\n      and\n      dup2\n      jump\n    tag_98:\n      mload(0x40)\n        /* \"#utility.yul\":2889:2899   */\n      0xffffffff\n        /* \"#utility.yul\":2877:2900   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2859:2901   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2847:2849   */\n      0x20\n        /* \"#utility.yul\":2832:2850   */\n      add\n        /* \"contracts/LandbaseToken.sol\":1188:1236  mapping(address => uint32) public numCheckpoints */\n      tag_44\n        /* \"#utility.yul\":2715:2907   */\n      jump\n        /* \"contracts/BEP20.sol\":1898:2017  function balanceOf(address account) public view override returns (uint256) {... */\n    tag_17:\n      tag_42\n      tag_104\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_104:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20.sol\":1991:2009  _balances[account] */\n      and\n        /* \"contracts/BEP20.sol\":1964:1971  uint256 */\n      0x00\n        /* \"contracts/BEP20.sol\":1991:2009  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/BEP20.sol\":1991:2000  _balances */\n      0x01\n        /* \"contracts/BEP20.sol\":1991:2009  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/BEP20.sol\":1898:2017  function balanceOf(address account) public view override returns (uint256) {... */\n      jump\n        /* \"contracts/access/Ownable.sol\":1657:1751  function renounceOwnership() public virtual onlyOwner {... */\n    tag_18:\n      tag_95\n      tag_108\n      jump\t// in\n        /* \"contracts/LandbaseToken.sol\":5235:6532  function getPriorVotes(address account, uint256 blockNumber)... */\n    tag_19:\n      tag_42\n      tag_110\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n        /* \"contracts/LandbaseToken.sol\":1765:1806  mapping(address => uint256) public nonces */\n    tag_20:\n      tag_42\n      tag_114\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_114:\n      mstore(0x20, 0x0c)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/BEP20.sol\":1103:1197  function getOwner() external view override returns (address) {... */\n    tag_21:\n        /* \"contracts/BEP20.sol\":1155:1162  address */\n      0x00\n        /* \"contracts/access/Ownable.sol\":1079:1085  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/BEP20.sol\":1103:1197  function getOwner() external view override returns (address) {... */\n      tag_85\n        /* \"contracts/LandbaseToken.sol\":9803:9916  function getMinterLength() public view returns (uint256) {... */\n      jump\n        /* \"contracts/BEP20.sol\":1576:1672  function symbol() public view override returns (string memory) {... */\n    tag_23:\n      tag_46\n      tag_124\n      jump\t// in\n        /* \"contracts/LandbaseToken.sol\":9262:9523  function addMinter(address _addMinter) public onlyOwner returns (bool) {... */\n    tag_24:\n      tag_50\n      tag_127\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_127:\n      tag_128\n      jump\t// in\n        /* \"contracts/BEP20.sol\":5724:5854  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n    tag_25:\n      tag_50\n      tag_131\n      calldatasize\n      0x04\n      tag_92\n      jump\t// in\n    tag_131:\n      tag_132\n      jump\t// in\n        /* \"contracts/BEP20.sol\":5123:5506  function decreaseAllowance(address spender, uint256 subtractedValue)... */\n    tag_26:\n      tag_50\n      tag_135\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_135:\n      tag_136\n      jump\t// in\n        /* \"contracts/BEP20.sol\":2229:2428  function transfer(address recipient, uint256 amount)... */\n    tag_27:\n      tag_50\n      tag_139\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_139:\n      tag_140\n      jump\t// in\n        /* \"contracts/LandbaseToken.sol\":9924:10053  function isMinter(address account) public view returns (bool) {... */\n    tag_28:\n      tag_50\n      tag_143\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_143:\n      tag_144\n      jump\t// in\n        /* \"contracts/LandbaseToken.sol\":4568:4804  function getCurrentVotes(address account) external view returns (uint256) {... */\n    tag_29:\n      tag_42\n      tag_147\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_147:\n      tag_148\n      jump\t// in\n        /* \"contracts/LandbaseToken.sol\":3211:4367  function delegateBySig(... */\n    tag_30:\n      tag_95\n      tag_151\n      calldatasize\n      0x04\n      tag_152\n      jump\t// in\n    tag_151:\n      tag_153\n      jump\t// in\n        /* \"contracts/BEP20.sol\":2490:2674  function allowance(address owner, address spender)... */\n    tag_31:\n      tag_42\n      tag_155\n      calldatasize\n      0x04\n      tag_156\n      jump\t// in\n    tag_155:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20.sol\":2639:2657  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/BEP20.sol\":2607:2614  uint256 */\n      0x00\n        /* \"contracts/BEP20.sol\":2639:2657  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/BEP20.sol\":2639:2650  _allowances */\n      0x02\n        /* \"contracts/BEP20.sol\":2639:2657  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/BEP20.sol\":2639:2666  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/BEP20.sol\":2490:2674  function allowance(address owner, address spender)... */\n      jump\n        /* \"contracts/LandbaseToken.sol\":1558:1684  bytes32 public constant DELEGATION_TYPEHASH =... */\n    tag_32:\n      tag_42\n        /* \"contracts/LandbaseToken.sol\":1613:1684  keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n      0xe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf\n        /* \"contracts/LandbaseToken.sol\":1558:1684  bytes32 public constant DELEGATION_TYPEHASH =... */\n      dup2\n      jump\n        /* \"contracts/LandbaseToken.sol\":1051:1119  mapping(address => mapping(uint32 => Checkpoint)) public checkpoints */\n    tag_33:\n      tag_162\n      tag_163\n      calldatasize\n      0x04\n      tag_164\n      jump\t// in\n    tag_163:\n      0x0a\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      swap1\n      swap2\n      add\n      sload\n      0xffffffff\n      swap1\n      swap2\n      and\n      swap1\n      dup3\n      jump\n    tag_162:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":4357:4367   */\n      0xffffffff\n        /* \"#utility.yul\":4345:4368   */\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":4327:4369   */\n      dup4\n      mstore\n        /* \"#utility.yul\":4400:4402   */\n      0x20\n        /* \"#utility.yul\":4385:4403   */\n      dup4\n      add\n        /* \"#utility.yul\":4378:4412   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":4300:4318   */\n      add\n        /* \"contracts/LandbaseToken.sol\":1051:1119  mapping(address => mapping(uint32 => Checkpoint)) public checkpoints */\n      tag_44\n        /* \"#utility.yul\":4155:4418   */\n      jump\n        /* \"contracts/access/Ownable.sol\":1906:2098  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_34:\n      tag_95\n      tag_169\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_169:\n      tag_170\n      jump\t// in\n        /* \"contracts/LandbaseToken.sol\":9803:9916  function getMinterLength() public view returns (uint256) {... */\n    tag_43:\n        /* \"contracts/LandbaseToken.sol\":9851:9858  uint256 */\n      0x00\n        /* \"contracts/LandbaseToken.sol\":9878:9908  EnumerableSet.length(_minters) */\n      tag_172\n        /* \"contracts/LandbaseToken.sol\":9899:9907  _minters */\n      0x07\n        /* \"contracts/LandbaseToken.sol\":9878:9898  EnumerableSet.length */\n      tag_173\n        /* \"contracts/LandbaseToken.sol\":9878:9908  EnumerableSet.length(_minters) */\n      jump\t// in\n    tag_172:\n        /* \"contracts/LandbaseToken.sol\":9871:9908  return EnumerableSet.length(_minters) */\n      swap1\n      pop\n        /* \"contracts/LandbaseToken.sol\":9803:9916  function getMinterLength() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/BEP20.sol\":1260:1352  function name() public view override returns (string memory) {... */\n    tag_47:\n        /* \"contracts/BEP20.sol\":1306:1319  string memory */\n      0x60\n        /* \"contracts/BEP20.sol\":1339:1344  _name */\n      0x06\n        /* \"contracts/BEP20.sol\":1332:1344  return _name */\n      dup1\n      sload\n      tag_175\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_177\n      swap1\n      tag_176\n      jump\t// in\n    tag_177:\n      dup1\n      iszero\n      tag_178\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_179\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_178)\n    tag_179:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_180:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_180\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_178:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/BEP20.sol\":1260:1352  function name() public view override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/BEP20.sol\":2820:3013  function approve(address spender, uint256 amount)... */\n    tag_53:\n        /* \"contracts/BEP20.sol\":2922:2926  bool */\n      0x00\n        /* \"contracts/BEP20.sol\":2944:2983  _approve(_msgSender(), spender, amount) */\n      tag_182\n        /* \"contracts/utils/Context.sol\":682:692  msg.sender */\n      caller\n        /* \"contracts/BEP20.sol\":2967:2974  spender */\n      dup5\n        /* \"contracts/BEP20.sol\":2976:2982  amount */\n      dup5\n        /* \"contracts/BEP20.sol\":2944:2952  _approve */\n      tag_185\n        /* \"contracts/BEP20.sol\":2944:2983  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_182:\n      pop\n        /* \"contracts/BEP20.sol\":3001:3005  true */\n      0x01\n        /* \"contracts/BEP20.sol\":2820:3013  function approve(address spender, uint256 amount)... */\n    tag_181:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LandbaseToken.sol\":9531:9795  function delMinter(address _delMinter) public onlyOwner returns (bool) {... */\n    tag_66:\n        /* \"contracts/LandbaseToken.sol\":9596:9600  bool */\n      0x00\n        /* \"contracts/access/Ownable.sol\":1079:1085  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/utils/Context.sol\":682:692  msg.sender */\n      caller\n        /* \"contracts/access/Ownable.sol\":1226:1249  owner() == _msgSender() */\n      eq\n        /* \"contracts/access/Ownable.sol\":1218:1286  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_190\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_190:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LandbaseToken.sol\":9635:9659  _delMinter != address(0) */\n      dup3\n      and\n        /* \"contracts/LandbaseToken.sol\":9613:9727  require(... */\n      tag_194\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5371:5373   */\n      0x20\n        /* \"contracts/LandbaseToken.sol\":9613:9727  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5353:5374   */\n      mstore\n        /* \"#utility.yul\":5410:5412   */\n      0x28\n        /* \"#utility.yul\":5390:5408   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5383:5413   */\n      mstore\n        /* \"#utility.yul\":5449:5483   */\n      0x4c414e44424153453a205f64656c4d696e74657220697320746865207a65726f\n        /* \"#utility.yul\":5429:5447   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5422:5484   */\n      mstore\n      shl(0xc0, 0x2061646472657373)\n        /* \"#utility.yul\":5500:5518   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5493:5531   */\n      mstore\n        /* \"#utility.yul\":5548:5567   */\n      0x84\n      add\n        /* \"contracts/LandbaseToken.sol\":9613:9727  require(... */\n      tag_191\n        /* \"#utility.yul\":5169:5573   */\n      jump\n        /* \"contracts/LandbaseToken.sol\":9613:9727  require(... */\n    tag_194:\n        /* \"contracts/LandbaseToken.sol\":9745:9787  EnumerableSet.remove(_minters, _delMinter) */\n      tag_197\n        /* \"contracts/LandbaseToken.sol\":9766:9774  _minters */\n      0x07\n        /* \"contracts/LandbaseToken.sol\":9776:9786  _delMinter */\n      dup4\n        /* \"contracts/LandbaseToken.sol\":9745:9765  EnumerableSet.remove */\n      tag_198\n        /* \"contracts/LandbaseToken.sol\":9745:9787  EnumerableSet.remove(_minters, _delMinter) */\n      jump\t// in\n    tag_197:\n        /* \"contracts/LandbaseToken.sol\":9738:9787  return EnumerableSet.remove(_minters, _delMinter) */\n      swap1\n      pop\n        /* \"contracts/access/Ownable.sol\":1297:1298  _ */\n    tag_193:\n        /* \"contracts/LandbaseToken.sol\":9531:9795  function delMinter(address _delMinter) public onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/BEP20.sol\":3484:3930  function transferFrom(... */\n    tag_71:\n        /* \"contracts/BEP20.sol\":3616:3620  bool */\n      0x00\n        /* \"contracts/BEP20.sol\":3633:3669  _transfer(sender, recipient, amount) */\n      tag_200\n        /* \"contracts/BEP20.sol\":3643:3649  sender */\n      dup5\n        /* \"contracts/BEP20.sol\":3651:3660  recipient */\n      dup5\n        /* \"contracts/BEP20.sol\":3662:3668  amount */\n      dup5\n        /* \"contracts/BEP20.sol\":3633:3642  _transfer */\n      tag_201\n        /* \"contracts/BEP20.sol\":3633:3669  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_200:\n        /* \"contracts/BEP20.sol\":3680:3900  _approve(... */\n      tag_202\n        /* \"contracts/BEP20.sol\":3703:3709  sender */\n      dup5\n        /* \"contracts/utils/Context.sol\":682:692  msg.sender */\n      caller\n        /* \"contracts/BEP20.sol\":3751:3889  _allowances[sender][_msgSender()].sub(... */\n      tag_204\n        /* \"contracts/BEP20.sol\":3807:3813  amount */\n      dup6\n        /* \"contracts/BEP20.sol\":3751:3889  _allowances[sender][_msgSender()].sub(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e\n      0x28\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20.sol\":3751:3770  _allowances[sender] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/BEP20.sol\":3751:3762  _allowances */\n      0x02\n        /* \"contracts/BEP20.sol\":3751:3770  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/utils/Context.sol\":682:692  msg.sender */\n      caller\n        /* \"contracts/BEP20.sol\":3751:3784  _allowances[sender][_msgSender()] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n      swap1\n        /* \"contracts/BEP20.sol\":3751:3788  _allowances[sender][_msgSender()].sub */\n      tag_206\n        /* \"contracts/BEP20.sol\":3751:3889  _allowances[sender][_msgSender()].sub(... */\n      jump\t// in\n    tag_204:\n        /* \"contracts/BEP20.sol\":3680:3688  _approve */\n      tag_185\n        /* \"contracts/BEP20.sol\":3680:3900  _approve(... */\n      jump\t// in\n    tag_202:\n      pop\n        /* \"contracts/BEP20.sol\":3918:3922  true */\n      0x01\n        /* \"contracts/BEP20.sol\":3484:3930  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP20.sol\":4338:4621  function increaseAllowance(address spender, uint256 addedValue)... */\n    tag_79:\n        /* \"contracts/utils/Context.sol\":682:692  msg.sender */\n      caller\n        /* \"contracts/BEP20.sol\":4436:4440  bool */\n      0x00\n        /* \"contracts/BEP20.sol\":4530:4555  _allowances[_msgSender()] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/BEP20.sol\":4530:4541  _allowances */\n      0x02\n        /* \"contracts/BEP20.sol\":4530:4555  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20.sol\":4530:4564  _allowances[_msgSender()][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"contracts/BEP20.sol\":4436:4440  bool */\n      swap1\n      swap2\n        /* \"contracts/BEP20.sol\":4458:4591  _approve(... */\n      tag_182\n      swap2\n        /* \"contracts/BEP20.sol\":4508:4515  spender */\n      dup6\n      swap1\n        /* \"contracts/BEP20.sol\":4530:4580  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_204\n      swap1\n        /* \"contracts/BEP20.sol\":4569:4579  addedValue */\n      dup7\n        /* \"contracts/BEP20.sol\":4530:4568  _allowances[_msgSender()][spender].add */\n      tag_213\n        /* \"contracts/BEP20.sol\":4530:4580  _allowances[_msgSender()][spender].add(addedValue) */\n      jump\t// in\n        /* \"contracts/LandbaseToken.sol\":467:699  function mint(address _to, uint256 _amount)... */\n    tag_83:\n        /* \"contracts/LandbaseToken.sol\":565:569  bool */\n      0x00\n        /* \"contracts/LandbaseToken.sol\":10364:10384  isMinter(msg.sender) */\n      tag_215\n        /* \"contracts/LandbaseToken.sol\":10373:10383  msg.sender */\n      caller\n        /* \"contracts/LandbaseToken.sol\":10364:10372  isMinter */\n      tag_144\n        /* \"contracts/LandbaseToken.sol\":10364:10384  isMinter(msg.sender) */\n      jump\t// in\n    tag_215:\n        /* \"contracts/LandbaseToken.sol\":10356:10413  require(isMinter(msg.sender), \"caller is not the minter\") */\n      tag_216\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5780:5782   */\n      0x20\n        /* \"contracts/LandbaseToken.sol\":10356:10413  require(isMinter(msg.sender), \"caller is not the minter\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5762:5783   */\n      mstore\n        /* \"#utility.yul\":5819:5821   */\n      0x18\n        /* \"#utility.yul\":5799:5817   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5792:5822   */\n      mstore\n        /* \"#utility.yul\":5858:5884   */\n      0x63616c6c6572206973206e6f7420746865206d696e7465720000000000000000\n        /* \"#utility.yul\":5838:5856   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5831:5885   */\n      mstore\n        /* \"#utility.yul\":5902:5920   */\n      0x64\n      add\n        /* \"contracts/LandbaseToken.sol\":10356:10413  require(isMinter(msg.sender), \"caller is not the minter\") */\n      tag_191\n        /* \"#utility.yul\":5578:5926   */\n      jump\n        /* \"contracts/LandbaseToken.sol\":10356:10413  require(isMinter(msg.sender), \"caller is not the minter\") */\n    tag_216:\n        /* \"contracts/LandbaseToken.sol\":587:606  _mint(_to, _amount) */\n      tag_220\n        /* \"contracts/LandbaseToken.sol\":593:596  _to */\n      dup4\n        /* \"contracts/LandbaseToken.sol\":598:605  _amount */\n      dup4\n        /* \"contracts/LandbaseToken.sol\":587:592  _mint */\n      tag_221\n        /* \"contracts/LandbaseToken.sol\":587:606  _mint(_to, _amount) */\n      jump\t// in\n    tag_220:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LandbaseToken.sol\":644:659  _delegates[_to] */\n      dup1\n      dup5\n      and\n        /* \"contracts/LandbaseToken.sol\":640:641  0 */\n      0x00\n        /* \"contracts/LandbaseToken.sol\":644:659  _delegates[_to] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/LandbaseToken.sol\":644:654  _delegates */\n      0x09\n        /* \"contracts/LandbaseToken.sol\":644:659  _delegates[_to] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/LandbaseToken.sol\":617:669  _moveDelegates(address(0), _delegates[_to], _amount) */\n      tag_182\n      swap3\n        /* \"contracts/LandbaseToken.sol\":644:659  _delegates[_to] */\n      and\n        /* \"contracts/LandbaseToken.sol\":661:668  _amount */\n      dup5\n        /* \"contracts/LandbaseToken.sol\":617:631  _moveDelegates */\n      tag_223\n        /* \"contracts/LandbaseToken.sol\":617:669  _moveDelegates(address(0), _delegates[_to], _amount) */\n      jump\t// in\n        /* \"contracts/LandbaseToken.sol\":10061:10280  function getMinter(uint256 _index) public view onlyOwner returns (address) {... */\n    tag_93:\n        /* \"contracts/LandbaseToken.sol\":10127:10134  address */\n      0x00\n        /* \"contracts/access/Ownable.sol\":1079:1085  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/utils/Context.sol\":682:692  msg.sender */\n      caller\n        /* \"contracts/access/Ownable.sol\":1226:1249  owner() == _msgSender() */\n      eq\n        /* \"contracts/access/Ownable.sol\":1218:1286  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_228\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_228:\n        /* \"contracts/LandbaseToken.sol\":10185:10186  1 */\n      0x01\n        /* \"contracts/LandbaseToken.sol\":10165:10182  getMinterLength() */\n      tag_231\n        /* \"contracts/LandbaseToken.sol\":10165:10180  getMinterLength */\n      tag_43\n        /* \"contracts/LandbaseToken.sol\":10165:10182  getMinterLength() */\n      jump\t// in\n    tag_231:\n        /* \"contracts/LandbaseToken.sol\":10165:10186  getMinterLength() - 1 */\n      tag_232\n      swap2\n      swap1\n      tag_233\n      jump\t// in\n    tag_232:\n        /* \"contracts/LandbaseToken.sol\":10155:10161  _index */\n      dup3\n        /* \"contracts/LandbaseToken.sol\":10155:10186  _index <= getMinterLength() - 1 */\n      gt\n      iszero\n        /* \"contracts/LandbaseToken.sol\":10147:10220  require(_index <= getMinterLength() - 1, \"LANDBASE: index out of bounds\") */\n      tag_234\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6395:6397   */\n      0x20\n        /* \"contracts/LandbaseToken.sol\":10147:10220  require(_index <= getMinterLength() - 1, \"LANDBASE: index out of bounds\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6377:6398   */\n      mstore\n        /* \"#utility.yul\":6434:6436   */\n      0x1d\n        /* \"#utility.yul\":6414:6432   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6407:6437   */\n      mstore\n        /* \"#utility.yul\":6473:6504   */\n      0x4c414e44424153453a20696e646578206f7574206f6620626f756e6473000000\n        /* \"#utility.yul\":6453:6471   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6446:6505   */\n      mstore\n        /* \"#utility.yul\":6522:6540   */\n      0x64\n      add\n        /* \"contracts/LandbaseToken.sol\":10147:10220  require(_index <= getMinterLength() - 1, \"LANDBASE: index out of bounds\") */\n      tag_191\n        /* \"#utility.yul\":6193:6546   */\n      jump\n        /* \"contracts/LandbaseToken.sol\":10147:10220  require(_index <= getMinterLength() - 1, \"LANDBASE: index out of bounds\") */\n    tag_234:\n        /* \"contracts/LandbaseToken.sol\":10238:10272  EnumerableSet.at(_minters, _index) */\n      tag_197\n        /* \"contracts/LandbaseToken.sol\":10255:10263  _minters */\n      0x07\n        /* \"contracts/LandbaseToken.sol\":10265:10271  _index */\n      dup4\n        /* \"contracts/LandbaseToken.sol\":10238:10254  EnumerableSet.at */\n      tag_238\n        /* \"contracts/LandbaseToken.sol\":10238:10272  EnumerableSet.at(_minters, _index) */\n      jump\t// in\n        /* \"contracts/LandbaseToken.sol\":2673:2777  function delegate(address delegatee) external {... */\n    tag_97:\n        /* \"contracts/LandbaseToken.sol\":2737:2769  _delegate(msg.sender, delegatee) */\n      tag_240\n        /* \"contracts/LandbaseToken.sol\":2747:2757  msg.sender */\n      caller\n        /* \"contracts/LandbaseToken.sol\":2759:2768  delegatee */\n      dup3\n        /* \"contracts/LandbaseToken.sol\":2737:2746  _delegate */\n      tag_241\n        /* \"contracts/LandbaseToken.sol\":2737:2769  _delegate(msg.sender, delegatee) */\n      jump\t// in\n    tag_240:\n        /* \"contracts/LandbaseToken.sol\":2673:2777  function delegate(address delegatee) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/access/Ownable.sol\":1657:1751  function renounceOwnership() public virtual onlyOwner {... */\n    tag_108:\n        /* \"contracts/access/Ownable.sol\":1052:1059  address */\n      0x00\n        /* \"contracts/access/Ownable.sol\":1079:1085  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/utils/Context.sol\":682:692  msg.sender */\n      caller\n        /* \"contracts/access/Ownable.sol\":1226:1249  owner() == _msgSender() */\n      eq\n        /* \"contracts/access/Ownable.sol\":1218:1286  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_246\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_246:\n        /* \"contracts/access/Ownable.sol\":1722:1743  _setOwner(address(0)) */\n      tag_249\n        /* \"contracts/access/Ownable.sol\":1740:1741  0 */\n      0x00\n        /* \"contracts/access/Ownable.sol\":1722:1731  _setOwner */\n      tag_250\n        /* \"contracts/access/Ownable.sol\":1722:1743  _setOwner(address(0)) */\n      jump\t// in\n    tag_249:\n        /* \"contracts/access/Ownable.sol\":1657:1751  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/LandbaseToken.sol\":5235:6532  function getPriorVotes(address account, uint256 blockNumber)... */\n    tag_111:\n        /* \"contracts/LandbaseToken.sol\":5346:5353  uint256 */\n      0x00\n        /* \"contracts/LandbaseToken.sol\":5407:5419  block.number */\n      number\n        /* \"contracts/LandbaseToken.sol\":5393:5404  blockNumber */\n      dup3\n        /* \"contracts/LandbaseToken.sol\":5393:5419  blockNumber < block.number */\n      lt\n        /* \"contracts/LandbaseToken.sol\":5371:5490  require(... */\n      tag_252\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6753:6755   */\n      0x20\n        /* \"contracts/LandbaseToken.sol\":5371:5490  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6735:6756   */\n      mstore\n        /* \"#utility.yul\":6792:6794   */\n      0x2b\n        /* \"#utility.yul\":6772:6790   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6765:6795   */\n      mstore\n        /* \"#utility.yul\":6831:6865   */\n      0x4c414e44424153453a3a6765745072696f72566f7465733a206e6f7420796574\n        /* \"#utility.yul\":6811:6829   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6804:6866   */\n      mstore\n      shl(0xaa, 0x0819195d195c9b5a5b9959)\n        /* \"#utility.yul\":6882:6900   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6875:6916   */\n      mstore\n        /* \"#utility.yul\":6933:6952   */\n      0x84\n      add\n        /* \"contracts/LandbaseToken.sol\":5371:5490  require(... */\n      tag_191\n        /* \"#utility.yul\":6551:6958   */\n      jump\n        /* \"contracts/LandbaseToken.sol\":5371:5490  require(... */\n    tag_252:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LandbaseToken.sol\":5525:5548  numCheckpoints[account] */\n      dup4\n      and\n        /* \"contracts/LandbaseToken.sol\":5503:5522  uint32 nCheckpoints */\n      0x00\n        /* \"contracts/LandbaseToken.sol\":5525:5548  numCheckpoints[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/LandbaseToken.sol\":5525:5539  numCheckpoints */\n      0x0b\n        /* \"contracts/LandbaseToken.sol\":5525:5548  numCheckpoints[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xffffffff\n      and\n      swap1\n        /* \"contracts/LandbaseToken.sol\":5563:5580  nCheckpoints == 0 */\n      dup2\n      swap1\n      sub\n        /* \"contracts/LandbaseToken.sol\":5559:5617  if (nCheckpoints == 0) {... */\n      tag_255\n      jumpi\n        /* \"contracts/LandbaseToken.sol\":5604:5605  0 */\n      0x00\n        /* \"contracts/LandbaseToken.sol\":5597:5605  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_181)\n        /* \"contracts/LandbaseToken.sol\":5559:5617  if (nCheckpoints == 0) {... */\n    tag_255:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LandbaseToken.sol\":5677:5697  checkpoints[account] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/LandbaseToken.sol\":5677:5688  checkpoints */\n      0x0a\n        /* \"contracts/LandbaseToken.sol\":5677:5697  checkpoints[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/LandbaseToken.sol\":5729:5740  blockNumber */\n      dup5\n      swap2\n        /* \"contracts/LandbaseToken.sol\":5698:5714  nCheckpoints - 1 */\n      tag_256\n        /* \"contracts/LandbaseToken.sol\":5713:5714  1 */\n      0x01\n        /* \"contracts/LandbaseToken.sol\":5698:5710  nCheckpoints */\n      dup6\n        /* \"contracts/LandbaseToken.sol\":5698:5714  nCheckpoints - 1 */\n      tag_257\n      jump\t// in\n    tag_256:\n        /* \"contracts/LandbaseToken.sol\":5677:5715  checkpoints[account][nCheckpoints - 1] */\n      0xffffffff\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"contracts/LandbaseToken.sol\":5677:5725  checkpoints[account][nCheckpoints - 1].fromBlock */\n      sload\n      and\n        /* \"contracts/LandbaseToken.sol\":5677:5740  checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber */\n      gt\n        /* \"contracts/LandbaseToken.sol\":5673:5820  if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {... */\n      tag_258\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LandbaseToken.sol\":5764:5784  checkpoints[account] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/LandbaseToken.sol\":5764:5775  checkpoints */\n      0x0a\n        /* \"contracts/LandbaseToken.sol\":5764:5784  checkpoints[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"contracts/LandbaseToken.sol\":5785:5801  nCheckpoints - 1 */\n      tag_259\n        /* \"contracts/LandbaseToken.sol\":5800:5801  1 */\n      0x01\n        /* \"contracts/LandbaseToken.sol\":5785:5797  nCheckpoints */\n      dup5\n        /* \"contracts/LandbaseToken.sol\":5785:5801  nCheckpoints - 1 */\n      tag_257\n      jump\t// in\n    tag_259:\n        /* \"contracts/LandbaseToken.sol\":5764:5802  checkpoints[account][nCheckpoints - 1] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/LandbaseToken.sol\":5764:5808  checkpoints[account][nCheckpoints - 1].votes */\n      0x01\n      add\n      sload\n        /* \"contracts/LandbaseToken.sol\":5757:5808  return checkpoints[account][nCheckpoints - 1].votes */\n      swap2\n      pop\n      pop\n      jump(tag_181)\n        /* \"contracts/LandbaseToken.sol\":5673:5820  if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {... */\n    tag_258:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LandbaseToken.sol\":5881:5901  checkpoints[account] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/LandbaseToken.sol\":5881:5892  checkpoints */\n      0x0a\n        /* \"contracts/LandbaseToken.sol\":5881:5901  checkpoints[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/LandbaseToken.sol\":5881:5904  checkpoints[account][0] */\n      dup4\n      dup1\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/LandbaseToken.sol\":5881:5914  checkpoints[account][0].fromBlock */\n      sload\n        /* \"contracts/LandbaseToken.sol\":5881:5904  checkpoints[account][0] */\n      0xffffffff\n        /* \"contracts/LandbaseToken.sol\":5881:5914  checkpoints[account][0].fromBlock */\n      and\n        /* \"contracts/LandbaseToken.sol\":5881:5928  checkpoints[account][0].fromBlock > blockNumber */\n      dup4\n      lt\n        /* \"contracts/LandbaseToken.sol\":5877:5965  if (checkpoints[account][0].fromBlock > blockNumber) {... */\n      iszero\n      tag_260\n      jumpi\n        /* \"contracts/LandbaseToken.sol\":5952:5953  0 */\n      0x00\n        /* \"contracts/LandbaseToken.sol\":5945:5953  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_181)\n        /* \"contracts/LandbaseToken.sol\":5877:5965  if (checkpoints[account][0].fromBlock > blockNumber) {... */\n    tag_260:\n        /* \"contracts/LandbaseToken.sol\":5977:5989  uint32 lower */\n      0x00\n      dup1\n        /* \"contracts/LandbaseToken.sol\":6019:6035  nCheckpoints - 1 */\n      tag_261\n        /* \"contracts/LandbaseToken.sol\":6034:6035  1 */\n      0x01\n        /* \"contracts/LandbaseToken.sol\":6019:6031  nCheckpoints */\n      dup5\n        /* \"contracts/LandbaseToken.sol\":6019:6035  nCheckpoints - 1 */\n      tag_257\n      jump\t// in\n    tag_261:\n        /* \"contracts/LandbaseToken.sol\":6004:6035  uint32 upper = nCheckpoints - 1 */\n      swap1\n      pop\n        /* \"contracts/LandbaseToken.sol\":6046:6474  while (upper > lower) {... */\n    tag_262:\n        /* \"contracts/LandbaseToken.sol\":6061:6066  lower */\n      dup2\n        /* \"contracts/LandbaseToken.sol\":6053:6066  upper > lower */\n      0xffffffff\n      and\n        /* \"contracts/LandbaseToken.sol\":6053:6058  upper */\n      dup2\n        /* \"contracts/LandbaseToken.sol\":6053:6066  upper > lower */\n      0xffffffff\n      and\n      gt\n        /* \"contracts/LandbaseToken.sol\":6046:6474  while (upper > lower) {... */\n      iszero\n      tag_263\n      jumpi\n        /* \"contracts/LandbaseToken.sol\":6083:6096  uint32 center */\n      0x00\n        /* \"contracts/LandbaseToken.sol\":6125:6126  2 */\n      0x02\n        /* \"contracts/LandbaseToken.sol\":6108:6121  upper - lower */\n      tag_264\n        /* \"contracts/LandbaseToken.sol\":6116:6121  lower */\n      dup5\n        /* \"contracts/LandbaseToken.sol\":6108:6113  upper */\n      dup5\n        /* \"contracts/LandbaseToken.sol\":6108:6121  upper - lower */\n      tag_257\n      jump\t// in\n    tag_264:\n        /* \"contracts/LandbaseToken.sol\":6107:6126  (upper - lower) / 2 */\n      tag_265\n      swap2\n      swap1\n      tag_266\n      jump\t// in\n    tag_265:\n        /* \"contracts/LandbaseToken.sol\":6099:6126  upper - (upper - lower) / 2 */\n      tag_267\n      swap1\n        /* \"contracts/LandbaseToken.sol\":6099:6104  upper */\n      dup4\n        /* \"contracts/LandbaseToken.sol\":6099:6126  upper - (upper - lower) / 2 */\n      tag_257\n      jump\t// in\n    tag_267:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LandbaseToken.sol\":6191:6211  checkpoints[account] */\n      dup9\n      and\n        /* \"contracts/LandbaseToken.sol\":6168:6188  Checkpoint memory cp */\n      0x00\n        /* \"contracts/LandbaseToken.sol\":6191:6211  checkpoints[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/LandbaseToken.sol\":6191:6202  checkpoints */\n      0x0a\n        /* \"contracts/LandbaseToken.sol\":6191:6211  checkpoints[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/LandbaseToken.sol\":6191:6219  checkpoints[account][center] */\n      0xffffffff\n      dup1\n      dup7\n      and\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/LandbaseToken.sol\":6168:6219  Checkpoint memory cp = checkpoints[account][center] */\n      dup2\n      mload\n      dup1\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n      dup1\n      sload\n      swap1\n      swap4\n      and\n      dup1\n      dup3\n      mstore\n      0x01\n      swap1\n      swap4\n      add\n      sload\n      swap2\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/LandbaseToken.sol\":6083:6126  uint32 center = upper - (upper - lower) / 2 */\n      swap2\n      swap3\n      pop\n        /* \"contracts/LandbaseToken.sol\":6238:6265  cp.fromBlock == blockNumber */\n      dup8\n      swap1\n      sub\n        /* \"contracts/LandbaseToken.sol\":6234:6463  if (cp.fromBlock == blockNumber) {... */\n      tag_268\n      jumpi\n        /* \"contracts/LandbaseToken.sol\":6293:6301  cp.votes */\n      0x20\n      add\n      mload\n      swap5\n      pop\n        /* \"contracts/LandbaseToken.sol\":6286:6301  return cp.votes */\n      tag_181\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"contracts/LandbaseToken.sol\":6234:6463  if (cp.fromBlock == blockNumber) {... */\n    tag_268:\n        /* \"contracts/LandbaseToken.sol\":6327:6339  cp.fromBlock */\n      dup1\n      mload\n        /* \"contracts/LandbaseToken.sol\":6327:6353  cp.fromBlock < blockNumber */\n      0xffffffff\n      and\n      dup8\n      gt\n        /* \"contracts/LandbaseToken.sol\":6323:6463  if (cp.fromBlock < blockNumber) {... */\n      iszero\n      tag_270\n      jumpi\n        /* \"contracts/LandbaseToken.sol\":6382:6388  center */\n      dup2\n        /* \"contracts/LandbaseToken.sol\":6374:6388  lower = center */\n      swap4\n      pop\n        /* \"contracts/LandbaseToken.sol\":6323:6463  if (cp.fromBlock < blockNumber) {... */\n      jump(tag_271)\n    tag_270:\n        /* \"contracts/LandbaseToken.sol\":6437:6447  center - 1 */\n      tag_272\n        /* \"contracts/LandbaseToken.sol\":6446:6447  1 */\n      0x01\n        /* \"contracts/LandbaseToken.sol\":6437:6443  center */\n      dup4\n        /* \"contracts/LandbaseToken.sol\":6437:6447  center - 1 */\n      tag_257\n      jump\t// in\n    tag_272:\n        /* \"contracts/LandbaseToken.sol\":6429:6447  upper = center - 1 */\n      swap3\n      pop\n        /* \"contracts/LandbaseToken.sol\":6323:6463  if (cp.fromBlock < blockNumber) {... */\n    tag_271:\n        /* \"contracts/LandbaseToken.sol\":6068:6474  {... */\n      pop\n      pop\n        /* \"contracts/LandbaseToken.sol\":6046:6474  while (upper > lower) {... */\n      jump(tag_262)\n    tag_263:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LandbaseToken.sol\":6491:6511  checkpoints[account] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/LandbaseToken.sol\":6491:6502  checkpoints */\n      0x0a\n        /* \"contracts/LandbaseToken.sol\":6491:6511  checkpoints[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/LandbaseToken.sol\":6491:6518  checkpoints[account][lower] */\n      0xffffffff\n      swap1\n      swap5\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"contracts/LandbaseToken.sol\":6491:6524  checkpoints[account][lower].votes */\n      0x01\n      add\n      sload\n      swap2\n      pop\n      pop\n        /* \"contracts/LandbaseToken.sol\":5235:6532  function getPriorVotes(address account, uint256 blockNumber)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP20.sol\":1576:1672  function symbol() public view override returns (string memory) {... */\n    tag_124:\n        /* \"contracts/BEP20.sol\":1624:1637  string memory */\n      0x60\n        /* \"contracts/BEP20.sol\":1657:1664  _symbol */\n      0x05\n        /* \"contracts/BEP20.sol\":1650:1664  return _symbol */\n      dup1\n      sload\n      tag_175\n      swap1\n      tag_176\n      jump\t// in\n        /* \"contracts/LandbaseToken.sol\":9262:9523  function addMinter(address _addMinter) public onlyOwner returns (bool) {... */\n    tag_128:\n        /* \"contracts/LandbaseToken.sol\":9327:9331  bool */\n      0x00\n        /* \"contracts/access/Ownable.sol\":1079:1085  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/utils/Context.sol\":682:692  msg.sender */\n      caller\n        /* \"contracts/access/Ownable.sol\":1226:1249  owner() == _msgSender() */\n      eq\n        /* \"contracts/access/Ownable.sol\":1218:1286  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_285\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_285:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LandbaseToken.sol\":9366:9390  _addMinter != address(0) */\n      dup3\n      and\n        /* \"contracts/LandbaseToken.sol\":9344:9458  require(... */\n      tag_288\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7684:7686   */\n      0x20\n        /* \"contracts/LandbaseToken.sol\":9344:9458  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7666:7687   */\n      mstore\n        /* \"#utility.yul\":7723:7725   */\n      0x28\n        /* \"#utility.yul\":7703:7721   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7696:7726   */\n      mstore\n        /* \"#utility.yul\":7762:7796   */\n      0x4c414e44424153453a205f6164644d696e74657220697320746865207a65726f\n        /* \"#utility.yul\":7742:7760   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7735:7797   */\n      mstore\n      shl(0xc0, 0x2061646472657373)\n        /* \"#utility.yul\":7813:7831   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7806:7844   */\n      mstore\n        /* \"#utility.yul\":7861:7880   */\n      0x84\n      add\n        /* \"contracts/LandbaseToken.sol\":9344:9458  require(... */\n      tag_191\n        /* \"#utility.yul\":7482:7886   */\n      jump\n        /* \"contracts/LandbaseToken.sol\":9344:9458  require(... */\n    tag_288:\n        /* \"contracts/LandbaseToken.sol\":9476:9515  EnumerableSet.add(_minters, _addMinter) */\n      tag_197\n        /* \"contracts/LandbaseToken.sol\":9494:9502  _minters */\n      0x07\n        /* \"contracts/LandbaseToken.sol\":9504:9514  _addMinter */\n      dup4\n        /* \"contracts/LandbaseToken.sol\":9476:9493  EnumerableSet.add */\n      tag_292\n        /* \"contracts/LandbaseToken.sol\":9476:9515  EnumerableSet.add(_minters, _addMinter) */\n      jump\t// in\n        /* \"contracts/BEP20.sol\":5724:5854  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n    tag_132:\n        /* \"contracts/BEP20.sol\":5780:5784  bool */\n      0x00\n        /* \"contracts/access/Ownable.sol\":1079:1085  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/utils/Context.sol\":682:692  msg.sender */\n      caller\n        /* \"contracts/access/Ownable.sol\":1226:1249  owner() == _msgSender() */\n      eq\n        /* \"contracts/access/Ownable.sol\":1218:1286  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_296\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_296:\n        /* \"contracts/BEP20.sol\":5797:5824  _mint(_msgSender(), amount) */\n      tag_299\n        /* \"contracts/utils/Context.sol\":682:692  msg.sender */\n      caller\n        /* \"contracts/BEP20.sol\":5817:5823  amount */\n      dup4\n        /* \"contracts/BEP20.sol\":5797:5802  _mint */\n      tag_221\n        /* \"contracts/BEP20.sol\":5797:5824  _mint(_msgSender(), amount) */\n      jump\t// in\n    tag_299:\n      pop\n        /* \"contracts/BEP20.sol\":5842:5846  true */\n      0x01\n        /* \"contracts/BEP20.sol\":5724:5854  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/BEP20.sol\":5123:5506  function decreaseAllowance(address spender, uint256 subtractedValue)... */\n    tag_136:\n        /* \"contracts/BEP20.sol\":5226:5230  bool */\n      0x00\n        /* \"contracts/BEP20.sol\":5248:5476  _approve(... */\n      tag_182\n        /* \"contracts/utils/Context.sol\":682:692  msg.sender */\n      caller\n        /* \"contracts/BEP20.sol\":5298:5305  spender */\n      dup5\n        /* \"contracts/BEP20.sol\":5320:5465  _allowances[_msgSender()][spender].sub(... */\n      tag_204\n        /* \"contracts/BEP20.sol\":5377:5392  subtractedValue */\n      dup6\n        /* \"contracts/BEP20.sol\":5320:5465  _allowances[_msgSender()][spender].sub(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22\n      0x25\n      swap2\n      codecopy\n        /* \"contracts/utils/Context.sol\":682:692  msg.sender */\n      caller\n        /* \"contracts/BEP20.sol\":5320:5345  _allowances[_msgSender()] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/BEP20.sol\":5320:5331  _allowances */\n      0x02\n        /* \"contracts/BEP20.sol\":5320:5345  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20.sol\":5320:5354  _allowances[_msgSender()][spender] */\n      dup14\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n      swap1\n        /* \"contracts/BEP20.sol\":5320:5358  _allowances[_msgSender()][spender].sub */\n      tag_206\n        /* \"contracts/BEP20.sol\":5320:5465  _allowances[_msgSender()][spender].sub(... */\n      jump\t// in\n        /* \"contracts/BEP20.sol\":2229:2428  function transfer(address recipient, uint256 amount)... */\n    tag_140:\n        /* \"contracts/BEP20.sol\":2334:2338  bool */\n      0x00\n        /* \"contracts/BEP20.sol\":2356:2398  _transfer(_msgSender(), recipient, amount) */\n      tag_182\n        /* \"contracts/utils/Context.sol\":682:692  msg.sender */\n      caller\n        /* \"contracts/BEP20.sol\":2380:2389  recipient */\n      dup5\n        /* \"contracts/BEP20.sol\":2391:2397  amount */\n      dup5\n        /* \"contracts/BEP20.sol\":2356:2365  _transfer */\n      tag_201\n        /* \"contracts/BEP20.sol\":2356:2398  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"contracts/LandbaseToken.sol\":9924:10053  function isMinter(address account) public view returns (bool) {... */\n    tag_144:\n        /* \"contracts/LandbaseToken.sol\":9980:9984  bool */\n      0x00\n        /* \"contracts/LandbaseToken.sol\":10004:10045  EnumerableSet.contains(_minters, account) */\n      tag_197\n        /* \"contracts/LandbaseToken.sol\":10027:10035  _minters */\n      0x07\n        /* \"contracts/LandbaseToken.sol\":10037:10044  account */\n      dup4\n        /* \"contracts/LandbaseToken.sol\":10004:10026  EnumerableSet.contains */\n      tag_311\n        /* \"contracts/LandbaseToken.sol\":10004:10045  EnumerableSet.contains(_minters, account) */\n      jump\t// in\n        /* \"contracts/LandbaseToken.sol\":4568:4804  function getCurrentVotes(address account) external view returns (uint256) {... */\n    tag_148:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LandbaseToken.sol\":4675:4698  numCheckpoints[account] */\n      dup2\n      and\n        /* \"contracts/LandbaseToken.sol\":4633:4640  uint256 */\n      0x00\n        /* \"contracts/LandbaseToken.sol\":4675:4698  numCheckpoints[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/LandbaseToken.sol\":4675:4689  numCheckpoints */\n      0x0b\n        /* \"contracts/LandbaseToken.sol\":4675:4698  numCheckpoints[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xffffffff\n      and\n        /* \"contracts/LandbaseToken.sol\":4729:4745  nCheckpoints > 0 */\n      dup1\n        /* \"contracts/LandbaseToken.sol\":4729:4796  nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0 */\n      tag_313\n      jumpi\n        /* \"contracts/LandbaseToken.sol\":4795:4796  0 */\n      0x00\n        /* \"contracts/LandbaseToken.sol\":4729:4796  nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0 */\n      jump(tag_314)\n    tag_313:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LandbaseToken.sol\":4748:4768  checkpoints[account] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/LandbaseToken.sol\":4748:4759  checkpoints */\n      0x0a\n        /* \"contracts/LandbaseToken.sol\":4748:4768  checkpoints[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"contracts/LandbaseToken.sol\":4769:4785  nCheckpoints - 1 */\n      tag_315\n        /* \"contracts/LandbaseToken.sol\":4784:4785  1 */\n      0x01\n        /* \"contracts/LandbaseToken.sol\":4769:4781  nCheckpoints */\n      dup5\n        /* \"contracts/LandbaseToken.sol\":4769:4785  nCheckpoints - 1 */\n      tag_257\n      jump\t// in\n    tag_315:\n        /* \"contracts/LandbaseToken.sol\":4748:4786  checkpoints[account][nCheckpoints - 1] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/LandbaseToken.sol\":4748:4792  checkpoints[account][nCheckpoints - 1].votes */\n      0x01\n      add\n      sload\n        /* \"contracts/LandbaseToken.sol\":4729:4796  nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0 */\n    tag_314:\n        /* \"contracts/LandbaseToken.sol\":4709:4796  return... */\n      swap4\n        /* \"contracts/LandbaseToken.sol\":4568:4804  function getCurrentVotes(address account) external view returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LandbaseToken.sol\":3211:4367  function delegateBySig(... */\n    tag_153:\n        /* \"contracts/LandbaseToken.sol\":3396:3419  bytes32 domainSeparator */\n      0x00\n        /* \"contracts/LandbaseToken.sol\":1360:1464  keccak256(... */\n      0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866\n        /* \"contracts/LandbaseToken.sol\":3525:3531  name() */\n      tag_317\n        /* \"contracts/LandbaseToken.sol\":3525:3529  name */\n      tag_47\n        /* \"contracts/LandbaseToken.sol\":3525:3531  name() */\n      jump\t// in\n    tag_317:\n        /* \"contracts/LandbaseToken.sol\":3509:3533  keccak256(bytes(name())) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/LandbaseToken.sol\":3552:3564  getChainId() */\n      tag_318\n        /* \"contracts/LandbaseToken.sol\":9202:9211  chainid() */\n      chainid\n      swap1\n        /* \"contracts/LandbaseToken.sol\":9076:9254  function getChainId() internal view returns (uint256) {... */\n      jump\n        /* \"contracts/LandbaseToken.sol\":3552:3564  getChainId() */\n    tag_318:\n        /* \"contracts/LandbaseToken.sol\":3446:3611  abi.encode(... */\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":8122:8147   */\n      swap6\n      swap1\n      swap6\n      mstore\n        /* \"#utility.yul\":8163:8181   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":8156:8190   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":8206:8224   */\n      0x60\n      dup4\n      add\n        /* \"#utility.yul\":8199:8233   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/LandbaseToken.sol\":3591:3595  this */\n      address\n        /* \"#utility.yul\":8249:8267   */\n      0x80\n      dup1\n      dup5\n      add\n        /* \"#utility.yul\":8242:8302   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/LandbaseToken.sol\":3446:3611  abi.encode(... */\n      dup2\n      mload\n      dup1\n      dup5\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":8094:8113   */\n      0xa0\n      dup4\n      add\n        /* \"contracts/LandbaseToken.sol\":3446:3611  abi.encode(... */\n      dup3\n      mstore\n        /* \"contracts/LandbaseToken.sol\":3422:3622  keccak256(... */\n      dup1\n      mload\n      swap1\n      dup5\n      add\n      keccak256\n        /* \"contracts/LandbaseToken.sol\":1613:1684  keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n      0xe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf\n        /* \"contracts/LandbaseToken.sol\":3680:3737  abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry) */\n      0xc0\n      dup5\n      add\n        /* \"#utility.yul\":8544:8569   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8605:8637   */\n      dup12\n      and\n        /* \"#utility.yul\":8585:8603   */\n      0xe0\n      dup5\n      add\n        /* \"#utility.yul\":8578:8638   */\n      mstore\n        /* \"#utility.yul\":8654:8672   */\n      0x0100\n      dup4\n      add\n        /* \"#utility.yul\":8647:8681   */\n      dup11\n      swap1\n      mstore\n        /* \"#utility.yul\":8697:8715   */\n      0x0120\n      dup1\n      dup5\n      add\n        /* \"#utility.yul\":8690:8724   */\n      dup11\n      swap1\n      mstore\n        /* \"contracts/LandbaseToken.sol\":3680:3737  abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry) */\n      dup3\n      mload\n      dup1\n      dup6\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":8516:8535   */\n      0x0140\n      dup5\n      add\n        /* \"contracts/LandbaseToken.sol\":3680:3737  abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry) */\n      swap1\n      swap3\n      mstore\n        /* \"contracts/LandbaseToken.sol\":3656:3748  keccak256(... */\n      dup2\n      mload\n      swap2\n      swap1\n      swap4\n      add\n      keccak256\n      shl(0xf0, 0x1901)\n        /* \"contracts/LandbaseToken.sol\":3802:3859  abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash) */\n      0x0160\n      dup4\n      add\n        /* \"#utility.yul\":8993:9020   */\n      mstore\n        /* \"#utility.yul\":9036:9047   */\n      0x0162\n      dup3\n      add\n        /* \"#utility.yul\":9029:9056   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":9072:9084   */\n      0x0182\n      dup3\n      add\n        /* \"#utility.yul\":9065:9093   */\n      dup2\n      swap1\n      mstore\n        /* \"contracts/LandbaseToken.sol\":3422:3622  keccak256(... */\n      swap2\n      swap3\n      pop\n      0x00\n      swap1\n        /* \"#utility.yul\":9109:9121   */\n      0x01a2\n      add\n        /* \"contracts/LandbaseToken.sol\":3802:3859  abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash) */\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      dup3\n      dup3\n      mstore\n        /* \"contracts/LandbaseToken.sol\":3778:3870  keccak256(... */\n      dup1\n      mload\n        /* \"contracts/LandbaseToken.sol\":3802:3859  abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash) */\n      0x20\n        /* \"contracts/LandbaseToken.sol\":3778:3870  keccak256(... */\n      swap2\n      dup3\n      add\n      keccak256\n        /* \"contracts/LandbaseToken.sol\":3883:3900  address signatory */\n      0x00\n        /* \"contracts/LandbaseToken.sol\":3903:3929  ecrecover(digest, v, r, s) */\n      dup1\n      dup6\n      mstore\n      swap2\n      dup5\n      add\n      dup1\n      dup5\n      mstore\n        /* \"#utility.yul\":9359:9384   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":9432:9436   */\n      0xff\n        /* \"#utility.yul\":9420:9437   */\n      dup11\n      and\n        /* \"#utility.yul\":9400:9418   */\n      swap3\n      dup5\n      add\n        /* \"#utility.yul\":9393:9438   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":9454:9472   */\n      0x60\n      dup4\n      add\n        /* \"#utility.yul\":9447:9481   */\n      dup9\n      swap1\n      mstore\n        /* \"#utility.yul\":9497:9515   */\n      0x80\n      dup4\n      add\n        /* \"#utility.yul\":9490:9524   */\n      dup8\n      swap1\n      mstore\n        /* \"contracts/LandbaseToken.sol\":3778:3870  keccak256(... */\n      swap1\n      swap3\n      pop\n        /* \"contracts/LandbaseToken.sol\":3883:3900  address signatory */\n      swap1\n        /* \"contracts/LandbaseToken.sol\":3903:3929  ecrecover(digest, v, r, s) */\n      0x01\n      swap1\n        /* \"#utility.yul\":9331:9350   */\n      0xa0\n      add\n        /* \"contracts/LandbaseToken.sol\":3903:3929  ecrecover(digest, v, r, s) */\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_329\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_329:\n      pop\n      pop\n      mload(add(not(0x1f), mload(0x40)))\n      swap2\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LandbaseToken.sol\":3962:3985  signatory != address(0) */\n      dup2\n      and\n        /* \"contracts/LandbaseToken.sol\":3940:4055  require(... */\n      tag_330\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9737:9739   */\n      0x20\n        /* \"contracts/LandbaseToken.sol\":3940:4055  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9719:9740   */\n      mstore\n        /* \"#utility.yul\":9776:9778   */\n      0x2a\n        /* \"#utility.yul\":9756:9774   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9749:9779   */\n      mstore\n        /* \"#utility.yul\":9815:9849   */\n      0x4c414e44424153453a3a64656c656761746542795369673a20696e76616c6964\n        /* \"#utility.yul\":9795:9813   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9788:9850   */\n      mstore\n      shl(0xb0, 0x207369676e6174757265)\n        /* \"#utility.yul\":9866:9884   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9859:9899   */\n      mstore\n        /* \"#utility.yul\":9916:9935   */\n      0x84\n      add\n        /* \"contracts/LandbaseToken.sol\":3940:4055  require(... */\n      tag_191\n        /* \"#utility.yul\":9535:9941   */\n      jump\n        /* \"contracts/LandbaseToken.sol\":3940:4055  require(... */\n    tag_330:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LandbaseToken.sol\":4097:4114  nonces[signatory] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/LandbaseToken.sol\":4097:4103  nonces */\n      0x0c\n        /* \"contracts/LandbaseToken.sol\":4097:4114  nonces[signatory] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/LandbaseToken.sol\":4097:4116  nonces[signatory]++ */\n      dup1\n      sload\n      swap2\n      tag_333\n      dup4\n      tag_334\n      jump\t// in\n    tag_333:\n      swap2\n      swap1\n      pop\n      sstore\n        /* \"contracts/LandbaseToken.sol\":4088:4093  nonce */\n      dup10\n        /* \"contracts/LandbaseToken.sol\":4088:4116  nonce == nonces[signatory]++ */\n      eq\n        /* \"contracts/LandbaseToken.sol\":4066:4182  require(... */\n      tag_335\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10288:10290   */\n      0x20\n        /* \"contracts/LandbaseToken.sol\":4066:4182  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10270:10291   */\n      mstore\n        /* \"#utility.yul\":10327:10329   */\n      0x26\n        /* \"#utility.yul\":10307:10325   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10300:10330   */\n      mstore\n        /* \"#utility.yul\":10366:10400   */\n      0x4c414e44424153453a3a64656c656761746542795369673a20696e76616c6964\n        /* \"#utility.yul\":10346:10364   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10339:10401   */\n      mstore\n      shl(0xd0, 0x206e6f6e6365)\n        /* \"#utility.yul\":10417:10435   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10410:10446   */\n      mstore\n        /* \"#utility.yul\":10463:10482   */\n      0x84\n      add\n        /* \"contracts/LandbaseToken.sol\":4066:4182  require(... */\n      tag_191\n        /* \"#utility.yul\":10086:10488   */\n      jump\n        /* \"contracts/LandbaseToken.sol\":4066:4182  require(... */\n    tag_335:\n        /* \"contracts/LandbaseToken.sol\":4234:4240  expiry */\n      dup8\n        /* \"contracts/LandbaseToken.sol\":4215:4230  block.timestamp */\n      timestamp\n        /* \"contracts/LandbaseToken.sol\":4215:4240  block.timestamp <= expiry */\n      gt\n      iszero\n        /* \"contracts/LandbaseToken.sol\":4193:4310  require(... */\n      tag_338\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10695:10697   */\n      0x20\n        /* \"contracts/LandbaseToken.sol\":4193:4310  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10677:10698   */\n      mstore\n        /* \"#utility.yul\":10734:10736   */\n      0x2a\n        /* \"#utility.yul\":10714:10732   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10707:10737   */\n      mstore\n        /* \"#utility.yul\":10773:10807   */\n      0x4c414e44424153453a3a64656c656761746542795369673a207369676e617475\n        /* \"#utility.yul\":10753:10771   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10746:10808   */\n      mstore\n      shl(0xb2, 0x1c9948195e1c1a5c9959)\n        /* \"#utility.yul\":10824:10842   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10817:10857   */\n      mstore\n        /* \"#utility.yul\":10874:10893   */\n      0x84\n      add\n        /* \"contracts/LandbaseToken.sol\":4193:4310  require(... */\n      tag_191\n        /* \"#utility.yul\":10493:10899   */\n      jump\n        /* \"contracts/LandbaseToken.sol\":4193:4310  require(... */\n    tag_338:\n        /* \"contracts/LandbaseToken.sol\":4328:4359  _delegate(signatory, delegatee) */\n      tag_341\n        /* \"contracts/LandbaseToken.sol\":4338:4347  signatory */\n      dup2\n        /* \"contracts/LandbaseToken.sol\":4349:4358  delegatee */\n      dup12\n        /* \"contracts/LandbaseToken.sol\":4328:4337  _delegate */\n      tag_241\n        /* \"contracts/LandbaseToken.sol\":4328:4359  _delegate(signatory, delegatee) */\n      jump\t// in\n    tag_341:\n        /* \"contracts/LandbaseToken.sol\":4321:4359  return _delegate(signatory, delegatee) */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/LandbaseToken.sol\":3211:4367  function delegateBySig(... */\n    tag_316:\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/access/Ownable.sol\":1906:2098  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_170:\n        /* \"contracts/access/Ownable.sol\":1052:1059  address */\n      0x00\n        /* \"contracts/access/Ownable.sol\":1079:1085  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/utils/Context.sol\":682:692  msg.sender */\n      caller\n        /* \"contracts/access/Ownable.sol\":1226:1249  owner() == _msgSender() */\n      eq\n        /* \"contracts/access/Ownable.sol\":1218:1286  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_346\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_346:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/access/Ownable.sol\":1995:2017  newOwner != address(0) */\n      dup2\n      and\n        /* \"contracts/access/Ownable.sol\":1987:2060  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_349\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11106:11108   */\n      0x20\n        /* \"contracts/access/Ownable.sol\":1987:2060  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11088:11109   */\n      mstore\n        /* \"#utility.yul\":11145:11147   */\n      0x26\n        /* \"#utility.yul\":11125:11143   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11118:11148   */\n      mstore\n        /* \"#utility.yul\":11184:11218   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":11164:11182   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11157:11219   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":11235:11253   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11228:11264   */\n      mstore\n        /* \"#utility.yul\":11281:11300   */\n      0x84\n      add\n        /* \"contracts/access/Ownable.sol\":1987:2060  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_191\n        /* \"#utility.yul\":10904:11306   */\n      jump\n        /* \"contracts/access/Ownable.sol\":1987:2060  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_349:\n        /* \"contracts/access/Ownable.sol\":2071:2090  _setOwner(newOwner) */\n      tag_240\n        /* \"contracts/access/Ownable.sol\":2081:2089  newOwner */\n      dup2\n        /* \"contracts/access/Ownable.sol\":2071:2080  _setOwner */\n      tag_250\n        /* \"contracts/access/Ownable.sol\":2071:2090  _setOwner(newOwner) */\n      jump\t// in\n        /* \"contracts/structs/EnumerableSet.sol\":8592:8709  function length(AddressSet storage set) internal view returns (uint256) {... */\n    tag_173:\n        /* \"contracts/structs/EnumerableSet.sol\":8655:8662  uint256 */\n      0x00\n        /* \"contracts/structs/EnumerableSet.sol\":8682:8701  _length(set._inner) */\n      tag_197\n        /* \"contracts/structs/EnumerableSet.sol\":8690:8693  set */\n      dup3\n        /* \"contracts/structs/EnumerableSet.sol\":4076:4094  set._values.length */\n      sload\n      swap1\n        /* \"contracts/structs/EnumerableSet.sol\":3993:4102  function _length(Set storage set) private view returns (uint256) {... */\n      jump\n        /* \"contracts/BEP20.sol\":8632:9004  function _approve(... */\n    tag_185:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20.sol\":8760:8779  owner != address(0) */\n      dup4\n      and\n        /* \"contracts/BEP20.sol\":8752:8820  require(owner != address(0), \"BEP20: approve from the zero address\") */\n      tag_358\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11513:11515   */\n      0x20\n        /* \"contracts/BEP20.sol\":8752:8820  require(owner != address(0), \"BEP20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11495:11516   */\n      mstore\n        /* \"#utility.yul\":11552:11554   */\n      0x24\n        /* \"#utility.yul\":11532:11550   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":11525:11555   */\n      mstore\n        /* \"#utility.yul\":11591:11625   */\n      0x42455032303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":11571:11589   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11564:11626   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":11642:11660   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11635:11669   */\n      mstore\n        /* \"#utility.yul\":11686:11705   */\n      0x84\n      add\n        /* \"contracts/BEP20.sol\":8752:8820  require(owner != address(0), \"BEP20: approve from the zero address\") */\n      tag_191\n        /* \"#utility.yul\":11311:11711   */\n      jump\n        /* \"contracts/BEP20.sol\":8752:8820  require(owner != address(0), \"BEP20: approve from the zero address\") */\n    tag_358:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20.sol\":8839:8860  spender != address(0) */\n      dup3\n      and\n        /* \"contracts/BEP20.sol\":8831:8899  require(spender != address(0), \"BEP20: approve to the zero address\") */\n      tag_361\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11918:11920   */\n      0x20\n        /* \"contracts/BEP20.sol\":8831:8899  require(spender != address(0), \"BEP20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11900:11921   */\n      mstore\n        /* \"#utility.yul\":11957:11959   */\n      0x22\n        /* \"#utility.yul\":11937:11955   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11930:11960   */\n      mstore\n        /* \"#utility.yul\":11996:12030   */\n      0x42455032303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":11976:11994   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11969:12031   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":12047:12065   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12040:12072   */\n      mstore\n        /* \"#utility.yul\":12089:12108   */\n      0x84\n      add\n        /* \"contracts/BEP20.sol\":8831:8899  require(spender != address(0), \"BEP20: approve to the zero address\") */\n      tag_191\n        /* \"#utility.yul\":11716:12114   */\n      jump\n        /* \"contracts/BEP20.sol\":8831:8899  require(spender != address(0), \"BEP20: approve to the zero address\") */\n    tag_361:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20.sol\":8912:8930  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/BEP20.sol\":8912:8923  _allowances */\n      0x02\n        /* \"contracts/BEP20.sol\":8912:8930  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/BEP20.sol\":8912:8939  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/BEP20.sol\":8912:8948  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/BEP20.sol\":8964:8996  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":160:185   */\n      dup5\n      dup2\n      mstore\n        /* \"contracts/BEP20.sol\":8964:8996  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/BEP20.sol\":8964:8996  Approval(owner, spender, amount) */\n    tag_364:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/BEP20.sol\":8632:9004  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/structs/EnumerableSet.sol\":8095:8253  function remove(AddressSet storage set, address value) internal returns (bool) {... */\n    tag_198:\n        /* \"contracts/structs/EnumerableSet.sol\":8168:8172  bool */\n      0x00\n        /* \"contracts/structs/EnumerableSet.sol\":8192:8245  _remove(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_314\n        /* \"contracts/structs/EnumerableSet.sol\":8200:8203  set */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/structs/EnumerableSet.sol\":8220:8243  uint256(uint160(value)) */\n      dup5\n      and\n        /* \"contracts/structs/EnumerableSet.sol\":8192:8199  _remove */\n      tag_367\n        /* \"contracts/structs/EnumerableSet.sol\":8192:8245  _remove(set._inner, bytes32(uint256(uint160(value)))) */\n      jump\t// in\n        /* \"contracts/BEP20.sol\":6344:6886  function _transfer(... */\n    tag_201:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20.sol\":6476:6496  sender != address(0) */\n      dup4\n      and\n        /* \"contracts/BEP20.sol\":6468:6538  require(sender != address(0), \"BEP20: transfer from the zero address\") */\n      tag_369\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12321:12323   */\n      0x20\n        /* \"contracts/BEP20.sol\":6468:6538  require(sender != address(0), \"BEP20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12303:12324   */\n      mstore\n        /* \"#utility.yul\":12360:12362   */\n      0x25\n        /* \"#utility.yul\":12340:12358   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12333:12363   */\n      mstore\n        /* \"#utility.yul\":12399:12433   */\n      0x42455032303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":12379:12397   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12372:12434   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":12450:12468   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12443:12478   */\n      mstore\n        /* \"#utility.yul\":12495:12514   */\n      0x84\n      add\n        /* \"contracts/BEP20.sol\":6468:6538  require(sender != address(0), \"BEP20: transfer from the zero address\") */\n      tag_191\n        /* \"#utility.yul\":12119:12520   */\n      jump\n        /* \"contracts/BEP20.sol\":6468:6538  require(sender != address(0), \"BEP20: transfer from the zero address\") */\n    tag_369:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20.sol\":6557:6580  recipient != address(0) */\n      dup3\n      and\n        /* \"contracts/BEP20.sol\":6549:6620  require(recipient != address(0), \"BEP20: transfer to the zero address\") */\n      tag_372\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12727:12729   */\n      0x20\n        /* \"contracts/BEP20.sol\":6549:6620  require(recipient != address(0), \"BEP20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12709:12730   */\n      mstore\n        /* \"#utility.yul\":12766:12768   */\n      0x23\n        /* \"#utility.yul\":12746:12764   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12739:12769   */\n      mstore\n        /* \"#utility.yul\":12805:12839   */\n      0x42455032303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":12785:12803   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12778:12840   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":12856:12874   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12849:12882   */\n      mstore\n        /* \"#utility.yul\":12899:12918   */\n      0x84\n      add\n        /* \"contracts/BEP20.sol\":6549:6620  require(recipient != address(0), \"BEP20: transfer to the zero address\") */\n      tag_191\n        /* \"#utility.yul\":12525:12924   */\n      jump\n        /* \"contracts/BEP20.sol\":6549:6620  require(recipient != address(0), \"BEP20: transfer to the zero address\") */\n    tag_372:\n        /* \"contracts/BEP20.sol\":6653:6761  _balances[sender].sub(... */\n      tag_375\n        /* \"contracts/BEP20.sol\":6689:6695  amount */\n      dup2\n        /* \"contracts/BEP20.sol\":6653:6761  _balances[sender].sub(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73\n      0x26\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20.sol\":6653:6670  _balances[sender] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/BEP20.sol\":6653:6662  _balances */\n      0x01\n        /* \"contracts/BEP20.sol\":6653:6670  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"contracts/BEP20.sol\":6653:6761  _balances[sender].sub(... */\n      swap1\n        /* \"contracts/BEP20.sol\":6653:6674  _balances[sender].sub */\n      tag_206\n        /* \"contracts/BEP20.sol\":6653:6761  _balances[sender].sub(... */\n      jump\t// in\n    tag_375:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20.sol\":6633:6650  _balances[sender] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/BEP20.sol\":6633:6642  _balances */\n      0x01\n        /* \"contracts/BEP20.sol\":6633:6650  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/BEP20.sol\":6633:6761  _balances[sender] = _balances[sender].sub(... */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/BEP20.sol\":6795:6815  _balances[recipient] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"contracts/BEP20.sol\":6795:6827  _balances[recipient].add(amount) */\n      tag_376\n      swap1\n        /* \"contracts/BEP20.sol\":6820:6826  amount */\n      dup3\n        /* \"contracts/BEP20.sol\":6795:6819  _balances[recipient].add */\n      tag_213\n        /* \"contracts/BEP20.sol\":6795:6827  _balances[recipient].add(amount) */\n      jump\t// in\n    tag_376:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20.sol\":6772:6792  _balances[recipient] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/BEP20.sol\":6772:6781  _balances */\n      0x01\n        /* \"contracts/BEP20.sol\":6772:6792  _balances[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/BEP20.sol\":6772:6827  _balances[recipient] = _balances[recipient].add(amount) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/BEP20.sol\":6843:6878  Transfer(sender, recipient, amount) */\n      swap2\n      mload\n      swap1\n      dup6\n      and\n      swap1\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n      tag_364\n      swap1\n        /* \"contracts/BEP20.sol\":6871:6877  amount */\n      dup6\n        /* \"#utility.yul\":160:185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n      swap1\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"contracts/libraries/SafeMath.sol\":5042:5282  function sub(... */\n    tag_206:\n        /* \"contracts/libraries/SafeMath.sol\":5162:5169  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":5223:5235  errorMessage */\n      dup2\n        /* \"contracts/libraries/SafeMath.sol\":5215:5221  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"contracts/libraries/SafeMath.sol\":5207:5236  require(b <= a, errorMessage) */\n      tag_379\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_379:\n      pop\n      pop\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":5258:5263  a - b */\n      swap1\n      sub\n      swap1\n        /* \"contracts/libraries/SafeMath.sol\":5042:5282  function sub(... */\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":2763:2861  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_213:\n        /* \"contracts/libraries/SafeMath.sol\":2821:2828  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":2848:2853  a + b */\n      tag_314\n        /* \"contracts/libraries/SafeMath.sol\":2852:2853  b */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":2848:2849  a */\n      dup5\n        /* \"contracts/libraries/SafeMath.sol\":2848:2853  a + b */\n      tag_383\n      jump\t// in\n        /* \"contracts/BEP20.sol\":7167:7475  function _mint(address account, uint256 amount) internal {... */\n    tag_221:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20.sol\":7243:7264  account != address(0) */\n      dup3\n      and\n        /* \"contracts/BEP20.sol\":7235:7300  require(account != address(0), \"BEP20: mint to the zero address\") */\n      tag_385\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13264:13266   */\n      0x20\n        /* \"contracts/BEP20.sol\":7235:7300  require(account != address(0), \"BEP20: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13246:13267   */\n      mstore\n        /* \"#utility.yul\":13303:13305   */\n      0x1f\n        /* \"#utility.yul\":13283:13301   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13276:13306   */\n      mstore\n        /* \"#utility.yul\":13342:13375   */\n      0x42455032303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":13322:13340   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13315:13376   */\n      mstore\n        /* \"#utility.yul\":13393:13411   */\n      0x64\n      add\n        /* \"contracts/BEP20.sol\":7235:7300  require(account != address(0), \"BEP20: mint to the zero address\") */\n      tag_191\n        /* \"#utility.yul\":13062:13417   */\n      jump\n        /* \"contracts/BEP20.sol\":7235:7300  require(account != address(0), \"BEP20: mint to the zero address\") */\n    tag_385:\n        /* \"contracts/BEP20.sol\":7328:7340  _totalSupply */\n      sload(0x03)\n        /* \"contracts/BEP20.sol\":7328:7352  _totalSupply.add(amount) */\n      tag_388\n      swap1\n        /* \"contracts/BEP20.sol\":7345:7351  amount */\n      dup3\n        /* \"contracts/BEP20.sol\":7328:7344  _totalSupply.add */\n      tag_213\n        /* \"contracts/BEP20.sol\":7328:7352  _totalSupply.add(amount) */\n      jump\t// in\n    tag_388:\n        /* \"contracts/BEP20.sol\":7313:7325  _totalSupply */\n      0x03\n        /* \"contracts/BEP20.sol\":7313:7352  _totalSupply = _totalSupply.add(amount) */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20.sol\":7384:7402  _balances[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/BEP20.sol\":7384:7393  _balances */\n      0x01\n        /* \"contracts/BEP20.sol\":7384:7402  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/BEP20.sol\":7384:7414  _balances[account].add(amount) */\n      tag_389\n      swap1\n        /* \"contracts/BEP20.sol\":7407:7413  amount */\n      dup3\n        /* \"contracts/BEP20.sol\":7384:7406  _balances[account].add */\n      tag_213\n        /* \"contracts/BEP20.sol\":7384:7414  _balances[account].add(amount) */\n      jump\t// in\n    tag_389:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20.sol\":7363:7381  _balances[account] */\n      dup4\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/BEP20.sol\":7363:7372  _balances */\n      0x01\n        /* \"contracts/BEP20.sol\":7363:7381  _balances[account] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/BEP20.sol\":7363:7414  _balances[account] = _balances[account].add(amount) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/BEP20.sol\":7430:7467  Transfer(address(0), account, amount) */\n      swap2\n      mload\n        /* \"contracts/BEP20.sol\":7363:7381  _balances[account] */\n      swap1\n      swap2\n      swap1\n        /* \"contracts/BEP20.sol\":7430:7467  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n      tag_390\n      swap1\n        /* \"contracts/BEP20.sol\":7460:7466  amount */\n      dup6\n        /* \"#utility.yul\":160:185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n      swap1\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"contracts/BEP20.sol\":7430:7467  Transfer(address(0), account, amount) */\n    tag_390:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/BEP20.sol\":7167:7475  function _mint(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LandbaseToken.sol\":6974:8039  function _moveDelegates(... */\n    tag_223:\n        /* \"contracts/LandbaseToken.sol\":7114:7120  dstRep */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LandbaseToken.sol\":7104:7120  srcRep != dstRep */\n      and\n        /* \"contracts/LandbaseToken.sol\":7104:7110  srcRep */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LandbaseToken.sol\":7104:7120  srcRep != dstRep */\n      and\n      eq\n      iszero\n        /* \"contracts/LandbaseToken.sol\":7104:7134  srcRep != dstRep && amount > 0 */\n      dup1\n      iszero\n      tag_392\n      jumpi\n      pop\n        /* \"contracts/LandbaseToken.sol\":7133:7134  0 */\n      0x00\n        /* \"contracts/LandbaseToken.sol\":7124:7130  amount */\n      dup2\n        /* \"contracts/LandbaseToken.sol\":7124:7134  amount > 0 */\n      gt\n        /* \"contracts/LandbaseToken.sol\":7104:7134  srcRep != dstRep && amount > 0 */\n    tag_392:\n        /* \"contracts/LandbaseToken.sol\":7100:8032  if (srcRep != dstRep && amount > 0) {... */\n      iszero\n      tag_402\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LandbaseToken.sol\":7155:7175  srcRep != address(0) */\n      dup4\n      and\n      iszero\n        /* \"contracts/LandbaseToken.sol\":7151:7578  if (srcRep != address(0)) {... */\n      tag_394\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LandbaseToken.sol\":7263:7285  numCheckpoints[srcRep] */\n      dup4\n      and\n        /* \"contracts/LandbaseToken.sol\":7244:7260  uint32 srcRepNum */\n      0x00\n        /* \"contracts/LandbaseToken.sol\":7263:7285  numCheckpoints[srcRep] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/LandbaseToken.sol\":7263:7277  numCheckpoints */\n      0x0b\n        /* \"contracts/LandbaseToken.sol\":7263:7285  numCheckpoints[srcRep] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xffffffff\n      and\n      swap1\n        /* \"contracts/LandbaseToken.sol\":7324:7337  srcRepNum > 0 */\n      dup2\n        /* \"contracts/LandbaseToken.sol\":7324:7426  srcRepNum > 0... */\n      tag_395\n      jumpi\n        /* \"contracts/LandbaseToken.sol\":7425:7426  0 */\n      0x00\n        /* \"contracts/LandbaseToken.sol\":7324:7426  srcRepNum > 0... */\n      jump(tag_396)\n    tag_395:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LandbaseToken.sol\":7361:7380  checkpoints[srcRep] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/LandbaseToken.sol\":7361:7372  checkpoints */\n      0x0a\n        /* \"contracts/LandbaseToken.sol\":7361:7380  checkpoints[srcRep] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"contracts/LandbaseToken.sol\":7381:7394  srcRepNum - 1 */\n      tag_397\n        /* \"contracts/LandbaseToken.sol\":7393:7394  1 */\n      0x01\n        /* \"contracts/LandbaseToken.sol\":7381:7390  srcRepNum */\n      dup6\n        /* \"contracts/LandbaseToken.sol\":7381:7394  srcRepNum - 1 */\n      tag_257\n      jump\t// in\n    tag_397:\n        /* \"contracts/LandbaseToken.sol\":7361:7395  checkpoints[srcRep][srcRepNum - 1] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/LandbaseToken.sol\":7361:7401  checkpoints[srcRep][srcRepNum - 1].votes */\n      0x01\n      add\n      sload\n        /* \"contracts/LandbaseToken.sol\":7324:7426  srcRepNum > 0... */\n    tag_396:\n        /* \"contracts/LandbaseToken.sol\":7304:7426  uint256 srcRepOld = srcRepNum > 0... */\n      swap1\n      pop\n        /* \"contracts/LandbaseToken.sol\":7445:7462  uint256 srcRepNew */\n      0x00\n        /* \"contracts/LandbaseToken.sol\":7465:7486  srcRepOld.sub(amount) */\n      tag_398\n        /* \"contracts/LandbaseToken.sol\":7304:7426  uint256 srcRepOld = srcRepNum > 0... */\n      dup3\n        /* \"contracts/LandbaseToken.sol\":7479:7485  amount */\n      dup6\n        /* \"contracts/LandbaseToken.sol\":7465:7478  srcRepOld.sub */\n      tag_399\n        /* \"contracts/LandbaseToken.sol\":7465:7486  srcRepOld.sub(amount) */\n      jump\t// in\n    tag_398:\n        /* \"contracts/LandbaseToken.sol\":7445:7486  uint256 srcRepNew = srcRepOld.sub(amount) */\n      swap1\n      pop\n        /* \"contracts/LandbaseToken.sol\":7505:7562  _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew) */\n      tag_400\n        /* \"contracts/LandbaseToken.sol\":7522:7528  srcRep */\n      dup7\n        /* \"contracts/LandbaseToken.sol\":7530:7539  srcRepNum */\n      dup5\n        /* \"contracts/LandbaseToken.sol\":7541:7550  srcRepOld */\n      dup5\n        /* \"contracts/LandbaseToken.sol\":7552:7561  srcRepNew */\n      dup5\n        /* \"contracts/LandbaseToken.sol\":7505:7521  _writeCheckpoint */\n      tag_401\n        /* \"contracts/LandbaseToken.sol\":7505:7562  _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew) */\n      jump\t// in\n    tag_400:\n        /* \"contracts/LandbaseToken.sol\":7177:7578  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/LandbaseToken.sol\":7151:7578  if (srcRep != address(0)) {... */\n    tag_394:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LandbaseToken.sol\":7598:7618  dstRep != address(0) */\n      dup3\n      and\n      iszero\n        /* \"contracts/LandbaseToken.sol\":7594:8021  if (dstRep != address(0)) {... */\n      tag_402\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LandbaseToken.sol\":7706:7728  numCheckpoints[dstRep] */\n      dup3\n      and\n        /* \"contracts/LandbaseToken.sol\":7687:7703  uint32 dstRepNum */\n      0x00\n        /* \"contracts/LandbaseToken.sol\":7706:7728  numCheckpoints[dstRep] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/LandbaseToken.sol\":7706:7720  numCheckpoints */\n      0x0b\n        /* \"contracts/LandbaseToken.sol\":7706:7728  numCheckpoints[dstRep] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xffffffff\n      and\n      swap1\n        /* \"contracts/LandbaseToken.sol\":7767:7780  dstRepNum > 0 */\n      dup2\n        /* \"contracts/LandbaseToken.sol\":7767:7869  dstRepNum > 0... */\n      tag_403\n      jumpi\n        /* \"contracts/LandbaseToken.sol\":7868:7869  0 */\n      0x00\n        /* \"contracts/LandbaseToken.sol\":7767:7869  dstRepNum > 0... */\n      jump(tag_404)\n    tag_403:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LandbaseToken.sol\":7804:7823  checkpoints[dstRep] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/LandbaseToken.sol\":7804:7815  checkpoints */\n      0x0a\n        /* \"contracts/LandbaseToken.sol\":7804:7823  checkpoints[dstRep] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"contracts/LandbaseToken.sol\":7824:7837  dstRepNum - 1 */\n      tag_405\n        /* \"contracts/LandbaseToken.sol\":7836:7837  1 */\n      0x01\n        /* \"contracts/LandbaseToken.sol\":7824:7833  dstRepNum */\n      dup6\n        /* \"contracts/LandbaseToken.sol\":7824:7837  dstRepNum - 1 */\n      tag_257\n      jump\t// in\n    tag_405:\n        /* \"contracts/LandbaseToken.sol\":7804:7838  checkpoints[dstRep][dstRepNum - 1] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/LandbaseToken.sol\":7804:7844  checkpoints[dstRep][dstRepNum - 1].votes */\n      0x01\n      add\n      sload\n        /* \"contracts/LandbaseToken.sol\":7767:7869  dstRepNum > 0... */\n    tag_404:\n        /* \"contracts/LandbaseToken.sol\":7747:7869  uint256 dstRepOld = dstRepNum > 0... */\n      swap1\n      pop\n        /* \"contracts/LandbaseToken.sol\":7888:7905  uint256 dstRepNew */\n      0x00\n        /* \"contracts/LandbaseToken.sol\":7908:7929  dstRepOld.add(amount) */\n      tag_406\n        /* \"contracts/LandbaseToken.sol\":7747:7869  uint256 dstRepOld = dstRepNum > 0... */\n      dup3\n        /* \"contracts/LandbaseToken.sol\":7922:7928  amount */\n      dup6\n        /* \"contracts/LandbaseToken.sol\":7908:7921  dstRepOld.add */\n      tag_213\n        /* \"contracts/LandbaseToken.sol\":7908:7929  dstRepOld.add(amount) */\n      jump\t// in\n    tag_406:\n        /* \"contracts/LandbaseToken.sol\":7888:7929  uint256 dstRepNew = dstRepOld.add(amount) */\n      swap1\n      pop\n        /* \"contracts/LandbaseToken.sol\":7948:8005  _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew) */\n      tag_316\n        /* \"contracts/LandbaseToken.sol\":7965:7971  dstRep */\n      dup6\n        /* \"contracts/LandbaseToken.sol\":7973:7982  dstRepNum */\n      dup5\n        /* \"contracts/LandbaseToken.sol\":7984:7993  dstRepOld */\n      dup5\n        /* \"contracts/LandbaseToken.sol\":7995:8004  dstRepNew */\n      dup5\n        /* \"contracts/LandbaseToken.sol\":7948:7964  _writeCheckpoint */\n      tag_401\n        /* \"contracts/LandbaseToken.sol\":7948:8005  _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew) */\n      jump\t// in\n        /* \"contracts/LandbaseToken.sol\":7594:8021  if (dstRep != address(0)) {... */\n    tag_402:\n        /* \"contracts/LandbaseToken.sol\":6974:8039  function _moveDelegates(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/structs/EnumerableSet.sol\":9063:9221  function at(AddressSet storage set, uint256 index) internal view returns (address) {... */\n    tag_238:\n        /* \"contracts/structs/EnumerableSet.sol\":9137:9144  address */\n      0x00\n        /* \"contracts/structs/EnumerableSet.sol\":9188:9210  _at(set._inner, index) */\n      tag_314\n        /* \"contracts/structs/EnumerableSet.sol\":9192:9195  set */\n      dup4\n        /* \"contracts/structs/EnumerableSet.sol\":9204:9209  index */\n      dup4\n        /* \"contracts/structs/EnumerableSet.sol\":9188:9191  _at */\n      tag_410\n        /* \"contracts/structs/EnumerableSet.sol\":9188:9210  _at(set._inner, index) */\n      jump\t// in\n        /* \"contracts/LandbaseToken.sol\":6540:6966  function _delegate(address delegator, address delegatee) internal {... */\n    tag_241:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LandbaseToken.sol\":6643:6664  _delegates[delegator] */\n      dup3\n      dup2\n      and\n        /* \"contracts/LandbaseToken.sol\":6617:6640  address currentDelegate */\n      0x00\n        /* \"contracts/LandbaseToken.sol\":6643:6664  _delegates[delegator] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/LandbaseToken.sol\":6643:6653  _delegates */\n      0x09\n        /* \"contracts/LandbaseToken.sol\":6643:6664  _delegates[delegator] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      dup1\n      sload\n        /* \"contracts/BEP20.sol\":1991:2000  _balances */\n      0x01\n        /* \"contracts/BEP20.sol\":1991:2009  _balances[account] */\n      dup5\n      mstore\n      dup3\n      dup7\n      keccak256\n      sload\n        /* \"contracts/LandbaseToken.sol\":6780:6801  _delegates[delegator] */\n      swap5\n      swap1\n      swap4\n      mstore\n        /* \"contracts/LandbaseToken.sol\":6780:6813  _delegates[delegator] = delegatee */\n      dup8\n      dup8\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup5\n      and\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/LandbaseToken.sol\":6831:6885  DelegateChanged(delegator, currentDelegate, delegatee) */\n      swap1\n      mload\n        /* \"contracts/LandbaseToken.sol\":6643:6664  _delegates[delegator] */\n      swap2\n      swap1\n      swap6\n      and\n      swap5\n        /* \"contracts/BEP20.sol\":1991:2009  _balances[account] */\n      swap2\n      swap4\n        /* \"contracts/LandbaseToken.sol\":6780:6813  _delegates[delegator] = delegatee */\n      swap2\n      swap3\n        /* \"contracts/LandbaseToken.sol\":6643:6664  _delegates[delegator] */\n      dup6\n      swap3\n      swap2\n        /* \"contracts/LandbaseToken.sol\":6831:6885  DelegateChanged(delegator, currentDelegate, delegatee) */\n      0x3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f\n      swap2\n        /* \"contracts/LandbaseToken.sol\":6617:6640  address currentDelegate */\n      swap1\n        /* \"contracts/LandbaseToken.sol\":6831:6885  DelegateChanged(delegator, currentDelegate, delegatee) */\n      log4\n        /* \"contracts/LandbaseToken.sol\":6898:6958  _moveDelegates(currentDelegate, delegatee, delegatorBalance) */\n      tag_413\n        /* \"contracts/LandbaseToken.sol\":6913:6928  currentDelegate */\n      dup3\n        /* \"contracts/LandbaseToken.sol\":6930:6939  delegatee */\n      dup5\n        /* \"contracts/LandbaseToken.sol\":6941:6957  delegatorBalance */\n      dup4\n        /* \"contracts/LandbaseToken.sol\":6898:6912  _moveDelegates */\n      tag_223\n        /* \"contracts/LandbaseToken.sol\":6898:6958  _moveDelegates(currentDelegate, delegatee, delegatorBalance) */\n      jump\t// in\n    tag_413:\n        /* \"contracts/LandbaseToken.sol\":6606:6966  {... */\n      pop\n      pop\n        /* \"contracts/LandbaseToken.sol\":6540:6966  function _delegate(address delegator, address delegatee) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/access/Ownable.sol\":2106:2279  function _setOwner(address newOwner) private {... */\n    tag_250:\n        /* \"contracts/access/Ownable.sol\":2162:2178  address oldOwner */\n      0x00\n        /* \"contracts/access/Ownable.sol\":2181:2187  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/access/Ownable.sol\":2198:2215  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"contracts/access/Ownable.sol\":2231:2271  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"contracts/access/Ownable.sol\":2181:2187  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"contracts/access/Ownable.sol\":2231:2271  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"contracts/access/Ownable.sol\":2162:2178  address oldOwner */\n      swap1\n        /* \"contracts/access/Ownable.sol\":2231:2271  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"contracts/access/Ownable.sol\":2151:2279  {... */\n      pop\n        /* \"contracts/access/Ownable.sol\":2106:2279  function _setOwner(address newOwner) private {... */\n      pop\n      jump\t// out\n        /* \"contracts/structs/EnumerableSet.sol\":7767:7919  function add(AddressSet storage set, address value) internal returns (bool) {... */\n    tag_292:\n        /* \"contracts/structs/EnumerableSet.sol\":7837:7841  bool */\n      0x00\n        /* \"contracts/structs/EnumerableSet.sol\":7861:7911  _add(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_314\n        /* \"contracts/structs/EnumerableSet.sol\":7866:7869  set */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/structs/EnumerableSet.sol\":7886:7909  uint256(uint160(value)) */\n      dup5\n      and\n        /* \"contracts/structs/EnumerableSet.sol\":7861:7865  _add */\n      tag_417\n        /* \"contracts/structs/EnumerableSet.sol\":7861:7911  _add(set._inner, bytes32(uint256(uint160(value)))) */\n      jump\t// in\n        /* \"contracts/structs/EnumerableSet.sol\":8339:8506  function contains(AddressSet storage set, address value) internal view returns (bool) {... */\n    tag_311:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/structs/EnumerableSet.sol\":8473:8496  uint256(uint160(value)) */\n      dup2\n      and\n        /* \"contracts/structs/EnumerableSet.sol\":8419:8423  bool */\n      0x00\n        /* \"contracts/structs/EnumerableSet.sol\":3875:3894  set._indexes[value] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/structs/EnumerableSet.sol\":3875:3887  set._indexes */\n      0x01\n      dup4\n      add\n        /* \"contracts/structs/EnumerableSet.sol\":3875:3894  set._indexes[value] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/structs/EnumerableSet.sol\":3875:3899  set._indexes[value] != 0 */\n      iszero\n      iszero\n        /* \"contracts/structs/EnumerableSet.sol\":8443:8498  _contains(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_314\n        /* \"contracts/structs/EnumerableSet.sol\":3778:3907  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\n      jump\n        /* \"contracts/structs/EnumerableSet.sol\":2272:3692  function _remove(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_367:\n        /* \"contracts/structs/EnumerableSet.sol\":2338:2342  bool */\n      0x00\n        /* \"contracts/structs/EnumerableSet.sol\":2477:2496  set._indexes[value] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/structs/EnumerableSet.sol\":2477:2489  set._indexes */\n      0x01\n      dup4\n      add\n        /* \"contracts/structs/EnumerableSet.sol\":2477:2496  set._indexes[value] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/structs/EnumerableSet.sol\":2513:2528  valueIndex != 0 */\n      dup1\n      iszero\n        /* \"contracts/structs/EnumerableSet.sol\":2509:3685  if (valueIndex != 0) {... */\n      tag_424\n      jumpi\n        /* \"contracts/structs/EnumerableSet.sol\":2888:2909  uint256 toDeleteIndex */\n      0x00\n        /* \"contracts/structs/EnumerableSet.sol\":2912:2926  valueIndex - 1 */\n      tag_425\n        /* \"contracts/structs/EnumerableSet.sol\":2925:2926  1 */\n      0x01\n        /* \"contracts/structs/EnumerableSet.sol\":2912:2922  valueIndex */\n      dup4\n        /* \"contracts/structs/EnumerableSet.sol\":2912:2926  valueIndex - 1 */\n      tag_233\n      jump\t// in\n    tag_425:\n        /* \"contracts/structs/EnumerableSet.sol\":2961:2979  set._values.length */\n      dup6\n      sload\n        /* \"contracts/structs/EnumerableSet.sol\":2888:2926  uint256 toDeleteIndex = valueIndex - 1 */\n      swap1\n      swap2\n      pop\n        /* \"contracts/structs/EnumerableSet.sol\":2941:2958  uint256 lastIndex */\n      0x00\n      swap1\n        /* \"contracts/structs/EnumerableSet.sol\":2961:2983  set._values.length - 1 */\n      tag_426\n      swap1\n        /* \"contracts/structs/EnumerableSet.sol\":2982:2983  1 */\n      0x01\n      swap1\n        /* \"contracts/structs/EnumerableSet.sol\":2961:2983  set._values.length - 1 */\n      tag_233\n      jump\t// in\n    tag_426:\n        /* \"contracts/structs/EnumerableSet.sol\":2941:2983  uint256 lastIndex = set._values.length - 1 */\n      swap1\n      pop\n        /* \"contracts/structs/EnumerableSet.sol\":3017:3030  toDeleteIndex */\n      dup2\n        /* \"contracts/structs/EnumerableSet.sol\":3004:3013  lastIndex */\n      dup2\n        /* \"contracts/structs/EnumerableSet.sol\":3004:3030  lastIndex != toDeleteIndex */\n      eq\n        /* \"contracts/structs/EnumerableSet.sol\":3000:3405  if (lastIndex != toDeleteIndex) {... */\n      tag_427\n      jumpi\n        /* \"contracts/structs/EnumerableSet.sol\":3051:3068  bytes32 lastvalue */\n      0x00\n        /* \"contracts/structs/EnumerableSet.sol\":3071:3074  set */\n      dup7\n        /* \"contracts/structs/EnumerableSet.sol\":3071:3082  set._values */\n      0x00\n      add\n        /* \"contracts/structs/EnumerableSet.sol\":3083:3092  lastIndex */\n      dup3\n        /* \"contracts/structs/EnumerableSet.sol\":3071:3093  set._values[lastIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_429\n      jumpi\n      tag_429\n      tag_430\n      jump\t// in\n    tag_429:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"contracts/structs/EnumerableSet.sol\":3051:3093  bytes32 lastvalue = set._values[lastIndex] */\n      swap1\n      pop\n        /* \"contracts/structs/EnumerableSet.sol\":3225:3234  lastvalue */\n      dup1\n        /* \"contracts/structs/EnumerableSet.sol\":3196:3199  set */\n      dup8\n        /* \"contracts/structs/EnumerableSet.sol\":3196:3207  set._values */\n      0x00\n      add\n        /* \"contracts/structs/EnumerableSet.sol\":3208:3221  toDeleteIndex */\n      dup5\n        /* \"contracts/structs/EnumerableSet.sol\":3196:3222  set._values[toDeleteIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_433\n      jumpi\n      tag_433\n      tag_430\n      jump\t// in\n    tag_433:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n        /* \"contracts/structs/EnumerableSet.sol\":3196:3234  set._values[toDeleteIndex] = lastvalue */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"contracts/structs/EnumerableSet.sol\":3310:3333  set._indexes[lastvalue] */\n      swap2\n      dup3\n      mstore\n        /* \"contracts/structs/EnumerableSet.sol\":3310:3322  set._indexes */\n      0x01\n      dup9\n      add\n        /* \"contracts/structs/EnumerableSet.sol\":3310:3333  set._indexes[lastvalue] */\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/structs/EnumerableSet.sol\":3310:3346  set._indexes[lastvalue] = valueIndex */\n      dup4\n      swap1\n      sstore\n        /* \"contracts/structs/EnumerableSet.sol\":3000:3405  if (lastIndex != toDeleteIndex) {... */\n    tag_427:\n        /* \"contracts/structs/EnumerableSet.sol\":3486:3503  set._values.pop() */\n      dup6\n      sload\n        /* \"contracts/structs/EnumerableSet.sol\":3486:3489  set */\n      dup7\n      swap1\n        /* \"contracts/structs/EnumerableSet.sol\":3486:3503  set._values.pop() */\n      dup1\n      tag_436\n      jumpi\n      tag_436\n      tag_437\n      jump\t// in\n    tag_436:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"contracts/structs/EnumerableSet.sol\":3581:3584  set */\n      dup6\n        /* \"contracts/structs/EnumerableSet.sol\":3581:3593  set._indexes */\n      0x01\n      add\n        /* \"contracts/structs/EnumerableSet.sol\":3581:3600  set._indexes[value] */\n      0x00\n        /* \"contracts/structs/EnumerableSet.sol\":3594:3599  value */\n      dup7\n        /* \"contracts/structs/EnumerableSet.sol\":3581:3600  set._indexes[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/structs/EnumerableSet.sol\":3574:3600  delete set._indexes[value] */\n      0x00\n      swap1\n      sstore\n        /* \"contracts/structs/EnumerableSet.sol\":3624:3628  true */\n      0x01\n        /* \"contracts/structs/EnumerableSet.sol\":3617:3628  return true */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_181)\n        /* \"contracts/structs/EnumerableSet.sol\":2509:3685  if (valueIndex != 0) {... */\n    tag_424:\n        /* \"contracts/structs/EnumerableSet.sol\":3668:3673  false */\n      0x00\n        /* \"contracts/structs/EnumerableSet.sol\":3661:3673  return false */\n      swap2\n      pop\n      pop\n      jump(tag_181)\n        /* \"contracts/libraries/SafeMath.sol\":3144:3242  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_399:\n        /* \"contracts/libraries/SafeMath.sol\":3202:3209  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":3229:3234  a - b */\n      tag_314\n        /* \"contracts/libraries/SafeMath.sol\":3233:3234  b */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":3229:3230  a */\n      dup5\n        /* \"contracts/libraries/SafeMath.sol\":3229:3234  a - b */\n      tag_233\n      jump\t// in\n        /* \"contracts/LandbaseToken.sol\":8047:8864  function _writeCheckpoint(... */\n    tag_401:\n        /* \"contracts/LandbaseToken.sol\":8212:8230  uint32 blockNumber */\n      0x00\n        /* \"contracts/LandbaseToken.sol\":8233:8350  safe32(... */\n      tag_443\n        /* \"contracts/LandbaseToken.sol\":8254:8266  block.number */\n      number\n        /* \"contracts/LandbaseToken.sol\":8233:8350  safe32(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x38\n      dup2\n      mstore\n      0x20\n      add\n      data_19ee87d38a98c92b75a5c0cf6d80ba3454da2a59db748607c0a0f9f22ed20008\n      0x38\n      swap2\n      codecopy\n        /* \"contracts/LandbaseToken.sol\":8233:8239  safe32 */\n      tag_444\n        /* \"contracts/LandbaseToken.sol\":8233:8350  safe32(... */\n      jump\t// in\n    tag_443:\n        /* \"contracts/LandbaseToken.sol\":8212:8350  uint32 blockNumber = safe32(... */\n      swap1\n      pop\n        /* \"contracts/LandbaseToken.sol\":8396:8397  0 */\n      0x00\n        /* \"contracts/LandbaseToken.sol\":8381:8393  nCheckpoints */\n      dup5\n        /* \"contracts/LandbaseToken.sol\":8381:8397  nCheckpoints > 0 */\n      0xffffffff\n      and\n      gt\n        /* \"contracts/LandbaseToken.sol\":8381:8479  nCheckpoints > 0 &&... */\n      dup1\n      iszero\n      tag_445\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LandbaseToken.sol\":8414:8436  checkpoints[delegatee] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/LandbaseToken.sol\":8414:8425  checkpoints */\n      0x0a\n        /* \"contracts/LandbaseToken.sol\":8414:8436  checkpoints[delegatee] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/LandbaseToken.sol\":8414:8479  checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n      0xffffffff\n      dup4\n      and\n      swap2\n        /* \"contracts/LandbaseToken.sol\":8437:8453  nCheckpoints - 1 */\n      tag_446\n        /* \"contracts/LandbaseToken.sol\":8452:8453  1 */\n      0x01\n        /* \"contracts/LandbaseToken.sol\":8437:8449  nCheckpoints */\n      dup9\n        /* \"contracts/LandbaseToken.sol\":8437:8453  nCheckpoints - 1 */\n      tag_257\n      jump\t// in\n    tag_446:\n        /* \"contracts/LandbaseToken.sol\":8414:8454  checkpoints[delegatee][nCheckpoints - 1] */\n      0xffffffff\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"contracts/LandbaseToken.sol\":8414:8464  checkpoints[delegatee][nCheckpoints - 1].fromBlock */\n      sload\n      and\n        /* \"contracts/LandbaseToken.sol\":8414:8479  checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n      eq\n        /* \"contracts/LandbaseToken.sol\":8381:8479  nCheckpoints > 0 &&... */\n    tag_445:\n        /* \"contracts/LandbaseToken.sol\":8363:8788  if (... */\n      iszero\n      tag_447\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LandbaseToken.sol\":8506:8528  checkpoints[delegatee] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/LandbaseToken.sol\":8506:8517  checkpoints */\n      0x0a\n        /* \"contracts/LandbaseToken.sol\":8506:8528  checkpoints[delegatee] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/LandbaseToken.sol\":8555:8563  newVotes */\n      dup4\n      swap2\n        /* \"contracts/LandbaseToken.sol\":8529:8545  nCheckpoints - 1 */\n      tag_448\n        /* \"contracts/LandbaseToken.sol\":8544:8545  1 */\n      0x01\n        /* \"contracts/LandbaseToken.sol\":8529:8541  nCheckpoints */\n      dup9\n        /* \"contracts/LandbaseToken.sol\":8529:8545  nCheckpoints - 1 */\n      tag_257\n      jump\t// in\n    tag_448:\n        /* \"contracts/LandbaseToken.sol\":8506:8546  checkpoints[delegatee][nCheckpoints - 1] */\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"contracts/LandbaseToken.sol\":8506:8552  checkpoints[delegatee][nCheckpoints - 1].votes */\n      0x01\n      add\n        /* \"contracts/LandbaseToken.sol\":8506:8563  checkpoints[delegatee][nCheckpoints - 1].votes = newVotes */\n      sstore\n        /* \"contracts/LandbaseToken.sol\":8363:8788  if (... */\n      jump(tag_449)\n    tag_447:\n        /* \"contracts/LandbaseToken.sol\":8635:8717  Checkpoint(... */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n      0xffffffff\n      dup4\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      dup7\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LandbaseToken.sol\":8596:8618  checkpoints[delegatee] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/LandbaseToken.sol\":8596:8607  checkpoints */\n      0x0a\n        /* \"contracts/LandbaseToken.sol\":8596:8618  checkpoints[delegatee] */\n      dup4\n      mstore\n      dup6\n      dup2\n      keccak256\n        /* \"contracts/LandbaseToken.sol\":8596:8632  checkpoints[delegatee][nCheckpoints] */\n      dup11\n      dup6\n      and\n      dup3\n      mstore\n      swap1\n      swap3\n      mstore\n      swap4\n      swap1\n      keccak256\n        /* \"contracts/LandbaseToken.sol\":8596:8717  checkpoints[delegatee][nCheckpoints] = Checkpoint(... */\n      swap2\n      mload\n      dup3\n      sload\n      not(0xffffffff)\n      and\n      swap2\n      and\n      or\n      dup2\n      sstore\n      swap1\n      mload\n      0x01\n      swap2\n      dup3\n      add\n      sstore\n        /* \"contracts/LandbaseToken.sol\":8760:8776  nCheckpoints + 1 */\n      tag_450\n      swap1\n        /* \"contracts/LandbaseToken.sol\":8596:8632  checkpoints[delegatee][nCheckpoints] */\n      dup6\n      swap1\n        /* \"contracts/LandbaseToken.sol\":8760:8776  nCheckpoints + 1 */\n      tag_451\n      jump\t// in\n    tag_450:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LandbaseToken.sol\":8732:8757  numCheckpoints[delegatee] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/LandbaseToken.sol\":8732:8746  numCheckpoints */\n      0x0b\n        /* \"contracts/LandbaseToken.sol\":8732:8757  numCheckpoints[delegatee] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/LandbaseToken.sol\":8732:8776  numCheckpoints[delegatee] = nCheckpoints + 1 */\n      dup1\n      sload\n      not(0xffffffff)\n      and\n      0xffffffff\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/LandbaseToken.sol\":8363:8788  if (... */\n    tag_449:\n        /* \"contracts/LandbaseToken.sol\":8805:8856  DelegateVotesChanged(delegatee, oldVotes, newVotes) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":14093:14118   */\n      dup5\n      dup2\n      mstore\n        /* \"#utility.yul\":14149:14151   */\n      0x20\n        /* \"#utility.yul\":14134:14152   */\n      dup2\n      add\n        /* \"#utility.yul\":14127:14161   */\n      dup5\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LandbaseToken.sol\":8805:8856  DelegateVotesChanged(delegatee, oldVotes, newVotes) */\n      dup8\n      and\n      swap2\n      0xdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724\n      swap2\n        /* \"#utility.yul\":14066:14084   */\n      add\n        /* \"contracts/LandbaseToken.sol\":8805:8856  DelegateVotesChanged(delegatee, oldVotes, newVotes) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/LandbaseToken.sol\":8201:8864  {... */\n      pop\n        /* \"contracts/LandbaseToken.sol\":8047:8864  function _writeCheckpoint(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/structs/EnumerableSet.sol\":4456:4576  function _at(Set storage set, uint256 index) private view returns (bytes32) {... */\n    tag_410:\n        /* \"contracts/structs/EnumerableSet.sol\":4523:4530  bytes32 */\n      0x00\n        /* \"contracts/structs/EnumerableSet.sol\":4550:4553  set */\n      dup3\n        /* \"contracts/structs/EnumerableSet.sol\":4550:4561  set._values */\n      0x00\n      add\n        /* \"contracts/structs/EnumerableSet.sol\":4562:4567  index */\n      dup3\n        /* \"contracts/structs/EnumerableSet.sol\":4550:4568  set._values[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_456\n      jumpi\n      tag_456\n      tag_430\n      jump\t// in\n    tag_456:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"contracts/structs/EnumerableSet.sol\":4543:4568  return set._values[index] */\n      swap1\n      pop\n        /* \"contracts/structs/EnumerableSet.sol\":4456:4576  function _at(Set storage set, uint256 index) private view returns (bytes32) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/structs/EnumerableSet.sol\":1682:2096  function _add(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_417:\n        /* \"contracts/structs/EnumerableSet.sol\":1745:1749  bool */\n      0x00\n        /* \"contracts/structs/EnumerableSet.sol\":3875:3894  set._indexes[value] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/structs/EnumerableSet.sol\":3875:3887  set._indexes */\n      0x01\n      dup4\n      add\n        /* \"contracts/structs/EnumerableSet.sol\":3875:3894  set._indexes[value] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/structs/EnumerableSet.sol\":1762:2089  if (!_contains(set, value)) {... */\n      tag_460\n      jumpi\n      pop\n        /* \"contracts/structs/EnumerableSet.sol\":1805:1828  set._values.push(value) */\n      dup2\n      sload\n      0x01\n      dup2\n      dup2\n      add\n      dup5\n      sstore\n        /* \"contracts/structs/EnumerableSet.sol\":1805:1816  set._values */\n      0x00\n        /* \"contracts/structs/EnumerableSet.sol\":1805:1828  set._values.push(value) */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      keccak256\n      swap1\n      swap4\n      add\n      dup5\n      swap1\n      sstore\n        /* \"contracts/structs/EnumerableSet.sol\":1988:2006  set._values.length */\n      dup5\n      sload\n        /* \"contracts/structs/EnumerableSet.sol\":1966:1985  set._indexes[value] */\n      dup5\n      dup3\n      mstore\n        /* \"contracts/structs/EnumerableSet.sol\":1966:1978  set._indexes */\n      dup3\n      dup7\n      add\n        /* \"contracts/structs/EnumerableSet.sol\":1966:1985  set._indexes[value] */\n      swap1\n      swap4\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/structs/EnumerableSet.sol\":1966:2006  set._indexes[value] = set._values.length */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/structs/EnumerableSet.sol\":2021:2032  return true */\n      jump(tag_181)\n        /* \"contracts/structs/EnumerableSet.sol\":1762:2089  if (!_contains(set, value)) {... */\n    tag_460:\n      pop\n        /* \"contracts/structs/EnumerableSet.sol\":2072:2077  false */\n      0x00\n        /* \"contracts/structs/EnumerableSet.sol\":2065:2077  return false */\n      jump(tag_181)\n        /* \"contracts/LandbaseToken.sol\":8872:9068  function safe32(uint256 n, string memory errorMessage)... */\n    tag_444:\n        /* \"contracts/LandbaseToken.sol\":8977:8983  uint32 */\n      0x00\n        /* \"contracts/LandbaseToken.sol\":9020:9032  errorMessage */\n      dup2\n        /* \"contracts/LandbaseToken.sol\":9013:9018  2**32 */\n      0x0100000000\n        /* \"contracts/LandbaseToken.sol\":9009:9018  n < 2**32 */\n      dup5\n      lt\n        /* \"contracts/LandbaseToken.sol\":9001:9033  require(n < 2**32, errorMessage) */\n      tag_465\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_465:\n      pop\n        /* \"contracts/LandbaseToken.sol\":9058:9059  n */\n      swap2\n      swap3\n        /* \"contracts/LandbaseToken.sol\":8872:9068  function safe32(uint256 n, string memory errorMessage)... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":196:793   */\n    tag_49:\n        /* \"#utility.yul\":308:312   */\n      0x00\n        /* \"#utility.yul\":337:339   */\n      0x20\n        /* \"#utility.yul\":366:368   */\n      dup1\n        /* \"#utility.yul\":355:364   */\n      dup4\n        /* \"#utility.yul\":348:369   */\n      mstore\n        /* \"#utility.yul\":398:404   */\n      dup4\n        /* \"#utility.yul\":392:405   */\n      mload\n        /* \"#utility.yul\":441:447   */\n      dup1\n        /* \"#utility.yul\":436:438   */\n      dup3\n        /* \"#utility.yul\":425:434   */\n      dup6\n        /* \"#utility.yul\":421:439   */\n      add\n        /* \"#utility.yul\":414:448   */\n      mstore\n        /* \"#utility.yul\":466:467   */\n      0x00\n        /* \"#utility.yul\":476:616   */\n    tag_472:\n        /* \"#utility.yul\":490:496   */\n      dup2\n        /* \"#utility.yul\":487:488   */\n      dup2\n        /* \"#utility.yul\":484:497   */\n      lt\n        /* \"#utility.yul\":476:616   */\n      iszero\n      tag_474\n      jumpi\n        /* \"#utility.yul\":585:599   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":581:604   */\n      dup4\n      add\n        /* \"#utility.yul\":575:605   */\n      mload\n        /* \"#utility.yul\":551:568   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":570:572   */\n      0x40\n        /* \"#utility.yul\":547:573   */\n      add\n        /* \"#utility.yul\":540:606   */\n      mstore\n        /* \"#utility.yul\":505:515   */\n      dup3\n      add\n        /* \"#utility.yul\":476:616   */\n      jump(tag_472)\n    tag_474:\n        /* \"#utility.yul\":634:640   */\n      dup2\n        /* \"#utility.yul\":631:632   */\n      dup2\n        /* \"#utility.yul\":628:641   */\n      gt\n        /* \"#utility.yul\":625:716   */\n      iszero\n      tag_475\n      jumpi\n        /* \"#utility.yul\":704:705   */\n      0x00\n        /* \"#utility.yul\":699:701   */\n      0x40\n        /* \"#utility.yul\":690:696   */\n      dup4\n        /* \"#utility.yul\":679:688   */\n      dup8\n        /* \"#utility.yul\":675:697   */\n      add\n        /* \"#utility.yul\":671:702   */\n      add\n        /* \"#utility.yul\":664:706   */\n      mstore\n        /* \"#utility.yul\":625:716   */\n    tag_475:\n      pop\n        /* \"#utility.yul\":777:779   */\n      0x1f\n        /* \"#utility.yul\":756:771   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":752:781   */\n      and\n        /* \"#utility.yul\":737:782   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":784:786   */\n      0x40\n        /* \"#utility.yul\":733:787   */\n      add\n      swap4\n        /* \"#utility.yul\":196:793   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":798:971   */\n    tag_467:\n        /* \"#utility.yul\":866:886   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":915:946   */\n      dup2\n      and\n        /* \"#utility.yul\":905:947   */\n      dup2\n      eq\n        /* \"#utility.yul\":895:965   */\n      tag_193\n      jumpi\n        /* \"#utility.yul\":961:962   */\n      0x00\n        /* \"#utility.yul\":958:959   */\n      dup1\n        /* \"#utility.yul\":951:963   */\n      revert\n        /* \"#utility.yul\":976:1230   */\n    tag_52:\n        /* \"#utility.yul\":1044:1050   */\n      0x00\n        /* \"#utility.yul\":1052:1058   */\n      dup1\n        /* \"#utility.yul\":1105:1107   */\n      0x40\n        /* \"#utility.yul\":1093:1102   */\n      dup4\n        /* \"#utility.yul\":1084:1091   */\n      dup6\n        /* \"#utility.yul\":1080:1103   */\n      sub\n        /* \"#utility.yul\":1076:1108   */\n      slt\n        /* \"#utility.yul\":1073:1125   */\n      iszero\n      tag_479\n      jumpi\n        /* \"#utility.yul\":1121:1122   */\n      0x00\n        /* \"#utility.yul\":1118:1119   */\n      dup1\n        /* \"#utility.yul\":1111:1123   */\n      revert\n        /* \"#utility.yul\":1073:1125   */\n    tag_479:\n        /* \"#utility.yul\":1144:1173   */\n      tag_480\n        /* \"#utility.yul\":1163:1172   */\n      dup4\n        /* \"#utility.yul\":1144:1173   */\n      tag_467\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":1134:1173   */\n      swap5\n        /* \"#utility.yul\":1220:1222   */\n      0x20\n        /* \"#utility.yul\":1205:1223   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1192:1224   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":976:1230   */\n      jump\t// out\n        /* \"#utility.yul\":1609:1795   */\n    tag_65:\n        /* \"#utility.yul\":1668:1674   */\n      0x00\n        /* \"#utility.yul\":1721:1723   */\n      0x20\n        /* \"#utility.yul\":1709:1718   */\n      dup3\n        /* \"#utility.yul\":1700:1707   */\n      dup5\n        /* \"#utility.yul\":1696:1719   */\n      sub\n        /* \"#utility.yul\":1692:1724   */\n      slt\n        /* \"#utility.yul\":1689:1741   */\n      iszero\n      tag_484\n      jumpi\n        /* \"#utility.yul\":1737:1738   */\n      0x00\n        /* \"#utility.yul\":1734:1735   */\n      dup1\n        /* \"#utility.yul\":1727:1739   */\n      revert\n        /* \"#utility.yul\":1689:1741   */\n    tag_484:\n        /* \"#utility.yul\":1760:1789   */\n      tag_314\n        /* \"#utility.yul\":1779:1788   */\n      dup3\n        /* \"#utility.yul\":1760:1789   */\n      tag_467\n      jump\t// in\n        /* \"#utility.yul\":1800:2128   */\n    tag_70:\n        /* \"#utility.yul\":1877:1883   */\n      0x00\n        /* \"#utility.yul\":1885:1891   */\n      dup1\n        /* \"#utility.yul\":1893:1899   */\n      0x00\n        /* \"#utility.yul\":1946:1948   */\n      0x60\n        /* \"#utility.yul\":1934:1943   */\n      dup5\n        /* \"#utility.yul\":1925:1932   */\n      dup7\n        /* \"#utility.yul\":1921:1944   */\n      sub\n        /* \"#utility.yul\":1917:1949   */\n      slt\n        /* \"#utility.yul\":1914:1966   */\n      iszero\n      tag_487\n      jumpi\n        /* \"#utility.yul\":1962:1963   */\n      0x00\n        /* \"#utility.yul\":1959:1960   */\n      dup1\n        /* \"#utility.yul\":1952:1964   */\n      revert\n        /* \"#utility.yul\":1914:1966   */\n    tag_487:\n        /* \"#utility.yul\":1985:2014   */\n      tag_488\n        /* \"#utility.yul\":2004:2013   */\n      dup5\n        /* \"#utility.yul\":1985:2014   */\n      tag_467\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":1975:2014   */\n      swap3\n      pop\n        /* \"#utility.yul\":2033:2071   */\n      tag_489\n        /* \"#utility.yul\":2067:2069   */\n      0x20\n        /* \"#utility.yul\":2056:2065   */\n      dup6\n        /* \"#utility.yul\":2052:2070   */\n      add\n        /* \"#utility.yul\":2033:2071   */\n      tag_467\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":2023:2071   */\n      swap2\n      pop\n        /* \"#utility.yul\":2118:2120   */\n      0x40\n        /* \"#utility.yul\":2107:2116   */\n      dup5\n        /* \"#utility.yul\":2103:2121   */\n      add\n        /* \"#utility.yul\":2090:2122   */\n      calldataload\n        /* \"#utility.yul\":2080:2122   */\n      swap1\n      pop\n        /* \"#utility.yul\":1800:2128   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2530:2710   */\n    tag_92:\n        /* \"#utility.yul\":2589:2595   */\n      0x00\n        /* \"#utility.yul\":2642:2644   */\n      0x20\n        /* \"#utility.yul\":2630:2639   */\n      dup3\n        /* \"#utility.yul\":2621:2628   */\n      dup5\n        /* \"#utility.yul\":2617:2640   */\n      sub\n        /* \"#utility.yul\":2613:2645   */\n      slt\n        /* \"#utility.yul\":2610:2662   */\n      iszero\n      tag_493\n      jumpi\n        /* \"#utility.yul\":2658:2659   */\n      0x00\n        /* \"#utility.yul\":2655:2656   */\n      dup1\n        /* \"#utility.yul\":2648:2660   */\n      revert\n        /* \"#utility.yul\":2610:2662   */\n    tag_493:\n      pop\n        /* \"#utility.yul\":2681:2704   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2530:2710   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3530   */\n    tag_152:\n        /* \"#utility.yul\":3014:3020   */\n      0x00\n        /* \"#utility.yul\":3022:3028   */\n      dup1\n        /* \"#utility.yul\":3030:3036   */\n      0x00\n        /* \"#utility.yul\":3038:3044   */\n      dup1\n        /* \"#utility.yul\":3046:3052   */\n      0x00\n        /* \"#utility.yul\":3054:3060   */\n      dup1\n        /* \"#utility.yul\":3107:3110   */\n      0xc0\n        /* \"#utility.yul\":3095:3104   */\n      dup8\n        /* \"#utility.yul\":3086:3093   */\n      dup10\n        /* \"#utility.yul\":3082:3105   */\n      sub\n        /* \"#utility.yul\":3078:3111   */\n      slt\n        /* \"#utility.yul\":3075:3128   */\n      iszero\n      tag_496\n      jumpi\n        /* \"#utility.yul\":3124:3125   */\n      0x00\n        /* \"#utility.yul\":3121:3122   */\n      dup1\n        /* \"#utility.yul\":3114:3126   */\n      revert\n        /* \"#utility.yul\":3075:3128   */\n    tag_496:\n        /* \"#utility.yul\":3147:3176   */\n      tag_497\n        /* \"#utility.yul\":3166:3175   */\n      dup8\n        /* \"#utility.yul\":3147:3176   */\n      tag_467\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":3137:3176   */\n      swap6\n      pop\n        /* \"#utility.yul\":3223:3225   */\n      0x20\n        /* \"#utility.yul\":3212:3221   */\n      dup8\n        /* \"#utility.yul\":3208:3226   */\n      add\n        /* \"#utility.yul\":3195:3227   */\n      calldataload\n        /* \"#utility.yul\":3185:3227   */\n      swap5\n      pop\n        /* \"#utility.yul\":3274:3276   */\n      0x40\n        /* \"#utility.yul\":3263:3272   */\n      dup8\n        /* \"#utility.yul\":3259:3277   */\n      add\n        /* \"#utility.yul\":3246:3278   */\n      calldataload\n        /* \"#utility.yul\":3236:3278   */\n      swap4\n      pop\n        /* \"#utility.yul\":3328:3330   */\n      0x60\n        /* \"#utility.yul\":3317:3326   */\n      dup8\n        /* \"#utility.yul\":3313:3331   */\n      add\n        /* \"#utility.yul\":3300:3332   */\n      calldataload\n        /* \"#utility.yul\":3372:3376   */\n      0xff\n        /* \"#utility.yul\":3365:3370   */\n      dup2\n        /* \"#utility.yul\":3361:3377   */\n      and\n        /* \"#utility.yul\":3354:3359   */\n      dup2\n        /* \"#utility.yul\":3351:3378   */\n      eq\n        /* \"#utility.yul\":3341:3396   */\n      tag_498\n      jumpi\n        /* \"#utility.yul\":3392:3393   */\n      0x00\n        /* \"#utility.yul\":3389:3390   */\n      dup1\n        /* \"#utility.yul\":3382:3394   */\n      revert\n        /* \"#utility.yul\":3341:3396   */\n    tag_498:\n        /* \"#utility.yul\":2912:3530   */\n      swap6\n      swap9\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n        /* \"#utility.yul\":3467:3470   */\n      0x80\n        /* \"#utility.yul\":3452:3471   */\n      dup2\n      add\n        /* \"#utility.yul\":3439:3472   */\n      calldataload\n      swap5\n        /* \"#utility.yul\":3519:3522   */\n      0xa0\n        /* \"#utility.yul\":3504:3523   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":3491:3524   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":2912:3530   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3535:3795   */\n    tag_156:\n        /* \"#utility.yul\":3603:3609   */\n      0x00\n        /* \"#utility.yul\":3611:3617   */\n      dup1\n        /* \"#utility.yul\":3664:3666   */\n      0x40\n        /* \"#utility.yul\":3652:3661   */\n      dup4\n        /* \"#utility.yul\":3643:3650   */\n      dup6\n        /* \"#utility.yul\":3639:3662   */\n      sub\n        /* \"#utility.yul\":3635:3667   */\n      slt\n        /* \"#utility.yul\":3632:3684   */\n      iszero\n      tag_500\n      jumpi\n        /* \"#utility.yul\":3680:3681   */\n      0x00\n        /* \"#utility.yul\":3677:3678   */\n      dup1\n        /* \"#utility.yul\":3670:3682   */\n      revert\n        /* \"#utility.yul\":3632:3684   */\n    tag_500:\n        /* \"#utility.yul\":3703:3732   */\n      tag_501\n        /* \"#utility.yul\":3722:3731   */\n      dup4\n        /* \"#utility.yul\":3703:3732   */\n      tag_467\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":3693:3732   */\n      swap2\n      pop\n        /* \"#utility.yul\":3751:3789   */\n      tag_502\n        /* \"#utility.yul\":3785:3787   */\n      0x20\n        /* \"#utility.yul\":3774:3783   */\n      dup5\n        /* \"#utility.yul\":3770:3788   */\n      add\n        /* \"#utility.yul\":3751:3789   */\n      tag_467\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":3741:3789   */\n      swap1\n      pop\n        /* \"#utility.yul\":3535:3795   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3800:4150   */\n    tag_164:\n        /* \"#utility.yul\":3867:3873   */\n      0x00\n        /* \"#utility.yul\":3875:3881   */\n      dup1\n        /* \"#utility.yul\":3928:3930   */\n      0x40\n        /* \"#utility.yul\":3916:3925   */\n      dup4\n        /* \"#utility.yul\":3907:3914   */\n      dup6\n        /* \"#utility.yul\":3903:3926   */\n      sub\n        /* \"#utility.yul\":3899:3931   */\n      slt\n        /* \"#utility.yul\":3896:3948   */\n      iszero\n      tag_504\n      jumpi\n        /* \"#utility.yul\":3944:3945   */\n      0x00\n        /* \"#utility.yul\":3941:3942   */\n      dup1\n        /* \"#utility.yul\":3934:3946   */\n      revert\n        /* \"#utility.yul\":3896:3948   */\n    tag_504:\n        /* \"#utility.yul\":3967:3996   */\n      tag_505\n        /* \"#utility.yul\":3986:3995   */\n      dup4\n        /* \"#utility.yul\":3967:3996   */\n      tag_467\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":3957:3996   */\n      swap2\n      pop\n        /* \"#utility.yul\":4046:4048   */\n      0x20\n        /* \"#utility.yul\":4035:4044   */\n      dup4\n        /* \"#utility.yul\":4031:4049   */\n      add\n        /* \"#utility.yul\":4018:4050   */\n      calldataload\n        /* \"#utility.yul\":4090:4100   */\n      0xffffffff\n        /* \"#utility.yul\":4083:4088   */\n      dup2\n        /* \"#utility.yul\":4079:4101   */\n      and\n        /* \"#utility.yul\":4072:4077   */\n      dup2\n        /* \"#utility.yul\":4069:4102   */\n      eq\n        /* \"#utility.yul\":4059:4120   */\n      tag_506\n      jumpi\n        /* \"#utility.yul\":4116:4117   */\n      0x00\n        /* \"#utility.yul\":4113:4114   */\n      dup1\n        /* \"#utility.yul\":4106:4118   */\n      revert\n        /* \"#utility.yul\":4059:4120   */\n    tag_506:\n        /* \"#utility.yul\":4139:4144   */\n      dup1\n        /* \"#utility.yul\":4129:4144   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3800:4150   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4423:4803   */\n    tag_176:\n        /* \"#utility.yul\":4502:4503   */\n      0x01\n        /* \"#utility.yul\":4498:4510   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":4545:4557   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":4566:4627   */\n      tag_509\n      jumpi\n        /* \"#utility.yul\":4620:4624   */\n      0x7f\n        /* \"#utility.yul\":4612:4618   */\n      dup3\n        /* \"#utility.yul\":4608:4625   */\n      and\n        /* \"#utility.yul\":4598:4625   */\n      swap2\n      pop\n        /* \"#utility.yul\":4566:4627   */\n    tag_509:\n        /* \"#utility.yul\":4673:4675   */\n      0x20\n        /* \"#utility.yul\":4665:4671   */\n      dup3\n        /* \"#utility.yul\":4662:4676   */\n      lt\n        /* \"#utility.yul\":4642:4660   */\n      dup2\n        /* \"#utility.yul\":4639:4677   */\n      sub\n        /* \"#utility.yul\":4636:4797   */\n      tag_510\n      jumpi\n        /* \"#utility.yul\":4719:4729   */\n      0x4e487b71\n        /* \"#utility.yul\":4714:4717   */\n      0xe0\n        /* \"#utility.yul\":4710:4730   */\n      shl\n        /* \"#utility.yul\":4707:4708   */\n      0x00\n        /* \"#utility.yul\":4700:4731   */\n      mstore\n        /* \"#utility.yul\":4754:4758   */\n      0x22\n        /* \"#utility.yul\":4751:4752   */\n      0x04\n        /* \"#utility.yul\":4744:4759   */\n      mstore\n        /* \"#utility.yul\":4782:4786   */\n      0x24\n        /* \"#utility.yul\":4779:4780   */\n      0x00\n        /* \"#utility.yul\":4772:4787   */\n      revert\n        /* \"#utility.yul\":4636:4797   */\n    tag_510:\n      pop\n        /* \"#utility.yul\":4423:4803   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4808:5164   */\n    tag_192:\n        /* \"#utility.yul\":5010:5012   */\n      0x20\n        /* \"#utility.yul\":4992:5013   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5029:5047   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":5022:5052   */\n      mstore\n        /* \"#utility.yul\":5088:5122   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":5083:5085   */\n      0x40\n        /* \"#utility.yul\":5068:5086   */\n      dup3\n      add\n        /* \"#utility.yul\":5061:5123   */\n      mstore\n        /* \"#utility.yul\":5155:5157   */\n      0x60\n        /* \"#utility.yul\":5140:5158   */\n      add\n      swap1\n        /* \"#utility.yul\":4808:5164   */\n      jump\t// out\n        /* \"#utility.yul\":5931:6058   */\n    tag_468:\n        /* \"#utility.yul\":5992:6002   */\n      0x4e487b71\n        /* \"#utility.yul\":5987:5990   */\n      0xe0\n        /* \"#utility.yul\":5983:6003   */\n      shl\n        /* \"#utility.yul\":5980:5981   */\n      0x00\n        /* \"#utility.yul\":5973:6004   */\n      mstore\n        /* \"#utility.yul\":6023:6027   */\n      0x11\n        /* \"#utility.yul\":6020:6021   */\n      0x04\n        /* \"#utility.yul\":6013:6028   */\n      mstore\n        /* \"#utility.yul\":6047:6051   */\n      0x24\n        /* \"#utility.yul\":6044:6045   */\n      0x00\n        /* \"#utility.yul\":6037:6052   */\n      revert\n        /* \"#utility.yul\":6063:6188   */\n    tag_233:\n        /* \"#utility.yul\":6103:6107   */\n      0x00\n        /* \"#utility.yul\":6131:6132   */\n      dup3\n        /* \"#utility.yul\":6128:6129   */\n      dup3\n        /* \"#utility.yul\":6125:6133   */\n      lt\n        /* \"#utility.yul\":6122:6156   */\n      iszero\n      tag_517\n      jumpi\n        /* \"#utility.yul\":6136:6154   */\n      tag_517\n      tag_468\n      jump\t// in\n    tag_517:\n      pop\n        /* \"#utility.yul\":6173:6182   */\n      sub\n      swap1\n        /* \"#utility.yul\":6063:6188   */\n      jump\t// out\n        /* \"#utility.yul\":6963:7184   */\n    tag_257:\n        /* \"#utility.yul\":7002:7006   */\n      0x00\n        /* \"#utility.yul\":7031:7041   */\n      0xffffffff\n        /* \"#utility.yul\":7091:7101   */\n      dup4\n      dup2\n      and\n      swap1\n        /* \"#utility.yul\":7061:7071   */\n      dup4\n      and\n        /* \"#utility.yul\":7113:7125   */\n      dup2\n      dup2\n      lt\n        /* \"#utility.yul\":7110:7148   */\n      iszero\n      tag_522\n      jumpi\n        /* \"#utility.yul\":7128:7146   */\n      tag_522\n      tag_468\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":7165:7178   */\n      sub\n      swap4\n        /* \"#utility.yul\":6963:7184   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7189:7477   */\n    tag_266:\n        /* \"#utility.yul\":7228:7229   */\n      0x00\n        /* \"#utility.yul\":7254:7264   */\n      0xffffffff\n        /* \"#utility.yul\":7291:7293   */\n      dup1\n        /* \"#utility.yul\":7288:7289   */\n      dup5\n        /* \"#utility.yul\":7284:7294   */\n      and\n        /* \"#utility.yul\":7313:7316   */\n      dup1\n        /* \"#utility.yul\":7303:7437   */\n      tag_524\n      jumpi\n        /* \"#utility.yul\":7359:7369   */\n      0x4e487b71\n        /* \"#utility.yul\":7354:7357   */\n      0xe0\n        /* \"#utility.yul\":7350:7370   */\n      shl\n        /* \"#utility.yul\":7347:7348   */\n      0x00\n        /* \"#utility.yul\":7340:7371   */\n      mstore\n        /* \"#utility.yul\":7394:7398   */\n      0x12\n        /* \"#utility.yul\":7391:7392   */\n      0x04\n        /* \"#utility.yul\":7384:7399   */\n      mstore\n        /* \"#utility.yul\":7422:7426   */\n      0x24\n        /* \"#utility.yul\":7419:7420   */\n      0x00\n        /* \"#utility.yul\":7412:7427   */\n      revert\n        /* \"#utility.yul\":7303:7437   */\n    tag_524:\n        /* \"#utility.yul\":7455:7465   */\n      swap3\n      and\n        /* \"#utility.yul\":7451:7471   */\n      swap2\n      swap1\n      swap2\n      div\n      swap3\n        /* \"#utility.yul\":7189:7477   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9946:10081   */\n    tag_334:\n        /* \"#utility.yul\":9985:9988   */\n      0x00\n        /* \"#utility.yul\":10006:10023   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":10003:10046   */\n      tag_533\n      jumpi\n        /* \"#utility.yul\":10026:10044   */\n      tag_533\n      tag_468\n      jump\t// in\n    tag_533:\n      pop\n        /* \"#utility.yul\":10073:10074   */\n      0x01\n        /* \"#utility.yul\":10062:10075   */\n      add\n      swap1\n        /* \"#utility.yul\":9946:10081   */\n      jump\t// out\n        /* \"#utility.yul\":12929:13057   */\n    tag_383:\n        /* \"#utility.yul\":12969:12972   */\n      0x00\n        /* \"#utility.yul\":13000:13001   */\n      dup3\n        /* \"#utility.yul\":12996:13002   */\n      not\n        /* \"#utility.yul\":12993:12994   */\n      dup3\n        /* \"#utility.yul\":12990:13003   */\n      gt\n        /* \"#utility.yul\":12987:13026   */\n      iszero\n      tag_543\n      jumpi\n        /* \"#utility.yul\":13006:13024   */\n      tag_543\n      tag_468\n      jump\t// in\n    tag_543:\n      pop\n        /* \"#utility.yul\":13042:13051   */\n      add\n      swap1\n        /* \"#utility.yul\":12929:13057   */\n      jump\t// out\n        /* \"#utility.yul\":13422:13549   */\n    tag_430:\n        /* \"#utility.yul\":13483:13493   */\n      0x4e487b71\n        /* \"#utility.yul\":13478:13481   */\n      0xe0\n        /* \"#utility.yul\":13474:13494   */\n      shl\n        /* \"#utility.yul\":13471:13472   */\n      0x00\n        /* \"#utility.yul\":13464:13495   */\n      mstore\n        /* \"#utility.yul\":13514:13518   */\n      0x32\n        /* \"#utility.yul\":13511:13512   */\n      0x04\n        /* \"#utility.yul\":13504:13519   */\n      mstore\n        /* \"#utility.yul\":13538:13542   */\n      0x24\n        /* \"#utility.yul\":13535:13536   */\n      0x00\n        /* \"#utility.yul\":13528:13543   */\n      revert\n        /* \"#utility.yul\":13554:13681   */\n    tag_437:\n        /* \"#utility.yul\":13615:13625   */\n      0x4e487b71\n        /* \"#utility.yul\":13610:13613   */\n      0xe0\n        /* \"#utility.yul\":13606:13626   */\n      shl\n        /* \"#utility.yul\":13603:13604   */\n      0x00\n        /* \"#utility.yul\":13596:13627   */\n      mstore\n        /* \"#utility.yul\":13646:13650   */\n      0x31\n        /* \"#utility.yul\":13643:13644   */\n      0x04\n        /* \"#utility.yul\":13636:13651   */\n      mstore\n        /* \"#utility.yul\":13670:13674   */\n      0x24\n        /* \"#utility.yul\":13667:13668   */\n      0x00\n        /* \"#utility.yul\":13660:13675   */\n      revert\n        /* \"#utility.yul\":13686:13914   */\n    tag_451:\n        /* \"#utility.yul\":13725:13728   */\n      0x00\n        /* \"#utility.yul\":13753:13763   */\n      0xffffffff\n        /* \"#utility.yul\":13790:13792   */\n      dup1\n        /* \"#utility.yul\":13787:13788   */\n      dup4\n        /* \"#utility.yul\":13783:13793   */\n      and\n        /* \"#utility.yul\":13820:13822   */\n      dup2\n        /* \"#utility.yul\":13817:13818   */\n      dup6\n        /* \"#utility.yul\":13813:13823   */\n      and\n        /* \"#utility.yul\":13851:13854   */\n      dup1\n        /* \"#utility.yul\":13847:13849   */\n      dup4\n        /* \"#utility.yul\":13843:13855   */\n      sub\n        /* \"#utility.yul\":13838:13841   */\n      dup3\n        /* \"#utility.yul\":13835:13856   */\n      gt\n        /* \"#utility.yul\":13832:13879   */\n      iszero\n      tag_549\n      jumpi\n        /* \"#utility.yul\":13859:13877   */\n      tag_549\n      tag_468\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":13895:13908   */\n      add\n      swap5\n        /* \"#utility.yul\":13686:13914   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_19ee87d38a98c92b75a5c0cf6d80ba3454da2a59db748607c0a0f9f22ed20008 4c414e44424153453a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d62657220657863656564732033322062697473\n    data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e 42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73 42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22 42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa264697066735822122068c2a890dc29e564393190b3b1078f6268ea165c0038985395926fc944884d7664736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1416": {
									"entryPoint": null,
									"id": 1416,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_54": {
									"entryPoint": null,
									"id": 54,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_2716": {
									"entryPoint": 175,
									"id": 2716,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setOwner_1495": {
									"entryPoint": 179,
									"id": 1495,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 425,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:396:8",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "69:325:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "79:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "93:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "96:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "89:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "79:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "110:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "140:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "146:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "136:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "136:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "114:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "187:31:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "189:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "203:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "211:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "199:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "199:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "189:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "167:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:26:8"
															},
															"nodeType": "YulIf",
															"src": "157:61:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "277:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "298:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "305:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "310:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "301:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "301:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "291:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "291:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "291:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "342:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "345:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "335:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "335:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "335:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "370:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "373:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "363:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "363:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "363:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "233:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "264:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "253:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "253:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "230:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "230:38:8"
															},
															"nodeType": "YulIf",
															"src": "227:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "49:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "58:6:8",
														"type": ""
													}
												],
												"src": "14:380:8"
											}
										]
									},
									"contents": "{\n    { }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040518060400160405280600d81526020016c2630b7323130b9b29021b7b4b760991b815250604051806040016040528060038152602001624c424360e81b8152506200006e62000068620000af60201b60201c565b620000b3565b81516200008390600690602085019062000103565b5080516200009990600590602084019062000103565b50506004805460ff1916601217905550620001e5565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280546200011190620001a9565b90600052602060002090601f01602090048101928262000135576000855562000180565b82601f106200015057805160ff191683800117855562000180565b8280016001018555821562000180579182015b828111156200018057825182559160200191906001019062000163565b506200018e92915062000192565b5090565b5b808211156200018e576000815560010162000193565b600181811c90821680620001be57607f821691505b602082108103620001df57634e487b7160e01b600052602260045260246000fd5b50919050565b611e3380620001f56000396000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c8063782d6fe11161010f578063a9059cbb116100a2578063dd62ed3e11610071578063dd62ed3e14610481578063e7a324dc146104ba578063f1127ed8146104e1578063f2fde38b1461053857600080fd5b8063a9059cbb14610435578063aa271e1a14610448578063b4b5ea571461045b578063c3cda5201461046e57600080fd5b806395d89b41116100de57806395d89b41146103f4578063983b2d56146103fc578063a0712d681461040f578063a457c2d71461042257600080fd5b8063782d6fe1146103b05780637ecebe00146103c3578063893d20e8146103e35780638da5cb5b146103e357600080fd5b806339509351116101875780635c19a95c116101565780635c19a95c1461032f5780636fcfff451461034457806370a082311461037f578063715018a6146103a857600080fd5b806339509351146102b257806340c10f19146102c5578063587cde1e146102d85780635b7121f81461031c57600080fd5b806320606b70116101c357806320606b701461025057806323338b881461027757806323b872dd1461028a578063313ce5671461029d57600080fd5b80630323aac7146101f557806306fdde0314610210578063095ea7b31461022557806318160ddd14610248575b600080fd5b6101fd61054b565b6040519081526020015b60405180910390f35b61021861055c565b6040516102079190611a02565b610238610233366004611a6e565b6105ee565b6040519015158152602001610207565b6003546101fd565b6101fd7f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681565b610238610285366004611a98565b610605565b610238610298366004611ab3565b6106b3565b60045460405160ff9091168152602001610207565b6102386102c0366004611a6e565b61071c565b6102386102d3366004611a6e565b610752565b6103046102e6366004611a98565b6001600160a01b039081166000908152600960205260409020541690565b6040516001600160a01b039091168152602001610207565b61030461032a366004611aef565b6107d8565b61034261033d366004611a98565b610871565b005b61036a610352366004611a98565b600b6020526000908152604090205463ffffffff1681565b60405163ffffffff9091168152602001610207565b6101fd61038d366004611a98565b6001600160a01b031660009081526001602052604090205490565b61034261087e565b6101fd6103be366004611a6e565b6108b4565b6101fd6103d1366004611a98565b600c6020526000908152604090205481565b6000546001600160a01b0316610304565b610218610b20565b61023861040a366004611a98565b610b2f565b61023861041d366004611aef565b610bcc565b610238610430366004611a6e565b610c09565b610238610443366004611a6e565b610c58565b610238610456366004611a98565b610c65565b6101fd610469366004611a98565b610c72565b61034261047c366004611b08565b610ce7565b6101fd61048f366004611b68565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6101fd7fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf81565b61051c6104ef366004611b9b565b600a6020908152600092835260408084209091529082529020805460019091015463ffffffff9091169082565b6040805163ffffffff9093168352602083019190915201610207565b610342610546366004611a98565b610fc1565b60006105576007611059565b905090565b60606006805461056b90611bdb565b80601f016020809104026020016040519081016040528092919081815260200182805461059790611bdb565b80156105e45780601f106105b9576101008083540402835291602001916105e4565b820191906000526020600020905b8154815290600101906020018083116105c757829003601f168201915b5050505050905090565b60006105fb338484611063565b5060015b92915050565b600080546001600160a01b031633146106395760405162461bcd60e51b815260040161063090611c15565b60405180910390fd5b6001600160a01b0382166106a05760405162461bcd60e51b815260206004820152602860248201527f4c414e44424153453a205f64656c4d696e74657220697320746865207a65726f604482015267206164647265737360c01b6064820152608401610630565b6106ab600783611188565b90505b919050565b60006106c084848461119d565b610712843361070d85604051806060016040528060288152602001611d8b602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190611323565b611063565b5060019392505050565b3360008181526002602090815260408083206001600160a01b038716845290915281205490916105fb91859061070d908661134f565b600061075d33610c65565b6107a95760405162461bcd60e51b815260206004820152601860248201527f63616c6c6572206973206e6f7420746865206d696e74657200000000000000006044820152606401610630565b6107b3838361135b565b6001600160a01b038084166000908152600960205260408120546105fb921684611441565b600080546001600160a01b031633146108035760405162461bcd60e51b815260040161063090611c15565b600161080d61054b565b6108179190611c60565b8211156108665760405162461bcd60e51b815260206004820152601d60248201527f4c414e44424153453a20696e646578206f7574206f6620626f756e64730000006044820152606401610630565b6106ab6007836115a5565b61087b33826115b1565b50565b6000546001600160a01b031633146108a85760405162461bcd60e51b815260040161063090611c15565b6108b26000611631565b565b60004382106109195760405162461bcd60e51b815260206004820152602b60248201527f4c414e44424153453a3a6765745072696f72566f7465733a206e6f742079657460448201526a0819195d195c9b5a5b995960aa1b6064820152608401610630565b6001600160a01b0383166000908152600b602052604081205463ffffffff169081900361094a5760009150506105ff565b6001600160a01b0384166000908152600a60205260408120849161096f600185611c77565b63ffffffff908116825260208201929092526040016000205416116109d8576001600160a01b0384166000908152600a60205260408120906109b2600184611c77565b63ffffffff1663ffffffff168152602001908152602001600020600101549150506105ff565b6001600160a01b0384166000908152600a6020908152604080832083805290915290205463ffffffff16831015610a135760009150506105ff565b600080610a21600184611c77565b90505b8163ffffffff168163ffffffff161115610ae95760006002610a468484611c77565b610a509190611c9c565b610a5a9083611c77565b6001600160a01b0388166000908152600a6020908152604080832063ffffffff8086168552908352928190208151808301909252805490931680825260019093015491810191909152919250879003610abd576020015194506105ff9350505050565b805163ffffffff16871115610ad457819350610ae2565b610adf600183611c77565b92505b5050610a24565b506001600160a01b0385166000908152600a6020908152604080832063ffffffff9094168352929052206001015491505092915050565b60606005805461056b90611bdb565b600080546001600160a01b03163314610b5a5760405162461bcd60e51b815260040161063090611c15565b6001600160a01b038216610bc15760405162461bcd60e51b815260206004820152602860248201527f4c414e44424153453a205f6164644d696e74657220697320746865207a65726f604482015267206164647265737360c01b6064820152608401610630565b6106ab600783611681565b600080546001600160a01b03163314610bf75760405162461bcd60e51b815260040161063090611c15565b610c01338361135b565b506001919050565b60006105fb338461070d85604051806060016040528060258152602001611dd9602591393360009081526002602090815260408083206001600160a01b038d1684529091529020549190611323565b60006105fb33848461119d565b60006106ab600783611696565b6001600160a01b0381166000908152600b602052604081205463ffffffff1680610c9d576000610ce0565b6001600160a01b0383166000908152600a6020526040812090610cc1600184611c77565b63ffffffff1663ffffffff168152602001908152602001600020600101545b9392505050565b60007f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866610d1261055c565b80519060200120610d204690565b60408051602080820195909552808201939093526060830191909152306080808401919091528151808403909101815260a0830182528051908401207fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60c08401526001600160a01b038b1660e084015261010083018a90526101208084018a90528251808503909101815261014084019092528151919093012061190160f01b610160830152610162820183905261018282018190529192506000906101a20160408051601f198184030181528282528051602091820120600080855291840180845281905260ff8a169284019290925260608301889052608083018790529092509060019060a0016020604051602081039080840390855afa158015610e4c573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610ec25760405162461bcd60e51b815260206004820152602a60248201527f4c414e44424153453a3a64656c656761746542795369673a20696e76616c6964604482015269207369676e617475726560b01b6064820152608401610630565b6001600160a01b0381166000908152600c60205260408120805491610ee683611ccd565b919050558914610f475760405162461bcd60e51b815260206004820152602660248201527f4c414e44424153453a3a64656c656761746542795369673a20696e76616c6964604482015265206e6f6e636560d01b6064820152608401610630565b87421115610faa5760405162461bcd60e51b815260206004820152602a60248201527f4c414e44424153453a3a64656c656761746542795369673a207369676e6174756044820152691c9948195e1c1a5c995960b21b6064820152608401610630565b610fb4818b6115b1565b505050505b505050505050565b6000546001600160a01b03163314610feb5760405162461bcd60e51b815260040161063090611c15565b6001600160a01b0381166110505760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610630565b61087b81611631565b60006106ab825490565b6001600160a01b0383166110c55760405162461bcd60e51b8152602060048201526024808201527f42455032303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610630565b6001600160a01b0382166111265760405162461bcd60e51b815260206004820152602260248201527f42455032303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610630565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6000610ce0836001600160a01b0384166116b8565b6001600160a01b0383166112015760405162461bcd60e51b815260206004820152602560248201527f42455032303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610630565b6001600160a01b0382166112635760405162461bcd60e51b815260206004820152602360248201527f42455032303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610630565b6112a081604051806060016040528060268152602001611db3602691396001600160a01b0386166000908152600160205260409020549190611323565b6001600160a01b0380851660009081526001602052604080822093909355908416815220546112cf908261134f565b6001600160a01b0380841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061117b9085815260200190565b600081848411156113475760405162461bcd60e51b81526004016106309190611a02565b505050900390565b6000610ce08284611ce6565b6001600160a01b0382166113b15760405162461bcd60e51b815260206004820152601f60248201527f42455032303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610630565b6003546113be908261134f565b6003556001600160a01b0382166000908152600160205260409020546113e4908261134f565b6001600160a01b0383166000818152600160205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906114359085815260200190565b60405180910390a35050565b816001600160a01b0316836001600160a01b0316141580156114635750600081115b156115a0576001600160a01b03831615611506576001600160a01b0383166000908152600b602052604081205463ffffffff1690816114a35760006114e6565b6001600160a01b0385166000908152600a60205260408120906114c7600185611c77565b63ffffffff1663ffffffff168152602001908152602001600020600101545b905060006114f482856117ab565b9050611502868484846117b7565b5050505b6001600160a01b038216156115a0576001600160a01b0382166000908152600b602052604081205463ffffffff169081611541576000611584565b6001600160a01b0384166000908152600a6020526040812090611565600185611c77565b63ffffffff1663ffffffff168152602001908152602001600020600101545b90506000611592828561134f565b9050610fb9858484846117b7565b505050565b6000610ce08383611959565b6001600160a01b03828116600081815260096020818152604080842080546001845282862054949093528787166001600160a01b03198416811790915590519190951694919391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a461162b828483611441565b50505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000610ce0836001600160a01b038416611983565b6001600160a01b03811660009081526001830160205260408120541515610ce0565b600081815260018301602052604081205480156117a15760006116dc600183611c60565b85549091506000906116f090600190611c60565b905081811461175557600086600001828154811061171057611710611cfe565b906000526020600020015490508087600001848154811061173357611733611cfe565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061176657611766611d14565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506105ff565b60009150506105ff565b6000610ce08284611c60565b60006117db43604051806060016040528060388152602001611d53603891396119d2565b905060008463ffffffff1611801561183557506001600160a01b0385166000908152600a6020526040812063ffffffff831691611819600188611c77565b63ffffffff908116825260208201929092526040016000205416145b1561187e576001600160a01b0385166000908152600a60205260408120839161185f600188611c77565b63ffffffff16815260208101919091526040016000206001015561190e565b60408051808201825263ffffffff838116825260208083018681526001600160a01b038a166000908152600a83528581208a851682529092529390209151825463ffffffff1916911617815590516001918201556118dd908590611d2a565b6001600160a01b0386166000908152600b60205260409020805463ffffffff191663ffffffff929092169190911790555b60408051848152602081018490526001600160a01b038716917fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724910160405180910390a25050505050565b600082600001828154811061197057611970611cfe565b9060005260206000200154905092915050565b60008181526001830160205260408120546119ca575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556105ff565b5060006105ff565b60008164010000000084106119fa5760405162461bcd60e51b81526004016106309190611a02565b509192915050565b600060208083528351808285015260005b81811015611a2f57858101830151858201604001528201611a13565b81811115611a41576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146106ae57600080fd5b60008060408385031215611a8157600080fd5b611a8a83611a57565b946020939093013593505050565b600060208284031215611aaa57600080fd5b610ce082611a57565b600080600060608486031215611ac857600080fd5b611ad184611a57565b9250611adf60208501611a57565b9150604084013590509250925092565b600060208284031215611b0157600080fd5b5035919050565b60008060008060008060c08789031215611b2157600080fd5b611b2a87611a57565b95506020870135945060408701359350606087013560ff81168114611b4e57600080fd5b9598949750929560808101359460a0909101359350915050565b60008060408385031215611b7b57600080fd5b611b8483611a57565b9150611b9260208401611a57565b90509250929050565b60008060408385031215611bae57600080fd5b611bb783611a57565b9150602083013563ffffffff81168114611bd057600080fd5b809150509250929050565b600181811c90821680611bef57607f821691505b602082108103611c0f57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082821015611c7257611c72611c4a565b500390565b600063ffffffff83811690831681811015611c9457611c94611c4a565b039392505050565b600063ffffffff80841680611cc157634e487b7160e01b600052601260045260246000fd5b92169190910492915050565b600060018201611cdf57611cdf611c4a565b5060010190565b60008219821115611cf957611cf9611c4a565b500190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b600063ffffffff808316818516808303821115611d4957611d49611c4a565b0194935050505056fe4c414e44424153453a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d6265722065786365656473203332206269747342455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122068c2a890dc29e564393190b3b1078f6268ea165c0038985395926fc944884d7664736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH13 0x2630B7323130B9B29021B7B4B7 PUSH1 0x99 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x4C4243 PUSH1 0xE8 SHL DUP2 MSTORE POP PUSH3 0x6E PUSH3 0x68 PUSH3 0xAF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xB3 JUMP JUMPDEST DUP2 MLOAD PUSH3 0x83 SWAP1 PUSH1 0x6 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x103 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x99 SWAP1 PUSH1 0x5 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x103 JUMP JUMPDEST POP POP PUSH1 0x4 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE POP PUSH3 0x1E5 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x111 SWAP1 PUSH3 0x1A9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x135 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x180 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x150 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x180 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x180 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x180 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x163 JUMP JUMPDEST POP PUSH3 0x18E SWAP3 SWAP2 POP PUSH3 0x192 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x18E JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x193 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x1BE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1DF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E33 DUP1 PUSH3 0x1F5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x782D6FE1 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x481 JUMPI DUP1 PUSH4 0xE7A324DC EQ PUSH2 0x4BA JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x4E1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x538 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0xAA271E1A EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0xB4B5EA57 EQ PUSH2 0x45B JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x46E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0x983B2D56 EQ PUSH2 0x3FC JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x422 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x782D6FE1 EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x3E3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x5C19A95C GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0x5B7121F8 EQ PUSH2 0x31C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x20606B70 GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x20606B70 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x23338B88 EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x323AAC7 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x248 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FD PUSH2 0x54B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x218 PUSH2 0x55C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0x238 PUSH2 0x233 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A6E JUMP JUMPDEST PUSH2 0x5EE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x207 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x1FD JUMP JUMPDEST PUSH2 0x1FD PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 DUP2 JUMP JUMPDEST PUSH2 0x238 PUSH2 0x285 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A98 JUMP JUMPDEST PUSH2 0x605 JUMP JUMPDEST PUSH2 0x238 PUSH2 0x298 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AB3 JUMP JUMPDEST PUSH2 0x6B3 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x207 JUMP JUMPDEST PUSH2 0x238 PUSH2 0x2C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A6E JUMP JUMPDEST PUSH2 0x71C JUMP JUMPDEST PUSH2 0x238 PUSH2 0x2D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A6E JUMP JUMPDEST PUSH2 0x752 JUMP JUMPDEST PUSH2 0x304 PUSH2 0x2E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A98 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x207 JUMP JUMPDEST PUSH2 0x304 PUSH2 0x32A CALLDATASIZE PUSH1 0x4 PUSH2 0x1AEF JUMP JUMPDEST PUSH2 0x7D8 JUMP JUMPDEST PUSH2 0x342 PUSH2 0x33D CALLDATASIZE PUSH1 0x4 PUSH2 0x1A98 JUMP JUMPDEST PUSH2 0x871 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x36A PUSH2 0x352 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A98 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x207 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x38D CALLDATASIZE PUSH1 0x4 PUSH2 0x1A98 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x342 PUSH2 0x87E JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x3BE CALLDATASIZE PUSH1 0x4 PUSH2 0x1A6E JUMP JUMPDEST PUSH2 0x8B4 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x3D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A98 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x304 JUMP JUMPDEST PUSH2 0x218 PUSH2 0xB20 JUMP JUMPDEST PUSH2 0x238 PUSH2 0x40A CALLDATASIZE PUSH1 0x4 PUSH2 0x1A98 JUMP JUMPDEST PUSH2 0xB2F JUMP JUMPDEST PUSH2 0x238 PUSH2 0x41D CALLDATASIZE PUSH1 0x4 PUSH2 0x1AEF JUMP JUMPDEST PUSH2 0xBCC JUMP JUMPDEST PUSH2 0x238 PUSH2 0x430 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A6E JUMP JUMPDEST PUSH2 0xC09 JUMP JUMPDEST PUSH2 0x238 PUSH2 0x443 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A6E JUMP JUMPDEST PUSH2 0xC58 JUMP JUMPDEST PUSH2 0x238 PUSH2 0x456 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A98 JUMP JUMPDEST PUSH2 0xC65 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x469 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A98 JUMP JUMPDEST PUSH2 0xC72 JUMP JUMPDEST PUSH2 0x342 PUSH2 0x47C CALLDATASIZE PUSH1 0x4 PUSH2 0x1B08 JUMP JUMPDEST PUSH2 0xCE7 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x48F CALLDATASIZE PUSH1 0x4 PUSH2 0x1B68 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1FD PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP2 JUMP JUMPDEST PUSH2 0x51C PUSH2 0x4EF CALLDATASIZE PUSH1 0x4 PUSH2 0x1B9B JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND SWAP1 DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x207 JUMP JUMPDEST PUSH2 0x342 PUSH2 0x546 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A98 JUMP JUMPDEST PUSH2 0xFC1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x557 PUSH1 0x7 PUSH2 0x1059 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x56B SWAP1 PUSH2 0x1BDB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x597 SWAP1 PUSH2 0x1BDB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5E4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5B9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5E4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5C7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5FB CALLER DUP5 DUP5 PUSH2 0x1063 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x639 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x630 SWAP1 PUSH2 0x1C15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C414E44424153453A205F64656C4D696E74657220697320746865207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x2061646472657373 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x630 JUMP JUMPDEST PUSH2 0x6AB PUSH1 0x7 DUP4 PUSH2 0x1188 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6C0 DUP5 DUP5 DUP5 PUSH2 0x119D JUMP JUMPDEST PUSH2 0x712 DUP5 CALLER PUSH2 0x70D DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D8B PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x1323 JUMP JUMPDEST PUSH2 0x1063 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x5FB SWAP2 DUP6 SWAP1 PUSH2 0x70D SWAP1 DUP7 PUSH2 0x134F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x75D CALLER PUSH2 0xC65 JUMP JUMPDEST PUSH2 0x7A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616C6C6572206973206E6F7420746865206D696E7465720000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x630 JUMP JUMPDEST PUSH2 0x7B3 DUP4 DUP4 PUSH2 0x135B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x5FB SWAP3 AND DUP5 PUSH2 0x1441 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x803 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x630 SWAP1 PUSH2 0x1C15 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x80D PUSH2 0x54B JUMP JUMPDEST PUSH2 0x817 SWAP2 SWAP1 PUSH2 0x1C60 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x866 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C414E44424153453A20696E646578206F7574206F6620626F756E6473000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x630 JUMP JUMPDEST PUSH2 0x6AB PUSH1 0x7 DUP4 PUSH2 0x15A5 JUMP JUMPDEST PUSH2 0x87B CALLER DUP3 PUSH2 0x15B1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x630 SWAP1 PUSH2 0x1C15 JUMP JUMPDEST PUSH2 0x8B2 PUSH1 0x0 PUSH2 0x1631 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0x919 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C414E44424153453A3A6765745072696F72566F7465733A206E6F7420796574 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x819195D195C9B5A5B9959 PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x630 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x94A JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x5FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP5 SWAP2 PUSH2 0x96F PUSH1 0x1 DUP6 PUSH2 0x1C77 JUMP JUMPDEST PUSH4 0xFFFFFFFF SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD AND GT PUSH2 0x9D8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x9B2 PUSH1 0x1 DUP5 PUSH2 0x1C77 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 POP POP PUSH2 0x5FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP1 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP4 LT ISZERO PUSH2 0xA13 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x5FF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA21 PUSH1 0x1 DUP5 PUSH2 0x1C77 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0xAE9 JUMPI PUSH1 0x0 PUSH1 0x2 PUSH2 0xA46 DUP5 DUP5 PUSH2 0x1C77 JUMP JUMPDEST PUSH2 0xA50 SWAP2 SWAP1 PUSH2 0x1C9C JUMP JUMPDEST PUSH2 0xA5A SWAP1 DUP4 PUSH2 0x1C77 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF DUP1 DUP7 AND DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD SWAP1 SWAP4 AND DUP1 DUP3 MSTORE PUSH1 0x1 SWAP1 SWAP4 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP3 POP DUP8 SWAP1 SUB PUSH2 0xABD JUMPI PUSH1 0x20 ADD MLOAD SWAP5 POP PUSH2 0x5FF SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH4 0xFFFFFFFF AND DUP8 GT ISZERO PUSH2 0xAD4 JUMPI DUP2 SWAP4 POP PUSH2 0xAE2 JUMP JUMPDEST PUSH2 0xADF PUSH1 0x1 DUP4 PUSH2 0x1C77 JUMP JUMPDEST SWAP3 POP JUMPDEST POP POP PUSH2 0xA24 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x56B SWAP1 PUSH2 0x1BDB JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB5A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x630 SWAP1 PUSH2 0x1C15 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBC1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C414E44424153453A205F6164644D696E74657220697320746865207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x2061646472657373 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x630 JUMP JUMPDEST PUSH2 0x6AB PUSH1 0x7 DUP4 PUSH2 0x1681 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBF7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x630 SWAP1 PUSH2 0x1C15 JUMP JUMPDEST PUSH2 0xC01 CALLER DUP4 PUSH2 0x135B JUMP JUMPDEST POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5FB CALLER DUP5 PUSH2 0x70D DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DD9 PUSH1 0x25 SWAP2 CODECOPY CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x1323 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5FB CALLER DUP5 DUP5 PUSH2 0x119D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6AB PUSH1 0x7 DUP4 PUSH2 0x1696 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP1 PUSH2 0xC9D JUMPI PUSH1 0x0 PUSH2 0xCE0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0xCC1 PUSH1 0x1 DUP5 PUSH2 0x1C77 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 PUSH2 0xD12 PUSH2 0x55C JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0xD20 CHAINID SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP6 SWAP1 SWAP6 MSTORE DUP1 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADDRESS PUSH1 0x80 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 DUP4 ADD DUP3 MSTORE DUP1 MLOAD SWAP1 DUP5 ADD KECCAK256 PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 DUP4 ADD DUP11 SWAP1 MSTORE PUSH2 0x120 DUP1 DUP5 ADD DUP11 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP6 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH2 0x140 DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 MLOAD SWAP2 SWAP1 SWAP4 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x160 DUP4 ADD MSTORE PUSH2 0x162 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x182 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP1 PUSH2 0x1A2 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP1 DUP6 MSTORE SWAP2 DUP5 ADD DUP1 DUP5 MSTORE DUP2 SWAP1 MSTORE PUSH1 0xFF DUP11 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP4 ADD DUP9 SWAP1 MSTORE PUSH1 0x80 DUP4 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP3 POP SWAP1 PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE4C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xEC2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C414E44424153453A3A64656C656761746542795369673A20696E76616C6964 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x207369676E6174757265 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x630 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0xEE6 DUP4 PUSH2 0x1CCD JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE DUP10 EQ PUSH2 0xF47 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C414E44424153453A3A64656C656761746542795369673A20696E76616C6964 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x206E6F6E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x630 JUMP JUMPDEST DUP8 TIMESTAMP GT ISZERO PUSH2 0xFAA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C414E44424153453A3A64656C656761746542795369673A207369676E617475 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1C9948195E1C1A5C9959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x630 JUMP JUMPDEST PUSH2 0xFB4 DUP2 DUP12 PUSH2 0x15B1 JUMP JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xFEB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x630 SWAP1 PUSH2 0x1C15 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1050 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x630 JUMP JUMPDEST PUSH2 0x87B DUP2 PUSH2 0x1631 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6AB DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x10C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x42455032303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x630 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1126 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x630 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x16B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1201 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x630 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1263 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x630 JUMP JUMPDEST PUSH2 0x12A0 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DB3 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x1323 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x12CF SWAP1 DUP3 PUSH2 0x134F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x117B SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x1347 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x630 SWAP2 SWAP1 PUSH2 0x1A02 JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE0 DUP3 DUP5 PUSH2 0x1CE6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x13B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x630 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x13BE SWAP1 DUP3 PUSH2 0x134F JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x13E4 SWAP1 DUP3 PUSH2 0x134F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x1435 SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x1463 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x15A0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x1506 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH2 0x14A3 JUMPI PUSH1 0x0 PUSH2 0x14E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x14C7 PUSH1 0x1 DUP6 PUSH2 0x1C77 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x14F4 DUP3 DUP6 PUSH2 0x17AB JUMP JUMPDEST SWAP1 POP PUSH2 0x1502 DUP7 DUP5 DUP5 DUP5 PUSH2 0x17B7 JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x15A0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH2 0x1541 JUMPI PUSH1 0x0 PUSH2 0x1584 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x1565 PUSH1 0x1 DUP6 PUSH2 0x1C77 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1592 DUP3 DUP6 PUSH2 0x134F JUMP JUMPDEST SWAP1 POP PUSH2 0xFB9 DUP6 DUP5 DUP5 DUP5 PUSH2 0x17B7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE0 DUP4 DUP4 PUSH2 0x1959 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP5 MSTORE DUP3 DUP7 KECCAK256 SLOAD SWAP5 SWAP1 SWAP4 MSTORE DUP8 DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP5 AND DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP6 AND SWAP5 SWAP2 SWAP4 SWAP2 SWAP3 DUP6 SWAP3 SWAP2 PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F SWAP2 SWAP1 LOG4 PUSH2 0x162B DUP3 DUP5 DUP4 PUSH2 0x1441 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1983 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0xCE0 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x17A1 JUMPI PUSH1 0x0 PUSH2 0x16DC PUSH1 0x1 DUP4 PUSH2 0x1C60 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x16F0 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1C60 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x1755 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1710 JUMPI PUSH2 0x1710 PUSH2 0x1CFE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1733 JUMPI PUSH2 0x1733 PUSH2 0x1CFE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x1766 JUMPI PUSH2 0x1766 PUSH2 0x1D14 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x5FF JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x5FF JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE0 DUP3 DUP5 PUSH2 0x1C60 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17DB NUMBER PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x38 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D53 PUSH1 0x38 SWAP2 CODECOPY PUSH2 0x19D2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x1835 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH4 0xFFFFFFFF DUP4 AND SWAP2 PUSH2 0x1819 PUSH1 0x1 DUP9 PUSH2 0x1C77 JUMP JUMPDEST PUSH4 0xFFFFFFFF SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD AND EQ JUMPDEST ISZERO PUSH2 0x187E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 SWAP2 PUSH2 0x185F PUSH1 0x1 DUP9 PUSH2 0x1C77 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SSTORE PUSH2 0x190E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH4 0xFFFFFFFF DUP4 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA DUP4 MSTORE DUP6 DUP2 KECCAK256 DUP11 DUP6 AND DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP4 SWAP1 KECCAK256 SWAP2 MLOAD DUP3 SLOAD PUSH4 0xFFFFFFFF NOT AND SWAP2 AND OR DUP2 SSTORE SWAP1 MLOAD PUSH1 0x1 SWAP2 DUP3 ADD SSTORE PUSH2 0x18DD SWAP1 DUP6 SWAP1 PUSH2 0x1D2A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND PUSH4 0xFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1970 JUMPI PUSH2 0x1970 PUSH2 0x1CFE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x19CA JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x5FF JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x5FF JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH5 0x100000000 DUP5 LT PUSH2 0x19FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x630 SWAP2 SWAP1 PUSH2 0x1A02 JUMP JUMPDEST POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1A2F JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1A13 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1A41 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A8A DUP4 PUSH2 0x1A57 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCE0 DUP3 PUSH2 0x1A57 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1AC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AD1 DUP5 PUSH2 0x1A57 JUMP JUMPDEST SWAP3 POP PUSH2 0x1ADF PUSH1 0x20 DUP6 ADD PUSH2 0x1A57 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1B21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B2A DUP8 PUSH2 0x1A57 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1B4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP3 SWAP6 PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP5 PUSH1 0xA0 SWAP1 SWAP2 ADD CALLDATALOAD SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B84 DUP4 PUSH2 0x1A57 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B92 PUSH1 0x20 DUP5 ADD PUSH2 0x1A57 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BB7 DUP4 PUSH2 0x1A57 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1BD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1BEF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1C0F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1C72 JUMPI PUSH2 0x1C72 PUSH2 0x1C4A JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP4 DUP2 AND SWAP1 DUP4 AND DUP2 DUP2 LT ISZERO PUSH2 0x1C94 JUMPI PUSH2 0x1C94 PUSH2 0x1C4A JUMP JUMPDEST SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 DUP5 AND DUP1 PUSH2 0x1CC1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 AND SWAP2 SWAP1 SWAP2 DIV SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1CDF JUMPI PUSH2 0x1CDF PUSH2 0x1C4A JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1CF9 JUMPI PUSH2 0x1CF9 PUSH2 0x1C4A JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 DUP4 AND DUP2 DUP6 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0x1D49 JUMPI PUSH2 0x1D49 PUSH2 0x1C4A JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP INVALID 0x4C COINBASE 0x4E DIFFICULTY TIMESTAMP COINBASE MSTORE8 GASLIMIT GASPRICE GASPRICE 0x5F PUSH24 0x72697465436865636B706F696E743A20626C6F636B206E75 PUSH14 0x6265722065786365656473203332 KECCAK256 PUSH3 0x697473 TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636542455032303A20747261 PUSH15 0x7366657220616D6F756E7420657863 PUSH6 0x656473206261 PUSH13 0x616E636542455032303A206465 PUSH4 0x72656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726FA26469706673582212 KECCAK256 PUSH9 0xC2A890DC29E5643931 SWAP1 0xB3 0xB1 SMOD DUP16 PUSH3 0x68EA16 0x5C STOP CODESIZE SWAP9 MSTORE8 SWAP6 SWAP3 PUSH16 0xC944884D7664736F6C634300080E0033 ",
							"sourceMap": "166:10270:2:-:0;;;;;;;;;;;;;878:157:0;;;;;;;;;;;;;-1:-1:-1;;;878:157:0;;;;;;;;;;;;;;;;-1:-1:-1;;;878:157:0;;;894:23:3;904:12;:10;;;:12;;:::i;:::-;894:9;:23::i;:::-;953:17:0;;;;:5;;:17;;;;;:::i;:::-;-1:-1:-1;981:21:0;;;;:7;;:21;;;;;:::i;:::-;-1:-1:-1;;1013:9:0;:14;;-1:-1:-1;;1013:14:0;1025:2;1013:14;;;-1:-1:-1;166:10270:2;;602:98:7;682:10;;602:98::o;2106:173:3:-;2162:16;2181:6;;-1:-1:-1;;;;;2198:17:3;;;-1:-1:-1;;;;;;2198:17:3;;;;;;2231:40;;2181:6;;;;;;;2231:40;;2162:16;2231:40;2151:128;2106:173;:::o;166:10270:2:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;166:10270:2;;;-1:-1:-1;166:10270:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:8;93:1;89:12;;;;136;;;157:61;;211:4;203:6;199:17;189:27;;157:61;264:2;256:6;253:14;233:18;230:38;227:161;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:161;;14:380;;;:::o;:::-;166:10270:2;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DELEGATION_TYPEHASH_707": {
									"entryPoint": null,
									"id": 707,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DOMAIN_TYPEHASH_701": {
									"entryPoint": null,
									"id": 701,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_add_1861": {
									"entryPoint": 6531,
									"id": 1861,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_approve_491": {
									"entryPoint": 4195,
									"id": 491,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_at_1995": {
									"entryPoint": 6489,
									"id": 1995,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_contains_1964": {
									"entryPoint": null,
									"id": 1964,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_delegate_1060": {
									"entryPoint": 5553,
									"id": 1060,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_length_1978": {
									"entryPoint": null,
									"id": 1978,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_mint_399": {
									"entryPoint": 4955,
									"id": 399,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_moveDelegates_1167": {
									"entryPoint": 5185,
									"id": 1167,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_2716": {
									"entryPoint": null,
									"id": 2716,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_remove_1945": {
									"entryPoint": 5816,
									"id": 1945,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_setOwner_1495": {
									"entryPoint": 5681,
									"id": 1495,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_353": {
									"entryPoint": 4509,
									"id": 353,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_writeCheckpoint_1240": {
									"entryPoint": 6071,
									"id": 1240,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@addMinter_1302": {
									"entryPoint": 2863,
									"id": 1302,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@add_1672": {
									"entryPoint": 4943,
									"id": 1672,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@add_2147": {
									"entryPoint": 5761,
									"id": 2147,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_158": {
									"entryPoint": null,
									"id": 158,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_179": {
									"entryPoint": 1518,
									"id": 179,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@at_2243": {
									"entryPoint": 5541,
									"id": 2243,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_119": {
									"entryPoint": null,
									"id": 119,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@checkpoints_690": {
									"entryPoint": null,
									"id": 690,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@contains_2201": {
									"entryPoint": 5782,
									"id": 2201,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@decimals_85": {
									"entryPoint": null,
									"id": 85,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_274": {
									"entryPoint": 3081,
									"id": 274,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@delMinter_1328": {
									"entryPoint": 1541,
									"id": 1328,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@delegateBySig_860": {
									"entryPoint": 3303,
									"id": 860,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@delegate_756": {
									"entryPoint": 2161,
									"id": 756,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@delegates_743": {
									"entryPoint": null,
									"id": 743,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getChainId_1276": {
									"entryPoint": null,
									"id": 1276,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getCurrentVotes_889": {
									"entryPoint": 3186,
									"id": 889,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getMinterLength_1339": {
									"entryPoint": 1355,
									"id": 1339,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getMinter_1379": {
									"entryPoint": 2008,
									"id": 1379,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getOwner_65": {
									"entryPoint": null,
									"id": 65,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getPriorVotes_1022": {
									"entryPoint": 2228,
									"id": 1022,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_245": {
									"entryPoint": 1820,
									"id": 245,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isMinter_1353": {
									"entryPoint": 3173,
									"id": 1353,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@length_2216": {
									"entryPoint": 4185,
									"id": 2216,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mint_293": {
									"entryPoint": 3020,
									"id": 293,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mint_672": {
									"entryPoint": 1874,
									"id": 672,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_75": {
									"entryPoint": 1372,
									"id": 75,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@nonces_712": {
									"entryPoint": null,
									"id": 712,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@numCheckpoints_695": {
									"entryPoint": null,
									"id": 695,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_1425": {
									"entryPoint": null,
									"id": 1425,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@remove_2174": {
									"entryPoint": 4488,
									"id": 2174,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@renounceOwnership_1453": {
									"entryPoint": 2174,
									"id": 1453,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safe32_1264": {
									"entryPoint": 6610,
									"id": 1264,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@sub_1687": {
									"entryPoint": 6059,
									"id": 1687,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@sub_1757": {
									"entryPoint": 4899,
									"id": 1757,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@symbol_95": {
									"entryPoint": 2848,
									"id": 95,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_105": {
									"entryPoint": null,
									"id": 105,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_217": {
									"entryPoint": 1715,
									"id": 217,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_1476": {
									"entryPoint": 4033,
									"id": 1476,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_140": {
									"entryPoint": 3160,
									"id": 140,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 6743,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6808,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7016,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6835,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6766,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32": {
									"entryPoint": 6920,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_addresst_uint32": {
									"entryPoint": 7067,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_18219da281cfbf6a44906dac1cc47e920e46399fb5e68945a0c7f54c33f6fe21__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_477b9d1795367c3ae15428e4592ed782c56899effd66b2d852d18b3a68099013__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_537f9291d5ca8a9d2e07b21416aace2af9dfe45a6b1e8a537f463ccbde96be51__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7bf43d6a4b3be47c78912370efffcd1148613cdb99bf3f13b2c54bd0120ef20b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_88d7da1b299470dcb9c6dd03b0ef4b745f350eaaf6e449f222d35091be3be430__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7189,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a0a2e2d8f846476e5e339360d1d1e6ef75e387a44218d585bcf264264633bc44__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_de49e737c86ecd39ef48ac89e5f4d5f6931a390abe19d9bcf3e17e0e009b07f6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e7321e035fcdb44ae58b7c959d5d07b7207a23cd2d67b95e4da721649acd9e2e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint32_t_uint256__to_t_uint32_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint32": {
									"entryPoint": 7466,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint32": {
									"entryPoint": 7324,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7264,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint32": {
									"entryPoint": 7287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 7131,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 7373,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7242,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 7444,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7422,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:14169:8",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:76:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:25:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:8",
														"type": ""
													}
												],
												"src": "14:177:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "317:476:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "327:12:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "337:2:8",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "331:2:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "355:9:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "366:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "348:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "348:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "348:21:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "378:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "398:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "392:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "392:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "382:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "425:9:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "436:2:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "421:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "421:18:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "441:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "414:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "414:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "414:34:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "457:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "466:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "461:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "526:90:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "555:9:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "566:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "551:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "551:17:8"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "570:2:8",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "547:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "547:26:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "589:6:8"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "597:1:8"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "585:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "585:14:8"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "601:2:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "581:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "581:23:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "575:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "575:30:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "540:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "540:66:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "540:66:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "487:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "490:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "484:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "484:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "498:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "500:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "509:1:8"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "512:2:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "505:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "505:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "500:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "480:3:8",
																"statements": []
															},
															"src": "476:140:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "650:66:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "679:9:8"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "690:6:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "675:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "675:22:8"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "699:2:8",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "671:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "671:31:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "704:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "664:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "664:42:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "664:42:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "631:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "634:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "628:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "628:13:8"
															},
															"nodeType": "YulIf",
															"src": "625:91:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "725:62:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "741:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "760:6:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "768:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "756:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "756:15:8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "777:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "773:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "773:7:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "752:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "752:29:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "737:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "737:45:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "784:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "733:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "733:54:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "725:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "286:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "297:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "308:4:8",
														"type": ""
													}
												],
												"src": "196:597:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "847:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "857:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "879:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "866:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "866:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "857:5:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "949:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "958:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "961:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "951:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "951:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "951:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "908:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "919:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "934:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "939:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "930:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "930:11:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "943:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "926:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "926:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "915:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "915:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "905:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "905:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "898:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:50:8"
															},
															"nodeType": "YulIf",
															"src": "895:70:8"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "826:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "837:5:8",
														"type": ""
													}
												],
												"src": "798:173:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1063:167:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1109:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1118:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1121:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1111:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1111:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1111:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1084:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1093:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1080:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1080:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1105:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1076:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1076:32:8"
															},
															"nodeType": "YulIf",
															"src": "1073:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1134:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1163:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1144:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1144:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1134:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1182:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1209:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1220:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1205:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1205:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1192:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1192:32:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1182:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1021:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1032:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1044:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1052:6:8",
														"type": ""
													}
												],
												"src": "976:254:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1330:92:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1340:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1352:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1363:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1348:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1348:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1340:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1382:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1407:6:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1400:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1400:14:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1393:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1393:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1375:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1375:41:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1375:41:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1299:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1310:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1321:4:8",
														"type": ""
													}
												],
												"src": "1235:187:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1528:76:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1538:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1550:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1561:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1546:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1538:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1580:9:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1591:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1573:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1573:25:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1573:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1497:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1508:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1519:4:8",
														"type": ""
													}
												],
												"src": "1427:177:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1679:116:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1725:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1734:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1737:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1727:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1727:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1727:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1700:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1709:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1696:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1696:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1721:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1692:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1692:32:8"
															},
															"nodeType": "YulIf",
															"src": "1689:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1750:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1779:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1760:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1760:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1750:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1645:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1656:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1668:6:8",
														"type": ""
													}
												],
												"src": "1609:186:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1904:224:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1950:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1959:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1962:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1952:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1952:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1952:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1925:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1934:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1921:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1921:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1946:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1917:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1917:32:8"
															},
															"nodeType": "YulIf",
															"src": "1914:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1975:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2004:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1985:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1985:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1975:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2023:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2056:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2067:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2052:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2052:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2033:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2033:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2023:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2080:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2107:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2118:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2103:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2103:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2090:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2090:32:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2080:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1854:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1865:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1877:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1885:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1893:6:8",
														"type": ""
													}
												],
												"src": "1800:328:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2230:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2240:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2252:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2263:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2248:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2248:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2240:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2282:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2297:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2305:4:8",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2293:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2293:17:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2275:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2275:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2275:36:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2199:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2210:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2221:4:8",
														"type": ""
													}
												],
												"src": "2133:184:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2423:102:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2433:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2445:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2456:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2441:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2441:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2433:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2475:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2490:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2506:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2511:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2502:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2502:11:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2515:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2498:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2498:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2486:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2486:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2468:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2468:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2468:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2392:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2403:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2414:4:8",
														"type": ""
													}
												],
												"src": "2322:203:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2600:110:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2646:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2655:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2658:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2648:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2648:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2648:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2621:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2630:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2617:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2617:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2642:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2613:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2613:32:8"
															},
															"nodeType": "YulIf",
															"src": "2610:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2671:33:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2694:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2681:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2681:23:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2671:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2566:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2577:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2589:6:8",
														"type": ""
													}
												],
												"src": "2530:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2814:93:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2824:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2836:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2847:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2832:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2832:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2824:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2866:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2881:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2889:10:8",
																				"type": "",
																				"value": "0xffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2877:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2877:23:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2859:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2859:42:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2859:42:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2783:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2794:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2805:4:8",
														"type": ""
													}
												],
												"src": "2715:192:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3065:465:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3112:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3121:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3124:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3114:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3114:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3114:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3086:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3095:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3082:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3082:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3107:3:8",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3078:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3078:33:8"
															},
															"nodeType": "YulIf",
															"src": "3075:53:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3137:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3166:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3147:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3147:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3137:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3185:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3212:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3223:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3208:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3208:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3195:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3195:32:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3185:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3236:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3263:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3274:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3259:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3259:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3246:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3246:32:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3236:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3287:45:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3317:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3328:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3313:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3313:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3300:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3300:32:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3291:5:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3380:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3389:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3392:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3382:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3382:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3382:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3354:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3365:5:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3372:4:8",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3361:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3361:16:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3351:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3351:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3344:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3344:35:8"
															},
															"nodeType": "YulIf",
															"src": "3341:55:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3405:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3415:5:8"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3405:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3429:43:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3456:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3467:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3452:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3452:19:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3439:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3439:33:8"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "3429:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3481:43:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3508:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3519:3:8",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3504:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3504:19:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3491:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3491:33:8"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "3481:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2991:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3002:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3014:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3022:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3030:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3038:6:8",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "3046:6:8",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "3054:6:8",
														"type": ""
													}
												],
												"src": "2912:618:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3622:173:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3668:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3677:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3680:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3670:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3670:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3670:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3643:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3652:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3639:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3639:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3664:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3635:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3635:32:8"
															},
															"nodeType": "YulIf",
															"src": "3632:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3693:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3722:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3703:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3703:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3693:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3741:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3774:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3785:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3770:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3770:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3751:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3751:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3741:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3580:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3591:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3603:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3611:6:8",
														"type": ""
													}
												],
												"src": "3535:260:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3886:264:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3932:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3941:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3944:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3934:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3934:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3934:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3907:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3916:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3903:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3903:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3928:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3899:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3899:32:8"
															},
															"nodeType": "YulIf",
															"src": "3896:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3957:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3986:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3967:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3967:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3957:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4005:45:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4035:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4046:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4031:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4031:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4018:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4018:32:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4009:5:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4104:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4113:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4116:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4106:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4106:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4106:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4072:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4083:5:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4090:10:8",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "4079:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4079:22:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4069:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4069:33:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4062:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4062:41:8"
															},
															"nodeType": "YulIf",
															"src": "4059:61:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4129:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4139:5:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4129:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3844:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3855:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3867:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3875:6:8",
														"type": ""
													}
												],
												"src": "3800:350:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4282:136:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4292:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4304:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4315:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4300:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4300:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4292:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4334:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4349:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4357:10:8",
																				"type": "",
																				"value": "0xffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4345:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4345:23:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4327:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4327:42:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4327:42:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4389:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4400:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4385:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4385:18:8"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4405:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4378:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4378:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4378:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint32_t_uint256__to_t_uint32_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4243:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4254:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4262:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4273:4:8",
														"type": ""
													}
												],
												"src": "4155:263:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4478:325:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4488:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4502:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4505:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "4498:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4498:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4488:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4519:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4549:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4555:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4545:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4545:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "4523:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4596:31:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4598:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4612:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4620:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4608:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4608:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4598:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4576:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4569:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4569:26:8"
															},
															"nodeType": "YulIf",
															"src": "4566:61:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4686:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4707:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4714:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4719:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "4710:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4710:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4700:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4700:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4700:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4751:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4754:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4744:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4744:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4744:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4779:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4782:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4772:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4772:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4772:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4642:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4665:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4673:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4662:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4662:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4639:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4639:38:8"
															},
															"nodeType": "YulIf",
															"src": "4636:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4458:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4467:6:8",
														"type": ""
													}
												],
												"src": "4423:380:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4982:182:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4999:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5010:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4992:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4992:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4992:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5033:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5044:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5029:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5029:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5049:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5022:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5022:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5022:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5072:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5083:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5068:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5068:18:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5088:34:8",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5061:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5061:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5061:62:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5132:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5144:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5155:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5140:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5140:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5132:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4959:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4973:4:8",
														"type": ""
													}
												],
												"src": "4808:356:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5343:230:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5360:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5371:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5353:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5353:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5353:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5394:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5405:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5390:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5390:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5410:2:8",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5383:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5383:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5383:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5433:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5444:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5429:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5429:18:8"
																	},
																	{
																		"hexValue": "4c414e44424153453a205f64656c4d696e74657220697320746865207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5449:34:8",
																		"type": "",
																		"value": "LANDBASE: _delMinter is the zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5422:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5422:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5422:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5504:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5515:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5500:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5500:18:8"
																	},
																	{
																		"hexValue": "2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5520:10:8",
																		"type": "",
																		"value": " address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5493:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5493:38:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5493:38:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5540:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5552:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5563:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5548:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5548:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5540:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_18219da281cfbf6a44906dac1cc47e920e46399fb5e68945a0c7f54c33f6fe21__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5320:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5334:4:8",
														"type": ""
													}
												],
												"src": "5169:404:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5752:174:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5769:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5780:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5762:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5762:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5762:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5803:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5814:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5799:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5799:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5819:2:8",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5792:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5792:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5792:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5842:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5853:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5838:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5838:18:8"
																	},
																	{
																		"hexValue": "63616c6c6572206973206e6f7420746865206d696e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5858:26:8",
																		"type": "",
																		"value": "caller is not the minter"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5831:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5831:54:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5831:54:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5894:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5906:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5917:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5902:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5902:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5894:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_88d7da1b299470dcb9c6dd03b0ef4b745f350eaaf6e449f222d35091be3be430__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5729:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5743:4:8",
														"type": ""
													}
												],
												"src": "5578:348:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5963:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5980:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5987:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5992:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5983:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5983:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5973:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5973:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5973:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6020:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6023:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6013:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6013:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6013:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6044:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6047:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6037:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6037:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6037:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "5931:127:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6112:76:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6134:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6136:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6136:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6136:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6128:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6131:1:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6125:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6125:8:8"
															},
															"nodeType": "YulIf",
															"src": "6122:34:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6165:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6177:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6180:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6173:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6173:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "6165:4:8"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6094:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6097:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "6103:4:8",
														"type": ""
													}
												],
												"src": "6063:125:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6367:179:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6384:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6395:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6377:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6377:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6377:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6418:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6429:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6414:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6414:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6434:2:8",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6407:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6407:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6407:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6457:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6468:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6453:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6453:18:8"
																	},
																	{
																		"hexValue": "4c414e44424153453a20696e646578206f7574206f6620626f756e6473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6473:31:8",
																		"type": "",
																		"value": "LANDBASE: index out of bounds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6446:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6446:59:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6446:59:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6514:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6526:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6537:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6522:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6522:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6514:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7bf43d6a4b3be47c78912370efffcd1148613cdb99bf3f13b2c54bd0120ef20b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6344:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6358:4:8",
														"type": ""
													}
												],
												"src": "6193:353:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6725:233:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6742:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6753:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6735:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6735:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6735:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6776:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6787:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6772:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6772:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6792:2:8",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6765:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6765:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6765:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6815:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6826:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6811:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6811:18:8"
																	},
																	{
																		"hexValue": "4c414e44424153453a3a6765745072696f72566f7465733a206e6f7420796574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6831:34:8",
																		"type": "",
																		"value": "LANDBASE::getPriorVotes: not yet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6804:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6804:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6804:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6886:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6897:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6882:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6882:18:8"
																	},
																	{
																		"hexValue": "2064657465726d696e6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6902:13:8",
																		"type": "",
																		"value": " determined"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6875:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6875:41:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6875:41:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6925:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6937:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6948:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6933:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6933:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6925:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e7321e035fcdb44ae58b7c959d5d07b7207a23cd2d67b95e4da721649acd9e2e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6702:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6716:4:8",
														"type": ""
													}
												],
												"src": "6551:407:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7011:173:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7021:20:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7031:10:8",
																"type": "",
																"value": "0xffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7025:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7050:21:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7065:1:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7068:2:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7061:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7061:10:8"
															},
															"variables": [
																{
																	"name": "x_1",
																	"nodeType": "YulTypedName",
																	"src": "7054:3:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7080:21:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7095:1:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7098:2:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7091:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7091:10:8"
															},
															"variables": [
																{
																	"name": "y_1",
																	"nodeType": "YulTypedName",
																	"src": "7084:3:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7126:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7128:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7128:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7128:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x_1",
																		"nodeType": "YulIdentifier",
																		"src": "7116:3:8"
																	},
																	{
																		"name": "y_1",
																		"nodeType": "YulIdentifier",
																		"src": "7121:3:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7113:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7113:12:8"
															},
															"nodeType": "YulIf",
															"src": "7110:38:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7157:21:8",
															"value": {
																"arguments": [
																	{
																		"name": "x_1",
																		"nodeType": "YulIdentifier",
																		"src": "7169:3:8"
																	},
																	{
																		"name": "y_1",
																		"nodeType": "YulIdentifier",
																		"src": "7174:3:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7165:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7165:13:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "7157:4:8"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6993:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6996:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "7002:4:8",
														"type": ""
													}
												],
												"src": "6963:221:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7234:243:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7244:20:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7254:10:8",
																"type": "",
																"value": "0xffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7248:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7273:21:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7288:1:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7291:2:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7284:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7284:10:8"
															},
															"variables": [
																{
																	"name": "y_1",
																	"nodeType": "YulTypedName",
																	"src": "7277:3:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7326:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7347:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7354:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7359:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "7350:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7350:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7340:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7340:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7340:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7391:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7394:4:8",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7384:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7384:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7384:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7419:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7422:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7412:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7412:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7412:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y_1",
																		"nodeType": "YulIdentifier",
																		"src": "7313:3:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7306:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7306:11:8"
															},
															"nodeType": "YulIf",
															"src": "7303:134:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7446:25:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "7459:1:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7462:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7455:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7455:10:8"
																	},
																	{
																		"name": "y_1",
																		"nodeType": "YulIdentifier",
																		"src": "7467:3:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "7451:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7451:20:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7446:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7219:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7222:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "7228:1:8",
														"type": ""
													}
												],
												"src": "7189:288:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7656:230:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7673:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7684:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7666:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7666:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7666:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7707:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7718:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7703:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7703:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7723:2:8",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7696:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7696:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7696:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7746:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7757:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7742:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7742:18:8"
																	},
																	{
																		"hexValue": "4c414e44424153453a205f6164644d696e74657220697320746865207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7762:34:8",
																		"type": "",
																		"value": "LANDBASE: _addMinter is the zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7735:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7735:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7735:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7817:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7828:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7813:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7813:18:8"
																	},
																	{
																		"hexValue": "2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7833:10:8",
																		"type": "",
																		"value": " address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7806:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7806:38:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7806:38:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7853:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7865:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7876:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7861:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7861:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7853:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_537f9291d5ca8a9d2e07b21416aace2af9dfe45a6b1e8a537f463ccbde96be51__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7633:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7647:4:8",
														"type": ""
													}
												],
												"src": "7482:404:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8076:232:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8086:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8098:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8109:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8094:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8094:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8086:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8129:9:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8140:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8122:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8122:25:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8122:25:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8167:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8178:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8163:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8163:18:8"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8183:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8156:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8156:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8156:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8210:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8221:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8206:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8206:18:8"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8226:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8199:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8199:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8199:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8253:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8264:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8249:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8249:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "8273:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8289:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8294:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "8285:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8285:11:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8298:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "8281:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8281:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8269:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8269:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8242:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8242:60:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8242:60:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8021:9:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8032:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8040:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8048:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8056:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8067:4:8",
														"type": ""
													}
												],
												"src": "7891:417:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8498:232:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8508:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8520:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8531:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8516:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8516:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8508:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8551:9:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8562:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8544:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8544:25:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8544:25:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8589:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8600:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8585:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8585:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "8609:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8625:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8630:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "8621:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8621:11:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8634:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "8617:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8617:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8605:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8605:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8578:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8578:60:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8578:60:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8658:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8669:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8654:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8654:18:8"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8674:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8647:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8647:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8647:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8701:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8712:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8697:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8697:18:8"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "8717:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8690:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8690:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8690:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8443:9:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8454:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8462:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8470:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8478:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8489:4:8",
														"type": ""
													}
												],
												"src": "8313:417:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8983:144:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9000:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9009:3:8",
																				"type": "",
																				"value": "240"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9014:4:8",
																				"type": "",
																				"value": "6401"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9005:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9005:14:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8993:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8993:27:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8993:27:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "9040:3:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9045:1:8",
																				"type": "",
																				"value": "2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9036:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9036:11:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9049:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9029:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9029:27:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9029:27:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "9076:3:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9081:2:8",
																				"type": "",
																				"value": "34"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9072:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9072:12:8"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9086:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9065:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9065:28:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9065:28:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9102:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9113:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9118:2:8",
																		"type": "",
																		"value": "66"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9109:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9109:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9102:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8951:3:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8956:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8964:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8975:3:8",
														"type": ""
													}
												],
												"src": "8735:392:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9313:217:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9323:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9335:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9346:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9331:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9331:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9323:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9366:9:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9377:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9359:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9359:25:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9359:25:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9404:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9415:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9400:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9400:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "9424:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9432:4:8",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9420:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9420:17:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9393:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9393:45:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9393:45:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9458:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9469:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9454:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9454:18:8"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "9474:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9447:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9447:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9447:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9501:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9512:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9497:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9497:18:8"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "9517:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9490:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9490:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9490:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9258:9:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9269:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9277:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9285:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9293:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9304:4:8",
														"type": ""
													}
												],
												"src": "9132:398:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9709:232:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9726:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9737:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9719:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9719:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9719:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9760:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9771:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9756:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9756:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9776:2:8",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9749:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9749:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9749:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9799:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9810:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9795:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9795:18:8"
																	},
																	{
																		"hexValue": "4c414e44424153453a3a64656c656761746542795369673a20696e76616c6964",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9815:34:8",
																		"type": "",
																		"value": "LANDBASE::delegateBySig: invalid"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9788:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9788:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9788:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9870:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9881:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9866:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9866:18:8"
																	},
																	{
																		"hexValue": "207369676e6174757265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9886:12:8",
																		"type": "",
																		"value": " signature"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9859:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9859:40:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9859:40:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9908:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9920:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9931:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9916:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9916:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9908:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_477b9d1795367c3ae15428e4592ed782c56899effd66b2d852d18b3a68099013__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9686:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9700:4:8",
														"type": ""
													}
												],
												"src": "9535:406:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9993:88:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10024:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10026:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10026:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10026:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10009:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10020:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "10016:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10016:6:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10006:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10006:17:8"
															},
															"nodeType": "YulIf",
															"src": "10003:43:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10055:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10066:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10073:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10062:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10062:13:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "10055:3:8"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9975:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "9985:3:8",
														"type": ""
													}
												],
												"src": "9946:135:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10260:228:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10277:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10288:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10270:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10270:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10270:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10311:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10322:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10307:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10307:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10327:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10300:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10300:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10300:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10350:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10361:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10346:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10346:18:8"
																	},
																	{
																		"hexValue": "4c414e44424153453a3a64656c656761746542795369673a20696e76616c6964",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10366:34:8",
																		"type": "",
																		"value": "LANDBASE::delegateBySig: invalid"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10339:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10339:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10339:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10421:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10432:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10417:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10417:18:8"
																	},
																	{
																		"hexValue": "206e6f6e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10437:8:8",
																		"type": "",
																		"value": " nonce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10410:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10410:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10410:36:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10455:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10467:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10478:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10463:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10463:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10455:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_de49e737c86ecd39ef48ac89e5f4d5f6931a390abe19d9bcf3e17e0e009b07f6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10237:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10251:4:8",
														"type": ""
													}
												],
												"src": "10086:402:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10667:232:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10684:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10695:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10677:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10677:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10677:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10718:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10729:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10714:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10714:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10734:2:8",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10707:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10707:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10707:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10757:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10768:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10753:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10753:18:8"
																	},
																	{
																		"hexValue": "4c414e44424153453a3a64656c656761746542795369673a207369676e617475",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10773:34:8",
																		"type": "",
																		"value": "LANDBASE::delegateBySig: signatu"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10746:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10746:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10746:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10828:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10839:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10824:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10824:18:8"
																	},
																	{
																		"hexValue": "72652065787069726564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10844:12:8",
																		"type": "",
																		"value": "re expired"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10817:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10817:40:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10817:40:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10866:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10878:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10889:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10874:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10874:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10866:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a0a2e2d8f846476e5e339360d1d1e6ef75e387a44218d585bcf264264633bc44__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10644:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10658:4:8",
														"type": ""
													}
												],
												"src": "10493:406:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11078:228:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11095:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11106:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11088:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11088:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11088:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11129:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11140:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11125:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11125:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11145:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11118:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11118:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11118:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11168:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11179:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11164:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11164:18:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11184:34:8",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11157:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11157:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11157:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11239:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11250:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11235:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11235:18:8"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11255:8:8",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11228:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11228:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11228:36:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11273:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11285:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11296:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11281:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11281:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11273:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11055:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11069:4:8",
														"type": ""
													}
												],
												"src": "10904:402:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11485:226:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11502:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11513:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11495:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11495:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11495:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11536:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11547:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11532:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11532:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11552:2:8",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11525:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11525:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11525:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11575:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11586:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11571:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11571:18:8"
																	},
																	{
																		"hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11591:34:8",
																		"type": "",
																		"value": "BEP20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11564:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11564:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11564:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11646:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11657:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11642:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11642:18:8"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11662:6:8",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11635:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11635:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11635:34:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11678:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11690:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11701:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11686:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11686:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11678:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11462:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11476:4:8",
														"type": ""
													}
												],
												"src": "11311:400:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11890:224:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11907:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11918:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11900:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11900:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11900:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11941:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11952:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11937:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11937:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11957:2:8",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11930:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11930:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11930:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11980:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11991:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11976:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11976:18:8"
																	},
																	{
																		"hexValue": "42455032303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11996:34:8",
																		"type": "",
																		"value": "BEP20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11969:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11969:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11969:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12051:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12062:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12047:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12047:18:8"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12067:4:8",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12040:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12040:32:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12040:32:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12081:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12093:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12104:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12089:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12089:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12081:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11867:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11881:4:8",
														"type": ""
													}
												],
												"src": "11716:398:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12293:227:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12310:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12321:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12303:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12303:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12303:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12344:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12355:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12340:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12340:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12360:2:8",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12333:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12333:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12333:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12383:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12394:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12379:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12379:18:8"
																	},
																	{
																		"hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12399:34:8",
																		"type": "",
																		"value": "BEP20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12372:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12372:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12372:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12454:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12465:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12450:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12450:18:8"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12470:7:8",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12443:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12443:35:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12443:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12487:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12499:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12510:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12495:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12495:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12487:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12270:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12284:4:8",
														"type": ""
													}
												],
												"src": "12119:401:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12699:225:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12716:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12727:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12709:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12709:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12709:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12750:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12761:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12746:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12746:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12766:2:8",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12739:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12739:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12739:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12789:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12800:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12785:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12785:18:8"
																	},
																	{
																		"hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12805:34:8",
																		"type": "",
																		"value": "BEP20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12778:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12778:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12778:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12860:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12871:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12856:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12856:18:8"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12876:5:8",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12849:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12849:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12849:33:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12891:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12903:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12914:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12899:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12899:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12891:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12676:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12690:4:8",
														"type": ""
													}
												],
												"src": "12525:399:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12977:80:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13004:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13006:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13006:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13006:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12993:1:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "13000:1:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "12996:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12996:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12990:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12990:13:8"
															},
															"nodeType": "YulIf",
															"src": "12987:39:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13035:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13046:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13049:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13042:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13042:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "13035:3:8"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12960:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12963:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "12969:3:8",
														"type": ""
													}
												],
												"src": "12929:128:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13236:181:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13253:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13264:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13246:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13246:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13246:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13287:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13298:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13283:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13283:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13303:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13276:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13276:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13276:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13326:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13337:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13322:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13322:18:8"
																	},
																	{
																		"hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13342:33:8",
																		"type": "",
																		"value": "BEP20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13315:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13315:61:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13315:61:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13385:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13397:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13408:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13393:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13393:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13385:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13213:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13227:4:8",
														"type": ""
													}
												],
												"src": "13062:355:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13454:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13471:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13478:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13483:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "13474:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13474:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13464:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13464:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13464:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13511:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13514:4:8",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13504:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13504:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13504:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13535:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13538:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13528:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13528:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13528:15:8"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "13422:127:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13586:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13603:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13610:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13615:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "13606:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13606:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13596:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13596:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13596:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13643:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13646:4:8",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13636:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13636:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13636:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13667:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13670:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13660:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13660:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13660:15:8"
														}
													]
												},
												"name": "panic_error_0x31",
												"nodeType": "YulFunctionDefinition",
												"src": "13554:127:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13733:181:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13743:20:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "13753:10:8",
																"type": "",
																"value": "0xffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "13747:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13772:21:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13787:1:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "13790:2:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13783:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13783:10:8"
															},
															"variables": [
																{
																	"name": "x_1",
																	"nodeType": "YulTypedName",
																	"src": "13776:3:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13802:21:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13817:1:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "13820:2:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13813:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13813:10:8"
															},
															"variables": [
																{
																	"name": "y_1",
																	"nodeType": "YulTypedName",
																	"src": "13806:3:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13857:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13859:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13859:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13859:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x_1",
																		"nodeType": "YulIdentifier",
																		"src": "13838:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "13847:2:8"
																			},
																			{
																				"name": "y_1",
																				"nodeType": "YulIdentifier",
																				"src": "13851:3:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13843:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13843:12:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13835:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13835:21:8"
															},
															"nodeType": "YulIf",
															"src": "13832:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13888:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "x_1",
																		"nodeType": "YulIdentifier",
																		"src": "13899:3:8"
																	},
																	{
																		"name": "y_1",
																		"nodeType": "YulIdentifier",
																		"src": "13904:3:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13895:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13895:13:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "13888:3:8"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13716:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13719:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "13725:3:8",
														"type": ""
													}
												],
												"src": "13686:228:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14048:119:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14058:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14070:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14081:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14066:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14066:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14058:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14100:9:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14111:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14093:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14093:25:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14093:25:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14138:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14149:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14134:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14134:18:8"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14154:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14127:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14127:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14127:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14009:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14020:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14028:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14039:4:8",
														"type": ""
													}
												],
												"src": "13919:248:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let value := calldataload(add(headStart, 96))\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value3 := value\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_encode_tuple_t_uint32_t_uint256__to_t_uint32_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_18219da281cfbf6a44906dac1cc47e920e46399fb5e68945a0c7f54c33f6fe21__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"LANDBASE: _delMinter is the zero\")\n        mstore(add(headStart, 96), \" address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_88d7da1b299470dcb9c6dd03b0ef4b745f350eaaf6e449f222d35091be3be430__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"caller is not the minter\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_7bf43d6a4b3be47c78912370efffcd1148613cdb99bf3f13b2c54bd0120ef20b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"LANDBASE: index out of bounds\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e7321e035fcdb44ae58b7c959d5d07b7207a23cd2d67b95e4da721649acd9e2e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"LANDBASE::getPriorVotes: not yet\")\n        mstore(add(headStart, 96), \" determined\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint32(x, y) -> diff\n    {\n        let _1 := 0xffffffff\n        let x_1 := and(x, _1)\n        let y_1 := and(y, _1)\n        if lt(x_1, y_1) { panic_error_0x11() }\n        diff := sub(x_1, y_1)\n    }\n    function checked_div_t_uint32(x, y) -> r\n    {\n        let _1 := 0xffffffff\n        let y_1 := and(y, _1)\n        if iszero(y_1)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(and(x, _1), y_1)\n    }\n    function abi_encode_tuple_t_stringliteral_537f9291d5ca8a9d2e07b21416aace2af9dfe45a6b1e8a537f463ccbde96be51__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"LANDBASE: _addMinter is the zero\")\n        mstore(add(headStart, 96), \" address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, shl(240, 6401))\n        mstore(add(pos, 2), value0)\n        mstore(add(pos, 34), value1)\n        end := add(pos, 66)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_477b9d1795367c3ae15428e4592ed782c56899effd66b2d852d18b3a68099013__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"LANDBASE::delegateBySig: invalid\")\n        mstore(add(headStart, 96), \" signature\")\n        tail := add(headStart, 128)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_de49e737c86ecd39ef48ac89e5f4d5f6931a390abe19d9bcf3e17e0e009b07f6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"LANDBASE::delegateBySig: invalid\")\n        mstore(add(headStart, 96), \" nonce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a0a2e2d8f846476e5e339360d1d1e6ef75e387a44218d585bcf264264633bc44__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"LANDBASE::delegateBySig: signatu\")\n        mstore(add(headStart, 96), \"re expired\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"BEP20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"BEP20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"BEP20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"BEP20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"BEP20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint32(x, y) -> sum\n    {\n        let _1 := 0xffffffff\n        let x_1 := and(x, _1)\n        let y_1 := and(y, _1)\n        if gt(x_1, sub(_1, y_1)) { panic_error_0x11() }\n        sum := add(x_1, y_1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101f05760003560e01c8063782d6fe11161010f578063a9059cbb116100a2578063dd62ed3e11610071578063dd62ed3e14610481578063e7a324dc146104ba578063f1127ed8146104e1578063f2fde38b1461053857600080fd5b8063a9059cbb14610435578063aa271e1a14610448578063b4b5ea571461045b578063c3cda5201461046e57600080fd5b806395d89b41116100de57806395d89b41146103f4578063983b2d56146103fc578063a0712d681461040f578063a457c2d71461042257600080fd5b8063782d6fe1146103b05780637ecebe00146103c3578063893d20e8146103e35780638da5cb5b146103e357600080fd5b806339509351116101875780635c19a95c116101565780635c19a95c1461032f5780636fcfff451461034457806370a082311461037f578063715018a6146103a857600080fd5b806339509351146102b257806340c10f19146102c5578063587cde1e146102d85780635b7121f81461031c57600080fd5b806320606b70116101c357806320606b701461025057806323338b881461027757806323b872dd1461028a578063313ce5671461029d57600080fd5b80630323aac7146101f557806306fdde0314610210578063095ea7b31461022557806318160ddd14610248575b600080fd5b6101fd61054b565b6040519081526020015b60405180910390f35b61021861055c565b6040516102079190611a02565b610238610233366004611a6e565b6105ee565b6040519015158152602001610207565b6003546101fd565b6101fd7f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681565b610238610285366004611a98565b610605565b610238610298366004611ab3565b6106b3565b60045460405160ff9091168152602001610207565b6102386102c0366004611a6e565b61071c565b6102386102d3366004611a6e565b610752565b6103046102e6366004611a98565b6001600160a01b039081166000908152600960205260409020541690565b6040516001600160a01b039091168152602001610207565b61030461032a366004611aef565b6107d8565b61034261033d366004611a98565b610871565b005b61036a610352366004611a98565b600b6020526000908152604090205463ffffffff1681565b60405163ffffffff9091168152602001610207565b6101fd61038d366004611a98565b6001600160a01b031660009081526001602052604090205490565b61034261087e565b6101fd6103be366004611a6e565b6108b4565b6101fd6103d1366004611a98565b600c6020526000908152604090205481565b6000546001600160a01b0316610304565b610218610b20565b61023861040a366004611a98565b610b2f565b61023861041d366004611aef565b610bcc565b610238610430366004611a6e565b610c09565b610238610443366004611a6e565b610c58565b610238610456366004611a98565b610c65565b6101fd610469366004611a98565b610c72565b61034261047c366004611b08565b610ce7565b6101fd61048f366004611b68565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6101fd7fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf81565b61051c6104ef366004611b9b565b600a6020908152600092835260408084209091529082529020805460019091015463ffffffff9091169082565b6040805163ffffffff9093168352602083019190915201610207565b610342610546366004611a98565b610fc1565b60006105576007611059565b905090565b60606006805461056b90611bdb565b80601f016020809104026020016040519081016040528092919081815260200182805461059790611bdb565b80156105e45780601f106105b9576101008083540402835291602001916105e4565b820191906000526020600020905b8154815290600101906020018083116105c757829003601f168201915b5050505050905090565b60006105fb338484611063565b5060015b92915050565b600080546001600160a01b031633146106395760405162461bcd60e51b815260040161063090611c15565b60405180910390fd5b6001600160a01b0382166106a05760405162461bcd60e51b815260206004820152602860248201527f4c414e44424153453a205f64656c4d696e74657220697320746865207a65726f604482015267206164647265737360c01b6064820152608401610630565b6106ab600783611188565b90505b919050565b60006106c084848461119d565b610712843361070d85604051806060016040528060288152602001611d8b602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190611323565b611063565b5060019392505050565b3360008181526002602090815260408083206001600160a01b038716845290915281205490916105fb91859061070d908661134f565b600061075d33610c65565b6107a95760405162461bcd60e51b815260206004820152601860248201527f63616c6c6572206973206e6f7420746865206d696e74657200000000000000006044820152606401610630565b6107b3838361135b565b6001600160a01b038084166000908152600960205260408120546105fb921684611441565b600080546001600160a01b031633146108035760405162461bcd60e51b815260040161063090611c15565b600161080d61054b565b6108179190611c60565b8211156108665760405162461bcd60e51b815260206004820152601d60248201527f4c414e44424153453a20696e646578206f7574206f6620626f756e64730000006044820152606401610630565b6106ab6007836115a5565b61087b33826115b1565b50565b6000546001600160a01b031633146108a85760405162461bcd60e51b815260040161063090611c15565b6108b26000611631565b565b60004382106109195760405162461bcd60e51b815260206004820152602b60248201527f4c414e44424153453a3a6765745072696f72566f7465733a206e6f742079657460448201526a0819195d195c9b5a5b995960aa1b6064820152608401610630565b6001600160a01b0383166000908152600b602052604081205463ffffffff169081900361094a5760009150506105ff565b6001600160a01b0384166000908152600a60205260408120849161096f600185611c77565b63ffffffff908116825260208201929092526040016000205416116109d8576001600160a01b0384166000908152600a60205260408120906109b2600184611c77565b63ffffffff1663ffffffff168152602001908152602001600020600101549150506105ff565b6001600160a01b0384166000908152600a6020908152604080832083805290915290205463ffffffff16831015610a135760009150506105ff565b600080610a21600184611c77565b90505b8163ffffffff168163ffffffff161115610ae95760006002610a468484611c77565b610a509190611c9c565b610a5a9083611c77565b6001600160a01b0388166000908152600a6020908152604080832063ffffffff8086168552908352928190208151808301909252805490931680825260019093015491810191909152919250879003610abd576020015194506105ff9350505050565b805163ffffffff16871115610ad457819350610ae2565b610adf600183611c77565b92505b5050610a24565b506001600160a01b0385166000908152600a6020908152604080832063ffffffff9094168352929052206001015491505092915050565b60606005805461056b90611bdb565b600080546001600160a01b03163314610b5a5760405162461bcd60e51b815260040161063090611c15565b6001600160a01b038216610bc15760405162461bcd60e51b815260206004820152602860248201527f4c414e44424153453a205f6164644d696e74657220697320746865207a65726f604482015267206164647265737360c01b6064820152608401610630565b6106ab600783611681565b600080546001600160a01b03163314610bf75760405162461bcd60e51b815260040161063090611c15565b610c01338361135b565b506001919050565b60006105fb338461070d85604051806060016040528060258152602001611dd9602591393360009081526002602090815260408083206001600160a01b038d1684529091529020549190611323565b60006105fb33848461119d565b60006106ab600783611696565b6001600160a01b0381166000908152600b602052604081205463ffffffff1680610c9d576000610ce0565b6001600160a01b0383166000908152600a6020526040812090610cc1600184611c77565b63ffffffff1663ffffffff168152602001908152602001600020600101545b9392505050565b60007f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866610d1261055c565b80519060200120610d204690565b60408051602080820195909552808201939093526060830191909152306080808401919091528151808403909101815260a0830182528051908401207fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60c08401526001600160a01b038b1660e084015261010083018a90526101208084018a90528251808503909101815261014084019092528151919093012061190160f01b610160830152610162820183905261018282018190529192506000906101a20160408051601f198184030181528282528051602091820120600080855291840180845281905260ff8a169284019290925260608301889052608083018790529092509060019060a0016020604051602081039080840390855afa158015610e4c573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610ec25760405162461bcd60e51b815260206004820152602a60248201527f4c414e44424153453a3a64656c656761746542795369673a20696e76616c6964604482015269207369676e617475726560b01b6064820152608401610630565b6001600160a01b0381166000908152600c60205260408120805491610ee683611ccd565b919050558914610f475760405162461bcd60e51b815260206004820152602660248201527f4c414e44424153453a3a64656c656761746542795369673a20696e76616c6964604482015265206e6f6e636560d01b6064820152608401610630565b87421115610faa5760405162461bcd60e51b815260206004820152602a60248201527f4c414e44424153453a3a64656c656761746542795369673a207369676e6174756044820152691c9948195e1c1a5c995960b21b6064820152608401610630565b610fb4818b6115b1565b505050505b505050505050565b6000546001600160a01b03163314610feb5760405162461bcd60e51b815260040161063090611c15565b6001600160a01b0381166110505760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610630565b61087b81611631565b60006106ab825490565b6001600160a01b0383166110c55760405162461bcd60e51b8152602060048201526024808201527f42455032303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610630565b6001600160a01b0382166111265760405162461bcd60e51b815260206004820152602260248201527f42455032303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610630565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6000610ce0836001600160a01b0384166116b8565b6001600160a01b0383166112015760405162461bcd60e51b815260206004820152602560248201527f42455032303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610630565b6001600160a01b0382166112635760405162461bcd60e51b815260206004820152602360248201527f42455032303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610630565b6112a081604051806060016040528060268152602001611db3602691396001600160a01b0386166000908152600160205260409020549190611323565b6001600160a01b0380851660009081526001602052604080822093909355908416815220546112cf908261134f565b6001600160a01b0380841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061117b9085815260200190565b600081848411156113475760405162461bcd60e51b81526004016106309190611a02565b505050900390565b6000610ce08284611ce6565b6001600160a01b0382166113b15760405162461bcd60e51b815260206004820152601f60248201527f42455032303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610630565b6003546113be908261134f565b6003556001600160a01b0382166000908152600160205260409020546113e4908261134f565b6001600160a01b0383166000818152600160205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906114359085815260200190565b60405180910390a35050565b816001600160a01b0316836001600160a01b0316141580156114635750600081115b156115a0576001600160a01b03831615611506576001600160a01b0383166000908152600b602052604081205463ffffffff1690816114a35760006114e6565b6001600160a01b0385166000908152600a60205260408120906114c7600185611c77565b63ffffffff1663ffffffff168152602001908152602001600020600101545b905060006114f482856117ab565b9050611502868484846117b7565b5050505b6001600160a01b038216156115a0576001600160a01b0382166000908152600b602052604081205463ffffffff169081611541576000611584565b6001600160a01b0384166000908152600a6020526040812090611565600185611c77565b63ffffffff1663ffffffff168152602001908152602001600020600101545b90506000611592828561134f565b9050610fb9858484846117b7565b505050565b6000610ce08383611959565b6001600160a01b03828116600081815260096020818152604080842080546001845282862054949093528787166001600160a01b03198416811790915590519190951694919391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a461162b828483611441565b50505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000610ce0836001600160a01b038416611983565b6001600160a01b03811660009081526001830160205260408120541515610ce0565b600081815260018301602052604081205480156117a15760006116dc600183611c60565b85549091506000906116f090600190611c60565b905081811461175557600086600001828154811061171057611710611cfe565b906000526020600020015490508087600001848154811061173357611733611cfe565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061176657611766611d14565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506105ff565b60009150506105ff565b6000610ce08284611c60565b60006117db43604051806060016040528060388152602001611d53603891396119d2565b905060008463ffffffff1611801561183557506001600160a01b0385166000908152600a6020526040812063ffffffff831691611819600188611c77565b63ffffffff908116825260208201929092526040016000205416145b1561187e576001600160a01b0385166000908152600a60205260408120839161185f600188611c77565b63ffffffff16815260208101919091526040016000206001015561190e565b60408051808201825263ffffffff838116825260208083018681526001600160a01b038a166000908152600a83528581208a851682529092529390209151825463ffffffff1916911617815590516001918201556118dd908590611d2a565b6001600160a01b0386166000908152600b60205260409020805463ffffffff191663ffffffff929092169190911790555b60408051848152602081018490526001600160a01b038716917fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724910160405180910390a25050505050565b600082600001828154811061197057611970611cfe565b9060005260206000200154905092915050565b60008181526001830160205260408120546119ca575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556105ff565b5060006105ff565b60008164010000000084106119fa5760405162461bcd60e51b81526004016106309190611a02565b509192915050565b600060208083528351808285015260005b81811015611a2f57858101830151858201604001528201611a13565b81811115611a41576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146106ae57600080fd5b60008060408385031215611a8157600080fd5b611a8a83611a57565b946020939093013593505050565b600060208284031215611aaa57600080fd5b610ce082611a57565b600080600060608486031215611ac857600080fd5b611ad184611a57565b9250611adf60208501611a57565b9150604084013590509250925092565b600060208284031215611b0157600080fd5b5035919050565b60008060008060008060c08789031215611b2157600080fd5b611b2a87611a57565b95506020870135945060408701359350606087013560ff81168114611b4e57600080fd5b9598949750929560808101359460a0909101359350915050565b60008060408385031215611b7b57600080fd5b611b8483611a57565b9150611b9260208401611a57565b90509250929050565b60008060408385031215611bae57600080fd5b611bb783611a57565b9150602083013563ffffffff81168114611bd057600080fd5b809150509250929050565b600181811c90821680611bef57607f821691505b602082108103611c0f57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082821015611c7257611c72611c4a565b500390565b600063ffffffff83811690831681811015611c9457611c94611c4a565b039392505050565b600063ffffffff80841680611cc157634e487b7160e01b600052601260045260246000fd5b92169190910492915050565b600060018201611cdf57611cdf611c4a565b5060010190565b60008219821115611cf957611cf9611c4a565b500190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b600063ffffffff808316818516808303821115611d4957611d49611c4a565b0194935050505056fe4c414e44424153453a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d6265722065786365656473203332206269747342455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122068c2a890dc29e564393190b3b1078f6268ea165c0038985395926fc944884d7664736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x782D6FE1 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x481 JUMPI DUP1 PUSH4 0xE7A324DC EQ PUSH2 0x4BA JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x4E1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x538 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0xAA271E1A EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0xB4B5EA57 EQ PUSH2 0x45B JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x46E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0x983B2D56 EQ PUSH2 0x3FC JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x422 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x782D6FE1 EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x3E3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x5C19A95C GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0x5B7121F8 EQ PUSH2 0x31C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x20606B70 GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x20606B70 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x23338B88 EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x323AAC7 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x248 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FD PUSH2 0x54B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x218 PUSH2 0x55C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0x238 PUSH2 0x233 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A6E JUMP JUMPDEST PUSH2 0x5EE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x207 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x1FD JUMP JUMPDEST PUSH2 0x1FD PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 DUP2 JUMP JUMPDEST PUSH2 0x238 PUSH2 0x285 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A98 JUMP JUMPDEST PUSH2 0x605 JUMP JUMPDEST PUSH2 0x238 PUSH2 0x298 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AB3 JUMP JUMPDEST PUSH2 0x6B3 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x207 JUMP JUMPDEST PUSH2 0x238 PUSH2 0x2C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A6E JUMP JUMPDEST PUSH2 0x71C JUMP JUMPDEST PUSH2 0x238 PUSH2 0x2D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A6E JUMP JUMPDEST PUSH2 0x752 JUMP JUMPDEST PUSH2 0x304 PUSH2 0x2E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A98 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x207 JUMP JUMPDEST PUSH2 0x304 PUSH2 0x32A CALLDATASIZE PUSH1 0x4 PUSH2 0x1AEF JUMP JUMPDEST PUSH2 0x7D8 JUMP JUMPDEST PUSH2 0x342 PUSH2 0x33D CALLDATASIZE PUSH1 0x4 PUSH2 0x1A98 JUMP JUMPDEST PUSH2 0x871 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x36A PUSH2 0x352 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A98 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x207 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x38D CALLDATASIZE PUSH1 0x4 PUSH2 0x1A98 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x342 PUSH2 0x87E JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x3BE CALLDATASIZE PUSH1 0x4 PUSH2 0x1A6E JUMP JUMPDEST PUSH2 0x8B4 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x3D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A98 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x304 JUMP JUMPDEST PUSH2 0x218 PUSH2 0xB20 JUMP JUMPDEST PUSH2 0x238 PUSH2 0x40A CALLDATASIZE PUSH1 0x4 PUSH2 0x1A98 JUMP JUMPDEST PUSH2 0xB2F JUMP JUMPDEST PUSH2 0x238 PUSH2 0x41D CALLDATASIZE PUSH1 0x4 PUSH2 0x1AEF JUMP JUMPDEST PUSH2 0xBCC JUMP JUMPDEST PUSH2 0x238 PUSH2 0x430 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A6E JUMP JUMPDEST PUSH2 0xC09 JUMP JUMPDEST PUSH2 0x238 PUSH2 0x443 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A6E JUMP JUMPDEST PUSH2 0xC58 JUMP JUMPDEST PUSH2 0x238 PUSH2 0x456 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A98 JUMP JUMPDEST PUSH2 0xC65 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x469 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A98 JUMP JUMPDEST PUSH2 0xC72 JUMP JUMPDEST PUSH2 0x342 PUSH2 0x47C CALLDATASIZE PUSH1 0x4 PUSH2 0x1B08 JUMP JUMPDEST PUSH2 0xCE7 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x48F CALLDATASIZE PUSH1 0x4 PUSH2 0x1B68 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1FD PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP2 JUMP JUMPDEST PUSH2 0x51C PUSH2 0x4EF CALLDATASIZE PUSH1 0x4 PUSH2 0x1B9B JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND SWAP1 DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x207 JUMP JUMPDEST PUSH2 0x342 PUSH2 0x546 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A98 JUMP JUMPDEST PUSH2 0xFC1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x557 PUSH1 0x7 PUSH2 0x1059 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x56B SWAP1 PUSH2 0x1BDB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x597 SWAP1 PUSH2 0x1BDB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5E4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5B9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5E4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5C7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5FB CALLER DUP5 DUP5 PUSH2 0x1063 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x639 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x630 SWAP1 PUSH2 0x1C15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C414E44424153453A205F64656C4D696E74657220697320746865207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x2061646472657373 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x630 JUMP JUMPDEST PUSH2 0x6AB PUSH1 0x7 DUP4 PUSH2 0x1188 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6C0 DUP5 DUP5 DUP5 PUSH2 0x119D JUMP JUMPDEST PUSH2 0x712 DUP5 CALLER PUSH2 0x70D DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D8B PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x1323 JUMP JUMPDEST PUSH2 0x1063 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x5FB SWAP2 DUP6 SWAP1 PUSH2 0x70D SWAP1 DUP7 PUSH2 0x134F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x75D CALLER PUSH2 0xC65 JUMP JUMPDEST PUSH2 0x7A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616C6C6572206973206E6F7420746865206D696E7465720000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x630 JUMP JUMPDEST PUSH2 0x7B3 DUP4 DUP4 PUSH2 0x135B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x5FB SWAP3 AND DUP5 PUSH2 0x1441 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x803 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x630 SWAP1 PUSH2 0x1C15 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x80D PUSH2 0x54B JUMP JUMPDEST PUSH2 0x817 SWAP2 SWAP1 PUSH2 0x1C60 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x866 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C414E44424153453A20696E646578206F7574206F6620626F756E6473000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x630 JUMP JUMPDEST PUSH2 0x6AB PUSH1 0x7 DUP4 PUSH2 0x15A5 JUMP JUMPDEST PUSH2 0x87B CALLER DUP3 PUSH2 0x15B1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x630 SWAP1 PUSH2 0x1C15 JUMP JUMPDEST PUSH2 0x8B2 PUSH1 0x0 PUSH2 0x1631 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0x919 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C414E44424153453A3A6765745072696F72566F7465733A206E6F7420796574 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x819195D195C9B5A5B9959 PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x630 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x94A JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x5FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP5 SWAP2 PUSH2 0x96F PUSH1 0x1 DUP6 PUSH2 0x1C77 JUMP JUMPDEST PUSH4 0xFFFFFFFF SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD AND GT PUSH2 0x9D8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x9B2 PUSH1 0x1 DUP5 PUSH2 0x1C77 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 POP POP PUSH2 0x5FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP1 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP4 LT ISZERO PUSH2 0xA13 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x5FF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA21 PUSH1 0x1 DUP5 PUSH2 0x1C77 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0xAE9 JUMPI PUSH1 0x0 PUSH1 0x2 PUSH2 0xA46 DUP5 DUP5 PUSH2 0x1C77 JUMP JUMPDEST PUSH2 0xA50 SWAP2 SWAP1 PUSH2 0x1C9C JUMP JUMPDEST PUSH2 0xA5A SWAP1 DUP4 PUSH2 0x1C77 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF DUP1 DUP7 AND DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD SWAP1 SWAP4 AND DUP1 DUP3 MSTORE PUSH1 0x1 SWAP1 SWAP4 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP3 POP DUP8 SWAP1 SUB PUSH2 0xABD JUMPI PUSH1 0x20 ADD MLOAD SWAP5 POP PUSH2 0x5FF SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH4 0xFFFFFFFF AND DUP8 GT ISZERO PUSH2 0xAD4 JUMPI DUP2 SWAP4 POP PUSH2 0xAE2 JUMP JUMPDEST PUSH2 0xADF PUSH1 0x1 DUP4 PUSH2 0x1C77 JUMP JUMPDEST SWAP3 POP JUMPDEST POP POP PUSH2 0xA24 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x56B SWAP1 PUSH2 0x1BDB JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB5A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x630 SWAP1 PUSH2 0x1C15 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBC1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C414E44424153453A205F6164644D696E74657220697320746865207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x2061646472657373 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x630 JUMP JUMPDEST PUSH2 0x6AB PUSH1 0x7 DUP4 PUSH2 0x1681 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBF7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x630 SWAP1 PUSH2 0x1C15 JUMP JUMPDEST PUSH2 0xC01 CALLER DUP4 PUSH2 0x135B JUMP JUMPDEST POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5FB CALLER DUP5 PUSH2 0x70D DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DD9 PUSH1 0x25 SWAP2 CODECOPY CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x1323 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5FB CALLER DUP5 DUP5 PUSH2 0x119D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6AB PUSH1 0x7 DUP4 PUSH2 0x1696 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP1 PUSH2 0xC9D JUMPI PUSH1 0x0 PUSH2 0xCE0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0xCC1 PUSH1 0x1 DUP5 PUSH2 0x1C77 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 PUSH2 0xD12 PUSH2 0x55C JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0xD20 CHAINID SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP6 SWAP1 SWAP6 MSTORE DUP1 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADDRESS PUSH1 0x80 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 DUP4 ADD DUP3 MSTORE DUP1 MLOAD SWAP1 DUP5 ADD KECCAK256 PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 DUP4 ADD DUP11 SWAP1 MSTORE PUSH2 0x120 DUP1 DUP5 ADD DUP11 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP6 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH2 0x140 DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 MLOAD SWAP2 SWAP1 SWAP4 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x160 DUP4 ADD MSTORE PUSH2 0x162 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x182 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP1 PUSH2 0x1A2 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP1 DUP6 MSTORE SWAP2 DUP5 ADD DUP1 DUP5 MSTORE DUP2 SWAP1 MSTORE PUSH1 0xFF DUP11 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP4 ADD DUP9 SWAP1 MSTORE PUSH1 0x80 DUP4 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP3 POP SWAP1 PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE4C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xEC2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C414E44424153453A3A64656C656761746542795369673A20696E76616C6964 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x207369676E6174757265 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x630 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0xEE6 DUP4 PUSH2 0x1CCD JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE DUP10 EQ PUSH2 0xF47 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C414E44424153453A3A64656C656761746542795369673A20696E76616C6964 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x206E6F6E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x630 JUMP JUMPDEST DUP8 TIMESTAMP GT ISZERO PUSH2 0xFAA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C414E44424153453A3A64656C656761746542795369673A207369676E617475 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1C9948195E1C1A5C9959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x630 JUMP JUMPDEST PUSH2 0xFB4 DUP2 DUP12 PUSH2 0x15B1 JUMP JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xFEB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x630 SWAP1 PUSH2 0x1C15 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1050 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x630 JUMP JUMPDEST PUSH2 0x87B DUP2 PUSH2 0x1631 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6AB DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x10C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x42455032303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x630 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1126 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x630 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x16B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1201 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x630 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1263 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x630 JUMP JUMPDEST PUSH2 0x12A0 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DB3 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x1323 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x12CF SWAP1 DUP3 PUSH2 0x134F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x117B SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x1347 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x630 SWAP2 SWAP1 PUSH2 0x1A02 JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE0 DUP3 DUP5 PUSH2 0x1CE6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x13B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x630 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x13BE SWAP1 DUP3 PUSH2 0x134F JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x13E4 SWAP1 DUP3 PUSH2 0x134F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x1435 SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x1463 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x15A0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x1506 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH2 0x14A3 JUMPI PUSH1 0x0 PUSH2 0x14E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x14C7 PUSH1 0x1 DUP6 PUSH2 0x1C77 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x14F4 DUP3 DUP6 PUSH2 0x17AB JUMP JUMPDEST SWAP1 POP PUSH2 0x1502 DUP7 DUP5 DUP5 DUP5 PUSH2 0x17B7 JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x15A0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH2 0x1541 JUMPI PUSH1 0x0 PUSH2 0x1584 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x1565 PUSH1 0x1 DUP6 PUSH2 0x1C77 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1592 DUP3 DUP6 PUSH2 0x134F JUMP JUMPDEST SWAP1 POP PUSH2 0xFB9 DUP6 DUP5 DUP5 DUP5 PUSH2 0x17B7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE0 DUP4 DUP4 PUSH2 0x1959 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP5 MSTORE DUP3 DUP7 KECCAK256 SLOAD SWAP5 SWAP1 SWAP4 MSTORE DUP8 DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP5 AND DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP6 AND SWAP5 SWAP2 SWAP4 SWAP2 SWAP3 DUP6 SWAP3 SWAP2 PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F SWAP2 SWAP1 LOG4 PUSH2 0x162B DUP3 DUP5 DUP4 PUSH2 0x1441 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1983 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0xCE0 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x17A1 JUMPI PUSH1 0x0 PUSH2 0x16DC PUSH1 0x1 DUP4 PUSH2 0x1C60 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x16F0 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1C60 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x1755 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1710 JUMPI PUSH2 0x1710 PUSH2 0x1CFE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1733 JUMPI PUSH2 0x1733 PUSH2 0x1CFE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x1766 JUMPI PUSH2 0x1766 PUSH2 0x1D14 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x5FF JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x5FF JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE0 DUP3 DUP5 PUSH2 0x1C60 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17DB NUMBER PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x38 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D53 PUSH1 0x38 SWAP2 CODECOPY PUSH2 0x19D2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x1835 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH4 0xFFFFFFFF DUP4 AND SWAP2 PUSH2 0x1819 PUSH1 0x1 DUP9 PUSH2 0x1C77 JUMP JUMPDEST PUSH4 0xFFFFFFFF SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD AND EQ JUMPDEST ISZERO PUSH2 0x187E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 SWAP2 PUSH2 0x185F PUSH1 0x1 DUP9 PUSH2 0x1C77 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SSTORE PUSH2 0x190E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH4 0xFFFFFFFF DUP4 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA DUP4 MSTORE DUP6 DUP2 KECCAK256 DUP11 DUP6 AND DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP4 SWAP1 KECCAK256 SWAP2 MLOAD DUP3 SLOAD PUSH4 0xFFFFFFFF NOT AND SWAP2 AND OR DUP2 SSTORE SWAP1 MLOAD PUSH1 0x1 SWAP2 DUP3 ADD SSTORE PUSH2 0x18DD SWAP1 DUP6 SWAP1 PUSH2 0x1D2A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND PUSH4 0xFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1970 JUMPI PUSH2 0x1970 PUSH2 0x1CFE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x19CA JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x5FF JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x5FF JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH5 0x100000000 DUP5 LT PUSH2 0x19FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x630 SWAP2 SWAP1 PUSH2 0x1A02 JUMP JUMPDEST POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1A2F JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1A13 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1A41 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A8A DUP4 PUSH2 0x1A57 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCE0 DUP3 PUSH2 0x1A57 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1AC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AD1 DUP5 PUSH2 0x1A57 JUMP JUMPDEST SWAP3 POP PUSH2 0x1ADF PUSH1 0x20 DUP6 ADD PUSH2 0x1A57 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1B21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B2A DUP8 PUSH2 0x1A57 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1B4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP3 SWAP6 PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP5 PUSH1 0xA0 SWAP1 SWAP2 ADD CALLDATALOAD SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B84 DUP4 PUSH2 0x1A57 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B92 PUSH1 0x20 DUP5 ADD PUSH2 0x1A57 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BB7 DUP4 PUSH2 0x1A57 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1BD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1BEF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1C0F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1C72 JUMPI PUSH2 0x1C72 PUSH2 0x1C4A JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP4 DUP2 AND SWAP1 DUP4 AND DUP2 DUP2 LT ISZERO PUSH2 0x1C94 JUMPI PUSH2 0x1C94 PUSH2 0x1C4A JUMP JUMPDEST SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 DUP5 AND DUP1 PUSH2 0x1CC1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 AND SWAP2 SWAP1 SWAP2 DIV SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1CDF JUMPI PUSH2 0x1CDF PUSH2 0x1C4A JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1CF9 JUMPI PUSH2 0x1CF9 PUSH2 0x1C4A JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 DUP4 AND DUP2 DUP6 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0x1D49 JUMPI PUSH2 0x1D49 PUSH2 0x1C4A JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP INVALID 0x4C COINBASE 0x4E DIFFICULTY TIMESTAMP COINBASE MSTORE8 GASLIMIT GASPRICE GASPRICE 0x5F PUSH24 0x72697465436865636B706F696E743A20626C6F636B206E75 PUSH14 0x6265722065786365656473203332 KECCAK256 PUSH3 0x697473 TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636542455032303A20747261 PUSH15 0x7366657220616D6F756E7420657863 PUSH6 0x656473206261 PUSH13 0x616E636542455032303A206465 PUSH4 0x72656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726FA26469706673582212 KECCAK256 PUSH9 0xC2A890DC29E5643931 SWAP1 0xB3 0xB1 SMOD DUP16 PUSH3 0x68EA16 0x5C STOP CODESIZE SWAP9 MSTORE8 SWAP6 SWAP3 PUSH16 0xC944884D7664736F6C634300080E0033 ",
							"sourceMap": "166:10270:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9803:113;;;:::i;:::-;;;160:25:8;;;148:2;133:18;9803:113:2;;;;;;;;1260:92:0;;;:::i;:::-;;;;;;;:::i;2820:193::-;;;;;;:::i;:::-;;:::i;:::-;;;1400:14:8;;1393:22;1375:41;;1363:2;1348:18;2820:193:0;1235:187:8;1736:100:0;1816:12;;1736:100;;1309:155:2;;1360:104;1309:155;;9531:264;;;;;;:::i;:::-;;:::i;3484:446:0:-;;;;;;:::i;:::-;;:::i;1419:92::-;1494:9;;1419:92;;1494:9;;;;2275:36:8;;2263:2;2248:18;1419:92:0;2133:184:8;4338:283:0;;;;;;:::i;:::-;;:::i;467:232:2:-;;;;;;:::i;:::-;;:::i;2408:117::-;;;;;;:::i;:::-;-1:-1:-1;;;;;2496:21:2;;;2469:7;2496:21;;;:10;:21;;;;;;;;2408:117;;;;-1:-1:-1;;;;;2486:32:8;;;2468:51;;2456:2;2441:18;2408:117:2;2322:203:8;10061:219:2;;;;;;:::i;:::-;;:::i;2673:104::-;;;;;;:::i;:::-;;:::i;:::-;;1188:48;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2889:10:8;2877:23;;;2859:42;;2847:2;2832:18;1188:48:2;2715:192:8;1898:119:0;;;;;;:::i;:::-;-1:-1:-1;;;;;1991:18:0;1964:7;1991:18;;;:9;:18;;;;;;;1898:119;1657:94:3;;;:::i;5235:1297:2:-;;;;;;:::i;:::-;;:::i;1765:41::-;;;;;;:::i;:::-;;;;;;;;;;;;;;1103:94:0;1155:7;1079:6:3;-1:-1:-1;;;;;1079:6:3;1103:94:0;9803:113:2;1576:96:0;;;:::i;9262:261:2:-;;;;;;:::i;:::-;;:::i;5724:130:0:-;;;;;;:::i;:::-;;:::i;5123:383::-;;;;;;:::i;:::-;;:::i;2229:199::-;;;;;;:::i;:::-;;:::i;9924:129:2:-;;;;;;:::i;:::-;;:::i;4568:236::-;;;;;;:::i;:::-;;:::i;3211:1156::-;;;;;;:::i;:::-;;:::i;2490:184:0:-;;;;;;:::i;:::-;-1:-1:-1;;;;;2639:18:0;;;2607:7;2639:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2490:184;1558:126:2;;1613:71;1558:126;;1051:68;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4357:10:8;4345:23;;;4327:42;;4400:2;4385:18;;4378:34;;;;4300:18;1051:68:2;4155:263:8;1906:192:3;;;;;;:::i;:::-;;:::i;9803:113:2:-;9851:7;9878:30;9899:8;9878:20;:30::i;:::-;9871:37;;9803:113;:::o;1260:92:0:-;1306:13;1339:5;1332:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1260:92;:::o;2820:193::-;2922:4;2944:39;682:10:7;2967:7:0;2976:6;2944:8;:39::i;:::-;-1:-1:-1;3001:4:0;2820:193;;;;;:::o;9531:264:2:-;9596:4;1079:6:3;;-1:-1:-1;;;;;1079:6:3;682:10:7;1226:23:3;1218:68;;;;-1:-1:-1;;;1218:68:3;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;9635:24:2;::::1;9613:114;;;::::0;-1:-1:-1;;;9613:114:2;;5371:2:8;9613:114:2::1;::::0;::::1;5353:21:8::0;5410:2;5390:18;;;5383:30;5449:34;5429:18;;;5422:62;-1:-1:-1;;;5500:18:8;;;5493:38;5548:19;;9613:114:2::1;5169:404:8::0;9613:114:2::1;9745:42;9766:8;9776:10;9745:20;:42::i;:::-;9738:49;;1297:1:3;9531:264:2::0;;;:::o;3484:446:0:-;3616:4;3633:36;3643:6;3651:9;3662:6;3633:9;:36::i;:::-;3680:220;3703:6;682:10:7;3751:138:0;3807:6;3751:138;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3751:19:0;;;;;;:11;:19;;;;;;;;682:10:7;3751:33:0;;;;;;;;;;:37;:138::i;:::-;3680:8;:220::i;:::-;-1:-1:-1;3918:4:0;3484:446;;;;;:::o;4338:283::-;682:10:7;4436:4:0;4530:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;4530:34:0;;;;;;;;;;4436:4;;4458:133;;4508:7;;4530:50;;4569:10;4530:38;:50::i;467:232:2:-;565:4;10364:20;10373:10;10364:8;:20::i;:::-;10356:57;;;;-1:-1:-1;;;10356:57:2;;5780:2:8;10356:57:2;;;5762:21:8;5819:2;5799:18;;;5792:30;5858:26;5838:18;;;5831:54;5902:18;;10356:57:2;5578:348:8;10356:57:2;587:19:::1;593:3;598:7;587:5;:19::i;:::-;-1:-1:-1::0;;;;;644:15:2;;::::1;640:1;644:15:::0;;;:10:::1;:15;::::0;;;;;617:52:::1;::::0;644:15:::1;661:7:::0;617:14:::1;:52::i;10061:219::-:0;10127:7;1079:6:3;;-1:-1:-1;;;;;1079:6:3;682:10:7;1226:23:3;1218:68;;;;-1:-1:-1;;;1218:68:3;;;;;;;:::i;:::-;10185:1:2::1;10165:17;:15;:17::i;:::-;:21;;;;:::i;:::-;10155:6;:31;;10147:73;;;::::0;-1:-1:-1;;;10147:73:2;;6395:2:8;10147:73:2::1;::::0;::::1;6377:21:8::0;6434:2;6414:18;;;6407:30;6473:31;6453:18;;;6446:59;6522:18;;10147:73:2::1;6193:353:8::0;10147:73:2::1;10238:34;10255:8;10265:6;10238:16;:34::i;2673:104::-:0;2737:32;2747:10;2759:9;2737;:32::i;:::-;2673:104;:::o;1657:94:3:-;1052:7;1079:6;-1:-1:-1;;;;;1079:6:3;682:10:7;1226:23:3;1218:68;;;;-1:-1:-1;;;1218:68:3;;;;;;;:::i;:::-;1722:21:::1;1740:1;1722:9;:21::i;:::-;1657:94::o:0;5235:1297:2:-;5346:7;5407:12;5393:11;:26;5371:119;;;;-1:-1:-1;;;5371:119:2;;6753:2:8;5371:119:2;;;6735:21:8;6792:2;6772:18;;;6765:30;6831:34;6811:18;;;6804:62;-1:-1:-1;;;6882:18:8;;;6875:41;6933:19;;5371:119:2;6551:407:8;5371:119:2;-1:-1:-1;;;;;5525:23:2;;5503:19;5525:23;;;:14;:23;;;;;;;;;5563:17;;;5559:58;;5604:1;5597:8;;;;;5559:58;-1:-1:-1;;;;;5677:20:2;;;;;;:11;:20;;;;;5729:11;;5698:16;5713:1;5698:12;:16;:::i;:::-;5677:38;;;;;;;;;;;;;;;-1:-1:-1;5677:38:2;:48;;:63;5673:147;;-1:-1:-1;;;;;5764:20:2;;;;;;:11;:20;;;;;;5785:16;5800:1;5785:12;:16;:::i;:::-;5764:38;;;;;;;;;;;;;;;:44;;;5757:51;;;;;5673:147;-1:-1:-1;;;;;5881:20:2;;;;;;:11;:20;;;;;;;;:23;;;;;;;;:33;:23;:33;:47;-1:-1:-1;5877:88:2;;;5952:1;5945:8;;;;;5877:88;5977:12;;6019:16;6034:1;6019:12;:16;:::i;:::-;6004:31;;6046:428;6061:5;6053:13;;:5;:13;;;6046:428;;;6083:13;6125:1;6108:13;6116:5;6108;:13;:::i;:::-;6107:19;;;;:::i;:::-;6099:27;;:5;:27;:::i;:::-;-1:-1:-1;;;;;6191:20:2;;6168;6191;;;:11;:20;;;;;;;;:28;;;;;;;;;;;;;6168:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;6083:43;;-1:-1:-1;6238:27:2;;;6234:229;;6293:8;;;;-1:-1:-1;6286:15:2;;-1:-1:-1;;;;6286:15:2;6234:229;6327:12;;:26;;;-1:-1:-1;6323:140:2;;;6382:6;6374:14;;6323:140;;;6437:10;6446:1;6437:6;:10;:::i;:::-;6429:18;;6323:140;6068:406;;6046:428;;;-1:-1:-1;;;;;;6491:20:2;;;;;;:11;:20;;;;;;;;:27;;;;;;;;;;:33;;;;-1:-1:-1;;5235:1297:2;;;;:::o;1576:96:0:-;1624:13;1657:7;1650:14;;;;;:::i;9262:261:2:-;9327:4;1079:6:3;;-1:-1:-1;;;;;1079:6:3;682:10:7;1226:23:3;1218:68;;;;-1:-1:-1;;;1218:68:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;9366:24:2;::::1;9344:114;;;::::0;-1:-1:-1;;;9344:114:2;;7684:2:8;9344:114:2::1;::::0;::::1;7666:21:8::0;7723:2;7703:18;;;7696:30;7762:34;7742:18;;;7735:62;-1:-1:-1;;;7813:18:8;;;7806:38;7861:19;;9344:114:2::1;7482:404:8::0;9344:114:2::1;9476:39;9494:8;9504:10;9476:17;:39::i;5724:130:0:-:0;5780:4;1079:6:3;;-1:-1:-1;;;;;1079:6:3;682:10:7;1226:23:3;1218:68;;;;-1:-1:-1;;;1218:68:3;;;;;;;:::i;:::-;5797:27:0::1;682:10:7::0;5817:6:0::1;5797:5;:27::i;:::-;-1:-1:-1::0;5842:4:0::1;5724:130:::0;;;:::o;5123:383::-;5226:4;5248:228;682:10:7;5298:7:0;5320:145;5377:15;5320:145;;;;;;;;;;;;;;;;;682:10:7;5320:25:0;;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5320:34:0;;;;;;;;;;;;:38;:145::i;2229:199::-;2334:4;2356:42;682:10:7;2380:9:0;2391:6;2356:9;:42::i;9924:129:2:-;9980:4;10004:41;10027:8;10037:7;10004:22;:41::i;4568:236::-;-1:-1:-1;;;;;4675:23:2;;4633:7;4675:23;;;:14;:23;;;;;;;;4729:16;:67;;4795:1;4729:67;;;-1:-1:-1;;;;;4748:20:2;;;;;;:11;:20;;;;;;4769:16;4784:1;4769:12;:16;:::i;:::-;4748:38;;;;;;;;;;;;;;;:44;;;4729:67;4709:87;4568:236;-1:-1:-1;;;4568:236:2:o;3211:1156::-;3396:23;1360:104;3525:6;:4;:6::i;:::-;3509:24;;;;;;3552:12;9202:9;;9076:178;3552:12;3446:165;;;;;;;8122:25:8;;;;8163:18;;;8156:34;;;;8206:18;;;8199:34;;;;3591:4:2;8249:18:8;;;;8242:60;;;;3446:165:2;;;;;;;;;;8094:19:8;;;3446:165:2;;3422:200;;;;;;1613:71;3680:57;;;8544:25:8;-1:-1:-1;;;;;8605:32:8;;8585:18;;;8578:60;8654:18;;;8647:34;;;8697:18;;;;8690:34;;;3680:57:2;;;;;;;;;;8516:19:8;;;3680:57:2;;;3656:92;;;;;;;-1:-1:-1;;;3802:57:2;;;8993:27:8;9036:11;;;9029:27;;;9072:12;;;9065:28;;;3422:200:2;;-1:-1:-1;;;9109:12:8;;3802:57:2;;;-1:-1:-1;;3802:57:2;;;;;;;;;3778:92;;3802:57;3778:92;;;;3883:17;3903:26;;;;;;;;;9359:25:8;;;9432:4;9420:17;;9400:18;;;9393:45;;;;9454:18;;;9447:34;;;9497:18;;;9490:34;;;3778:92:2;;-1:-1:-1;3883:17:2;3903:26;;9331:19:8;;3903:26:2;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3903:26:2;;-1:-1:-1;;3903:26:2;;;-1:-1:-1;;;;;;;3962:23:2;;3940:115;;;;-1:-1:-1;;;3940:115:2;;9737:2:8;3940:115:2;;;9719:21:8;9776:2;9756:18;;;9749:30;9815:34;9795:18;;;9788:62;-1:-1:-1;;;9866:18:8;;;9859:40;9916:19;;3940:115:2;9535:406:8;3940:115:2;-1:-1:-1;;;;;4097:17:2;;;;;;:6;:17;;;;;:19;;;;;;:::i;:::-;;;;;4088:5;:28;4066:116;;;;-1:-1:-1;;;4066:116:2;;10288:2:8;4066:116:2;;;10270:21:8;10327:2;10307:18;;;10300:30;10366:34;10346:18;;;10339:62;-1:-1:-1;;;10417:18:8;;;10410:36;10463:19;;4066:116:2;10086:402:8;4066:116:2;4234:6;4215:15;:25;;4193:117;;;;-1:-1:-1;;;4193:117:2;;10695:2:8;4193:117:2;;;10677:21:8;10734:2;10714:18;;;10707:30;10773:34;10753:18;;;10746:62;-1:-1:-1;;;10824:18:8;;;10817:40;10874:19;;4193:117:2;10493:406:8;4193:117:2;4328:31;4338:9;4349;4328;:31::i;:::-;4321:38;;;;3211:1156;;;;;;;:::o;1906:192:3:-;1052:7;1079:6;-1:-1:-1;;;;;1079:6:3;682:10:7;1226:23:3;1218:68;;;;-1:-1:-1;;;1218:68:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;1995:22:3;::::1;1987:73;;;::::0;-1:-1:-1;;;1987:73:3;;11106:2:8;1987:73:3::1;::::0;::::1;11088:21:8::0;11145:2;11125:18;;;11118:30;11184:34;11164:18;;;11157:62;-1:-1:-1;;;11235:18:8;;;11228:36;11281:19;;1987:73:3::1;10904:402:8::0;1987:73:3::1;2071:19;2081:8;2071:9;:19::i;8592:117:5:-:0;8655:7;8682:19;8690:3;4076:18;;3993:109;8632:372:0;-1:-1:-1;;;;;8760:19:0;;8752:68;;;;-1:-1:-1;;;8752:68:0;;11513:2:8;8752:68:0;;;11495:21:8;11552:2;11532:18;;;11525:30;11591:34;11571:18;;;11564:62;-1:-1:-1;;;11642:18:8;;;11635:34;11686:19;;8752:68:0;11311:400:8;8752:68:0;-1:-1:-1;;;;;8839:21:0;;8831:68;;;;-1:-1:-1;;;8831:68:0;;11918:2:8;8831:68:0;;;11900:21:8;11957:2;11937:18;;;11930:30;11996:34;11976:18;;;11969:62;-1:-1:-1;;;12047:18:8;;;12040:32;12089:19;;8831:68:0;11716:398:8;8831:68:0;-1:-1:-1;;;;;8912:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;8964:32;;160:25:8;;;8964:32:0;;133:18:8;8964:32:0;;;;;;;;8632:372;;;:::o;8095:158:5:-;8168:4;8192:53;8200:3;-1:-1:-1;;;;;8220:23:5;;8192:7;:53::i;6344:542:0:-;-1:-1:-1;;;;;6476:20:0;;6468:70;;;;-1:-1:-1;;;6468:70:0;;12321:2:8;6468:70:0;;;12303:21:8;12360:2;12340:18;;;12333:30;12399:34;12379:18;;;12372:62;-1:-1:-1;;;12450:18:8;;;12443:35;12495:19;;6468:70:0;12119:401:8;6468:70:0;-1:-1:-1;;;;;6557:23:0;;6549:71;;;;-1:-1:-1;;;6549:71:0;;12727:2:8;6549:71:0;;;12709:21:8;12766:2;12746:18;;;12739:30;12805:34;12785:18;;;12778:62;-1:-1:-1;;;12856:18:8;;;12849:33;12899:19;;6549:71:0;12525:399:8;6549:71:0;6653:108;6689:6;6653:108;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6653:17:0;;;;;;:9;:17;;;;;;;:108;:21;:108::i;:::-;-1:-1:-1;;;;;6633:17:0;;;;;;;:9;:17;;;;;;:128;;;;6795:20;;;;;;;:32;;6820:6;6795:24;:32::i;:::-;-1:-1:-1;;;;;6772:20:0;;;;;;;:9;:20;;;;;;;:55;;;;6843:35;;;;;;;;;;6871:6;160:25:8;;148:2;133:18;;14:177;5042:240:4;5162:7;5223:12;5215:6;;;;5207:29;;;;-1:-1:-1;;;5207:29:4;;;;;;;;:::i;:::-;-1:-1:-1;;;5258:5:4;;;5042:240::o;2763:98::-;2821:7;2848:5;2852:1;2848;:5;:::i;7167:308:0:-;-1:-1:-1;;;;;7243:21:0;;7235:65;;;;-1:-1:-1;;;7235:65:0;;13264:2:8;7235:65:0;;;13246:21:8;13303:2;13283:18;;;13276:30;13342:33;13322:18;;;13315:61;13393:18;;7235:65:0;13062:355:8;7235:65:0;7328:12;;:24;;7345:6;7328:16;:24::i;:::-;7313:12;:39;-1:-1:-1;;;;;7384:18:0;;;;;;:9;:18;;;;;;:30;;7407:6;7384:22;:30::i;:::-;-1:-1:-1;;;;;7363:18:0;;;;;;:9;:18;;;;;;:51;;;;7430:37;;7363:18;;;7430:37;;;;7460:6;160:25:8;;148:2;133:18;;14:177;7430:37:0;;;;;;;;7167:308;;:::o;6974:1065:2:-;7114:6;-1:-1:-1;;;;;7104:16:2;:6;-1:-1:-1;;;;;7104:16:2;;;:30;;;;;7133:1;7124:6;:10;7104:30;7100:932;;;-1:-1:-1;;;;;7155:20:2;;;7151:427;;-1:-1:-1;;;;;7263:22:2;;7244:16;7263:22;;;:14;:22;;;;;;;;;7324:13;:102;;7425:1;7324:102;;;-1:-1:-1;;;;;7361:19:2;;;;;;:11;:19;;;;;;7381:13;7393:1;7381:9;:13;:::i;:::-;7361:34;;;;;;;;;;;;;;;:40;;;7324:102;7304:122;-1:-1:-1;7445:17:2;7465:21;7304:122;7479:6;7465:13;:21::i;:::-;7445:41;;7505:57;7522:6;7530:9;7541;7552;7505:16;:57::i;:::-;7177:401;;;7151:427;-1:-1:-1;;;;;7598:20:2;;;7594:427;;-1:-1:-1;;;;;7706:22:2;;7687:16;7706:22;;;:14;:22;;;;;;;;;7767:13;:102;;7868:1;7767:102;;;-1:-1:-1;;;;;7804:19:2;;;;;;:11;:19;;;;;;7824:13;7836:1;7824:9;:13;:::i;:::-;7804:34;;;;;;;;;;;;;;;:40;;;7767:102;7747:122;-1:-1:-1;7888:17:2;7908:21;7747:122;7922:6;7908:13;:21::i;:::-;7888:41;;7948:57;7965:6;7973:9;7984;7995;7948:16;:57::i;7594:427::-;6974:1065;;;:::o;9063:158:5:-;9137:7;9188:22;9192:3;9204:5;9188:3;:22::i;6540:426:2:-;-1:-1:-1;;;;;6643:21:2;;;6617:23;6643:21;;;:10;:21;;;;;;;;;;1991:9:0;:18;;;;;;6780:21:2;;;;:33;;;-1:-1:-1;;;;;;6780:33:2;;;;;;;6831:54;;6643:21;;;;;1991:18:0;;6780:33:2;;6643:21;;;6831:54;;6617:23;6831:54;6898:60;6913:15;6930:9;6941:16;6898:14;:60::i;:::-;6606:360;;6540:426;;:::o;2106:173:3:-;2162:16;2181:6;;-1:-1:-1;;;;;2198:17:3;;;-1:-1:-1;;;;;;2198:17:3;;;;;;2231:40;;2181:6;;;;;;;2231:40;;2162:16;2231:40;2151:128;2106:173;:::o;7767:152:5:-;7837:4;7861:50;7866:3;-1:-1:-1;;;;;7886:23:5;;7861:4;:50::i;8339:167::-;-1:-1:-1;;;;;8473:23:5;;8419:4;3875:19;;;:12;;;:19;;;;;;:24;;8443:55;3778:129;2272:1420;2338:4;2477:19;;;:12;;;:19;;;;;;2513:15;;2509:1176;;2888:21;2912:14;2925:1;2912:10;:14;:::i;:::-;2961:18;;2888:38;;-1:-1:-1;2941:17:5;;2961:22;;2982:1;;2961:22;:::i;:::-;2941:42;;3017:13;3004:9;:26;3000:405;;3051:17;3071:3;:11;;3083:9;3071:22;;;;;;;;:::i;:::-;;;;;;;;;3051:42;;3225:9;3196:3;:11;;3208:13;3196:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3310:23;;;:12;;;:23;;;;;:36;;;3000:405;3486:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3581:3;:12;;:19;3594:5;3581:19;;;;;;;;;;;3574:26;;;3624:4;3617:11;;;;;;;2509:1176;3668:5;3661:12;;;;;3144:98:4;3202:7;3229:5;3233:1;3229;:5;:::i;8047:817:2:-;8212:18;8233:117;8254:12;8233:117;;;;;;;;;;;;;;;;;:6;:117::i;:::-;8212:138;;8396:1;8381:12;:16;;;:98;;;;-1:-1:-1;;;;;;8414:22:2;;;;;;:11;:22;;;;;:65;;;;8437:16;8452:1;8437:12;:16;:::i;:::-;8414:40;;;;;;;;;;;;;;;-1:-1:-1;8414:40:2;:50;;:65;8381:98;8363:425;;;-1:-1:-1;;;;;8506:22:2;;;;;;:11;:22;;;;;8555:8;;8529:16;8544:1;8529:12;:16;:::i;:::-;8506:40;;;;;;;;;;;;;-1:-1:-1;8506:40:2;:46;;:57;8363:425;;;8635:82;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8596:22:2;;-1:-1:-1;8596:22:2;;;:11;:22;;;;;:36;;;;;;;;;;;:121;;;;-1:-1:-1;;8596:121:2;;;;;;;;-1:-1:-1;8596:121:2;;;;8760:16;;8596:36;;8760:16;:::i;:::-;-1:-1:-1;;;;;8732:25:2;;;;;;:14;:25;;;;;:44;;-1:-1:-1;;8732:44:2;;;;;;;;;;;;8363:425;8805:51;;;14093:25:8;;;14149:2;14134:18;;14127:34;;;-1:-1:-1;;;;;8805:51:2;;;;;14066:18:8;8805:51:2;;;;;;;8201:663;8047:817;;;;:::o;4456:120:5:-;4523:7;4550:3;:11;;4562:5;4550:18;;;;;;;;:::i;:::-;;;;;;;;;4543:25;;4456:120;;;;:::o;1682:414::-;1745:4;3875:19;;;:12;;;:19;;;;;;1762:327;;-1:-1:-1;1805:23:5;;;;;;;;:11;:23;;;;;;;;;;;;;1988:18;;1966:19;;;:12;;;:19;;;;;;:40;;;;2021:11;;1762:327;-1:-1:-1;2072:5:5;2065:12;;8872:196:2;8977:6;9020:12;9013:5;9009:9;;9001:32;;;;-1:-1:-1;;;9001:32:2;;;;;;;;:::i;:::-;-1:-1:-1;9058:1:2;;8872:196;-1:-1:-1;;8872:196:2:o;196:597:8:-;308:4;337:2;366;355:9;348:21;398:6;392:13;441:6;436:2;425:9;421:18;414:34;466:1;476:140;490:6;487:1;484:13;476:140;;;585:14;;;581:23;;575:30;551:17;;;570:2;547:26;540:66;505:10;;476:140;;;634:6;631:1;628:13;625:91;;;704:1;699:2;690:6;679:9;675:22;671:31;664:42;625:91;-1:-1:-1;777:2:8;756:15;-1:-1:-1;;752:29:8;737:45;;;;784:2;733:54;;196:597;-1:-1:-1;;;196:597:8:o;798:173::-;866:20;;-1:-1:-1;;;;;915:31:8;;905:42;;895:70;;961:1;958;951:12;976:254;1044:6;1052;1105:2;1093:9;1084:7;1080:23;1076:32;1073:52;;;1121:1;1118;1111:12;1073:52;1144:29;1163:9;1144:29;:::i;:::-;1134:39;1220:2;1205:18;;;;1192:32;;-1:-1:-1;;;976:254:8:o;1609:186::-;1668:6;1721:2;1709:9;1700:7;1696:23;1692:32;1689:52;;;1737:1;1734;1727:12;1689:52;1760:29;1779:9;1760:29;:::i;1800:328::-;1877:6;1885;1893;1946:2;1934:9;1925:7;1921:23;1917:32;1914:52;;;1962:1;1959;1952:12;1914:52;1985:29;2004:9;1985:29;:::i;:::-;1975:39;;2033:38;2067:2;2056:9;2052:18;2033:38;:::i;:::-;2023:48;;2118:2;2107:9;2103:18;2090:32;2080:42;;1800:328;;;;;:::o;2530:180::-;2589:6;2642:2;2630:9;2621:7;2617:23;2613:32;2610:52;;;2658:1;2655;2648:12;2610:52;-1:-1:-1;2681:23:8;;2530:180;-1:-1:-1;2530:180:8:o;2912:618::-;3014:6;3022;3030;3038;3046;3054;3107:3;3095:9;3086:7;3082:23;3078:33;3075:53;;;3124:1;3121;3114:12;3075:53;3147:29;3166:9;3147:29;:::i;:::-;3137:39;;3223:2;3212:9;3208:18;3195:32;3185:42;;3274:2;3263:9;3259:18;3246:32;3236:42;;3328:2;3317:9;3313:18;3300:32;3372:4;3365:5;3361:16;3354:5;3351:27;3341:55;;3392:1;3389;3382:12;3341:55;2912:618;;;;-1:-1:-1;2912:618:8;;3467:3;3452:19;;3439:33;;3519:3;3504:19;;;3491:33;;-1:-1:-1;2912:618:8;-1:-1:-1;;2912:618:8:o;3535:260::-;3603:6;3611;3664:2;3652:9;3643:7;3639:23;3635:32;3632:52;;;3680:1;3677;3670:12;3632:52;3703:29;3722:9;3703:29;:::i;:::-;3693:39;;3751:38;3785:2;3774:9;3770:18;3751:38;:::i;:::-;3741:48;;3535:260;;;;;:::o;3800:350::-;3867:6;3875;3928:2;3916:9;3907:7;3903:23;3899:32;3896:52;;;3944:1;3941;3934:12;3896:52;3967:29;3986:9;3967:29;:::i;:::-;3957:39;;4046:2;4035:9;4031:18;4018:32;4090:10;4083:5;4079:22;4072:5;4069:33;4059:61;;4116:1;4113;4106:12;4059:61;4139:5;4129:15;;;3800:350;;;;;:::o;4423:380::-;4502:1;4498:12;;;;4545;;;4566:61;;4620:4;4612:6;4608:17;4598:27;;4566:61;4673:2;4665:6;4662:14;4642:18;4639:38;4636:161;;4719:10;4714:3;4710:20;4707:1;4700:31;4754:4;4751:1;4744:15;4782:4;4779:1;4772:15;4636:161;;4423:380;;;:::o;4808:356::-;5010:2;4992:21;;;5029:18;;;5022:30;5088:34;5083:2;5068:18;;5061:62;5155:2;5140:18;;4808:356::o;5931:127::-;5992:10;5987:3;5983:20;5980:1;5973:31;6023:4;6020:1;6013:15;6047:4;6044:1;6037:15;6063:125;6103:4;6131:1;6128;6125:8;6122:34;;;6136:18;;:::i;:::-;-1:-1:-1;6173:9:8;;6063:125::o;6963:221::-;7002:4;7031:10;7091;;;;7061;;7113:12;;;7110:38;;;7128:18;;:::i;:::-;7165:13;;6963:221;-1:-1:-1;;;6963:221:8:o;7189:288::-;7228:1;7254:10;7291:2;7288:1;7284:10;7313:3;7303:134;;7359:10;7354:3;7350:20;7347:1;7340:31;7394:4;7391:1;7384:15;7422:4;7419:1;7412:15;7303:134;7455:10;;7451:20;;;;;7189:288;-1:-1:-1;;7189:288:8:o;9946:135::-;9985:3;10006:17;;;10003:43;;10026:18;;:::i;:::-;-1:-1:-1;10073:1:8;10062:13;;9946:135::o;12929:128::-;12969:3;13000:1;12996:6;12993:1;12990:13;12987:39;;;13006:18;;:::i;:::-;-1:-1:-1;13042:9:8;;12929:128::o;13422:127::-;13483:10;13478:3;13474:20;13471:1;13464:31;13514:4;13511:1;13504:15;13538:4;13535:1;13528:15;13554:127;13615:10;13610:3;13606:20;13603:1;13596:31;13646:4;13643:1;13636:15;13670:4;13667:1;13660:15;13686:228;13725:3;13753:10;13790:2;13787:1;13783:10;13820:2;13817:1;13813:10;13851:3;13847:2;13843:12;13838:3;13835:21;13832:47;;;13859:18;;:::i;:::-;13895:13;;13686:228;-1:-1:-1;;;;13686:228:8:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1546200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DELEGATION_TYPEHASH()": "250",
								"DOMAIN_TYPEHASH()": "230",
								"addMinter(address)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24689",
								"balanceOf(address)": "2615",
								"checkpoints(address,uint32)": "4902",
								"decimals()": "2401",
								"decreaseAllowance(address,uint256)": "infinite",
								"delMinter(address)": "infinite",
								"delegate(address)": "infinite",
								"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"delegates(address)": "2657",
								"getCurrentVotes(address)": "infinite",
								"getMinter(uint256)": "infinite",
								"getMinterLength()": "2410",
								"getOwner()": "2421",
								"getPriorVotes(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "27024",
								"isMinter(address)": "infinite",
								"mint(address,uint256)": "infinite",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"nonces(address)": "2576",
								"numCheckpoints(address)": "2601",
								"owner()": "2443",
								"renounceOwnership()": "28225",
								"symbol()": "infinite",
								"totalSupply()": "2394",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28419"
							},
							"internal": {
								"_delegate(address,address)": "infinite",
								"_moveDelegates(address,address,uint256)": "infinite",
								"_writeCheckpoint(address,uint32,uint256,uint256)": "infinite",
								"getChainId()": "infinite",
								"safe32(uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 166,
									"end": 10436,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "PUSH",
									"source": 0,
									"value": "D"
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2630B7323130B9B29021B7B4B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "99"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4C4243"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1035,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 894,
									"end": 917,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 904,
									"end": 916,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 904,
									"end": 914,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 904,
									"end": 914,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 904,
									"end": 914,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 904,
									"end": 916,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 904,
									"end": 916,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 904,
									"end": 916,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 904,
									"end": 916,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 904,
									"end": 916,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 894,
									"end": 903,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 894,
									"end": 917,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 894,
									"end": 917,
									"name": "tag",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 894,
									"end": 917,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 953,
									"end": 970,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 953,
									"end": 970,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 953,
									"end": 970,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 953,
									"end": 970,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 953,
									"end": 958,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 953,
									"end": 958,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 953,
									"end": 970,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 953,
									"end": 970,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 953,
									"end": 970,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 953,
									"end": 970,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 953,
									"end": 970,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 953,
									"end": 970,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 953,
									"end": 970,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 953,
									"end": 970,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 981,
									"end": 1002,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 981,
									"end": 1002,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 981,
									"end": 1002,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 981,
									"end": 1002,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 981,
									"end": 988,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 981,
									"end": 988,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 981,
									"end": 1002,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 981,
									"end": 1002,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 981,
									"end": 1002,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 981,
									"end": 1002,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 981,
									"end": 1002,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 981,
									"end": 1002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 981,
									"end": 1002,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 981,
									"end": 1002,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1013,
									"end": 1022,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1013,
									"end": 1027,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1027,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1013,
									"end": 1027,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1025,
									"end": 1027,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1013,
									"end": 1027,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1027,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1027,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 602,
									"end": 700,
									"name": "tag",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 602,
									"end": 700,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 682,
									"end": 692,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 682,
									"end": 692,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 602,
									"end": 700,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2106,
									"end": 2279,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 2106,
									"end": 2279,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2162,
									"end": 2178,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2181,
									"end": 2187,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2181,
									"end": 2187,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2198,
									"end": 2215,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2198,
									"end": 2215,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2198,
									"end": 2215,
									"name": "AND",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2198,
									"end": 2215,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2198,
									"end": 2215,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2198,
									"end": 2215,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2198,
									"end": 2215,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 2198,
									"end": 2215,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2198,
									"end": 2215,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 2231,
									"end": 2271,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2231,
									"end": 2271,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2181,
									"end": 2187,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2181,
									"end": 2187,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2181,
									"end": 2187,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 2181,
									"end": 2187,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2181,
									"end": 2187,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 2181,
									"end": 2187,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2181,
									"end": 2187,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2231,
									"end": 2271,
									"name": "PUSH",
									"source": 3,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2231,
									"end": 2271,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2162,
									"end": 2178,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2231,
									"end": 2271,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 2151,
									"end": 2279,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2106,
									"end": 2279,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2106,
									"end": 2279,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 166,
									"end": 10436,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 166,
									"end": 10436,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 394,
									"name": "tag",
									"source": 8,
									"value": "17"
								},
								{
									"begin": 14,
									"end": 394,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 93,
									"end": 94,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 89,
									"end": 101,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 89,
									"end": 101,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 89,
									"end": 101,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 89,
									"end": 101,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 136,
									"end": 148,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 136,
									"end": 148,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 136,
									"end": 148,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 157,
									"end": 218,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 157,
									"end": 218,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 211,
									"end": 215,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 203,
									"end": 209,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 199,
									"end": 216,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 189,
									"end": 216,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 189,
									"end": 216,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 157,
									"end": 218,
									"name": "tag",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 157,
									"end": 218,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 264,
									"end": 266,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 256,
									"end": 262,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 253,
									"end": 267,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 233,
									"end": 251,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 230,
									"end": 268,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 227,
									"end": 388,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 227,
									"end": 388,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 310,
									"end": 320,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 305,
									"end": 308,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 301,
									"end": 321,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 298,
									"end": 299,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 291,
									"end": 322,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 345,
									"end": 349,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 342,
									"end": 343,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 335,
									"end": 350,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 373,
									"end": 377,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 370,
									"end": 371,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 363,
									"end": 378,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 227,
									"end": 388,
									"name": "tag",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 227,
									"end": 388,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 227,
									"end": 388,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 14,
									"end": 394,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 14,
									"end": 394,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 14,
									"end": 394,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 14,
									"end": 394,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 14,
									"end": 394,
									"name": "tag",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 14,
									"end": 394,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 166,
									"end": 10436,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122068c2a890dc29e564393190b3b1078f6268ea165c0038985395926fc944884d7664736f6c634300080e0033",
									".code": [
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH",
											"source": 2,
											"value": "782D6FE1"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH",
											"source": 2,
											"value": "E7A324DC"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH",
											"source": 2,
											"value": "F1127ED8"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH",
											"source": 2,
											"value": "AA271E1A"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH",
											"source": 2,
											"value": "B4B5EA57"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH",
											"source": 2,
											"value": "C3CDA520"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH",
											"source": 2,
											"value": "95D89B41"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH",
											"source": 2,
											"value": "95D89B41"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH",
											"source": 2,
											"value": "983B2D56"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH",
											"source": 2,
											"value": "A0712D68"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH",
											"source": 2,
											"value": "A457C2D7"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH",
											"source": 2,
											"value": "782D6FE1"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH",
											"source": 2,
											"value": "7ECEBE00"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH",
											"source": 2,
											"value": "893D20E8"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH",
											"source": 2,
											"value": "39509351"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH",
											"source": 2,
											"value": "5C19A95C"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH",
											"source": 2,
											"value": "5C19A95C"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH",
											"source": 2,
											"value": "6FCFFF45"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH",
											"source": 2,
											"value": "39509351"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH",
											"source": 2,
											"value": "40C10F19"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH",
											"source": 2,
											"value": "587CDE1E"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH",
											"source": 2,
											"value": "5B7121F8"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH",
											"source": 2,
											"value": "20606B70"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH",
											"source": 2,
											"value": "20606B70"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH",
											"source": 2,
											"value": "23338B88"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH",
											"source": 2,
											"value": "313CE567"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH",
											"source": 2,
											"value": "323AAC7"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH",
											"source": 2,
											"value": "6FDDE03"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 166,
											"end": 10436,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9803,
											"end": 9916,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 9803,
											"end": 9916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9803,
											"end": 9916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 9803,
											"end": 9916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 9803,
											"end": 9916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9803,
											"end": 9916,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 9803,
											"end": 9916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9803,
											"end": 9916,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9803,
											"end": 9916,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9803,
											"end": 9916,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 9803,
											"end": 9916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9803,
											"end": 9916,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9803,
											"end": 9916,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9803,
											"end": 9916,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9803,
											"end": 9916,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9803,
											"end": 9916,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9803,
											"end": 9916,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9803,
											"end": 9916,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1260,
											"end": 1352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1260,
											"end": 1352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2820,
											"end": 3013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2820,
											"end": 3013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1414,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1400,
											"end": 1414,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1393,
											"end": 1415,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1375,
											"end": 1416,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1375,
											"end": 1416,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1363,
											"end": 1365,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1348,
											"end": 1366,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1235,
											"end": 1422,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1736,
											"end": 1836,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1736,
											"end": 1836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1816,
											"end": 1828,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1816,
											"end": 1828,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1736,
											"end": 1836,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1464,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1309,
											"end": 1464,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1360,
											"end": 1464,
											"name": "PUSH",
											"source": 2,
											"value": "8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866"
										},
										{
											"begin": 1309,
											"end": 1464,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1464,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9531,
											"end": 9795,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 9531,
											"end": 9795,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9531,
											"end": 9795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 9531,
											"end": 9795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 9531,
											"end": 9795,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 9531,
											"end": 9795,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9531,
											"end": 9795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 9531,
											"end": 9795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9531,
											"end": 9795,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 9531,
											"end": 9795,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9531,
											"end": 9795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 9531,
											"end": 9795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 3484,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3484,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1419,
											"end": 1511,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1419,
											"end": 1511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1494,
											"end": 1503,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1494,
											"end": 1503,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1419,
											"end": 1511,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1419,
											"end": 1511,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1494,
											"end": 1503,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1494,
											"end": 1503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1494,
											"end": 1503,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1494,
											"end": 1503,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2275,
											"end": 2311,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2311,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2263,
											"end": 2265,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2248,
											"end": 2266,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2133,
											"end": 2317,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4338,
											"end": 4621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4338,
											"end": 4621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 467,
											"end": 699,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 467,
											"end": 699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 467,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 467,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 467,
											"end": 699,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 467,
											"end": 699,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 467,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 467,
											"end": 699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 467,
											"end": 699,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 467,
											"end": 699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 467,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 467,
											"end": 699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2408,
											"end": 2525,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2408,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2408,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2408,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2408,
											"end": 2525,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2408,
											"end": 2525,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2408,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2408,
											"end": 2525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2408,
											"end": 2525,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2408,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2496,
											"end": 2517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2496,
											"end": 2517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2496,
											"end": 2517,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2469,
											"end": 2476,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2496,
											"end": 2517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2496,
											"end": 2517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2496,
											"end": 2517,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2496,
											"end": 2506,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2496,
											"end": 2517,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2496,
											"end": 2517,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2496,
											"end": 2517,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2496,
											"end": 2517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2496,
											"end": 2517,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2496,
											"end": 2517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2496,
											"end": 2517,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2496,
											"end": 2517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2408,
											"end": 2525,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2408,
											"end": 2525,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2408,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2408,
											"end": 2525,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2408,
											"end": 2525,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2486,
											"end": 2518,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2486,
											"end": 2518,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2486,
											"end": 2518,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2468,
											"end": 2519,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2468,
											"end": 2519,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2456,
											"end": 2458,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2441,
											"end": 2459,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2408,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2322,
											"end": 2525,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10061,
											"end": 10280,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 10061,
											"end": 10280,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 10061,
											"end": 10280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 10061,
											"end": 10280,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10280,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10061,
											"end": 10280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 10061,
											"end": 10280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10280,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 10061,
											"end": 10280,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 10061,
											"end": 10280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2673,
											"end": 2777,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2673,
											"end": 2777,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2673,
											"end": 2777,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2673,
											"end": 2777,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2673,
											"end": 2777,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2673,
											"end": 2777,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2673,
											"end": 2777,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2673,
											"end": 2777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2673,
											"end": 2777,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2673,
											"end": 2777,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2673,
											"end": 2777,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2673,
											"end": 2777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2673,
											"end": 2777,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2673,
											"end": 2777,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2673,
											"end": 2777,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1188,
											"end": 1236,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1188,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1188,
											"end": 1236,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1188,
											"end": 1236,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1188,
											"end": 1236,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1188,
											"end": 1236,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1188,
											"end": 1236,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1188,
											"end": 1236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1188,
											"end": 1236,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1188,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1188,
											"end": 1236,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 1188,
											"end": 1236,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1188,
											"end": 1236,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1188,
											"end": 1236,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1188,
											"end": 1236,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1188,
											"end": 1236,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1188,
											"end": 1236,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1188,
											"end": 1236,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1188,
											"end": 1236,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1188,
											"end": 1236,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1188,
											"end": 1236,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1188,
											"end": 1236,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1188,
											"end": 1236,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1188,
											"end": 1236,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1188,
											"end": 1236,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1188,
											"end": 1236,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1188,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1188,
											"end": 1236,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1188,
											"end": 1236,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2889,
											"end": 2899,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2877,
											"end": 2900,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2877,
											"end": 2900,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2877,
											"end": 2900,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2859,
											"end": 2901,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2859,
											"end": 2901,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2847,
											"end": 2849,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2832,
											"end": 2850,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1188,
											"end": 1236,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2715,
											"end": 2907,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1898,
											"end": 2017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1991,
											"end": 2009,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1964,
											"end": 1971,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1991,
											"end": 2009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1991,
											"end": 2009,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1991,
											"end": 2009,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1991,
											"end": 2000,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1991,
											"end": 2009,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1991,
											"end": 2009,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1991,
											"end": 2009,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1991,
											"end": 2009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1991,
											"end": 2009,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1991,
											"end": 2009,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1991,
											"end": 2009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1657,
											"end": 1751,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1657,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1657,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 1657,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 1657,
											"end": 1751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5235,
											"end": 6532,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 5235,
											"end": 6532,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5235,
											"end": 6532,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 5235,
											"end": 6532,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 5235,
											"end": 6532,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5235,
											"end": 6532,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5235,
											"end": 6532,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 5235,
											"end": 6532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5235,
											"end": 6532,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 5235,
											"end": 6532,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5235,
											"end": 6532,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 5235,
											"end": 6532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1765,
											"end": 1806,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1765,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1765,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1765,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 1765,
											"end": 1806,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1765,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1765,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1765,
											"end": 1806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1765,
											"end": 1806,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 1765,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1765,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1765,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1765,
											"end": 1806,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1765,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1765,
											"end": 1806,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1765,
											"end": 1806,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1765,
											"end": 1806,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1765,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1765,
											"end": 1806,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1765,
											"end": 1806,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1765,
											"end": 1806,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1765,
											"end": 1806,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1765,
											"end": 1806,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1197,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1103,
											"end": 1197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 1162,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1079,
											"end": 1085,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1079,
											"end": 1085,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1103,
											"end": 1197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 9803,
											"end": 9916,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1576,
											"end": 1672,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1576,
											"end": 1672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1576,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1576,
											"end": 1672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9262,
											"end": 9523,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 9262,
											"end": 9523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9262,
											"end": 9523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 9262,
											"end": 9523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 9262,
											"end": 9523,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 9262,
											"end": 9523,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9262,
											"end": 9523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 9262,
											"end": 9523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9262,
											"end": 9523,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 9262,
											"end": 9523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9262,
											"end": 9523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 9262,
											"end": 9523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 5724,
											"end": 5854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 5724,
											"end": 5854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 5123,
											"end": 5506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 5123,
											"end": 5506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2229,
											"end": 2428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2229,
											"end": 2428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9924,
											"end": 10053,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 9924,
											"end": 10053,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9924,
											"end": 10053,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 9924,
											"end": 10053,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 9924,
											"end": 10053,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 9924,
											"end": 10053,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9924,
											"end": 10053,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 9924,
											"end": 10053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9924,
											"end": 10053,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 9924,
											"end": 10053,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9924,
											"end": 10053,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 9924,
											"end": 10053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4568,
											"end": 4804,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 4568,
											"end": 4804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4568,
											"end": 4804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 4568,
											"end": 4804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 4568,
											"end": 4804,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4568,
											"end": 4804,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4568,
											"end": 4804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 4568,
											"end": 4804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4568,
											"end": 4804,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 4568,
											"end": 4804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4568,
											"end": 4804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 4568,
											"end": 4804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3211,
											"end": 4367,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3211,
											"end": 4367,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3211,
											"end": 4367,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3211,
											"end": 4367,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 3211,
											"end": 4367,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3211,
											"end": 4367,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3211,
											"end": 4367,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 3211,
											"end": 4367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3211,
											"end": 4367,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 3211,
											"end": 4367,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3211,
											"end": 4367,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 3211,
											"end": 4367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 2490,
											"end": 2674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2607,
											"end": 2614,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2650,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1684,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1558,
											"end": 1684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1558,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1613,
											"end": 1684,
											"name": "PUSH",
											"source": 2,
											"value": "E48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF"
										},
										{
											"begin": 1558,
											"end": 1684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1558,
											"end": 1684,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 1051,
											"end": 1119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4357,
											"end": 4367,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4345,
											"end": 4368,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4345,
											"end": 4368,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4345,
											"end": 4368,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4327,
											"end": 4369,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4327,
											"end": 4369,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4400,
											"end": 4402,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4385,
											"end": 4403,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4385,
											"end": 4403,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4378,
											"end": 4412,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4378,
											"end": 4412,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4378,
											"end": 4412,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4378,
											"end": 4412,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4155,
											"end": 4418,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1906,
											"end": 2098,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1906,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1906,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 1906,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 1906,
											"end": 2098,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1906,
											"end": 2098,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1906,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1906,
											"end": 2098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1906,
											"end": 2098,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 1906,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1906,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 1906,
											"end": 2098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9803,
											"end": 9916,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 9803,
											"end": 9916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9851,
											"end": 9858,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9878,
											"end": 9908,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 9899,
											"end": 9907,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 9878,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 9878,
											"end": 9908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9878,
											"end": 9908,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 9878,
											"end": 9908,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9871,
											"end": 9908,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9871,
											"end": 9908,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9803,
											"end": 9916,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9803,
											"end": 9916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1306,
											"end": 1319,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1339,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1332,
											"end": 1344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1332,
											"end": 1344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 2926,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2944,
											"end": 2983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 682,
											"end": 692,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2967,
											"end": 2974,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2976,
											"end": 2982,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2944,
											"end": 2952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 2944,
											"end": 2983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2944,
											"end": 2983,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2944,
											"end": 2983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3001,
											"end": 3005,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 3013,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9531,
											"end": 9795,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 9531,
											"end": 9795,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9596,
											"end": 9600,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1079,
											"end": 1085,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1079,
											"end": 1085,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1079,
											"end": 1085,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 682,
											"end": 692,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1249,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 1218,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9635,
											"end": 9659,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9635,
											"end": 9659,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9613,
											"end": 9727,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 9613,
											"end": 9727,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9613,
											"end": 9727,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9613,
											"end": 9727,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9613,
											"end": 9727,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9613,
											"end": 9727,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5371,
											"end": 5373,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9613,
											"end": 9727,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9613,
											"end": 9727,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9613,
											"end": 9727,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5353,
											"end": 5374,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5410,
											"end": 5412,
											"name": "PUSH",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 5390,
											"end": 5408,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5390,
											"end": 5408,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5390,
											"end": 5408,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5383,
											"end": 5413,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5449,
											"end": 5483,
											"name": "PUSH",
											"source": 8,
											"value": "4C414E44424153453A205F64656C4D696E74657220697320746865207A65726F"
										},
										{
											"begin": 5429,
											"end": 5447,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 5429,
											"end": 5447,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5429,
											"end": 5447,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5422,
											"end": 5484,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5500,
											"end": 5518,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5500,
											"end": 5518,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5500,
											"end": 5518,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5493,
											"end": 5531,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5548,
											"end": 5567,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 5548,
											"end": 5567,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9613,
											"end": 9727,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 5169,
											"end": 5573,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9613,
											"end": 9727,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 9613,
											"end": 9727,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9745,
											"end": 9787,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 9766,
											"end": 9774,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 9776,
											"end": 9786,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9745,
											"end": 9765,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 9745,
											"end": 9787,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9745,
											"end": 9787,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 9745,
											"end": 9787,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9738,
											"end": 9787,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9738,
											"end": 9787,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 1298,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 1297,
											"end": 1298,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9531,
											"end": 9795,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9531,
											"end": 9795,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9531,
											"end": 9795,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9531,
											"end": 9795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3616,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3633,
											"end": 3669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 3643,
											"end": 3649,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3651,
											"end": 3660,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3662,
											"end": 3668,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3633,
											"end": 3642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 3633,
											"end": 3669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3633,
											"end": 3669,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 3633,
											"end": 3669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 3703,
											"end": 3709,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 682,
											"end": 692,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 3807,
											"end": 3813,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "PUSH data",
											"source": 0,
											"value": "4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E"
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3762,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 682,
											"end": 692,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3751,
											"end": 3784,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3784,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3784,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3784,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3784,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3784,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3784,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 3751,
											"end": 3889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 3751,
											"end": 3889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 3680,
											"end": 3900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3900,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 3680,
											"end": 3900,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3918,
											"end": 3922,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3484,
											"end": 3930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3484,
											"end": 3930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4338,
											"end": 4621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 682,
											"end": 692,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4436,
											"end": 4440,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4530,
											"end": 4555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4555,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4541,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4530,
											"end": 4555,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4530,
											"end": 4555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4555,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4555,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4530,
											"end": 4555,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4555,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4555,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4530,
											"end": 4564,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4564,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4564,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4564,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4564,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4564,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4564,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4564,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 4440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 4440,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4458,
											"end": 4591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 4458,
											"end": 4591,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4515,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 4530,
											"end": 4580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4569,
											"end": 4579,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 4530,
											"end": 4580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 467,
											"end": 699,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 467,
											"end": 699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 565,
											"end": 569,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10364,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 10373,
											"end": 10383,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 10364,
											"end": 10372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 10364,
											"end": 10384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10364,
											"end": 10384,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 10364,
											"end": 10384,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10356,
											"end": 10413,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 10356,
											"end": 10413,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10356,
											"end": 10413,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10356,
											"end": 10413,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10356,
											"end": 10413,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10356,
											"end": 10413,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5782,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10356,
											"end": 10413,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10356,
											"end": 10413,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10356,
											"end": 10413,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5762,
											"end": 5783,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5819,
											"end": 5821,
											"name": "PUSH",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 5799,
											"end": 5817,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5799,
											"end": 5817,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5799,
											"end": 5817,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5792,
											"end": 5822,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5858,
											"end": 5884,
											"name": "PUSH",
											"source": 8,
											"value": "63616C6C6572206973206E6F7420746865206D696E7465720000000000000000"
										},
										{
											"begin": 5838,
											"end": 5856,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 5838,
											"end": 5856,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5838,
											"end": 5856,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5831,
											"end": 5885,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5902,
											"end": 5920,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5902,
											"end": 5920,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10356,
											"end": 10413,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 5578,
											"end": 5926,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10356,
											"end": 10413,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 10356,
											"end": 10413,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 587,
											"end": 606,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 593,
											"end": 596,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 598,
											"end": 605,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 587,
											"end": 592,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 587,
											"end": 606,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 587,
											"end": 606,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 587,
											"end": 606,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 644,
											"end": 659,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 644,
											"end": 659,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 644,
											"end": 659,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 640,
											"end": 641,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 644,
											"end": 659,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 644,
											"end": 659,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 644,
											"end": 659,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 644,
											"end": 654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 644,
											"end": 659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 644,
											"end": 659,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 644,
											"end": 659,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 659,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 644,
											"end": 659,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 644,
											"end": 659,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 617,
											"end": 669,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 617,
											"end": 669,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 644,
											"end": 659,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 661,
											"end": 668,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 617,
											"end": 631,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 617,
											"end": 669,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10280,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 10061,
											"end": 10280,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10127,
											"end": 10134,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1079,
											"end": 1085,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1079,
											"end": 1085,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1079,
											"end": 1085,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 682,
											"end": 692,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1249,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 1218,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10185,
											"end": 10186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10165,
											"end": 10182,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 10165,
											"end": 10180,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 10165,
											"end": 10182,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10165,
											"end": 10182,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 10165,
											"end": 10182,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10165,
											"end": 10186,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 10165,
											"end": 10186,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10165,
											"end": 10186,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10165,
											"end": 10186,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 10165,
											"end": 10186,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10165,
											"end": 10186,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 10165,
											"end": 10186,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10161,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10186,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10186,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10147,
											"end": 10220,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 10147,
											"end": 10220,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10147,
											"end": 10220,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10147,
											"end": 10220,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10147,
											"end": 10220,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10147,
											"end": 10220,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6395,
											"end": 6397,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10147,
											"end": 10220,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10147,
											"end": 10220,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10147,
											"end": 10220,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6377,
											"end": 6398,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6434,
											"end": 6436,
											"name": "PUSH",
											"source": 8,
											"value": "1D"
										},
										{
											"begin": 6414,
											"end": 6432,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6414,
											"end": 6432,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6414,
											"end": 6432,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6473,
											"end": 6504,
											"name": "PUSH",
											"source": 8,
											"value": "4C414E44424153453A20696E646578206F7574206F6620626F756E6473000000"
										},
										{
											"begin": 6453,
											"end": 6471,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 6453,
											"end": 6471,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6453,
											"end": 6471,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6446,
											"end": 6505,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6522,
											"end": 6540,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 6522,
											"end": 6540,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10147,
											"end": 10220,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 6193,
											"end": 6546,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10147,
											"end": 10220,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 10147,
											"end": 10220,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10238,
											"end": 10272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 10255,
											"end": 10263,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 10265,
											"end": 10271,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10238,
											"end": 10254,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 10238,
											"end": 10272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2673,
											"end": 2777,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2673,
											"end": 2777,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2737,
											"end": 2769,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 2747,
											"end": 2757,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2759,
											"end": 2768,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2737,
											"end": 2746,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 2737,
											"end": 2769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2737,
											"end": 2769,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 2737,
											"end": 2769,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2673,
											"end": 2777,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2673,
											"end": 2777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1657,
											"end": 1751,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 1657,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1059,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1079,
											"end": 1085,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1079,
											"end": 1085,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 682,
											"end": 692,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1249,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 1218,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1722,
											"end": 1743,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 1740,
											"end": 1741,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1722,
											"end": 1731,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 1722,
											"end": 1743,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1722,
											"end": 1743,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 1722,
											"end": 1743,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1657,
											"end": 1751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5235,
											"end": 6532,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 5235,
											"end": 6532,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5346,
											"end": 5353,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "NUMBER",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5404,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5419,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5371,
											"end": 5490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 5371,
											"end": 5490,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5371,
											"end": 5490,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5371,
											"end": 5490,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5371,
											"end": 5490,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5371,
											"end": 5490,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6753,
											"end": 6755,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5371,
											"end": 5490,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5371,
											"end": 5490,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5371,
											"end": 5490,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6735,
											"end": 6756,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6792,
											"end": 6794,
											"name": "PUSH",
											"source": 8,
											"value": "2B"
										},
										{
											"begin": 6772,
											"end": 6790,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6772,
											"end": 6790,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6772,
											"end": 6790,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6765,
											"end": 6795,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6831,
											"end": 6865,
											"name": "PUSH",
											"source": 8,
											"value": "4C414E44424153453A3A6765745072696F72566F7465733A206E6F7420796574"
										},
										{
											"begin": 6811,
											"end": 6829,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 6811,
											"end": 6829,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6811,
											"end": 6829,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6804,
											"end": 6866,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "819195D195C9B5A5B9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "AA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6882,
											"end": 6900,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 6882,
											"end": 6900,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6882,
											"end": 6900,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6875,
											"end": 6916,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6933,
											"end": 6952,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 6933,
											"end": 6952,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5371,
											"end": 5490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 6551,
											"end": 6958,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5371,
											"end": 5490,
											"name": "tag",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 5371,
											"end": 5490,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5525,
											"end": 5548,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5525,
											"end": 5548,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5503,
											"end": 5522,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5525,
											"end": 5548,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5525,
											"end": 5548,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5525,
											"end": 5548,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5525,
											"end": 5539,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 5525,
											"end": 5548,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5525,
											"end": 5548,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5525,
											"end": 5548,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5525,
											"end": 5548,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5525,
											"end": 5548,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5525,
											"end": 5548,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5525,
											"end": 5548,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5525,
											"end": 5548,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5525,
											"end": 5548,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5563,
											"end": 5580,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5563,
											"end": 5580,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5563,
											"end": 5580,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5559,
											"end": 5617,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 5559,
											"end": 5617,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5604,
											"end": 5605,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5597,
											"end": 5605,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5597,
											"end": 5605,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5597,
											"end": 5605,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5597,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 5597,
											"end": 5605,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5559,
											"end": 5617,
											"name": "tag",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 5559,
											"end": 5617,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5677,
											"end": 5697,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5697,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5697,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5677,
											"end": 5697,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5697,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5697,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5688,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 5677,
											"end": 5697,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5677,
											"end": 5697,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5697,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5677,
											"end": 5697,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5697,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5729,
											"end": 5740,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5729,
											"end": 5740,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5698,
											"end": 5714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 5713,
											"end": 5714,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5698,
											"end": 5710,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5698,
											"end": 5714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 5698,
											"end": 5714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5698,
											"end": 5714,
											"name": "tag",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 5698,
											"end": 5714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5715,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5677,
											"end": 5715,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5715,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5715,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5715,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5715,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5715,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5677,
											"end": 5715,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5715,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5715,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5715,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5715,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5715,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5715,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5677,
											"end": 5715,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5677,
											"end": 5715,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5725,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5725,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5740,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 5673,
											"end": 5820,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 5673,
											"end": 5820,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5764,
											"end": 5784,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5764,
											"end": 5784,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5764,
											"end": 5784,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5764,
											"end": 5784,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5764,
											"end": 5784,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5764,
											"end": 5784,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5764,
											"end": 5775,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 5764,
											"end": 5784,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5764,
											"end": 5784,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5764,
											"end": 5784,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5764,
											"end": 5784,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5764,
											"end": 5784,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5764,
											"end": 5784,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5785,
											"end": 5801,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 5800,
											"end": 5801,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5785,
											"end": 5797,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5785,
											"end": 5801,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 5785,
											"end": 5801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5785,
											"end": 5801,
											"name": "tag",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 5785,
											"end": 5801,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5764,
											"end": 5802,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5764,
											"end": 5802,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5764,
											"end": 5802,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5764,
											"end": 5802,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5764,
											"end": 5802,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5764,
											"end": 5802,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5764,
											"end": 5802,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5764,
											"end": 5802,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5764,
											"end": 5802,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5764,
											"end": 5802,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5764,
											"end": 5802,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5764,
											"end": 5802,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5764,
											"end": 5802,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5764,
											"end": 5802,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5764,
											"end": 5802,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5764,
											"end": 5808,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5764,
											"end": 5808,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5764,
											"end": 5808,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5757,
											"end": 5808,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5757,
											"end": 5808,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5757,
											"end": 5808,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5757,
											"end": 5808,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 5757,
											"end": 5808,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5673,
											"end": 5820,
											"name": "tag",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 5673,
											"end": 5820,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5881,
											"end": 5901,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5881,
											"end": 5901,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5881,
											"end": 5901,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5881,
											"end": 5901,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5881,
											"end": 5901,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5881,
											"end": 5901,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5881,
											"end": 5892,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 5881,
											"end": 5901,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5881,
											"end": 5901,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5881,
											"end": 5901,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5881,
											"end": 5901,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5881,
											"end": 5901,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5881,
											"end": 5901,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5881,
											"end": 5901,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5881,
											"end": 5901,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5881,
											"end": 5904,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5881,
											"end": 5904,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5881,
											"end": 5904,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5881,
											"end": 5904,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5881,
											"end": 5904,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5881,
											"end": 5904,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5881,
											"end": 5904,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5881,
											"end": 5904,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5881,
											"end": 5914,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5881,
											"end": 5904,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5881,
											"end": 5914,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5881,
											"end": 5928,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 5877,
											"end": 5965,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5877,
											"end": 5965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 5877,
											"end": 5965,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5952,
											"end": 5953,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5945,
											"end": 5953,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5945,
											"end": 5953,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5945,
											"end": 5953,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5945,
											"end": 5953,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 5945,
											"end": 5953,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5877,
											"end": 5965,
											"name": "tag",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 5877,
											"end": 5965,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5977,
											"end": 5989,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5977,
											"end": 5989,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6019,
											"end": 6035,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 6034,
											"end": 6035,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6019,
											"end": 6031,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6019,
											"end": 6035,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 6019,
											"end": 6035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6019,
											"end": 6035,
											"name": "tag",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 6019,
											"end": 6035,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6004,
											"end": 6035,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6004,
											"end": 6035,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6046,
											"end": 6474,
											"name": "tag",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 6046,
											"end": 6474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6061,
											"end": 6066,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6053,
											"end": 6066,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6053,
											"end": 6066,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6053,
											"end": 6058,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6053,
											"end": 6066,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6053,
											"end": 6066,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6053,
											"end": 6066,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 6046,
											"end": 6474,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6046,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 6046,
											"end": 6474,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6083,
											"end": 6096,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6125,
											"end": 6126,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6108,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 6116,
											"end": 6121,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6108,
											"end": 6113,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6108,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 6108,
											"end": 6121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6108,
											"end": 6121,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 6108,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6107,
											"end": 6126,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 6107,
											"end": 6126,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6107,
											"end": 6126,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6107,
											"end": 6126,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 6107,
											"end": 6126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6107,
											"end": 6126,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 6107,
											"end": 6126,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6099,
											"end": 6126,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 6099,
											"end": 6126,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6099,
											"end": 6104,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6099,
											"end": 6126,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 6099,
											"end": 6126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6099,
											"end": 6126,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 6099,
											"end": 6126,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6191,
											"end": 6211,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 6191,
											"end": 6211,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6168,
											"end": 6188,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6191,
											"end": 6211,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6191,
											"end": 6211,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6191,
											"end": 6211,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6191,
											"end": 6202,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 6191,
											"end": 6211,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6191,
											"end": 6211,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6191,
											"end": 6211,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6191,
											"end": 6211,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6191,
											"end": 6211,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6191,
											"end": 6211,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6191,
											"end": 6211,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6191,
											"end": 6211,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6191,
											"end": 6219,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6191,
											"end": 6219,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6191,
											"end": 6219,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6191,
											"end": 6219,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6191,
											"end": 6219,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6191,
											"end": 6219,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6191,
											"end": 6219,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6191,
											"end": 6219,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6191,
											"end": 6219,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6191,
											"end": 6219,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6191,
											"end": 6219,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6191,
											"end": 6219,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6191,
											"end": 6219,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6168,
											"end": 6219,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6168,
											"end": 6219,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6168,
											"end": 6219,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6168,
											"end": 6219,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6168,
											"end": 6219,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6168,
											"end": 6219,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6168,
											"end": 6219,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6168,
											"end": 6219,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6168,
											"end": 6219,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6168,
											"end": 6219,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6168,
											"end": 6219,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6168,
											"end": 6219,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6168,
											"end": 6219,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6168,
											"end": 6219,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6168,
											"end": 6219,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6168,
											"end": 6219,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6168,
											"end": 6219,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6168,
											"end": 6219,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6168,
											"end": 6219,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6168,
											"end": 6219,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6168,
											"end": 6219,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6168,
											"end": 6219,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6168,
											"end": 6219,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6168,
											"end": 6219,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6168,
											"end": 6219,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6168,
											"end": 6219,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6168,
											"end": 6219,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6168,
											"end": 6219,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6083,
											"end": 6126,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6083,
											"end": 6126,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6238,
											"end": 6265,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6238,
											"end": 6265,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6238,
											"end": 6265,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6234,
											"end": 6463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 6234,
											"end": 6463,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6293,
											"end": 6301,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6293,
											"end": 6301,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6293,
											"end": 6301,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6293,
											"end": 6301,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6286,
											"end": 6301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 6286,
											"end": 6301,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6286,
											"end": 6301,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6234,
											"end": 6463,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 6234,
											"end": 6463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6327,
											"end": 6339,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6327,
											"end": 6339,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6327,
											"end": 6353,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6327,
											"end": 6353,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6327,
											"end": 6353,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 6323,
											"end": 6463,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6323,
											"end": 6463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 6323,
											"end": 6463,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6382,
											"end": 6388,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6374,
											"end": 6388,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6374,
											"end": 6388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6323,
											"end": 6463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 6323,
											"end": 6463,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6323,
											"end": 6463,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 6323,
											"end": 6463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6437,
											"end": 6447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 6446,
											"end": 6447,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6437,
											"end": 6443,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6437,
											"end": 6447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 6437,
											"end": 6447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6437,
											"end": 6447,
											"name": "tag",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 6437,
											"end": 6447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6429,
											"end": 6447,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6429,
											"end": 6447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6323,
											"end": 6463,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 6323,
											"end": 6463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6068,
											"end": 6474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6068,
											"end": 6474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6046,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 6046,
											"end": 6474,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6046,
											"end": 6474,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 6046,
											"end": 6474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6491,
											"end": 6511,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6491,
											"end": 6511,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6491,
											"end": 6511,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6491,
											"end": 6511,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6491,
											"end": 6511,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6491,
											"end": 6511,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6491,
											"end": 6502,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 6491,
											"end": 6511,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6491,
											"end": 6511,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6491,
											"end": 6511,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6491,
											"end": 6511,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6491,
											"end": 6511,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6491,
											"end": 6511,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6491,
											"end": 6511,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6491,
											"end": 6511,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6491,
											"end": 6518,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6491,
											"end": 6518,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6491,
											"end": 6518,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 6491,
											"end": 6518,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6491,
											"end": 6518,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6491,
											"end": 6518,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6491,
											"end": 6518,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6491,
											"end": 6518,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6491,
											"end": 6518,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6491,
											"end": 6518,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6491,
											"end": 6524,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6491,
											"end": 6524,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6491,
											"end": 6524,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6491,
											"end": 6524,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5235,
											"end": 6532,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5235,
											"end": 6532,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5235,
											"end": 6532,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5235,
											"end": 6532,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5235,
											"end": 6532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1576,
											"end": 1672,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1576,
											"end": 1672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1624,
											"end": 1637,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1657,
											"end": 1664,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1650,
											"end": 1664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9262,
											"end": 9523,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 9262,
											"end": 9523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9327,
											"end": 9331,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1079,
											"end": 1085,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1079,
											"end": 1085,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1079,
											"end": 1085,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 682,
											"end": 692,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1249,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 1218,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "tag",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9366,
											"end": 9390,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9366,
											"end": 9390,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9344,
											"end": 9458,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 9344,
											"end": 9458,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9344,
											"end": 9458,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9344,
											"end": 9458,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9344,
											"end": 9458,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9344,
											"end": 9458,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7684,
											"end": 7686,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9344,
											"end": 9458,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9344,
											"end": 9458,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9344,
											"end": 9458,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7666,
											"end": 7687,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7723,
											"end": 7725,
											"name": "PUSH",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 7703,
											"end": 7721,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7703,
											"end": 7721,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7703,
											"end": 7721,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7696,
											"end": 7726,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7762,
											"end": 7796,
											"name": "PUSH",
											"source": 8,
											"value": "4C414E44424153453A205F6164644D696E74657220697320746865207A65726F"
										},
										{
											"begin": 7742,
											"end": 7760,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 7742,
											"end": 7760,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7742,
											"end": 7760,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7735,
											"end": 7797,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7813,
											"end": 7831,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 7813,
											"end": 7831,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7813,
											"end": 7831,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7806,
											"end": 7844,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7861,
											"end": 7880,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 7861,
											"end": 7880,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9344,
											"end": 9458,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 7482,
											"end": 7886,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9344,
											"end": 9458,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 9344,
											"end": 9458,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9476,
											"end": 9515,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 9494,
											"end": 9502,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 9504,
											"end": 9514,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9476,
											"end": 9493,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 9476,
											"end": 9515,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5780,
											"end": 5784,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1079,
											"end": 1085,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1079,
											"end": 1085,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1079,
											"end": 1085,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 682,
											"end": 692,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1249,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 1218,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "tag",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5797,
											"end": 5824,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 682,
											"end": 692,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5817,
											"end": 5823,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5797,
											"end": 5802,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 5797,
											"end": 5824,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5797,
											"end": 5824,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 5797,
											"end": 5824,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5842,
											"end": 5846,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5724,
											"end": 5854,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5724,
											"end": 5854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 5123,
											"end": 5506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5226,
											"end": 5230,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5248,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 682,
											"end": 692,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5305,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 5377,
											"end": 5392,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "PUSH data",
											"source": 0,
											"value": "B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22"
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5465,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 682,
											"end": 692,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5320,
											"end": 5345,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5320,
											"end": 5345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5345,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5345,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5331,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5320,
											"end": 5345,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5320,
											"end": 5345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5345,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5345,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5345,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5320,
											"end": 5345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5345,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5345,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5320,
											"end": 5354,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5354,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5354,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5354,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5354,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5354,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5354,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5354,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5354,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 5320,
											"end": 5465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2229,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2338,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2356,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 682,
											"end": 692,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2380,
											"end": 2389,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2391,
											"end": 2397,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2356,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 2356,
											"end": 2398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9924,
											"end": 10053,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 9924,
											"end": 10053,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9980,
											"end": 9984,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10004,
											"end": 10045,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 10027,
											"end": 10035,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 10037,
											"end": 10044,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10004,
											"end": 10026,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 10004,
											"end": 10045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4568,
											"end": 4804,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 4568,
											"end": 4804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4633,
											"end": 4640,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4689,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4729,
											"end": 4745,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4729,
											"end": 4796,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 4729,
											"end": 4796,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4795,
											"end": 4796,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4729,
											"end": 4796,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 4729,
											"end": 4796,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4729,
											"end": 4796,
											"name": "tag",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 4729,
											"end": 4796,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4748,
											"end": 4768,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4748,
											"end": 4768,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4748,
											"end": 4768,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4748,
											"end": 4768,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4748,
											"end": 4768,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4748,
											"end": 4768,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4748,
											"end": 4759,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 4748,
											"end": 4768,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4748,
											"end": 4768,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4748,
											"end": 4768,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4748,
											"end": 4768,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4748,
											"end": 4768,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4748,
											"end": 4768,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4769,
											"end": 4785,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 4784,
											"end": 4785,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4769,
											"end": 4785,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 4769,
											"end": 4785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4769,
											"end": 4785,
											"name": "tag",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 4769,
											"end": 4785,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4748,
											"end": 4786,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4748,
											"end": 4786,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4748,
											"end": 4786,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4748,
											"end": 4786,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4748,
											"end": 4786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4748,
											"end": 4786,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4748,
											"end": 4786,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4748,
											"end": 4786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4748,
											"end": 4786,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4748,
											"end": 4786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4748,
											"end": 4786,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4748,
											"end": 4786,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4748,
											"end": 4786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4748,
											"end": 4786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4748,
											"end": 4786,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4748,
											"end": 4792,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4748,
											"end": 4792,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4748,
											"end": 4792,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4729,
											"end": 4796,
											"name": "tag",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 4729,
											"end": 4796,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4709,
											"end": 4796,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4568,
											"end": 4804,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4568,
											"end": 4804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3211,
											"end": 4367,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 3211,
											"end": 4367,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3396,
											"end": 3419,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1464,
											"name": "PUSH",
											"source": 2,
											"value": "8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866"
										},
										{
											"begin": 3525,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 3525,
											"end": 3529,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3525,
											"end": 3531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3531,
											"name": "tag",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 3525,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3533,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3533,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3533,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3533,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3509,
											"end": 3533,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3533,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3552,
											"end": 3564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 9202,
											"end": 9211,
											"name": "CHAINID",
											"source": 2
										},
										{
											"begin": 9202,
											"end": 9211,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9076,
											"end": 9254,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3552,
											"end": 3564,
											"name": "tag",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 3552,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3611,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3446,
											"end": 3611,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3611,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3611,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3446,
											"end": 3611,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3611,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3611,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8122,
											"end": 8147,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 8122,
											"end": 8147,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8122,
											"end": 8147,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 8122,
											"end": 8147,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8163,
											"end": 8181,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8163,
											"end": 8181,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8163,
											"end": 8181,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8156,
											"end": 8190,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 8156,
											"end": 8190,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8156,
											"end": 8190,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 8156,
											"end": 8190,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8206,
											"end": 8224,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 8206,
											"end": 8224,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8206,
											"end": 8224,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8199,
											"end": 8233,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8199,
											"end": 8233,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8199,
											"end": 8233,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8199,
											"end": 8233,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3591,
											"end": 3595,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 8249,
											"end": 8267,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 8249,
											"end": 8267,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8249,
											"end": 8267,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8249,
											"end": 8267,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8242,
											"end": 8302,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8242,
											"end": 8302,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8242,
											"end": 8302,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8242,
											"end": 8302,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3611,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3611,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3611,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3611,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3611,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3611,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3611,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3611,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3611,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3611,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8094,
											"end": 8113,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 8094,
											"end": 8113,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8094,
											"end": 8113,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3611,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3611,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3422,
											"end": 3622,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3422,
											"end": 3622,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3422,
											"end": 3622,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3422,
											"end": 3622,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3422,
											"end": 3622,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3422,
											"end": 3622,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1684,
											"name": "PUSH",
											"source": 2,
											"value": "E48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF"
										},
										{
											"begin": 3680,
											"end": 3737,
											"name": "PUSH",
											"source": 2,
											"value": "C0"
										},
										{
											"begin": 3680,
											"end": 3737,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3680,
											"end": 3737,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8544,
											"end": 8569,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8605,
											"end": 8637,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 8605,
											"end": 8637,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8585,
											"end": 8603,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 8585,
											"end": 8603,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8585,
											"end": 8603,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8578,
											"end": 8638,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8654,
											"end": 8672,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 8654,
											"end": 8672,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8654,
											"end": 8672,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8647,
											"end": 8681,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 8647,
											"end": 8681,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8647,
											"end": 8681,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8697,
											"end": 8715,
											"name": "PUSH",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 8697,
											"end": 8715,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8697,
											"end": 8715,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8697,
											"end": 8715,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8690,
											"end": 8724,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 8690,
											"end": 8724,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8690,
											"end": 8724,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3680,
											"end": 3737,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3680,
											"end": 3737,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3680,
											"end": 3737,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3680,
											"end": 3737,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3680,
											"end": 3737,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3680,
											"end": 3737,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3680,
											"end": 3737,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3680,
											"end": 3737,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3680,
											"end": 3737,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3680,
											"end": 3737,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8516,
											"end": 8535,
											"name": "PUSH",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 8516,
											"end": 8535,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8516,
											"end": 8535,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3680,
											"end": 3737,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3680,
											"end": 3737,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3680,
											"end": 3737,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3656,
											"end": 3748,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3656,
											"end": 3748,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3656,
											"end": 3748,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3656,
											"end": 3748,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3656,
											"end": 3748,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3656,
											"end": 3748,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3656,
											"end": 3748,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1901"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3802,
											"end": 3859,
											"name": "PUSH",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 3802,
											"end": 3859,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3802,
											"end": 3859,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8993,
											"end": 9020,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9036,
											"end": 9047,
											"name": "PUSH",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 9036,
											"end": 9047,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9036,
											"end": 9047,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9029,
											"end": 9056,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9029,
											"end": 9056,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9029,
											"end": 9056,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9072,
											"end": 9084,
											"name": "PUSH",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 9072,
											"end": 9084,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9072,
											"end": 9084,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9065,
											"end": 9093,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9065,
											"end": 9093,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9065,
											"end": 9093,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3422,
											"end": 3622,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3422,
											"end": 3622,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 9109,
											"end": 9121,
											"name": "PUSH",
											"source": 8,
											"value": "1A2"
										},
										{
											"begin": 9109,
											"end": 9121,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3802,
											"end": 3859,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3802,
											"end": 3859,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3802,
											"end": 3859,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3802,
											"end": 3859,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3802,
											"end": 3859,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3802,
											"end": 3859,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3802,
											"end": 3859,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3802,
											"end": 3859,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3802,
											"end": 3859,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3802,
											"end": 3859,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3802,
											"end": 3859,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3802,
											"end": 3859,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3870,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3870,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3802,
											"end": 3859,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3778,
											"end": 3870,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3870,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3870,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3870,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3883,
											"end": 3900,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3903,
											"end": 3929,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3903,
											"end": 3929,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3903,
											"end": 3929,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3903,
											"end": 3929,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3903,
											"end": 3929,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3903,
											"end": 3929,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3903,
											"end": 3929,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3903,
											"end": 3929,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3903,
											"end": 3929,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9359,
											"end": 9384,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9359,
											"end": 9384,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9359,
											"end": 9384,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9432,
											"end": 9436,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 9420,
											"end": 9437,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 9420,
											"end": 9437,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9400,
											"end": 9418,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9400,
											"end": 9418,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9400,
											"end": 9418,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9393,
											"end": 9438,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9393,
											"end": 9438,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9393,
											"end": 9438,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9393,
											"end": 9438,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9454,
											"end": 9472,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 9454,
											"end": 9472,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9454,
											"end": 9472,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9447,
											"end": 9481,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 9447,
											"end": 9481,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9447,
											"end": 9481,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9497,
											"end": 9515,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 9497,
											"end": 9515,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9497,
											"end": 9515,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9490,
											"end": 9524,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 9490,
											"end": 9524,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9490,
											"end": 9524,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3778,
											"end": 3870,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3870,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3883,
											"end": 3900,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3903,
											"end": 3929,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3903,
											"end": 3929,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9331,
											"end": 9350,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 9331,
											"end": 9350,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3903,
											"end": 3929,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3903,
											"end": 3929,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3903,
											"end": 3929,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3903,
											"end": 3929,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3903,
											"end": 3929,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3903,
											"end": 3929,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3903,
											"end": 3929,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3903,
											"end": 3929,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3903,
											"end": 3929,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3903,
											"end": 3929,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3903,
											"end": 3929,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3903,
											"end": 3929,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3903,
											"end": 3929,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 3903,
											"end": 3929,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 3903,
											"end": 3929,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3903,
											"end": 3929,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3903,
											"end": 3929,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3903,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "329"
										},
										{
											"begin": 3903,
											"end": 3929,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3903,
											"end": 3929,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3903,
											"end": 3929,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3903,
											"end": 3929,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3903,
											"end": 3929,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 3903,
											"end": 3929,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3903,
											"end": 3929,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3903,
											"end": 3929,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3903,
											"end": 3929,
											"name": "tag",
											"source": 2,
											"value": "329"
										},
										{
											"begin": 3903,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3903,
											"end": 3929,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3903,
											"end": 3929,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3903,
											"end": 3929,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3903,
											"end": 3929,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3903,
											"end": 3929,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3962,
											"end": 3985,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3962,
											"end": 3985,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3940,
											"end": 4055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "330"
										},
										{
											"begin": 3940,
											"end": 4055,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3940,
											"end": 4055,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3940,
											"end": 4055,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3940,
											"end": 4055,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3940,
											"end": 4055,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9737,
											"end": 9739,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3940,
											"end": 4055,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3940,
											"end": 4055,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3940,
											"end": 4055,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9719,
											"end": 9740,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9778,
											"name": "PUSH",
											"source": 8,
											"value": "2A"
										},
										{
											"begin": 9756,
											"end": 9774,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 9756,
											"end": 9774,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9756,
											"end": 9774,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9749,
											"end": 9779,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9815,
											"end": 9849,
											"name": "PUSH",
											"source": 8,
											"value": "4C414E44424153453A3A64656C656761746542795369673A20696E76616C6964"
										},
										{
											"begin": 9795,
											"end": 9813,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 9795,
											"end": 9813,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9795,
											"end": 9813,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9788,
											"end": 9850,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207369676E6174757265"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9866,
											"end": 9884,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 9866,
											"end": 9884,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9866,
											"end": 9884,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9859,
											"end": 9899,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9916,
											"end": 9935,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 9916,
											"end": 9935,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3940,
											"end": 4055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 9535,
											"end": 9941,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3940,
											"end": 4055,
											"name": "tag",
											"source": 2,
											"value": "330"
										},
										{
											"begin": 3940,
											"end": 4055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4097,
											"end": 4114,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4097,
											"end": 4114,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4097,
											"end": 4114,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4097,
											"end": 4114,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4097,
											"end": 4114,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4097,
											"end": 4114,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4097,
											"end": 4103,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 4097,
											"end": 4114,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4097,
											"end": 4114,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4097,
											"end": 4114,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4097,
											"end": 4114,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4097,
											"end": 4114,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4097,
											"end": 4116,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4097,
											"end": 4116,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4097,
											"end": 4116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4097,
											"end": 4116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 4097,
											"end": 4116,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4097,
											"end": 4116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 4097,
											"end": 4116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4097,
											"end": 4116,
											"name": "tag",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 4097,
											"end": 4116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4097,
											"end": 4116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4097,
											"end": 4116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4097,
											"end": 4116,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4097,
											"end": 4116,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4088,
											"end": 4093,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 4088,
											"end": 4116,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 4066,
											"end": 4182,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4182,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4066,
											"end": 4182,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4066,
											"end": 4182,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4182,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10288,
											"end": 10290,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4066,
											"end": 4182,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4066,
											"end": 4182,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4182,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10270,
											"end": 10291,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10327,
											"end": 10329,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 10307,
											"end": 10325,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 10307,
											"end": 10325,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10307,
											"end": 10325,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10300,
											"end": 10330,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10366,
											"end": 10400,
											"name": "PUSH",
											"source": 8,
											"value": "4C414E44424153453A3A64656C656761746542795369673A20696E76616C6964"
										},
										{
											"begin": 10346,
											"end": 10364,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 10346,
											"end": 10364,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10346,
											"end": 10364,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10339,
											"end": 10401,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "206E6F6E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10417,
											"end": 10435,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 10417,
											"end": 10435,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10417,
											"end": 10435,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10410,
											"end": 10446,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10463,
											"end": 10482,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 10463,
											"end": 10482,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4066,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 10086,
											"end": 10488,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4066,
											"end": 4182,
											"name": "tag",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 4066,
											"end": 4182,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4234,
											"end": 4240,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 4215,
											"end": 4230,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 4215,
											"end": 4240,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4215,
											"end": 4240,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4193,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "338"
										},
										{
											"begin": 4193,
											"end": 4310,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4193,
											"end": 4310,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4193,
											"end": 4310,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4193,
											"end": 4310,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4193,
											"end": 4310,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10695,
											"end": 10697,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4193,
											"end": 4310,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4193,
											"end": 4310,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4193,
											"end": 4310,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10677,
											"end": 10698,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10734,
											"end": 10736,
											"name": "PUSH",
											"source": 8,
											"value": "2A"
										},
										{
											"begin": 10714,
											"end": 10732,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 10714,
											"end": 10732,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10714,
											"end": 10732,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10707,
											"end": 10737,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10773,
											"end": 10807,
											"name": "PUSH",
											"source": 8,
											"value": "4C414E44424153453A3A64656C656761746542795369673A207369676E617475"
										},
										{
											"begin": 10753,
											"end": 10771,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 10753,
											"end": 10771,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10753,
											"end": 10771,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10746,
											"end": 10808,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C9948195E1C1A5C9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10824,
											"end": 10842,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 10824,
											"end": 10842,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10824,
											"end": 10842,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10817,
											"end": 10857,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10874,
											"end": 10893,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 10874,
											"end": 10893,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4193,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 10493,
											"end": 10899,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4193,
											"end": 4310,
											"name": "tag",
											"source": 2,
											"value": "338"
										},
										{
											"begin": 4193,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4328,
											"end": 4359,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 4338,
											"end": 4347,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4349,
											"end": 4358,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 4328,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 4328,
											"end": 4359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4328,
											"end": 4359,
											"name": "tag",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 4328,
											"end": 4359,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4321,
											"end": 4359,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4321,
											"end": 4359,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4321,
											"end": 4359,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4321,
											"end": 4359,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3211,
											"end": 4367,
											"name": "tag",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 3211,
											"end": 4367,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3211,
											"end": 4367,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3211,
											"end": 4367,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3211,
											"end": 4367,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3211,
											"end": 4367,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3211,
											"end": 4367,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3211,
											"end": 4367,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3211,
											"end": 4367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1906,
											"end": 2098,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 1906,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1059,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1079,
											"end": 1085,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1079,
											"end": 1085,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 682,
											"end": 692,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1249,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "346"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 1218,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "tag",
											"source": 3,
											"value": "346"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1995,
											"end": 2017,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1995,
											"end": 2017,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1987,
											"end": 2060,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "349"
										},
										{
											"begin": 1987,
											"end": 2060,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1987,
											"end": 2060,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1987,
											"end": 2060,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1987,
											"end": 2060,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1987,
											"end": 2060,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11106,
											"end": 11108,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1987,
											"end": 2060,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1987,
											"end": 2060,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1987,
											"end": 2060,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11088,
											"end": 11109,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11145,
											"end": 11147,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 11125,
											"end": 11143,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 11125,
											"end": 11143,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11125,
											"end": 11143,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11118,
											"end": 11148,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11184,
											"end": 11218,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 11164,
											"end": 11182,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 11164,
											"end": 11182,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11164,
											"end": 11182,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11157,
											"end": 11219,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11235,
											"end": 11253,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 11235,
											"end": 11253,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11235,
											"end": 11253,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11228,
											"end": 11264,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11281,
											"end": 11300,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 11281,
											"end": 11300,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1987,
											"end": 2060,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 10904,
											"end": 11306,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1987,
											"end": 2060,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "349"
										},
										{
											"begin": 1987,
											"end": 2060,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2071,
											"end": 2090,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 2081,
											"end": 2089,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2071,
											"end": 2080,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 2071,
											"end": 2090,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8592,
											"end": 8709,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 8592,
											"end": 8709,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8655,
											"end": 8662,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8682,
											"end": 8701,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 8690,
											"end": 8693,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4076,
											"end": 4094,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4076,
											"end": 4094,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3993,
											"end": 4102,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8632,
											"end": 9004,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 8632,
											"end": 9004,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8760,
											"end": 8779,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8760,
											"end": 8779,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11513,
											"end": 11515,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11495,
											"end": 11516,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11552,
											"end": 11554,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 11532,
											"end": 11550,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11532,
											"end": 11550,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11532,
											"end": 11550,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11525,
											"end": 11555,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11591,
											"end": 11625,
											"name": "PUSH",
											"source": 8,
											"value": "42455032303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 11571,
											"end": 11589,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 11571,
											"end": 11589,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11571,
											"end": 11589,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11564,
											"end": 11626,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11642,
											"end": 11660,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 11642,
											"end": 11660,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11642,
											"end": 11660,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11635,
											"end": 11669,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11686,
											"end": 11705,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 11686,
											"end": 11705,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 11311,
											"end": 11711,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "tag",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8839,
											"end": 8860,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8839,
											"end": 8860,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 8831,
											"end": 8899,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8899,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8831,
											"end": 8899,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8831,
											"end": 8899,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8899,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11918,
											"end": 11920,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8831,
											"end": 8899,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8831,
											"end": 8899,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11900,
											"end": 11921,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11957,
											"end": 11959,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 11937,
											"end": 11955,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 11937,
											"end": 11955,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11937,
											"end": 11955,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11930,
											"end": 11960,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11996,
											"end": 12030,
											"name": "PUSH",
											"source": 8,
											"value": "42455032303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 11976,
											"end": 11994,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 11976,
											"end": 11994,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11976,
											"end": 11994,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11969,
											"end": 12031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12047,
											"end": 12065,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 12047,
											"end": 12065,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12047,
											"end": 12065,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12040,
											"end": 12072,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12089,
											"end": 12108,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 12089,
											"end": 12108,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8831,
											"end": 8899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 11716,
											"end": 12114,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8831,
											"end": 8899,
											"name": "tag",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 8831,
											"end": 8899,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8912,
											"end": 8930,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8930,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8930,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8912,
											"end": 8930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8930,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8923,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8912,
											"end": 8930,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8912,
											"end": 8930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8930,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8912,
											"end": 8930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8930,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8930,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8939,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8939,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8939,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8939,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8939,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8939,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8939,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8939,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8939,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8939,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8939,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8948,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8948,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8964,
											"end": 8996,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8964,
											"end": 8996,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8964,
											"end": 8996,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 8964,
											"end": 8996,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8964,
											"end": 8996,
											"name": "tag",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 8964,
											"end": 8996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8964,
											"end": 8996,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8964,
											"end": 8996,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8964,
											"end": 8996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8964,
											"end": 8996,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8964,
											"end": 8996,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8964,
											"end": 8996,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8964,
											"end": 8996,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 8632,
											"end": 9004,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8632,
											"end": 9004,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8632,
											"end": 9004,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8632,
											"end": 9004,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8095,
											"end": 8253,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 8095,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8168,
											"end": 8172,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8192,
											"end": 8245,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 8200,
											"end": 8203,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8220,
											"end": 8243,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8220,
											"end": 8243,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8192,
											"end": 8199,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 8192,
											"end": 8245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6344,
											"end": 6886,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 6344,
											"end": 6886,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6476,
											"end": 6496,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6496,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6468,
											"end": 6538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 6468,
											"end": 6538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6468,
											"end": 6538,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6468,
											"end": 6538,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6468,
											"end": 6538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6468,
											"end": 6538,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12321,
											"end": 12323,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6468,
											"end": 6538,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6468,
											"end": 6538,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6468,
											"end": 6538,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12303,
											"end": 12324,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12360,
											"end": 12362,
											"name": "PUSH",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 12340,
											"end": 12358,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 12340,
											"end": 12358,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12340,
											"end": 12358,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12333,
											"end": 12363,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12399,
											"end": 12433,
											"name": "PUSH",
											"source": 8,
											"value": "42455032303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 12379,
											"end": 12397,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 12379,
											"end": 12397,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12379,
											"end": 12397,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12372,
											"end": 12434,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12450,
											"end": 12468,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 12450,
											"end": 12468,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12450,
											"end": 12468,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12443,
											"end": 12478,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12495,
											"end": 12514,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 12495,
											"end": 12514,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6468,
											"end": 6538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 12119,
											"end": 12520,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6468,
											"end": 6538,
											"name": "tag",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 6468,
											"end": 6538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6557,
											"end": 6580,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6557,
											"end": 6580,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 6549,
											"end": 6620,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6620,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6549,
											"end": 6620,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6549,
											"end": 6620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6620,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12727,
											"end": 12729,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6549,
											"end": 6620,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6549,
											"end": 6620,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12709,
											"end": 12730,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12766,
											"end": 12768,
											"name": "PUSH",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 12746,
											"end": 12764,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 12746,
											"end": 12764,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12746,
											"end": 12764,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12739,
											"end": 12769,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12805,
											"end": 12839,
											"name": "PUSH",
											"source": 8,
											"value": "42455032303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 12785,
											"end": 12803,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 12785,
											"end": 12803,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12785,
											"end": 12803,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12778,
											"end": 12840,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12856,
											"end": 12874,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 12856,
											"end": 12874,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12856,
											"end": 12874,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12849,
											"end": 12882,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12899,
											"end": 12918,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 12899,
											"end": 12918,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6549,
											"end": 6620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 12525,
											"end": 12924,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6549,
											"end": 6620,
											"name": "tag",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 6549,
											"end": 6620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 6689,
											"end": 6695,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "PUSH data",
											"source": 0,
											"value": "A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73"
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6653,
											"end": 6670,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6670,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6670,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6653,
											"end": 6670,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6670,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6670,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6662,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6653,
											"end": 6670,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6653,
											"end": 6670,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6670,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6653,
											"end": 6670,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6670,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6670,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6670,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 6653,
											"end": 6761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "tag",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 6653,
											"end": 6761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6633,
											"end": 6650,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6633,
											"end": 6650,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6633,
											"end": 6650,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6633,
											"end": 6650,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6633,
											"end": 6650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6633,
											"end": 6650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6633,
											"end": 6650,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6633,
											"end": 6642,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6633,
											"end": 6650,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6633,
											"end": 6650,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6633,
											"end": 6650,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6633,
											"end": 6650,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6633,
											"end": 6650,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6633,
											"end": 6650,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6633,
											"end": 6761,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6633,
											"end": 6761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6633,
											"end": 6761,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6633,
											"end": 6761,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6815,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6815,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6815,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6815,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 6795,
											"end": 6827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6820,
											"end": 6826,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 6795,
											"end": 6827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6827,
											"name": "tag",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 6795,
											"end": 6827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6772,
											"end": 6792,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6792,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6792,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6792,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6772,
											"end": 6792,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6792,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6792,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6781,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6772,
											"end": 6792,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6772,
											"end": 6792,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6792,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6772,
											"end": 6792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6792,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6792,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6827,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6827,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6827,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6871,
											"end": 6877,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5042,
											"end": 5282,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 5042,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5162,
											"end": 5169,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5223,
											"end": 5235,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5215,
											"end": 5221,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5215,
											"end": 5221,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5215,
											"end": 5221,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5215,
											"end": 5221,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5207,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "379"
										},
										{
											"begin": 5207,
											"end": 5236,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5207,
											"end": 5236,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5207,
											"end": 5236,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5207,
											"end": 5236,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5207,
											"end": 5236,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5207,
											"end": 5236,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5207,
											"end": 5236,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5207,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 5207,
											"end": 5236,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5207,
											"end": 5236,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5207,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 5207,
											"end": 5236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5207,
											"end": 5236,
											"name": "tag",
											"source": 4,
											"value": "379"
										},
										{
											"begin": 5207,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5258,
											"end": 5263,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5258,
											"end": 5263,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5258,
											"end": 5263,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5042,
											"end": 5282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2763,
											"end": 2861,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 2763,
											"end": 2861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2821,
											"end": 2828,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2848,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "314"
										},
										{
											"begin": 2852,
											"end": 2853,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2848,
											"end": 2849,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2848,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "383"
										},
										{
											"begin": 2848,
											"end": 2853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7167,
											"end": 7475,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 7167,
											"end": 7475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7243,
											"end": 7264,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7264,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7235,
											"end": 7300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 7235,
											"end": 7300,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7235,
											"end": 7300,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7235,
											"end": 7300,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7235,
											"end": 7300,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7235,
											"end": 7300,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13264,
											"end": 13266,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7235,
											"end": 7300,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7235,
											"end": 7300,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7235,
											"end": 7300,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13246,
											"end": 13267,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13303,
											"end": 13305,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 13283,
											"end": 13301,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 13283,
											"end": 13301,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13283,
											"end": 13301,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13276,
											"end": 13306,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13342,
											"end": 13375,
											"name": "PUSH",
											"source": 8,
											"value": "42455032303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 13322,
											"end": 13340,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 13322,
											"end": 13340,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13322,
											"end": 13340,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13315,
											"end": 13376,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13393,
											"end": 13411,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 13393,
											"end": 13411,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7235,
											"end": 7300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 13062,
											"end": 13417,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7235,
											"end": 7300,
											"name": "tag",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 7235,
											"end": 7300,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7328,
											"end": 7340,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7328,
											"end": 7340,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7328,
											"end": 7352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 7328,
											"end": 7352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7345,
											"end": 7351,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7328,
											"end": 7344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 7328,
											"end": 7352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7328,
											"end": 7352,
											"name": "tag",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 7328,
											"end": 7352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7313,
											"end": 7325,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7313,
											"end": 7352,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7384,
											"end": 7402,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7402,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7384,
											"end": 7402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7393,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7384,
											"end": 7402,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7384,
											"end": 7402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7402,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7384,
											"end": 7402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7402,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7402,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 7384,
											"end": 7414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7407,
											"end": 7413,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 7384,
											"end": 7414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7414,
											"name": "tag",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 7384,
											"end": 7414,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7363,
											"end": 7381,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7381,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7381,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7363,
											"end": 7381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7381,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7372,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7363,
											"end": 7381,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7363,
											"end": 7381,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7381,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7363,
											"end": 7381,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7381,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7381,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7414,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7414,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7414,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 7467,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 7467,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7381,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 7467,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7430,
											"end": 7467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 7467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 7430,
											"end": 7467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7460,
											"end": 7466,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7430,
											"end": 7467,
											"name": "tag",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 7430,
											"end": 7467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 7467,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7430,
											"end": 7467,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 7467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 7467,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 7467,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 7467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 7467,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 7167,
											"end": 7475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7167,
											"end": 7475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7167,
											"end": 7475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6974,
											"end": 8039,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 6974,
											"end": 8039,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7114,
											"end": 7120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7104,
											"end": 7120,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7104,
											"end": 7110,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7104,
											"end": 7120,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7104,
											"end": 7120,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 7104,
											"end": 7120,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7104,
											"end": 7134,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7104,
											"end": 7134,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7104,
											"end": 7134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "392"
										},
										{
											"begin": 7104,
											"end": 7134,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7104,
											"end": 7134,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7133,
											"end": 7134,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7124,
											"end": 7130,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7124,
											"end": 7134,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 7104,
											"end": 7134,
											"name": "tag",
											"source": 2,
											"value": "392"
										},
										{
											"begin": 7104,
											"end": 7134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7100,
											"end": 8032,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7100,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "402"
										},
										{
											"begin": 7100,
											"end": 8032,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7155,
											"end": 7175,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7155,
											"end": 7175,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7155,
											"end": 7175,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7151,
											"end": 7578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "394"
										},
										{
											"begin": 7151,
											"end": 7578,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7263,
											"end": 7285,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7263,
											"end": 7285,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7244,
											"end": 7260,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7263,
											"end": 7285,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7263,
											"end": 7285,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7263,
											"end": 7285,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7263,
											"end": 7277,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 7263,
											"end": 7285,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7263,
											"end": 7285,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7263,
											"end": 7285,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7263,
											"end": 7285,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7263,
											"end": 7285,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7263,
											"end": 7285,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7263,
											"end": 7285,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7263,
											"end": 7285,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7263,
											"end": 7285,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7324,
											"end": 7337,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7324,
											"end": 7426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "395"
										},
										{
											"begin": 7324,
											"end": 7426,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7425,
											"end": 7426,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7324,
											"end": 7426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "396"
										},
										{
											"begin": 7324,
											"end": 7426,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7324,
											"end": 7426,
											"name": "tag",
											"source": 2,
											"value": "395"
										},
										{
											"begin": 7324,
											"end": 7426,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7361,
											"end": 7380,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7380,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7380,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7361,
											"end": 7380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7380,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7380,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7372,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 7361,
											"end": 7380,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7361,
											"end": 7380,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7380,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7361,
											"end": 7380,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7380,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7381,
											"end": 7394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "397"
										},
										{
											"begin": 7393,
											"end": 7394,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7381,
											"end": 7390,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7381,
											"end": 7394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 7381,
											"end": 7394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7381,
											"end": 7394,
											"name": "tag",
											"source": 2,
											"value": "397"
										},
										{
											"begin": 7381,
											"end": 7394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7395,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7361,
											"end": 7395,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7395,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7361,
											"end": 7395,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7395,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7395,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7395,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7361,
											"end": 7395,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7395,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7395,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7395,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7395,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7361,
											"end": 7395,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7395,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7361,
											"end": 7395,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7324,
											"end": 7426,
											"name": "tag",
											"source": 2,
											"value": "396"
										},
										{
											"begin": 7324,
											"end": 7426,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7304,
											"end": 7426,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7445,
											"end": 7462,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7465,
											"end": 7486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "398"
										},
										{
											"begin": 7304,
											"end": 7426,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7479,
											"end": 7485,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7465,
											"end": 7478,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "399"
										},
										{
											"begin": 7465,
											"end": 7486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7465,
											"end": 7486,
											"name": "tag",
											"source": 2,
											"value": "398"
										},
										{
											"begin": 7465,
											"end": 7486,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7445,
											"end": 7486,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7445,
											"end": 7486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7505,
											"end": 7562,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "400"
										},
										{
											"begin": 7522,
											"end": 7528,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7530,
											"end": 7539,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7541,
											"end": 7550,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7552,
											"end": 7561,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7505,
											"end": 7521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "401"
										},
										{
											"begin": 7505,
											"end": 7562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7505,
											"end": 7562,
											"name": "tag",
											"source": 2,
											"value": "400"
										},
										{
											"begin": 7505,
											"end": 7562,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7177,
											"end": 7578,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7177,
											"end": 7578,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7177,
											"end": 7578,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7151,
											"end": 7578,
											"name": "tag",
											"source": 2,
											"value": "394"
										},
										{
											"begin": 7151,
											"end": 7578,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7598,
											"end": 7618,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7598,
											"end": 7618,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7598,
											"end": 7618,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7594,
											"end": 8021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "402"
										},
										{
											"begin": 7594,
											"end": 8021,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7706,
											"end": 7728,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7706,
											"end": 7728,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7687,
											"end": 7703,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7706,
											"end": 7728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7706,
											"end": 7728,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7706,
											"end": 7728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7706,
											"end": 7720,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 7706,
											"end": 7728,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7706,
											"end": 7728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7706,
											"end": 7728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7706,
											"end": 7728,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7706,
											"end": 7728,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7706,
											"end": 7728,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7706,
											"end": 7728,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7706,
											"end": 7728,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7706,
											"end": 7728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7767,
											"end": 7780,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7767,
											"end": 7869,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "403"
										},
										{
											"begin": 7767,
											"end": 7869,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7868,
											"end": 7869,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7767,
											"end": 7869,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "404"
										},
										{
											"begin": 7767,
											"end": 7869,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7767,
											"end": 7869,
											"name": "tag",
											"source": 2,
											"value": "403"
										},
										{
											"begin": 7767,
											"end": 7869,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7804,
											"end": 7823,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7804,
											"end": 7823,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7804,
											"end": 7823,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7804,
											"end": 7823,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7804,
											"end": 7823,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7804,
											"end": 7823,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7804,
											"end": 7815,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 7804,
											"end": 7823,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7804,
											"end": 7823,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7804,
											"end": 7823,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7804,
											"end": 7823,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7804,
											"end": 7823,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7804,
											"end": 7823,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7824,
											"end": 7837,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "405"
										},
										{
											"begin": 7836,
											"end": 7837,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7824,
											"end": 7833,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7824,
											"end": 7837,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 7824,
											"end": 7837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7824,
											"end": 7837,
											"name": "tag",
											"source": 2,
											"value": "405"
										},
										{
											"begin": 7824,
											"end": 7837,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7804,
											"end": 7838,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7804,
											"end": 7838,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7804,
											"end": 7838,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7804,
											"end": 7838,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7804,
											"end": 7838,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7804,
											"end": 7838,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7804,
											"end": 7838,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7804,
											"end": 7838,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7804,
											"end": 7838,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7804,
											"end": 7838,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7804,
											"end": 7838,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7804,
											"end": 7838,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7804,
											"end": 7838,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7804,
											"end": 7838,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7804,
											"end": 7838,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7804,
											"end": 7844,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7804,
											"end": 7844,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7804,
											"end": 7844,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7767,
											"end": 7869,
											"name": "tag",
											"source": 2,
											"value": "404"
										},
										{
											"begin": 7767,
											"end": 7869,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7747,
											"end": 7869,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7888,
											"end": 7905,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7908,
											"end": 7929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "406"
										},
										{
											"begin": 7747,
											"end": 7869,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7922,
											"end": 7928,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7908,
											"end": 7921,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 7908,
											"end": 7929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7908,
											"end": 7929,
											"name": "tag",
											"source": 2,
											"value": "406"
										},
										{
											"begin": 7908,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7888,
											"end": 7929,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7888,
											"end": 7929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7948,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 7965,
											"end": 7971,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7973,
											"end": 7982,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 7993,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7995,
											"end": 8004,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7948,
											"end": 7964,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "401"
										},
										{
											"begin": 7948,
											"end": 8005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7594,
											"end": 8021,
											"name": "tag",
											"source": 2,
											"value": "402"
										},
										{
											"begin": 7594,
											"end": 8021,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6974,
											"end": 8039,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6974,
											"end": 8039,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6974,
											"end": 8039,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6974,
											"end": 8039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9063,
											"end": 9221,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 9063,
											"end": 9221,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9137,
											"end": 9144,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9188,
											"end": 9210,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 9192,
											"end": 9195,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9204,
											"end": 9209,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9188,
											"end": 9191,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "410"
										},
										{
											"begin": 9188,
											"end": 9210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6540,
											"end": 6966,
											"name": "tag",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 6540,
											"end": 6966,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6643,
											"end": 6664,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 6664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 6664,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6617,
											"end": 6640,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6643,
											"end": 6664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 6664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 6664,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 6653,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 6643,
											"end": 6664,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6643,
											"end": 6664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 6664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 6664,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 6664,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6643,
											"end": 6664,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 6664,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 6664,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 6664,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 6664,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2000,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1991,
											"end": 2009,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1991,
											"end": 2009,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1991,
											"end": 2009,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1991,
											"end": 2009,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1991,
											"end": 2009,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1991,
											"end": 2009,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6801,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 6780,
											"end": 6801,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6780,
											"end": 6801,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6780,
											"end": 6801,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6780,
											"end": 6813,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6780,
											"end": 6813,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6780,
											"end": 6813,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6780,
											"end": 6813,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6780,
											"end": 6813,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6780,
											"end": 6813,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6780,
											"end": 6813,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 6780,
											"end": 6813,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6780,
											"end": 6813,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6780,
											"end": 6813,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6831,
											"end": 6885,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6831,
											"end": 6885,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 6664,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 6664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 6664,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 6664,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 6664,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2009,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1991,
											"end": 2009,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6813,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6780,
											"end": 6813,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 6664,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 6664,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 6664,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6831,
											"end": 6885,
											"name": "PUSH",
											"source": 2,
											"value": "3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F"
										},
										{
											"begin": 6831,
											"end": 6885,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6617,
											"end": 6640,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6831,
											"end": 6885,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 6898,
											"end": 6958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "413"
										},
										{
											"begin": 6913,
											"end": 6928,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6930,
											"end": 6939,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6941,
											"end": 6957,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6898,
											"end": 6912,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 6898,
											"end": 6958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6898,
											"end": 6958,
											"name": "tag",
											"source": 2,
											"value": "413"
										},
										{
											"begin": 6898,
											"end": 6958,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6606,
											"end": 6966,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6606,
											"end": 6966,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6540,
											"end": 6966,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6540,
											"end": 6966,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6540,
											"end": 6966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2106,
											"end": 2279,
											"name": "tag",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 2106,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2178,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2181,
											"end": 2187,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2187,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2198,
											"end": 2215,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2198,
											"end": 2215,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2198,
											"end": 2215,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2198,
											"end": 2215,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2198,
											"end": 2215,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2198,
											"end": 2215,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2198,
											"end": 2215,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2198,
											"end": 2215,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2198,
											"end": 2215,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2231,
											"end": 2271,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2231,
											"end": 2271,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2187,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2187,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2187,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2187,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2187,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2187,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2187,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2231,
											"end": 2271,
											"name": "PUSH",
											"source": 3,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2231,
											"end": 2271,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2178,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2231,
											"end": 2271,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 2151,
											"end": 2279,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2106,
											"end": 2279,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2106,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7767,
											"end": 7919,
											"name": "tag",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 7767,
											"end": 7919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7837,
											"end": 7841,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7861,
											"end": 7911,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 7866,
											"end": 7869,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7886,
											"end": 7909,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7886,
											"end": 7909,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7861,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "417"
										},
										{
											"begin": 7861,
											"end": 7911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8339,
											"end": 8506,
											"name": "tag",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 8339,
											"end": 8506,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8473,
											"end": 8496,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8473,
											"end": 8496,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8419,
											"end": 8423,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3875,
											"end": 3894,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3875,
											"end": 3894,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3875,
											"end": 3894,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3875,
											"end": 3887,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3875,
											"end": 3887,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3875,
											"end": 3887,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3875,
											"end": 3894,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3875,
											"end": 3894,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3875,
											"end": 3894,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3875,
											"end": 3894,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3875,
											"end": 3894,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3875,
											"end": 3894,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3875,
											"end": 3899,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3875,
											"end": 3899,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8443,
											"end": 8498,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 3778,
											"end": 3907,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2272,
											"end": 3692,
											"name": "tag",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 2272,
											"end": 3692,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2338,
											"end": 2342,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2477,
											"end": 2496,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2477,
											"end": 2496,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2477,
											"end": 2496,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2477,
											"end": 2489,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2477,
											"end": 2489,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2477,
											"end": 2489,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2477,
											"end": 2496,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2477,
											"end": 2496,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2477,
											"end": 2496,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2477,
											"end": 2496,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2477,
											"end": 2496,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2477,
											"end": 2496,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2513,
											"end": 2528,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2513,
											"end": 2528,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "424"
										},
										{
											"begin": 2509,
											"end": 3685,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2909,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2912,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "425"
										},
										{
											"begin": 2925,
											"end": 2926,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2912,
											"end": 2922,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 2912,
											"end": 2926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 2926,
											"name": "tag",
											"source": 5,
											"value": "425"
										},
										{
											"begin": 2912,
											"end": 2926,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2961,
											"end": 2979,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2961,
											"end": 2979,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2926,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2926,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2941,
											"end": 2958,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2941,
											"end": 2958,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2961,
											"end": 2983,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "426"
										},
										{
											"begin": 2961,
											"end": 2983,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2982,
											"end": 2983,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2982,
											"end": 2983,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2961,
											"end": 2983,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 2961,
											"end": 2983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2961,
											"end": 2983,
											"name": "tag",
											"source": 5,
											"value": "426"
										},
										{
											"begin": 2961,
											"end": 2983,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2941,
											"end": 2983,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2941,
											"end": 2983,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3017,
											"end": 3030,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3013,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3030,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3000,
											"end": 3405,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "427"
										},
										{
											"begin": 3000,
											"end": 3405,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3051,
											"end": 3068,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3071,
											"end": 3074,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3071,
											"end": 3082,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3071,
											"end": 3082,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3083,
											"end": 3092,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3071,
											"end": 3093,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3071,
											"end": 3093,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3071,
											"end": 3093,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3071,
											"end": 3093,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3071,
											"end": 3093,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "429"
										},
										{
											"begin": 3071,
											"end": 3093,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3071,
											"end": 3093,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "429"
										},
										{
											"begin": 3071,
											"end": 3093,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "430"
										},
										{
											"begin": 3071,
											"end": 3093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3071,
											"end": 3093,
											"name": "tag",
											"source": 5,
											"value": "429"
										},
										{
											"begin": 3071,
											"end": 3093,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3071,
											"end": 3093,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3071,
											"end": 3093,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3071,
											"end": 3093,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3071,
											"end": 3093,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3071,
											"end": 3093,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3071,
											"end": 3093,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3071,
											"end": 3093,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3071,
											"end": 3093,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3051,
											"end": 3093,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3051,
											"end": 3093,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3225,
											"end": 3234,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3196,
											"end": 3199,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3196,
											"end": 3207,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3196,
											"end": 3207,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3208,
											"end": 3221,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3196,
											"end": 3222,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3196,
											"end": 3222,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3196,
											"end": 3222,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3196,
											"end": 3222,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3196,
											"end": 3222,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "433"
										},
										{
											"begin": 3196,
											"end": 3222,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3196,
											"end": 3222,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "433"
										},
										{
											"begin": 3196,
											"end": 3222,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "430"
										},
										{
											"begin": 3196,
											"end": 3222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3196,
											"end": 3222,
											"name": "tag",
											"source": 5,
											"value": "433"
										},
										{
											"begin": 3196,
											"end": 3222,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3196,
											"end": 3222,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3196,
											"end": 3222,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3196,
											"end": 3222,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3196,
											"end": 3222,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3196,
											"end": 3222,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3196,
											"end": 3222,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3196,
											"end": 3222,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3196,
											"end": 3222,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3196,
											"end": 3222,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3196,
											"end": 3222,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3196,
											"end": 3222,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3196,
											"end": 3234,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3196,
											"end": 3234,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3196,
											"end": 3234,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3196,
											"end": 3234,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3310,
											"end": 3333,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3310,
											"end": 3333,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3310,
											"end": 3333,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3310,
											"end": 3322,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3310,
											"end": 3322,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 3310,
											"end": 3322,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3310,
											"end": 3333,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3310,
											"end": 3333,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3310,
											"end": 3333,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3310,
											"end": 3333,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3310,
											"end": 3333,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3310,
											"end": 3346,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3310,
											"end": 3346,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3310,
											"end": 3346,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3000,
											"end": 3405,
											"name": "tag",
											"source": 5,
											"value": "427"
										},
										{
											"begin": 3000,
											"end": 3405,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3486,
											"end": 3489,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3486,
											"end": 3489,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "436"
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "436"
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "437"
										},
										{
											"begin": 3486,
											"end": 3503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "tag",
											"source": 5,
											"value": "436"
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3581,
											"end": 3584,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3581,
											"end": 3593,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3581,
											"end": 3593,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3581,
											"end": 3600,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3599,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3581,
											"end": 3600,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3581,
											"end": 3600,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3581,
											"end": 3600,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3581,
											"end": 3600,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3581,
											"end": 3600,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3581,
											"end": 3600,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3581,
											"end": 3600,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3581,
											"end": 3600,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3581,
											"end": 3600,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3581,
											"end": 3600,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3581,
											"end": 3600,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3574,
											"end": 3600,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3574,
											"end": 3600,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3574,
											"end": 3600,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3628,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3617,
											"end": 3628,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3617,
											"end": 3628,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3617,
											"end": 3628,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3617,
											"end": 3628,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3617,
											"end": 3628,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3617,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 3617,
											"end": 3628,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 3685,
											"name": "tag",
											"source": 5,
											"value": "424"
										},
										{
											"begin": 2509,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3668,
											"end": 3673,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3661,
											"end": 3673,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3661,
											"end": 3673,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3661,
											"end": 3673,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3661,
											"end": 3673,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 3661,
											"end": 3673,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3144,
											"end": 3242,
											"name": "tag",
											"source": 4,
											"value": "399"
										},
										{
											"begin": 3144,
											"end": 3242,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3202,
											"end": 3209,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3229,
											"end": 3234,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "314"
										},
										{
											"begin": 3233,
											"end": 3234,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3229,
											"end": 3230,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3229,
											"end": 3234,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 3229,
											"end": 3234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8047,
											"end": 8864,
											"name": "tag",
											"source": 2,
											"value": "401"
										},
										{
											"begin": 8047,
											"end": 8864,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8212,
											"end": 8230,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8233,
											"end": 8350,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "443"
										},
										{
											"begin": 8254,
											"end": 8266,
											"name": "NUMBER",
											"source": 2
										},
										{
											"begin": 8233,
											"end": 8350,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8233,
											"end": 8350,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8233,
											"end": 8350,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8233,
											"end": 8350,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 8233,
											"end": 8350,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8233,
											"end": 8350,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8233,
											"end": 8350,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8233,
											"end": 8350,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8233,
											"end": 8350,
											"name": "PUSH",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 8233,
											"end": 8350,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8233,
											"end": 8350,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8233,
											"end": 8350,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8233,
											"end": 8350,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8233,
											"end": 8350,
											"name": "PUSH data",
											"source": 2,
											"value": "19EE87D38A98C92B75A5C0CF6D80BA3454DA2A59DB748607C0A0F9F22ED20008"
										},
										{
											"begin": 8233,
											"end": 8350,
											"name": "PUSH",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 8233,
											"end": 8350,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8233,
											"end": 8350,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 8233,
											"end": 8239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "444"
										},
										{
											"begin": 8233,
											"end": 8350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8233,
											"end": 8350,
											"name": "tag",
											"source": 2,
											"value": "443"
										},
										{
											"begin": 8233,
											"end": 8350,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8212,
											"end": 8350,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8212,
											"end": 8350,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8396,
											"end": 8397,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8381,
											"end": 8393,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8381,
											"end": 8397,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8381,
											"end": 8397,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8381,
											"end": 8397,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 8381,
											"end": 8479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8381,
											"end": 8479,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8381,
											"end": 8479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "445"
										},
										{
											"begin": 8381,
											"end": 8479,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8414,
											"end": 8436,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8414,
											"end": 8436,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8414,
											"end": 8436,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8414,
											"end": 8436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8414,
											"end": 8436,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8414,
											"end": 8436,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8414,
											"end": 8425,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 8414,
											"end": 8436,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8414,
											"end": 8436,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8414,
											"end": 8436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8414,
											"end": 8436,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8414,
											"end": 8436,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8414,
											"end": 8479,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8414,
											"end": 8479,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8414,
											"end": 8479,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8414,
											"end": 8479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8437,
											"end": 8453,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "446"
										},
										{
											"begin": 8452,
											"end": 8453,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8437,
											"end": 8449,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 8437,
											"end": 8453,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 8437,
											"end": 8453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8437,
											"end": 8453,
											"name": "tag",
											"source": 2,
											"value": "446"
										},
										{
											"begin": 8437,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8414,
											"end": 8454,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8414,
											"end": 8454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8414,
											"end": 8454,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8414,
											"end": 8454,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8414,
											"end": 8454,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8414,
											"end": 8454,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8414,
											"end": 8454,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8414,
											"end": 8454,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8414,
											"end": 8454,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8414,
											"end": 8454,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8414,
											"end": 8454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8414,
											"end": 8454,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8414,
											"end": 8454,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8414,
											"end": 8454,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8414,
											"end": 8454,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8414,
											"end": 8454,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8414,
											"end": 8464,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8414,
											"end": 8464,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8414,
											"end": 8479,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 8381,
											"end": 8479,
											"name": "tag",
											"source": 2,
											"value": "445"
										},
										{
											"begin": 8381,
											"end": 8479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8363,
											"end": 8788,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8363,
											"end": 8788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "447"
										},
										{
											"begin": 8363,
											"end": 8788,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8506,
											"end": 8528,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8506,
											"end": 8528,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8506,
											"end": 8528,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8506,
											"end": 8528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8506,
											"end": 8528,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8506,
											"end": 8528,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8506,
											"end": 8517,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 8506,
											"end": 8528,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8506,
											"end": 8528,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8506,
											"end": 8528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8506,
											"end": 8528,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8506,
											"end": 8528,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8555,
											"end": 8563,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8555,
											"end": 8563,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8529,
											"end": 8545,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "448"
										},
										{
											"begin": 8544,
											"end": 8545,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8529,
											"end": 8541,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 8529,
											"end": 8545,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 8529,
											"end": 8545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8529,
											"end": 8545,
											"name": "tag",
											"source": 2,
											"value": "448"
										},
										{
											"begin": 8529,
											"end": 8545,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8506,
											"end": 8546,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8506,
											"end": 8546,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8506,
											"end": 8546,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8506,
											"end": 8546,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8506,
											"end": 8546,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8506,
											"end": 8546,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8506,
											"end": 8546,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8506,
											"end": 8546,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8506,
											"end": 8546,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8506,
											"end": 8546,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8506,
											"end": 8546,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8506,
											"end": 8546,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8506,
											"end": 8546,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8506,
											"end": 8546,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8506,
											"end": 8552,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8506,
											"end": 8552,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8506,
											"end": 8563,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8363,
											"end": 8788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "449"
										},
										{
											"begin": 8363,
											"end": 8788,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8363,
											"end": 8788,
											"name": "tag",
											"source": 2,
											"value": "447"
										},
										{
											"begin": 8363,
											"end": 8788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8635,
											"end": 8717,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8635,
											"end": 8717,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8635,
											"end": 8717,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8635,
											"end": 8717,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8635,
											"end": 8717,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8635,
											"end": 8717,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8635,
											"end": 8717,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8635,
											"end": 8717,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8635,
											"end": 8717,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8635,
											"end": 8717,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8635,
											"end": 8717,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8635,
											"end": 8717,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8635,
											"end": 8717,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8635,
											"end": 8717,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8635,
											"end": 8717,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8635,
											"end": 8717,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8635,
											"end": 8717,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8635,
											"end": 8717,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8635,
											"end": 8717,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 8635,
											"end": 8717,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8635,
											"end": 8717,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8596,
											"end": 8618,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 8596,
											"end": 8618,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8596,
											"end": 8618,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8596,
											"end": 8618,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8596,
											"end": 8618,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8596,
											"end": 8607,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 8596,
											"end": 8618,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8596,
											"end": 8618,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8596,
											"end": 8618,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8596,
											"end": 8618,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8596,
											"end": 8618,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8596,
											"end": 8632,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 8596,
											"end": 8632,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8596,
											"end": 8632,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8596,
											"end": 8632,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8596,
											"end": 8632,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8596,
											"end": 8632,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8596,
											"end": 8632,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8596,
											"end": 8632,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8596,
											"end": 8632,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 8596,
											"end": 8632,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8596,
											"end": 8632,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8596,
											"end": 8717,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8596,
											"end": 8717,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8596,
											"end": 8717,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8596,
											"end": 8717,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8596,
											"end": 8717,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8596,
											"end": 8717,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8596,
											"end": 8717,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8596,
											"end": 8717,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 8596,
											"end": 8717,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8596,
											"end": 8717,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8596,
											"end": 8717,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8596,
											"end": 8717,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 8596,
											"end": 8717,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8596,
											"end": 8717,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8596,
											"end": 8717,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8596,
											"end": 8717,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8760,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "450"
										},
										{
											"begin": 8760,
											"end": 8776,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8596,
											"end": 8632,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8596,
											"end": 8632,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8760,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "451"
										},
										{
											"begin": 8760,
											"end": 8776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8760,
											"end": 8776,
											"name": "tag",
											"source": 2,
											"value": "450"
										},
										{
											"begin": 8760,
											"end": 8776,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8732,
											"end": 8757,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 8732,
											"end": 8757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8732,
											"end": 8757,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8732,
											"end": 8757,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8732,
											"end": 8757,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8732,
											"end": 8757,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8732,
											"end": 8746,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 8732,
											"end": 8757,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8732,
											"end": 8757,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8732,
											"end": 8757,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8732,
											"end": 8757,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8732,
											"end": 8757,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8732,
											"end": 8776,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8732,
											"end": 8776,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8732,
											"end": 8776,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8732,
											"end": 8776,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8732,
											"end": 8776,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8732,
											"end": 8776,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8732,
											"end": 8776,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8732,
											"end": 8776,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8732,
											"end": 8776,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8732,
											"end": 8776,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8732,
											"end": 8776,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8732,
											"end": 8776,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 8732,
											"end": 8776,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8732,
											"end": 8776,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8363,
											"end": 8788,
											"name": "tag",
											"source": 2,
											"value": "449"
										},
										{
											"begin": 8363,
											"end": 8788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8805,
											"end": 8856,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8805,
											"end": 8856,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8805,
											"end": 8856,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14093,
											"end": 14118,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 14093,
											"end": 14118,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14093,
											"end": 14118,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14149,
											"end": 14151,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14134,
											"end": 14152,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14134,
											"end": 14152,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14127,
											"end": 14161,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 14127,
											"end": 14161,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14127,
											"end": 14161,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8805,
											"end": 8856,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8805,
											"end": 8856,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8805,
											"end": 8856,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8805,
											"end": 8856,
											"name": "PUSH",
											"source": 2,
											"value": "DEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724"
										},
										{
											"begin": 8805,
											"end": 8856,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14066,
											"end": 14084,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8805,
											"end": 8856,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8805,
											"end": 8856,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8805,
											"end": 8856,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8805,
											"end": 8856,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8805,
											"end": 8856,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8805,
											"end": 8856,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8805,
											"end": 8856,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 8201,
											"end": 8864,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8047,
											"end": 8864,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8047,
											"end": 8864,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8047,
											"end": 8864,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8047,
											"end": 8864,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8047,
											"end": 8864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4456,
											"end": 4576,
											"name": "tag",
											"source": 5,
											"value": "410"
										},
										{
											"begin": 4456,
											"end": 4576,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4523,
											"end": 4530,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4550,
											"end": 4553,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4550,
											"end": 4561,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4550,
											"end": 4561,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4562,
											"end": 4567,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4550,
											"end": 4568,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4550,
											"end": 4568,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4550,
											"end": 4568,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4550,
											"end": 4568,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4550,
											"end": 4568,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "456"
										},
										{
											"begin": 4550,
											"end": 4568,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4550,
											"end": 4568,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "456"
										},
										{
											"begin": 4550,
											"end": 4568,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "430"
										},
										{
											"begin": 4550,
											"end": 4568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4550,
											"end": 4568,
											"name": "tag",
											"source": 5,
											"value": "456"
										},
										{
											"begin": 4550,
											"end": 4568,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4550,
											"end": 4568,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4550,
											"end": 4568,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4550,
											"end": 4568,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4550,
											"end": 4568,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4550,
											"end": 4568,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4550,
											"end": 4568,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4550,
											"end": 4568,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4550,
											"end": 4568,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4543,
											"end": 4568,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4543,
											"end": 4568,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4456,
											"end": 4576,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4456,
											"end": 4576,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4456,
											"end": 4576,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4456,
											"end": 4576,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4456,
											"end": 4576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1682,
											"end": 2096,
											"name": "tag",
											"source": 5,
											"value": "417"
										},
										{
											"begin": 1682,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1749,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3875,
											"end": 3894,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3875,
											"end": 3894,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3875,
											"end": 3894,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3875,
											"end": 3887,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3875,
											"end": 3887,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3875,
											"end": 3887,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3875,
											"end": 3894,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3875,
											"end": 3894,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3875,
											"end": 3894,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3875,
											"end": 3894,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3875,
											"end": 3894,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3875,
											"end": 3894,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1762,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "460"
										},
										{
											"begin": 1762,
											"end": 2089,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1805,
											"end": 1816,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2006,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2006,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1966,
											"end": 1978,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1966,
											"end": 1978,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1966,
											"end": 1978,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1966,
											"end": 2006,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1966,
											"end": 2006,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1966,
											"end": 2006,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1966,
											"end": 2006,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 2021,
											"end": 2032,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1762,
											"end": 2089,
											"name": "tag",
											"source": 5,
											"value": "460"
										},
										{
											"begin": 1762,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2072,
											"end": 2077,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2065,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 2065,
											"end": 2077,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8872,
											"end": 9068,
											"name": "tag",
											"source": 2,
											"value": "444"
										},
										{
											"begin": 8872,
											"end": 9068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8977,
											"end": 8983,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9020,
											"end": 9032,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9013,
											"end": 9018,
											"name": "PUSH",
											"source": 2,
											"value": "100000000"
										},
										{
											"begin": 9009,
											"end": 9018,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9009,
											"end": 9018,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 9001,
											"end": 9033,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "465"
										},
										{
											"begin": 9001,
											"end": 9033,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9001,
											"end": 9033,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9001,
											"end": 9033,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9001,
											"end": 9033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9001,
											"end": 9033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9001,
											"end": 9033,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9001,
											"end": 9033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9001,
											"end": 9033,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 9001,
											"end": 9033,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9001,
											"end": 9033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9001,
											"end": 9033,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 9001,
											"end": 9033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9001,
											"end": 9033,
											"name": "tag",
											"source": 2,
											"value": "465"
										},
										{
											"begin": 9001,
											"end": 9033,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9058,
											"end": 9059,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9058,
											"end": 9059,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8872,
											"end": 9068,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8872,
											"end": 9068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 196,
											"end": 793,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 196,
											"end": 793,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 308,
											"end": 312,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 337,
											"end": 339,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 366,
											"end": 368,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 355,
											"end": 364,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 348,
											"end": 369,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 398,
											"end": 404,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 392,
											"end": 405,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 441,
											"end": 447,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 436,
											"end": 438,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 425,
											"end": 434,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 421,
											"end": 439,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 414,
											"end": 448,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 466,
											"end": 467,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 476,
											"end": 616,
											"name": "tag",
											"source": 8,
											"value": "472"
										},
										{
											"begin": 476,
											"end": 616,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 490,
											"end": 496,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 487,
											"end": 488,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 484,
											"end": 497,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 476,
											"end": 616,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 476,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 476,
											"end": 616,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 585,
											"end": 599,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 585,
											"end": 599,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 585,
											"end": 599,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 581,
											"end": 604,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 581,
											"end": 604,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 575,
											"end": 605,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 551,
											"end": 568,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 551,
											"end": 568,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 551,
											"end": 568,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 570,
											"end": 572,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 547,
											"end": 573,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 540,
											"end": 606,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 505,
											"end": 515,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 505,
											"end": 515,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 476,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "472"
										},
										{
											"begin": 476,
											"end": 616,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 476,
											"end": 616,
											"name": "tag",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 476,
											"end": 616,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 634,
											"end": 640,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 631,
											"end": 632,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 628,
											"end": 641,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 625,
											"end": 716,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 625,
											"end": 716,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 625,
											"end": 716,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 704,
											"end": 705,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 699,
											"end": 701,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 690,
											"end": 696,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 679,
											"end": 688,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 675,
											"end": 697,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 671,
											"end": 702,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 664,
											"end": 706,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 625,
											"end": 716,
											"name": "tag",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 625,
											"end": 716,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 777,
											"end": 779,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 756,
											"end": 771,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 752,
											"end": 781,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 737,
											"end": 782,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 737,
											"end": 782,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 737,
											"end": 782,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 737,
											"end": 782,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 784,
											"end": 786,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 733,
											"end": 787,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 733,
											"end": 787,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 196,
											"end": 793,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 196,
											"end": 793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 798,
											"end": 971,
											"name": "tag",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 798,
											"end": 971,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 866,
											"end": 886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 866,
											"end": 886,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 915,
											"end": 946,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 915,
											"end": 946,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 905,
											"end": 947,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 905,
											"end": 947,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 895,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 895,
											"end": 965,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 961,
											"end": 962,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 958,
											"end": 959,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 951,
											"end": 963,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 976,
											"end": 1230,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 976,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1044,
											"end": 1050,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1052,
											"end": 1058,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1105,
											"end": 1107,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1093,
											"end": 1102,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1091,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1080,
											"end": 1103,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1076,
											"end": 1108,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1125,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 1073,
											"end": 1125,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1121,
											"end": 1122,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1118,
											"end": 1119,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1111,
											"end": 1123,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1125,
											"name": "tag",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 1073,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "480"
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 1144,
											"end": 1173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1173,
											"name": "tag",
											"source": 8,
											"value": "480"
										},
										{
											"begin": 1144,
											"end": 1173,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1134,
											"end": 1173,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 1220,
											"end": 1222,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1205,
											"end": 1223,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1205,
											"end": 1223,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1205,
											"end": 1223,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1205,
											"end": 1223,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1192,
											"end": 1224,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1192,
											"end": 1224,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 976,
											"end": 1230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1609,
											"end": 1795,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 1609,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1668,
											"end": 1674,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1721,
											"end": 1723,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1709,
											"end": 1718,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1700,
											"end": 1707,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1719,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1692,
											"end": 1724,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1689,
											"end": 1741,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1689,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "484"
										},
										{
											"begin": 1689,
											"end": 1741,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1737,
											"end": 1738,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1734,
											"end": 1735,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1727,
											"end": 1739,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1689,
											"end": 1741,
											"name": "tag",
											"source": 8,
											"value": "484"
										},
										{
											"begin": 1689,
											"end": 1741,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1760,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1760,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 1760,
											"end": 1789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1800,
											"end": 2128,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 1800,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1877,
											"end": 1883,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1885,
											"end": 1891,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1893,
											"end": 1899,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1946,
											"end": 1948,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1934,
											"end": 1943,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1925,
											"end": 1932,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1921,
											"end": 1944,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1917,
											"end": 1949,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1914,
											"end": 1966,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1914,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "487"
										},
										{
											"begin": 1914,
											"end": 1966,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1962,
											"end": 1963,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1959,
											"end": 1960,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1952,
											"end": 1964,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1914,
											"end": 1966,
											"name": "tag",
											"source": 8,
											"value": "487"
										},
										{
											"begin": 1914,
											"end": 1966,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1985,
											"end": 2014,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 2004,
											"end": 2013,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1985,
											"end": 2014,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 1985,
											"end": 2014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1985,
											"end": 2014,
											"name": "tag",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 1985,
											"end": 2014,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 2014,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 2014,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2033,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 2067,
											"end": 2069,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2056,
											"end": 2065,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2052,
											"end": 2070,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2033,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 2033,
											"end": 2071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2033,
											"end": 2071,
											"name": "tag",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 2033,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2071,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2071,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2118,
											"end": 2120,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2107,
											"end": 2116,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2103,
											"end": 2121,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2090,
											"end": 2122,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2080,
											"end": 2122,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2080,
											"end": 2122,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1800,
											"end": 2128,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1800,
											"end": 2128,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1800,
											"end": 2128,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1800,
											"end": 2128,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1800,
											"end": 2128,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1800,
											"end": 2128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2530,
											"end": 2710,
											"name": "tag",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 2530,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2589,
											"end": 2595,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2642,
											"end": 2644,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2630,
											"end": 2639,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2621,
											"end": 2628,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 2640,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2613,
											"end": 2645,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2662,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2662,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "493"
										},
										{
											"begin": 2610,
											"end": 2662,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2658,
											"end": 2659,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2655,
											"end": 2656,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2648,
											"end": 2660,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2662,
											"name": "tag",
											"source": 8,
											"value": "493"
										},
										{
											"begin": 2610,
											"end": 2662,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2681,
											"end": 2704,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2681,
											"end": 2704,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2530,
											"end": 2710,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2530,
											"end": 2710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3530,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 2912,
											"end": 3530,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3014,
											"end": 3020,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3030,
											"end": 3036,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3038,
											"end": 3044,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3046,
											"end": 3052,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3054,
											"end": 3060,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3110,
											"name": "PUSH",
											"source": 8,
											"value": "C0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3086,
											"end": 3093,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 3082,
											"end": 3105,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3078,
											"end": 3111,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3075,
											"end": 3128,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3075,
											"end": 3128,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "496"
										},
										{
											"begin": 3075,
											"end": 3128,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 3125,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3121,
											"end": 3122,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3114,
											"end": 3126,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3075,
											"end": 3128,
											"name": "tag",
											"source": 8,
											"value": "496"
										},
										{
											"begin": 3075,
											"end": 3128,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3147,
											"end": 3176,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "497"
										},
										{
											"begin": 3166,
											"end": 3175,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3147,
											"end": 3176,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 3147,
											"end": 3176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3147,
											"end": 3176,
											"name": "tag",
											"source": 8,
											"value": "497"
										},
										{
											"begin": 3147,
											"end": 3176,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3137,
											"end": 3176,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 3137,
											"end": 3176,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3223,
											"end": 3225,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3212,
											"end": 3221,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3208,
											"end": 3226,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3195,
											"end": 3227,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3185,
											"end": 3227,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 3185,
											"end": 3227,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3274,
											"end": 3276,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3263,
											"end": 3272,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3259,
											"end": 3277,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3246,
											"end": 3278,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3236,
											"end": 3278,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3236,
											"end": 3278,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3328,
											"end": 3330,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3317,
											"end": 3326,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3313,
											"end": 3331,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3300,
											"end": 3332,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3372,
											"end": 3376,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 3365,
											"end": 3370,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3361,
											"end": 3377,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3354,
											"end": 3359,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3351,
											"end": 3378,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3341,
											"end": 3396,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "498"
										},
										{
											"begin": 3341,
											"end": 3396,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3392,
											"end": 3393,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3389,
											"end": 3390,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3382,
											"end": 3394,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3341,
											"end": 3396,
											"name": "tag",
											"source": 8,
											"value": "498"
										},
										{
											"begin": 3341,
											"end": 3396,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3530,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3530,
											"name": "SWAP9",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3530,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3530,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2912,
											"end": 3530,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3530,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 3467,
											"end": 3470,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 3452,
											"end": 3471,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3452,
											"end": 3471,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3439,
											"end": 3472,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3439,
											"end": 3472,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 3519,
											"end": 3522,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 3504,
											"end": 3523,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3504,
											"end": 3523,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3504,
											"end": 3523,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3491,
											"end": 3524,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3491,
											"end": 3524,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2912,
											"end": 3530,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2912,
											"end": 3530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3535,
											"end": 3795,
											"name": "tag",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 3535,
											"end": 3795,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3603,
											"end": 3609,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3611,
											"end": 3617,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3664,
											"end": 3666,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3652,
											"end": 3661,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3643,
											"end": 3650,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3639,
											"end": 3662,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3635,
											"end": 3667,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3632,
											"end": 3684,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3632,
											"end": 3684,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "500"
										},
										{
											"begin": 3632,
											"end": 3684,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3680,
											"end": 3681,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3677,
											"end": 3678,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3670,
											"end": 3682,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3632,
											"end": 3684,
											"name": "tag",
											"source": 8,
											"value": "500"
										},
										{
											"begin": 3632,
											"end": 3684,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3703,
											"end": 3732,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "501"
										},
										{
											"begin": 3722,
											"end": 3731,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3703,
											"end": 3732,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 3703,
											"end": 3732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3703,
											"end": 3732,
											"name": "tag",
											"source": 8,
											"value": "501"
										},
										{
											"begin": 3703,
											"end": 3732,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3693,
											"end": 3732,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3693,
											"end": 3732,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3751,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 3785,
											"end": 3787,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3774,
											"end": 3783,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3770,
											"end": 3788,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3751,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 3751,
											"end": 3789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3751,
											"end": 3789,
											"name": "tag",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 3751,
											"end": 3789,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3741,
											"end": 3789,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3741,
											"end": 3789,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3535,
											"end": 3795,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3535,
											"end": 3795,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3535,
											"end": 3795,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3535,
											"end": 3795,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3535,
											"end": 3795,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3535,
											"end": 3795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3800,
											"end": 4150,
											"name": "tag",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 3800,
											"end": 4150,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3867,
											"end": 3873,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3928,
											"end": 3930,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3916,
											"end": 3925,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3907,
											"end": 3914,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3903,
											"end": 3926,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3899,
											"end": 3931,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3896,
											"end": 3948,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3896,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "504"
										},
										{
											"begin": 3896,
											"end": 3948,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3944,
											"end": 3945,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3942,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3934,
											"end": 3946,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3896,
											"end": 3948,
											"name": "tag",
											"source": 8,
											"value": "504"
										},
										{
											"begin": 3896,
											"end": 3948,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3967,
											"end": 3996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "505"
										},
										{
											"begin": 3986,
											"end": 3995,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3967,
											"end": 3996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 3967,
											"end": 3996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3967,
											"end": 3996,
											"name": "tag",
											"source": 8,
											"value": "505"
										},
										{
											"begin": 3967,
											"end": 3996,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3957,
											"end": 3996,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3957,
											"end": 3996,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4046,
											"end": 4048,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4035,
											"end": 4044,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4031,
											"end": 4049,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4018,
											"end": 4050,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 4090,
											"end": 4100,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4083,
											"end": 4088,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4079,
											"end": 4101,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4072,
											"end": 4077,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4069,
											"end": 4102,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4059,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "506"
										},
										{
											"begin": 4059,
											"end": 4120,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4116,
											"end": 4117,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4113,
											"end": 4114,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4106,
											"end": 4118,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4059,
											"end": 4120,
											"name": "tag",
											"source": 8,
											"value": "506"
										},
										{
											"begin": 4059,
											"end": 4120,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4139,
											"end": 4144,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4129,
											"end": 4144,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4129,
											"end": 4144,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4129,
											"end": 4144,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3800,
											"end": 4150,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3800,
											"end": 4150,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3800,
											"end": 4150,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3800,
											"end": 4150,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3800,
											"end": 4150,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3800,
											"end": 4150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4423,
											"end": 4803,
											"name": "tag",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 4423,
											"end": 4803,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4502,
											"end": 4503,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4498,
											"end": 4510,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4498,
											"end": 4510,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4498,
											"end": 4510,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 4498,
											"end": 4510,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4545,
											"end": 4557,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4545,
											"end": 4557,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4545,
											"end": 4557,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4566,
											"end": 4627,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "509"
										},
										{
											"begin": 4566,
											"end": 4627,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4620,
											"end": 4624,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4608,
											"end": 4625,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4598,
											"end": 4625,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4598,
											"end": 4625,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4566,
											"end": 4627,
											"name": "tag",
											"source": 8,
											"value": "509"
										},
										{
											"begin": 4566,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4673,
											"end": 4675,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4665,
											"end": 4671,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4662,
											"end": 4676,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4642,
											"end": 4660,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4639,
											"end": 4677,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4636,
											"end": 4797,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "510"
										},
										{
											"begin": 4636,
											"end": 4797,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4719,
											"end": 4729,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 4714,
											"end": 4717,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 4710,
											"end": 4730,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 4707,
											"end": 4708,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4700,
											"end": 4731,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4754,
											"end": 4758,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 4751,
											"end": 4752,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4744,
											"end": 4759,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4782,
											"end": 4786,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4779,
											"end": 4780,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4772,
											"end": 4787,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4636,
											"end": 4797,
											"name": "tag",
											"source": 8,
											"value": "510"
										},
										{
											"begin": 4636,
											"end": 4797,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4636,
											"end": 4797,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4423,
											"end": 4803,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4423,
											"end": 4803,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4423,
											"end": 4803,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4423,
											"end": 4803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4808,
											"end": 5164,
											"name": "tag",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 4808,
											"end": 5164,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5010,
											"end": 5012,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4992,
											"end": 5013,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4992,
											"end": 5013,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4992,
											"end": 5013,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5029,
											"end": 5047,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5029,
											"end": 5047,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5029,
											"end": 5047,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5022,
											"end": 5052,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5088,
											"end": 5122,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 5083,
											"end": 5085,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5068,
											"end": 5086,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5068,
											"end": 5086,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5061,
											"end": 5123,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5155,
											"end": 5157,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 5140,
											"end": 5158,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5140,
											"end": 5158,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4808,
											"end": 5164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5931,
											"end": 6058,
											"name": "tag",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 5931,
											"end": 6058,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5992,
											"end": 6002,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 5987,
											"end": 5990,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 5983,
											"end": 6003,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 5980,
											"end": 5981,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5973,
											"end": 6004,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6023,
											"end": 6027,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 6020,
											"end": 6021,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6013,
											"end": 6028,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6047,
											"end": 6051,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6044,
											"end": 6045,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6037,
											"end": 6052,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6063,
											"end": 6188,
											"name": "tag",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 6063,
											"end": 6188,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6103,
											"end": 6107,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6131,
											"end": 6132,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6128,
											"end": 6129,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6125,
											"end": 6133,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6122,
											"end": 6156,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6122,
											"end": 6156,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "517"
										},
										{
											"begin": 6122,
											"end": 6156,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6136,
											"end": 6154,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "517"
										},
										{
											"begin": 6136,
											"end": 6154,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 6136,
											"end": 6154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6136,
											"end": 6154,
											"name": "tag",
											"source": 8,
											"value": "517"
										},
										{
											"begin": 6136,
											"end": 6154,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6173,
											"end": 6182,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6173,
											"end": 6182,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6063,
											"end": 6188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6963,
											"end": 7184,
											"name": "tag",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 6963,
											"end": 7184,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7002,
											"end": 7006,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7031,
											"end": 7041,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7091,
											"end": 7101,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7091,
											"end": 7101,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7091,
											"end": 7101,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7091,
											"end": 7101,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7061,
											"end": 7071,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7061,
											"end": 7071,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7113,
											"end": 7125,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7113,
											"end": 7125,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7113,
											"end": 7125,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 7110,
											"end": 7148,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7110,
											"end": 7148,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "522"
										},
										{
											"begin": 7110,
											"end": 7148,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7128,
											"end": 7146,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "522"
										},
										{
											"begin": 7128,
											"end": 7146,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 7128,
											"end": 7146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7128,
											"end": 7146,
											"name": "tag",
											"source": 8,
											"value": "522"
										},
										{
											"begin": 7128,
											"end": 7146,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7165,
											"end": 7178,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7165,
											"end": 7178,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6963,
											"end": 7184,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6963,
											"end": 7184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7189,
											"end": 7477,
											"name": "tag",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 7189,
											"end": 7477,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7228,
											"end": 7229,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7254,
											"end": 7264,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7291,
											"end": 7293,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7288,
											"end": 7289,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7284,
											"end": 7294,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7313,
											"end": 7316,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7303,
											"end": 7437,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "524"
										},
										{
											"begin": 7303,
											"end": 7437,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7359,
											"end": 7369,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 7354,
											"end": 7357,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 7350,
											"end": 7370,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 7347,
											"end": 7348,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7340,
											"end": 7371,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7394,
											"end": 7398,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 7391,
											"end": 7392,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7384,
											"end": 7399,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7422,
											"end": 7426,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7419,
											"end": 7420,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7412,
											"end": 7427,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7303,
											"end": 7437,
											"name": "tag",
											"source": 8,
											"value": "524"
										},
										{
											"begin": 7303,
											"end": 7437,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7455,
											"end": 7465,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7455,
											"end": 7465,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7451,
											"end": 7471,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7451,
											"end": 7471,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7451,
											"end": 7471,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7451,
											"end": 7471,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 7451,
											"end": 7471,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7189,
											"end": 7477,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7189,
											"end": 7477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9946,
											"end": 10081,
											"name": "tag",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 9946,
											"end": 10081,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9985,
											"end": 9988,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10023,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10023,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10006,
											"end": 10023,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10003,
											"end": 10046,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "533"
										},
										{
											"begin": 10003,
											"end": 10046,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10026,
											"end": 10044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "533"
										},
										{
											"begin": 10026,
											"end": 10044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 10026,
											"end": 10044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10026,
											"end": 10044,
											"name": "tag",
											"source": 8,
											"value": "533"
										},
										{
											"begin": 10026,
											"end": 10044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10073,
											"end": 10074,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 10062,
											"end": 10075,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10062,
											"end": 10075,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9946,
											"end": 10081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12929,
											"end": 13057,
											"name": "tag",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 12929,
											"end": 13057,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12969,
											"end": 12972,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13000,
											"end": 13001,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12996,
											"end": 13002,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 12993,
											"end": 12994,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12990,
											"end": 13003,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 12987,
											"end": 13026,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12987,
											"end": 13026,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "543"
										},
										{
											"begin": 12987,
											"end": 13026,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13006,
											"end": 13024,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "543"
										},
										{
											"begin": 13006,
											"end": 13024,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 13006,
											"end": 13024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13006,
											"end": 13024,
											"name": "tag",
											"source": 8,
											"value": "543"
										},
										{
											"begin": 13006,
											"end": 13024,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13042,
											"end": 13051,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13042,
											"end": 13051,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12929,
											"end": 13057,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13422,
											"end": 13549,
											"name": "tag",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 13422,
											"end": 13549,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13483,
											"end": 13493,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 13478,
											"end": 13481,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 13474,
											"end": 13494,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 13471,
											"end": 13472,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13464,
											"end": 13495,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13514,
											"end": 13518,
											"name": "PUSH",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 13511,
											"end": 13512,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 13504,
											"end": 13519,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13538,
											"end": 13542,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 13535,
											"end": 13536,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13528,
											"end": 13543,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 13554,
											"end": 13681,
											"name": "tag",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 13554,
											"end": 13681,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13615,
											"end": 13625,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 13610,
											"end": 13613,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 13606,
											"end": 13626,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 13603,
											"end": 13604,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13596,
											"end": 13627,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13646,
											"end": 13650,
											"name": "PUSH",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 13643,
											"end": 13644,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 13636,
											"end": 13651,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13670,
											"end": 13674,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 13667,
											"end": 13668,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13660,
											"end": 13675,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 13686,
											"end": 13914,
											"name": "tag",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 13686,
											"end": 13914,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13725,
											"end": 13728,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13753,
											"end": 13763,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13790,
											"end": 13792,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13787,
											"end": 13788,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13783,
											"end": 13793,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13820,
											"end": 13822,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13817,
											"end": 13818,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 13813,
											"end": 13823,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13851,
											"end": 13854,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13847,
											"end": 13849,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13843,
											"end": 13855,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13838,
											"end": 13841,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13835,
											"end": 13856,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 13832,
											"end": 13879,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 13832,
											"end": 13879,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "549"
										},
										{
											"begin": 13832,
											"end": 13879,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13859,
											"end": 13877,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "549"
										},
										{
											"begin": 13859,
											"end": 13877,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 13859,
											"end": 13877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13859,
											"end": 13877,
											"name": "tag",
											"source": 8,
											"value": "549"
										},
										{
											"begin": 13859,
											"end": 13877,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13895,
											"end": 13908,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13895,
											"end": 13908,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 13686,
											"end": 13914,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13686,
											"end": 13914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									],
									".data": {
										"19EE87D38A98C92B75A5C0CF6D80BA3454DA2A59DB748607C0A0F9F22ED20008": "4c414e44424153453a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d62657220657863656564732033322062697473",
										"4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							},
							"sourceList": [
								"contracts/BEP20.sol",
								"contracts/IBEP20.sol",
								"contracts/LandbaseToken.sol",
								"contracts/access/Ownable.sol",
								"contracts/libraries/SafeMath.sol",
								"contracts/structs/EnumerableSet.sol",
								"contracts/utils/Address.sol",
								"contracts/utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DELEGATION_TYPEHASH()": "e7a324dc",
							"DOMAIN_TYPEHASH()": "20606b70",
							"addMinter(address)": "983b2d56",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"checkpoints(address,uint32)": "f1127ed8",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"delMinter(address)": "23338b88",
							"delegate(address)": "5c19a95c",
							"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": "c3cda520",
							"delegates(address)": "587cde1e",
							"getCurrentVotes(address)": "b4b5ea57",
							"getMinter(uint256)": "5b7121f8",
							"getMinterLength()": "0323aac7",
							"getOwner()": "893d20e8",
							"getPriorVotes(address,uint256)": "782d6fe1",
							"increaseAllowance(address,uint256)": "39509351",
							"isMinter(address)": "aa271e1a",
							"mint(address,uint256)": "40c10f19",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"numCheckpoints(address)": "6fcfff45",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DELEGATION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addMinter\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_delMinter\",\"type\":\"address\"}],\"name\":\"delMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getCurrentVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getMinter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMinterLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPriorVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {BEP20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {BEP20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {BEP20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"delegate(address)\":{\"params\":{\"delegatee\":\"The address to delegate votes to\"}},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"delegatee\":\"The address to delegate votes to\",\"expiry\":\"The time at which to expire the signature\",\"nonce\":\"The contract state required to match the signature\",\"r\":\"Half of the ECDSA signature pair\",\"s\":\"Half of the ECDSA signature pair\",\"v\":\"The recovery byte of the signature\"}},\"delegates(address)\":{\"params\":{\"delegator\":\"The address to get delegatee for\"}},\"getCurrentVotes(address)\":{\"params\":{\"account\":\"The address to get votes balance\"},\"returns\":{\"_0\":\"The number of current votes for `account`\"}},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"getPriorVotes(address,uint256)\":{\"details\":\"Block number must be a finalized block or else this function will revert to prevent misinformation.\",\"params\":{\"account\":\"The address of the account to check\",\"blockNumber\":\"The block number to get the vote balance at\"},\"returns\":{\"_0\":\"The number of votes the account had as of the given block\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(uint256)\":{\"details\":\"Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply. Requirements - `msg.sender` must be the token owner\"},\"name()\":{\"details\":\"Returns the token name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"See {BEP20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"DelegateChanged(address,address,address)\":{\"notice\":\"An event thats emitted when an account changes its delegate\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"notice\":\"An event thats emitted when a delegate account's vote balance changes\"}},\"kind\":\"user\",\"methods\":{\"DELEGATION_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the delegation struct used by the contract\"},\"DOMAIN_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the contract's domain\"},\"checkpoints(address,uint32)\":{\"notice\":\"A record of votes checkpoints for each account, by index\"},\"delegate(address)\":{\"notice\":\"Delegate votes from `msg.sender` to `delegatee`\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Delegates votes from signatory to `delegatee`\"},\"delegates(address)\":{\"notice\":\"Delegate votes from `msg.sender` to `delegatee`\"},\"getCurrentVotes(address)\":{\"notice\":\"Gets the current votes balance for `account`\"},\"getPriorVotes(address,uint256)\":{\"notice\":\"Determine the prior number of votes for an account as of a block number\"},\"mint(address,uint256)\":{\"notice\":\"Creates `_amount` token to `_to`. Must only be called by the owner (MasterChef).\"},\"nonces(address)\":{\"notice\":\"A record of states for signing / validating signatures\"},\"numCheckpoints(address)\":{\"notice\":\"The number of checkpoints for each account\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LandbaseToken.sol\":\"LandbaseToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BEP20.sol\":{\"keccak256\":\"0x325eb627eb1acb2bf55f0836f9f460261fa4b408d04878df038260201b5d9c95\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://774f25742454ecfd4342eb5128ddf5d241e76982981629334b740b1eb69b3404\",\"dweb:/ipfs/QmdnBm7kHAN3wauyv5JrByt1yuehBUeiV5e9dw6QNwQ48S\"]},\"contracts/IBEP20.sol\":{\"keccak256\":\"0x08dc42fc8715fc0cee50f6d2fcd29a657d23f6144968197f865e5c0f94028ec8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://79c1cb76e371cbb5adf34470dfea7fc66ca48a43b29ad3f136eee6f900e6cee3\",\"dweb:/ipfs/QmQBf7YZ4LpKpp1yQcxsAzrdHzuAbmn2cf8qb9ky5WNp2D\"]},\"contracts/LandbaseToken.sol\":{\"keccak256\":\"0x7affbd5fd4d54b94f95d48bcc3f57f247bec8a2c5b1a41933638faaad15671e4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://94e4d766050206ad8f7882d0df7243cc2b359d4531516aba177cefd735b856a7\",\"dweb:/ipfs/QmYyn6FLoE1dmZ3MCBRxZ7Ha5iaDce5V8xf8anqnaCou2Z\"]},\"contracts/access/Ownable.sol\":{\"keccak256\":\"0xe3b365539b1e8a4a0dace6efed1c6364d3c3cb8b260b8717a7524ad6c5d20e86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://567953dca5bb4fbd23e93733d29b58232370935eb9c9dad09b4a8513c383ec62\",\"dweb:/ipfs/QmNwVwQwC8HZ5oL9g8QypjNwwYxRUxqp8hgfcdMdHpnFPR\"]},\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0xdf297ae5498c5a335398fac67c7dcb4479f2a0954c881ece4338637b44942a58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58c779928cd68ac59867d57bea855016f4d06e47c2d693a60230aa5bbf0acec1\",\"dweb:/ipfs/QmPWYTn5eNUUGiyCm3EJx4mEQPRh9baePiQ1oztr4bTLhr\"]},\"contracts/structs/EnumerableSet.sol\":{\"keccak256\":\"0xb5d9d145978c5e56644335b68131f2907415a8af195f23ccc8f623dc7db62ce3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92575a1257864d5127ad2bcf72f0b5ca916c1a5fdcf89567842ea2cbb6e6c12e\",\"dweb:/ipfs/QmcXzLvfwrgiwfqNtVE437MdKTv6spcgDhdj3DZhG7bAZV\"]},\"contracts/utils/Address.sol\":{\"keccak256\":\"0x626b62cca5971be750732929d782b30e1277e36dd6b4ec2a90ddbbb61c650066\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07c78b7f7894e0444db2c6c4c73e4eddb78beed6bd65cd6089e2e9434bea83b0\",\"dweb:/ipfs/QmczQU7ihPMBhAmUM9MxnumRWwwvnTiDMDHp3nJSgYXQim\"]},\"contracts/utils/Context.sol\":{\"keccak256\":\"0x851c3d8e30ea37c35947f620812e2e18718ac9312ef8d84b643fc46d94269540\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c02fec97a236e7eda6646bb8aef30a00f134710ffc29f1965c27dc257cc58a3\",\"dweb:/ipfs/QmNoqNHYS9HP9u8J3bG5kVztMNcQ42kYiiiKDN8tY94gvY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1400,
								"contract": "contracts/LandbaseToken.sol:LandbaseToken",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 19,
								"contract": "contracts/LandbaseToken.sol:LandbaseToken",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 25,
								"contract": "contracts/LandbaseToken.sol:LandbaseToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 27,
								"contract": "contracts/LandbaseToken.sol:LandbaseToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 29,
								"contract": "contracts/LandbaseToken.sol:LandbaseToken",
								"label": "_decimals",
								"offset": 0,
								"slot": "4",
								"type": "t_uint8"
							},
							{
								"astId": 31,
								"contract": "contracts/LandbaseToken.sol:LandbaseToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 33,
								"contract": "contracts/LandbaseToken.sol:LandbaseToken",
								"label": "_name",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 641,
								"contract": "contracts/LandbaseToken.sol:LandbaseToken",
								"label": "_minters",
								"offset": 0,
								"slot": "7",
								"type": "t_struct(AddressSet)2120_storage"
							},
							{
								"astId": 677,
								"contract": "contracts/LandbaseToken.sol:LandbaseToken",
								"label": "_delegates",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_address)"
							},
							{
								"astId": 690,
								"contract": "contracts/LandbaseToken.sol:LandbaseToken",
								"label": "checkpoints",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)682_storage))"
							},
							{
								"astId": 695,
								"contract": "contracts/LandbaseToken.sol:LandbaseToken",
								"label": "numCheckpoints",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_uint32)"
							},
							{
								"astId": 712,
								"contract": "contracts/LandbaseToken.sol:LandbaseToken",
								"label": "nonces",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_bytes32)dyn_storage": {
								"base": "t_bytes32",
								"encoding": "dynamic_array",
								"label": "bytes32[]",
								"numberOfBytes": "32"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)682_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint32 => struct LandbaseToken.Checkpoint))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint32,t_struct(Checkpoint)682_storage)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_address,t_uint32)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint32)",
								"numberOfBytes": "32",
								"value": "t_uint32"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint32,t_struct(Checkpoint)682_storage)": {
								"encoding": "mapping",
								"key": "t_uint32",
								"label": "mapping(uint32 => struct LandbaseToken.Checkpoint)",
								"numberOfBytes": "32",
								"value": "t_struct(Checkpoint)682_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(AddressSet)2120_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.AddressSet",
								"members": [
									{
										"astId": 2119,
										"contract": "contracts/LandbaseToken.sol:LandbaseToken",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Set)1819_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Checkpoint)682_storage": {
								"encoding": "inplace",
								"label": "struct LandbaseToken.Checkpoint",
								"members": [
									{
										"astId": 679,
										"contract": "contracts/LandbaseToken.sol:LandbaseToken",
										"label": "fromBlock",
										"offset": 0,
										"slot": "0",
										"type": "t_uint32"
									},
									{
										"astId": 681,
										"contract": "contracts/LandbaseToken.sol:LandbaseToken",
										"label": "votes",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Set)1819_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.Set",
								"members": [
									{
										"astId": 1814,
										"contract": "contracts/LandbaseToken.sol:LandbaseToken",
										"label": "_values",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_bytes32)dyn_storage"
									},
									{
										"astId": 1818,
										"contract": "contracts/LandbaseToken.sol:LandbaseToken",
										"label": "_indexes",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_bytes32,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"events": {
							"DelegateChanged(address,address,address)": {
								"notice": "An event thats emitted when an account changes its delegate"
							},
							"DelegateVotesChanged(address,uint256,uint256)": {
								"notice": "An event thats emitted when a delegate account's vote balance changes"
							}
						},
						"kind": "user",
						"methods": {
							"DELEGATION_TYPEHASH()": {
								"notice": "The EIP-712 typehash for the delegation struct used by the contract"
							},
							"DOMAIN_TYPEHASH()": {
								"notice": "The EIP-712 typehash for the contract's domain"
							},
							"checkpoints(address,uint32)": {
								"notice": "A record of votes checkpoints for each account, by index"
							},
							"delegate(address)": {
								"notice": "Delegate votes from `msg.sender` to `delegatee`"
							},
							"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Delegates votes from signatory to `delegatee`"
							},
							"delegates(address)": {
								"notice": "Delegate votes from `msg.sender` to `delegatee`"
							},
							"getCurrentVotes(address)": {
								"notice": "Gets the current votes balance for `account`"
							},
							"getPriorVotes(address,uint256)": {
								"notice": "Determine the prior number of votes for an account as of a block number"
							},
							"mint(address,uint256)": {
								"notice": "Creates `_amount` token to `_to`. Must only be called by the owner (MasterChef)."
							},
							"nonces(address)": {
								"notice": "A record of states for signing / validating signatures"
							},
							"numCheckpoints(address)": {
								"notice": "The number of checkpoints for each account"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/access/Ownable.sol\":{\"keccak256\":\"0xe3b365539b1e8a4a0dace6efed1c6364d3c3cb8b260b8717a7524ad6c5d20e86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://567953dca5bb4fbd23e93733d29b58232370935eb9c9dad09b4a8513c383ec62\",\"dweb:/ipfs/QmNwVwQwC8HZ5oL9g8QypjNwwYxRUxqp8hgfcdMdHpnFPR\"]},\"contracts/utils/Context.sol\":{\"keccak256\":\"0x851c3d8e30ea37c35947f620812e2e18718ac9312ef8d84b643fc46d94269540\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c02fec97a236e7eda6646bb8aef30a00f134710ffc29f1965c27dc257cc58a3\",\"dweb:/ipfs/QmNoqNHYS9HP9u8J3bG5kVztMNcQ42kYiiiKDN8tY94gvY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1400,
								"contract": "contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libraries/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/SafeMath.sol\":412:6924  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/SafeMath.sol\":412:6924  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f302bd043836a0b564b8c212c914481ce74f89fbabada3ee84f138d4f34ac69d64736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f302bd043836a0b564b8c212c914481ce74f89fbabada3ee84f138d4f34ac69d64736f6c634300080e0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN MUL 0xBD DIV CODESIZE CALLDATASIZE LOG0 0xB5 PUSH5 0xB8C212C914 BASEFEE SHR 0xE7 0x4F DUP10 0xFB 0xAB 0xAD LOG3 0xEE DUP5 CALL CODESIZE 0xD4 RETURN 0x4A 0xC6 SWAP14 PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "412:6512:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;412:6512:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f302bd043836a0b564b8c212c914481ce74f89fbabada3ee84f138d4f34ac69d64736f6c634300080e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN MUL 0xBD DIV CODESIZE CALLDATASIZE LOG0 0xB5 PUSH5 0xB8C212C914 BASEFEE SHR 0xE7 0x4F DUP10 0xFB 0xAB 0xAD LOG3 0xEE DUP5 CALL CODESIZE 0xD4 RETURN 0x4A 0xC6 SWAP14 PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "412:6512:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 412,
									"end": 6924,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 412,
									"end": 6924,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f302bd043836a0b564b8c212c914481ce74f89fbabada3ee84f138d4f34ac69d64736f6c634300080e0033",
									".code": [
										{
											"begin": 412,
											"end": 6924,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 412,
											"end": 6924,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 412,
											"end": 6924,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 412,
											"end": 6924,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 412,
											"end": 6924,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 412,
											"end": 6924,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 412,
											"end": 6924,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 412,
											"end": 6924,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 412,
											"end": 6924,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"contracts/BEP20.sol",
								"contracts/IBEP20.sol",
								"contracts/LandbaseToken.sol",
								"contracts/access/Ownable.sol",
								"contracts/libraries/SafeMath.sol",
								"contracts/structs/EnumerableSet.sol",
								"contracts/utils/Address.sol",
								"contracts/utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0xdf297ae5498c5a335398fac67c7dcb4479f2a0954c881ece4338637b44942a58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58c779928cd68ac59867d57bea855016f4d06e47c2d693a60230aa5bbf0acec1\",\"dweb:/ipfs/QmPWYTn5eNUUGiyCm3EJx4mEQPRh9baePiQ1oztr4bTLhr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/structs/EnumerableSet.sol": {
				"EnumerableSet": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/structs/EnumerableSet.sol\":773:12468  library EnumerableSet {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/structs/EnumerableSet.sol\":773:12468  library EnumerableSet {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208e04dc47abd618d04c460ad5606fce395bbc46860ef3235ed2a1229b27193a3664736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208e04dc47abd618d04c460ad5606fce395bbc46860ef3235ed2a1229b27193a3664736f6c634300080e0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 DIV 0xDC SELFBALANCE 0xAB 0xD6 XOR 0xD0 0x4C CHAINID EXP 0xD5 PUSH1 0x6F 0xCE CODECOPY JUMPDEST 0xBC CHAINID DUP7 0xE RETURN 0x23 0x5E 0xD2 LOG1 0x22 SWAP12 0x27 NOT GASPRICE CALLDATASIZE PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "773:11695:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;773:11695:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208e04dc47abd618d04c460ad5606fce395bbc46860ef3235ed2a1229b27193a3664736f6c634300080e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 DIV 0xDC SELFBALANCE 0xAB 0xD6 XOR 0xD0 0x4C CHAINID EXP 0xD5 PUSH1 0x6F 0xCE CODECOPY JUMPDEST 0xBC CHAINID DUP7 0xE RETURN 0x23 0x5E 0xD2 LOG1 0x22 SWAP12 0x27 NOT GASPRICE CALLDATASIZE PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "773:11695:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_add(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_at(struct EnumerableSet.Set storage pointer,uint256)": "infinite",
								"_contains(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_length(struct EnumerableSet.Set storage pointer)": "infinite",
								"_remove(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_values(struct EnumerableSet.Set storage pointer)": "infinite",
								"add(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"add(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"add(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.AddressSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.Bytes32Set storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"contains(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"contains(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"contains(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"length(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"length(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"length(struct EnumerableSet.UintSet storage pointer)": "infinite",
								"remove(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"remove(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"remove(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"values(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"values(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"values(struct EnumerableSet.UintSet storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 773,
									"end": 12468,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208e04dc47abd618d04c460ad5606fce395bbc46860ef3235ed2a1229b27193a3664736f6c634300080e0033",
									".code": [
										{
											"begin": 773,
											"end": 12468,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 773,
											"end": 12468,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 773,
											"end": 12468,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 773,
											"end": 12468,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 773,
											"end": 12468,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 773,
											"end": 12468,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 773,
											"end": 12468,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 773,
											"end": 12468,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 773,
											"end": 12468,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"contracts/BEP20.sol",
								"contracts/IBEP20.sol",
								"contracts/LandbaseToken.sol",
								"contracts/access/Ownable.sol",
								"contracts/libraries/SafeMath.sol",
								"contracts/structs/EnumerableSet.sol",
								"contracts/utils/Address.sol",
								"contracts/utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/structs/EnumerableSet.sol\":{\"keccak256\":\"0xb5d9d145978c5e56644335b68131f2907415a8af195f23ccc8f623dc7db62ce3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92575a1257864d5127ad2bcf72f0b5ca916c1a5fdcf89567842ea2cbb6e6c12e\",\"dweb:/ipfs/QmcXzLvfwrgiwfqNtVE437MdKTv6spcgDhdj3DZhG7bAZV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/utils/Address.sol\":133:8070  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/utils/Address.sol\":133:8070  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220168f9680f952476a8d9d6f766f5011ea4b7278d7f392efcc0dcd0470b8e8e1a664736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220168f9680f952476a8d9d6f766f5011ea4b7278d7f392efcc0dcd0470b8e8e1a664736f6c634300080e0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND DUP16 SWAP7 DUP1 0xF9 MSTORE SELFBALANCE PUSH11 0x8D9D6F766F5011EA4B7278 0xD7 RETURN SWAP3 0xEF 0xCC 0xD 0xCD DIV PUSH17 0xB8E8E1A664736F6C634300080E00330000 ",
							"sourceMap": "133:7937:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;133:7937:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220168f9680f952476a8d9d6f766f5011ea4b7278d7f392efcc0dcd0470b8e8e1a664736f6c634300080e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND DUP16 SWAP7 DUP1 0xF9 MSTORE SELFBALANCE PUSH11 0x8D9D6F766F5011EA4B7278 0xD7 RETURN SWAP3 0xEF 0xCC 0xD 0xCD DIV PUSH17 0xB8E8E1A664736F6C634300080E00330000 ",
							"sourceMap": "133:7937:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 133,
									"end": 8070,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 133,
									"end": 8070,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220168f9680f952476a8d9d6f766f5011ea4b7278d7f392efcc0dcd0470b8e8e1a664736f6c634300080e0033",
									".code": [
										{
											"begin": 133,
											"end": 8070,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 133,
											"end": 8070,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 133,
											"end": 8070,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 133,
											"end": 8070,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 133,
											"end": 8070,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 133,
											"end": 8070,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 133,
											"end": 8070,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 133,
											"end": 8070,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 133,
											"end": 8070,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"contracts/BEP20.sol",
								"contracts/IBEP20.sol",
								"contracts/LandbaseToken.sol",
								"contracts/access/Ownable.sol",
								"contracts/libraries/SafeMath.sol",
								"contracts/structs/EnumerableSet.sol",
								"contracts/utils/Address.sol",
								"contracts/utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/utils/Address.sol\":{\"keccak256\":\"0x626b62cca5971be750732929d782b30e1277e36dd6b4ec2a90ddbbb61c650066\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07c78b7f7894e0444db2c6c4c73e4eddb78beed6bd65cd6089e2e9434bea83b0\",\"dweb:/ipfs/QmczQU7ihPMBhAmUM9MxnumRWwwvnTiDMDHp3nJSgYXQim\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/utils/Context.sol\":{\"keccak256\":\"0x851c3d8e30ea37c35947f620812e2e18718ac9312ef8d84b643fc46d94269540\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c02fec97a236e7eda6646bb8aef30a00f134710ffc29f1965c27dc257cc58a3\",\"dweb:/ipfs/QmNoqNHYS9HP9u8J3bG5kVztMNcQ42kYiiiKDN8tY94gvY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/BEP20.sol": {
				"ast": {
					"absolutePath": "contracts/BEP20.sol",
					"exportedSymbols": {
						"Address": [
							2704
						],
						"BEP20": [
							522
						],
						"Context": [
							2726
						],
						"IBEP20": [
							623
						],
						"Ownable": [
							1496
						],
						"SafeMath": [
							1808
						]
					},
					"id": 523,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:0"
						},
						{
							"absolutePath": "contracts/access/Ownable.sol",
							"file": "./access/Ownable.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 523,
							"sourceUnit": 1497,
							"src": "65:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/utils/Address.sol",
							"file": "./utils/Address.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 523,
							"sourceUnit": 2705,
							"src": "97:29:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/SafeMath.sol",
							"file": "./libraries/SafeMath.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 523,
							"sourceUnit": 1809,
							"src": "128:34:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/IBEP20.sol",
							"file": "./IBEP20.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 523,
							"sourceUnit": 624,
							"src": "166:22:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 6,
										"name": "IBEP20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 623,
										"src": "210:6:0"
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "210:6:0"
								},
								{
									"baseName": {
										"id": 8,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1496,
										"src": "218:7:0"
									},
									"id": 9,
									"nodeType": "InheritanceSpecifier",
									"src": "218:7:0"
								}
							],
							"canonicalName": "BEP20",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 522,
							"linearizedBaseContracts": [
								522,
								1496,
								2726,
								623
							],
							"name": "BEP20",
							"nameLocation": "201:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 12,
									"libraryName": {
										"id": 10,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1808,
										"src": "239:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "233:27:0",
									"typeName": {
										"id": 11,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "252:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 15,
									"libraryName": {
										"id": 13,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2704,
										"src": "272:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "266:26:0",
									"typeName": {
										"id": 14,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "284:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 19,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "336:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 522,
									"src": "300:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 18,
										"keyType": {
											"id": 16,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "308:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "300:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 17,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "319:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 25,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "410:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 522,
									"src": "354:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 24,
										"keyType": {
											"id": 20,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "362:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "354:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 23,
											"keyType": {
												"id": 21,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "381:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "373:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 22,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "392:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "446:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 522,
									"src": "430:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 26,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "430:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 29,
									"mutability": "mutable",
									"name": "_decimals",
									"nameLocation": "479:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 522,
									"src": "465:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 28,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "465:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 31,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "510:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 522,
									"src": "495:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 30,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "495:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 33,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "539:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 522,
									"src": "524:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 32,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "524:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "942:93:0",
										"statements": [
											{
												"expression": {
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 41,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "953:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 42,
														"name": "tokenName",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "961:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "953:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 44,
												"nodeType": "ExpressionStatement",
												"src": "953:17:0"
											},
											{
												"expression": {
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 45,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "981:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 46,
														"name": "tokenSymbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "991:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "981:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "981:21:0"
											},
											{
												"expression": {
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 49,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "1013:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3138",
														"id": 50,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1025:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "1013:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1013:14:0"
											}
										]
									},
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "553:319:0",
										"text": " @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n a default value of 18.\n To select a different value for {decimals}, use {_setupDecimals}.\n All three of these values are immutable: they can only be set once during\n construction."
									},
									"id": 54,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "tokenName",
												"nameLocation": "904:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "890:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 35,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "890:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "tokenSymbol",
												"nameLocation": "929:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "915:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 37,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "915:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "889:52:0"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "942:0:0"
									},
									"scope": 522,
									"src": "878:157:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										554
									],
									"body": {
										"id": 64,
										"nodeType": "Block",
										"src": "1164:33:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 61,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1425,
														"src": "1182:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1182:7:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 60,
												"id": 63,
												"nodeType": "Return",
												"src": "1175:14:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1043:54:0",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 65,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "1112:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 57,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1137:8:0"
									},
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1120:2:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "1155:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1155:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1154:9:0"
									},
									"scope": 522,
									"src": "1103:94:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										548
									],
									"body": {
										"id": 74,
										"nodeType": "Block",
										"src": "1321:31:0",
										"statements": [
											{
												"expression": {
													"id": 72,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 33,
													"src": "1339:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 71,
												"id": 73,
												"nodeType": "Return",
												"src": "1332:12:0"
											}
										]
									},
									"documentation": {
										"id": 66,
										"nodeType": "StructuredDocumentation",
										"src": "1205:49:0",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 75,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1269:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 68,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1288:8:0"
									},
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1273:2:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "1306:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 69,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1306:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1305:15:0"
									},
									"scope": 522,
									"src": "1260:92:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										536
									],
									"body": {
										"id": 84,
										"nodeType": "Block",
										"src": "1476:35:0",
										"statements": [
											{
												"expression": {
													"id": 82,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 29,
													"src": "1494:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 81,
												"id": 83,
												"nodeType": "Return",
												"src": "1487:16:0"
											}
										]
									},
									"documentation": {
										"id": 76,
										"nodeType": "StructuredDocumentation",
										"src": "1360:53:0",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 85,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "1428:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 78,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1451:8:0"
									},
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1436:2:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "1469:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 79,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1469:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1468:7:0"
									},
									"scope": 522,
									"src": "1419:92:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										542
									],
									"body": {
										"id": 94,
										"nodeType": "Block",
										"src": "1639:33:0",
										"statements": [
											{
												"expression": {
													"id": 92,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 31,
													"src": "1657:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 91,
												"id": 93,
												"nodeType": "Return",
												"src": "1650:14:0"
											}
										]
									},
									"documentation": {
										"id": 86,
										"nodeType": "StructuredDocumentation",
										"src": "1519:51:0",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 95,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1585:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 88,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1606:8:0"
									},
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1591:2:0"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "1624:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 89,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1624:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1623:15:0"
									},
									"scope": 522,
									"src": "1576:96:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										530
									],
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "1798:38:0",
										"statements": [
											{
												"expression": {
													"id": 102,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "1816:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 101,
												"id": 103,
												"nodeType": "Return",
												"src": "1809:19:0"
											}
										]
									},
									"documentation": {
										"id": 96,
										"nodeType": "StructuredDocumentation",
										"src": "1680:50:0",
										"text": " @dev See {BEP20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1745:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 98,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1771:8:0"
									},
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1756:2:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "1789:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1789:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1788:9:0"
									},
									"scope": 522,
									"src": "1736:100:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										562
									],
									"body": {
										"id": 118,
										"nodeType": "Block",
										"src": "1973:44:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 114,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "1991:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 116,
													"indexExpression": {
														"id": 115,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 108,
														"src": "2001:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1991:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 113,
												"id": 117,
												"nodeType": "Return",
												"src": "1984:25:0"
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "1844:48:0",
										"text": " @dev See {BEP20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 119,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1907:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 110,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1946:8:0"
									},
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1925:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1917:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1917:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1916:17:0"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1964:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1964:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1963:9:0"
									},
									"scope": 522,
									"src": "1898:119:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										572
									],
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "2345:83:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 131,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2716,
																"src": "2366:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2366:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 133,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 122,
															"src": "2380:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 134,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 124,
															"src": "2391:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 130,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "2356:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2356:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 136,
												"nodeType": "ExpressionStatement",
												"src": "2356:42:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2416:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 129,
												"id": 138,
												"nodeType": "Return",
												"src": "2409:11:0"
											}
										]
									},
									"documentation": {
										"id": 120,
										"nodeType": "StructuredDocumentation",
										"src": "2025:198:0",
										"text": " @dev See {BEP20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "2238:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 126,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2307:8:0"
									},
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2255:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "2247:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2274:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "2266:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2266:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2246:35:0"
									},
									"returnParameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "2334:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 127,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2334:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2333:6:0"
									},
									"scope": 522,
									"src": "2229:199:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										582
									],
									"body": {
										"id": 157,
										"nodeType": "Block",
										"src": "2621:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 151,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "2639:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 153,
														"indexExpression": {
															"id": 152,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "2651:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2639:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 155,
													"indexExpression": {
														"id": 154,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "2658:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2639:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 150,
												"id": 156,
												"nodeType": "Return",
												"src": "2632:34:0"
											}
										]
									},
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "2436:48:0",
										"text": " @dev See {BEP20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "2499:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 147,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2580:8:0"
									},
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2517:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "2509:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2532:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "2524:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2524:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2508:32:0"
									},
									"returnParameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "2607:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2607:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2606:9:0"
									},
									"scope": 522,
									"src": "2490:184:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										592
									],
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "2933:80:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 170,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2716,
																"src": "2953:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2953:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 172,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "2967:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 173,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "2976:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 169,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "2944:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2944:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 175,
												"nodeType": "ExpressionStatement",
												"src": "2944:39:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3001:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 168,
												"id": 177,
												"nodeType": "Return",
												"src": "2994:11:0"
											}
										]
									},
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "2682:132:0",
										"text": " @dev See {BEP20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2829:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 165,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2895:8:0"
									},
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2845:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "2837:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2837:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2862:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "2854:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2854:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2836:33:0"
									},
									"returnParameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "2922:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 166,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2922:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2921:6:0"
									},
									"scope": 522,
									"src": "2820:193:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										604
									],
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "3622:308:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 193,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "3643:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 194,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "3651:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 195,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "3662:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 192,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "3633:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3633:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 197,
												"nodeType": "ExpressionStatement",
												"src": "3633:36:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 199,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "3703:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 200,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2716,
																"src": "3724:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3724:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 209,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 186,
																	"src": "3807:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3832:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	},
																	"value": "BEP20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 202,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 25,
																			"src": "3751:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 204,
																		"indexExpression": {
																			"id": 203,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 182,
																			"src": "3763:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3751:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 207,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 205,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2716,
																			"src": "3771:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3771:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3751:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1757,
																"src": "3751:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3751:138:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 198,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "3680:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3680:220:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 213,
												"nodeType": "ExpressionStatement",
												"src": "3680:220:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3918:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 191,
												"id": 215,
												"nodeType": "Return",
												"src": "3911:11:0"
											}
										]
									},
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "3021:457:0",
										"text": " @dev See {BEP20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {BEP20};\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for `sender`'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3493:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 188,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3598:8:0"
									},
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3524:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "3516:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3516:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3549:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "3541:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3541:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3577:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "3569:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3569:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3505:85:0"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "3616:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3616:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3615:6:0"
									},
									"scope": 522,
									"src": "3484:446:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 244,
										"nodeType": "Block",
										"src": "4447:174:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 228,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2716,
																"src": "4481:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 229,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4481:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 230,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 220,
															"src": "4508:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 238,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 222,
																	"src": "4569:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 231,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 25,
																			"src": "4530:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 234,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 232,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2716,
																				"src": "4542:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 233,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4542:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4530:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 236,
																	"indexExpression": {
																		"id": 235,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "4556:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4530:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1672,
																"src": "4530:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4530:50:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 227,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "4458:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4458:133:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 241,
												"nodeType": "ExpressionStatement",
												"src": "4458:133:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4609:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 226,
												"id": 243,
												"nodeType": "Return",
												"src": "4602:11:0"
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "3938:394:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {BEP20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "4347:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4373:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "4365:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4365:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "4390:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "4382:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4382:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4364:37:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "4436:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4436:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4435:6:0"
									},
									"scope": 522,
									"src": "4338:283:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 273,
										"nodeType": "Block",
										"src": "5237:269:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 256,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2716,
																"src": "5271:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5271:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 258,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "5298:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 266,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 250,
																	"src": "5377:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 267,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5411:39:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	},
																	"value": "BEP20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 259,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 25,
																			"src": "5320:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 262,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 260,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2716,
																				"src": "5332:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 261,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5332:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5320:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 264,
																	"indexExpression": {
																		"id": 263,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 248,
																		"src": "5346:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5320:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 265,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1757,
																"src": "5320:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5320:145:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 255,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "5248:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5248:228:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 270,
												"nodeType": "ExpressionStatement",
												"src": "5248:228:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5494:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 254,
												"id": 272,
												"nodeType": "Return",
												"src": "5487:11:0"
											}
										]
									},
									"documentation": {
										"id": 246,
										"nodeType": "StructuredDocumentation",
										"src": "4629:488:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {BEP20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "5132:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5158:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "5150:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5150:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "5175:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "5167:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5167:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5149:42:0"
									},
									"returnParameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "5226:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 252,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5226:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5225:6:0"
									},
									"scope": 522,
									"src": "5123:383:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 292,
										"nodeType": "Block",
										"src": "5786:68:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 285,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2716,
																"src": "5803:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5803:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 287,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 277,
															"src": "5817:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 284,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "5797:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5797:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 289,
												"nodeType": "ExpressionStatement",
												"src": "5797:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5842:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 283,
												"id": 291,
												"nodeType": "Return",
												"src": "5835:11:0"
											}
										]
									},
									"documentation": {
										"id": 275,
										"nodeType": "StructuredDocumentation",
										"src": "5514:204:0",
										"text": " @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\n the total supply.\n Requirements\n - `msg.sender` must be the token owner"
									},
									"functionSelector": "a0712d68",
									"id": 293,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 280,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 279,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1439,
												"src": "5761:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5761:9:0"
										}
									],
									"name": "mint",
									"nameLocation": "5733:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5746:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "5738:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5738:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5737:16:0"
									},
									"returnParameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "5780:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 281,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5780:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5779:6:0"
									},
									"scope": 522,
									"src": "5724:130:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "6457:429:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 304,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 296,
																"src": "6476:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 307,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6494:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 306,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6486:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 305,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6486:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 308,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6486:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6476:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 310,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6498:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															},
															"value": "BEP20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															}
														],
														"id": 303,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6468:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6468:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 312,
												"nodeType": "ExpressionStatement",
												"src": "6468:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 314,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 298,
																"src": "6557:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6578:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 316,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6570:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 315,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6570:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 318,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6570:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6557:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6582:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															},
															"value": "BEP20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															}
														],
														"id": 313,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6549:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6549:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 322,
												"nodeType": "ExpressionStatement",
												"src": "6549:71:0"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 323,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 19,
															"src": "6633:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 325,
														"indexExpression": {
															"id": 324,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "6643:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6633:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 330,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 300,
																"src": "6689:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 331,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6710:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																},
																"value": "BEP20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 326,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 19,
																	"src": "6653:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 328,
																"indexExpression": {
																	"id": 327,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 296,
																	"src": "6663:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6653:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1757,
															"src": "6653:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 332,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:108:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6633:128:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "6633:128:0"
											},
											{
												"expression": {
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 335,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 19,
															"src": "6772:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 337,
														"indexExpression": {
															"id": 336,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "6782:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6772:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 342,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 300,
																"src": "6820:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 338,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 19,
																	"src": "6795:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 340,
																"indexExpression": {
																	"id": 339,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 298,
																	"src": "6805:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6795:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1672,
															"src": "6795:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 343,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6795:32:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6772:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 345,
												"nodeType": "ExpressionStatement",
												"src": "6772:55:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 347,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "6852:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 348,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "6860:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 349,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "6871:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 346,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "6843:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6843:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 351,
												"nodeType": "EmitStatement",
												"src": "6838:40:0"
											}
										]
									},
									"documentation": {
										"id": 294,
										"nodeType": "StructuredDocumentation",
										"src": "5862:476:0",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "6353:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "6381:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "6373:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6373:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "6406:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "6398:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6398:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6434:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "6426:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6426:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6362:85:0"
									},
									"returnParameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6457:0:0"
									},
									"scope": 522,
									"src": "6344:542:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "7224:251:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 362,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 356,
																"src": "7243:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 365,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7262:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7254:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 363,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7254:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7254:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7243:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7266:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															},
															"value": "BEP20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															}
														],
														"id": 361,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7235:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7235:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 370,
												"nodeType": "ExpressionStatement",
												"src": "7235:65:0"
											},
											{
												"expression": {
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 371,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "7313:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 374,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 358,
																"src": "7345:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 372,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "7328:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1672,
															"src": "7328:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 375,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7328:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7313:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "7313:39:0"
											},
											{
												"expression": {
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 378,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 19,
															"src": "7363:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 380,
														"indexExpression": {
															"id": 379,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "7373:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7363:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 385,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 358,
																"src": "7407:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 381,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 19,
																	"src": "7384:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 383,
																"indexExpression": {
																	"id": 382,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 356,
																	"src": "7394:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7384:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1672,
															"src": "7384:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 386,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7384:30:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7363:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 388,
												"nodeType": "ExpressionStatement",
												"src": "7363:51:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7447:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 391,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7439:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 390,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7439:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7439:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 394,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "7451:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 395,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 358,
															"src": "7460:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 389,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "7430:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7430:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 397,
												"nodeType": "EmitStatement",
												"src": "7425:42:0"
											}
										]
									},
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "6894:267:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements\n - `to` cannot be the zero address."
									},
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7176:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7190:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "7182:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7182:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7207:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "7199:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7181:33:0"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7224:0:0"
									},
									"scope": 522,
									"src": "7167:308:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 445,
										"nodeType": "Block",
										"src": "7864:328:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 408,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 402,
																"src": "7883:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 411,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7902:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7894:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 409,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7894:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 412,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7894:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7883:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7906:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															},
															"value": "BEP20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															}
														],
														"id": 407,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7875:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7875:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "7875:67:0"
											},
											{
												"expression": {
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 417,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 19,
															"src": "7955:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 419,
														"indexExpression": {
															"id": 418,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "7965:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7955:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 424,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 404,
																"src": "8013:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 425,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8034:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																},
																"value": "BEP20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 420,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 19,
																	"src": "7976:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 422,
																"indexExpression": {
																	"id": 421,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 402,
																	"src": "7986:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7976:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1757,
															"src": "7976:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7976:105:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7955:126:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 428,
												"nodeType": "ExpressionStatement",
												"src": "7955:126:0"
											},
											{
												"expression": {
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 429,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "8092:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 432,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 404,
																"src": "8124:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 430,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "8107:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1687,
															"src": "8107:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 433,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8107:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8092:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 435,
												"nodeType": "ExpressionStatement",
												"src": "8092:39:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 437,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "8156:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 440,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 439,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 438,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 442,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "8177:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 436,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "8147:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8147:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 444,
												"nodeType": "EmitStatement",
												"src": "8142:42:0"
											}
										]
									},
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "7483:318:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7816:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7830:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "7822:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7822:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7847:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "7839:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7839:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7821:33:0"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7864:0:0"
									},
									"scope": 522,
									"src": "7807:385:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "8741:263:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 457,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 449,
																"src": "8760:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 460,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8777:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8769:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 458,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8769:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 461,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8769:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8760:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8781:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															},
															"value": "BEP20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															}
														],
														"id": 456,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8752:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8752:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 465,
												"nodeType": "ExpressionStatement",
												"src": "8752:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 467,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 451,
																"src": "8839:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 470,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8858:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8850:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 468,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8850:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 471,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8850:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8839:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8862:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															},
															"value": "BEP20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															}
														],
														"id": 466,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8831:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8831:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 475,
												"nodeType": "ExpressionStatement",
												"src": "8831:68:0"
											},
											{
												"expression": {
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 476,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 25,
																"src": "8912:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 479,
															"indexExpression": {
																"id": 477,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 449,
																"src": "8924:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8912:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 480,
														"indexExpression": {
															"id": 478,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "8931:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8912:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 481,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "8942:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8912:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 483,
												"nodeType": "ExpressionStatement",
												"src": "8912:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 485,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "8973:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "8980:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "8989:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 484,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 622,
														"src": "8964:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8964:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "EmitStatement",
												"src": "8959:37:0"
											}
										]
									},
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "8200:426:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n This is internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8641:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8668:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "8660:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8660:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8692:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "8684:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8718:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "8710:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8710:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8649:82:0"
									},
									"returnParameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8741:0:0"
									},
									"scope": 522,
									"src": "8632:372:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 520,
										"nodeType": "Block",
										"src": "9251:270:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 500,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "9268:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 501,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "9277:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 499,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 446,
														"src": "9262:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9262:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "9262:22:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 505,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "9318:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 506,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2716,
																"src": "9340:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9340:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 515,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 496,
																	"src": "9424:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "42455032303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9449:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	},
																	"value": "BEP20: burn amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 508,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 25,
																			"src": "9367:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 510,
																		"indexExpression": {
																			"id": 509,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 494,
																			"src": "9379:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9367:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 513,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 511,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2716,
																			"src": "9388:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9388:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9367:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1757,
																"src": "9367:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9367:135:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 504,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "9295:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9295:218:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 519,
												"nodeType": "ExpressionStatement",
												"src": "9295:218:0"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "9012:172:0",
										"text": " @dev Destroys `amount` tokens from `account`.`amount` is then deducted\n from the caller's allowance.\n See {_burn} and {_approve}."
									},
									"id": 521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnFrom",
									"nameLocation": "9199:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9217:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "9209:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9209:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9234:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "9226:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9226:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9208:33:0"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9251:0:0"
									},
									"scope": 522,
									"src": "9190:331:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 523,
							"src": "192:9332:0",
							"usedErrors": []
						}
					],
					"src": "37:9487:0"
				},
				"id": 0
			},
			"contracts/IBEP20.sol": {
				"ast": {
					"absolutePath": "contracts/IBEP20.sol",
					"exportedSymbols": {
						"IBEP20": [
							623
						]
					},
					"id": 624,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 524,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBEP20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 623,
							"linearizedBaseContracts": [
								623
							],
							"name": "IBEP20",
							"nameLocation": "75:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "89:68:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 530,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "172:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "183:2:1"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "209:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "209:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "208:9:1"
									},
									"scope": 623,
									"src": "163:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 531,
										"nodeType": "StructuredDocumentation",
										"src": "226:53:1",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 536,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "294:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "302:2:1"
									},
									"returnParameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "328:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 533,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "328:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "327:7:1"
									},
									"scope": 623,
									"src": "285:50:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 537,
										"nodeType": "StructuredDocumentation",
										"src": "343:51:1",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 542,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "409:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "415:2:1"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "441:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 539,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "441:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "440:15:1"
									},
									"scope": 623,
									"src": "400:56:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "464:49:1",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 548,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "528:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "532:2:1"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "558:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 545,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "558:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "557:15:1"
									},
									"scope": 623,
									"src": "519:54:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 549,
										"nodeType": "StructuredDocumentation",
										"src": "581:54:1",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 554,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "650:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "658:2:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "684:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "683:9:1"
									},
									"scope": 623,
									"src": "641:52:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "701:74:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 562,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "790:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "808:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "800:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "800:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "799:17:1"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "840:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "840:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "839:9:1"
									},
									"scope": 623,
									"src": "781:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "857:215:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 572,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1087:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1104:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "1096:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1096:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1123:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "1115:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1115:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1095:35:1"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "1167:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 569,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1167:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1166:6:1"
									},
									"scope": 623,
									"src": "1078:95:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 573,
										"nodeType": "StructuredDocumentation",
										"src": "1181:270:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 582,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1466:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1484:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "1476:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1476:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1500:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "1492:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1492:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1475:33:1"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "1559:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1559:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1558:9:1"
									},
									"scope": 623,
									"src": "1457:111:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 583,
										"nodeType": "StructuredDocumentation",
										"src": "1576:655:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 592,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2246:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2262:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "2254:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2254:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2279:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "2271:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 586,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2271:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2253:33:1"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "2305:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 589,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2305:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2304:6:1"
									},
									"scope": 623,
									"src": "2237:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 593,
										"nodeType": "StructuredDocumentation",
										"src": "2319:304:1",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 604,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2638:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2669:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "2661:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2661:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2694:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "2686:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2686:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2722:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "2714:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2714:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2650:85:1"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "2754:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 601,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2754:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2753:6:1"
									},
									"scope": 623,
									"src": "2629:131:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 605,
										"nodeType": "StructuredDocumentation",
										"src": "2768:163:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 613,
									"name": "Transfer",
									"nameLocation": "2943:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2968:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "2952:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2952:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2990:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "2974:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2974:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3002:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "2994:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2994:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2951:57:1"
									},
									"src": "2937:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 614,
										"nodeType": "StructuredDocumentation",
										"src": "3017:151:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 622,
									"name": "Approval",
									"nameLocation": "3180:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3215:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "3199:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3199:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3247:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "3231:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 617,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3231:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3273:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "3265:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3265:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3188:97:1"
									},
									"src": "3174:112:1"
								}
							],
							"scope": 624,
							"src": "65:3224:1",
							"usedErrors": []
						}
					],
					"src": "37:3252:1"
				},
				"id": 1
			},
			"contracts/LandbaseToken.sol": {
				"ast": {
					"absolutePath": "contracts/LandbaseToken.sol",
					"exportedSymbols": {
						"Address": [
							2704
						],
						"BEP20": [
							522
						],
						"Context": [
							2726
						],
						"EnumerableSet": [
							2407
						],
						"IBEP20": [
							623
						],
						"LandbaseToken": [
							1392
						],
						"Ownable": [
							1496
						],
						"SafeMath": [
							1808
						]
					},
					"id": 1393,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 625,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:2"
						},
						{
							"absolutePath": "contracts/structs/EnumerableSet.sol",
							"file": "./structs/EnumerableSet.sol",
							"id": 626,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1393,
							"sourceUnit": 2408,
							"src": "65:37:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/BEP20.sol",
							"file": "./BEP20.sol",
							"id": 627,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1393,
							"sourceUnit": 523,
							"src": "106:21:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": [
										{
											"hexValue": "4c616e646261736520436f696e",
											"id": 629,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "string",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "198:15:2",
											"typeDescriptions": {
												"typeIdentifier": "t_stringliteral_61dd336ec726c9cd0e07ea18233b5cedfb1b986a63ac5bd418c6506e48bc4d09",
												"typeString": "literal_string \"Landbase Coin\""
											},
											"value": "Landbase Coin"
										},
										{
											"hexValue": "4c4243",
											"id": 630,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "string",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "215:5:2",
											"typeDescriptions": {
												"typeIdentifier": "t_stringliteral_3a1ce1b3cdc9bc50cd69b6b258e4e0c3a0f452b413a2b18866668649a8ff37d1",
												"typeString": "literal_string \"LBC\""
											},
											"value": "LBC"
										}
									],
									"baseName": {
										"id": 628,
										"name": "BEP20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 522,
										"src": "192:5:2"
									},
									"id": 631,
									"nodeType": "InheritanceSpecifier",
									"src": "192:29:2"
								}
							],
							"canonicalName": "LandbaseToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1392,
							"linearizedBaseContracts": [
								1392,
								522,
								1496,
								2726,
								623
							],
							"name": "LandbaseToken",
							"nameLocation": "175:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 634,
									"libraryName": {
										"id": 632,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1808,
										"src": "235:8:2"
									},
									"nodeType": "UsingForDirective",
									"src": "229:27:2",
									"typeName": {
										"id": 633,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "248:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 638,
									"libraryName": {
										"id": 635,
										"name": "EnumerableSet",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2407,
										"src": "268:13:2"
									},
									"nodeType": "UsingForDirective",
									"src": "262:49:2",
									"typeName": {
										"id": 637,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 636,
											"name": "EnumerableSet.AddressSet",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2120,
											"src": "286:24:2"
										},
										"referencedDeclaration": 2120,
										"src": "286:24:2",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressSet_$2120_storage_ptr",
											"typeString": "struct EnumerableSet.AddressSet"
										}
									}
								},
								{
									"constant": false,
									"id": 641,
									"mutability": "mutable",
									"name": "_minters",
									"nameLocation": "352:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 1392,
									"src": "319:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_AddressSet_$2120_storage",
										"typeString": "struct EnumerableSet.AddressSet"
									},
									"typeName": {
										"id": 640,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 639,
											"name": "EnumerableSet.AddressSet",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2120,
											"src": "319:24:2"
										},
										"referencedDeclaration": 2120,
										"src": "319:24:2",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressSet_$2120_storage_ptr",
											"typeString": "struct EnumerableSet.AddressSet"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "576:123:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 654,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "593:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 655,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 646,
															"src": "598:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 653,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "587:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "587:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 657,
												"nodeType": "ExpressionStatement",
												"src": "587:19:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "640:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 660,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "632:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 659,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "632:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 662,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "632:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"id": 663,
																"name": "_delegates",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 677,
																"src": "644:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																	"typeString": "mapping(address => address)"
																}
															},
															"id": 665,
															"indexExpression": {
																"id": 664,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 644,
																"src": "655:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "644:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 666,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 646,
															"src": "661:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 658,
														"name": "_moveDelegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1167,
														"src": "617:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "617:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 668,
												"nodeType": "ExpressionStatement",
												"src": "617:52:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "687:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 652,
												"id": 670,
												"nodeType": "Return",
												"src": "680:11:2"
											}
										]
									},
									"documentation": {
										"id": 642,
										"nodeType": "StructuredDocumentation",
										"src": "369:92:2",
										"text": "@notice Creates `_amount` token to `_to`. Must only be called by the owner (MasterChef)."
									},
									"functionSelector": "40c10f19",
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 649,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 648,
												"name": "onlyMinter",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1391,
												"src": "536:10:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "536:10:2"
										}
									],
									"name": "mint",
									"nameLocation": "476:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "489:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "481:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "481:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "502:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "494:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "494:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "480:30:2"
									},
									"returnParameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "565:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 650,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "565:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "564:6:2"
									},
									"scope": 1392,
									"src": "467:232:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "707:46:2",
										"text": "@notice A record of each accounts delegate"
									},
									"id": 677,
									"mutability": "mutable",
									"name": "_delegates",
									"nameLocation": "796:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 1392,
									"src": "759:47:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 676,
										"keyType": {
											"id": 674,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "767:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "759:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueType": {
											"id": 675,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "778:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "LandbaseToken.Checkpoint",
									"id": 682,
									"members": [
										{
											"constant": false,
											"id": 679,
											"mutability": "mutable",
											"name": "fromBlock",
											"nameLocation": "928:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 682,
											"src": "921:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 678,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "921:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 681,
											"mutability": "mutable",
											"name": "votes",
											"nameLocation": "956:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 682,
											"src": "948:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 680,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "948:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Checkpoint",
									"nameLocation": "899:10:2",
									"nodeType": "StructDefinition",
									"scope": 1392,
									"src": "892:77:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 683,
										"nodeType": "StructuredDocumentation",
										"src": "977:68:2",
										"text": "@notice A record of votes checkpoints for each account, by index"
									},
									"functionSelector": "f1127ed8",
									"id": 690,
									"mutability": "mutable",
									"name": "checkpoints",
									"nameLocation": "1108:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 1392,
									"src": "1051:68:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$682_storage_$_$",
										"typeString": "mapping(address => mapping(uint32 => struct LandbaseToken.Checkpoint))"
									},
									"typeName": {
										"id": 689,
										"keyType": {
											"id": 684,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1059:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1051:49:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$682_storage_$_$",
											"typeString": "mapping(address => mapping(uint32 => struct LandbaseToken.Checkpoint))"
										},
										"valueType": {
											"id": 688,
											"keyType": {
												"id": 685,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "1078:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"nodeType": "Mapping",
											"src": "1070:29:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$682_storage_$",
												"typeString": "mapping(uint32 => struct LandbaseToken.Checkpoint)"
											},
											"valueType": {
												"id": 687,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 686,
													"name": "Checkpoint",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 682,
													"src": "1088:10:2"
												},
												"referencedDeclaration": 682,
												"src": "1088:10:2",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Checkpoint_$682_storage_ptr",
													"typeString": "struct LandbaseToken.Checkpoint"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "1128:54:2",
										"text": "@notice The number of checkpoints for each account"
									},
									"functionSelector": "6fcfff45",
									"id": 695,
									"mutability": "mutable",
									"name": "numCheckpoints",
									"nameLocation": "1222:14:2",
									"nodeType": "VariableDeclaration",
									"scope": 1392,
									"src": "1188:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
										"typeString": "mapping(address => uint32)"
									},
									"typeName": {
										"id": 694,
										"keyType": {
											"id": 692,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1196:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1188:26:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
											"typeString": "mapping(address => uint32)"
										},
										"valueType": {
											"id": 693,
											"name": "uint32",
											"nodeType": "ElementaryTypeName",
											"src": "1207:6:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 696,
										"nodeType": "StructuredDocumentation",
										"src": "1245:58:2",
										"text": "@notice The EIP-712 typehash for the contract's domain"
									},
									"functionSelector": "20606b70",
									"id": 701,
									"mutability": "constant",
									"name": "DOMAIN_TYPEHASH",
									"nameLocation": "1333:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 1392,
									"src": "1309:155:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 697,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1309:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
												"id": 699,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1384:69:2",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
													"typeString": "literal_string \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\""
												},
												"value": "EIP712Domain(string name,uint256 chainId,address verifyingContract)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
													"typeString": "literal_string \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\""
												}
											],
											"id": 698,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1360:9:2",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 700,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1360:104:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 702,
										"nodeType": "StructuredDocumentation",
										"src": "1473:79:2",
										"text": "@notice The EIP-712 typehash for the delegation struct used by the contract"
									},
									"functionSelector": "e7a324dc",
									"id": 707,
									"mutability": "constant",
									"name": "DELEGATION_TYPEHASH",
									"nameLocation": "1582:19:2",
									"nodeType": "VariableDeclaration",
									"scope": 1392,
									"src": "1558:126:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 703,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1558:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929",
												"id": 705,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1623:60:2",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf",
													"typeString": "literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""
												},
												"value": "Delegation(address delegatee,uint256 nonce,uint256 expiry)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf",
													"typeString": "literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""
												}
											],
											"id": 704,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1613:9:2",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 706,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1613:71:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 708,
										"nodeType": "StructuredDocumentation",
										"src": "1693:66:2",
										"text": "@notice A record of states for signing / validating signatures"
									},
									"functionSelector": "7ecebe00",
									"id": 712,
									"mutability": "mutable",
									"name": "nonces",
									"nameLocation": "1800:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 1392,
									"src": "1765:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 711,
										"keyType": {
											"id": 709,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1773:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1765:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 710,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1784:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 713,
										"nodeType": "StructuredDocumentation",
										"src": "1815:71:2",
										"text": "@notice An event thats emitted when an account changes its delegate"
									},
									"eventSelector": "3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f",
									"id": 721,
									"name": "DelegateChanged",
									"nameLocation": "1898:15:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"indexed": true,
												"mutability": "mutable",
												"name": "delegator",
												"nameLocation": "1940:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "1924:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 714,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1924:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"indexed": true,
												"mutability": "mutable",
												"name": "fromDelegate",
												"nameLocation": "1976:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "1960:28:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1960:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 719,
												"indexed": true,
												"mutability": "mutable",
												"name": "toDelegate",
												"nameLocation": "2015:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "1999:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1999:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1913:119:2"
									},
									"src": "1892:141:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 722,
										"nodeType": "StructuredDocumentation",
										"src": "2041:81:2",
										"text": "@notice An event thats emitted when a delegate account's vote balance changes"
									},
									"eventSelector": "dec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724",
									"id": 730,
									"name": "DelegateVotesChanged",
									"nameLocation": "2134:20:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"indexed": true,
												"mutability": "mutable",
												"name": "delegate",
												"nameLocation": "2181:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "2165:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2165:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousBalance",
												"nameLocation": "2208:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "2200:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2200:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"indexed": false,
												"mutability": "mutable",
												"name": "newBalance",
												"nameLocation": "2242:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "2234:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2154:105:2"
									},
									"src": "2128:132:2"
								},
								{
									"body": {
										"id": 742,
										"nodeType": "Block",
										"src": "2478:47:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 738,
														"name": "_delegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 677,
														"src": "2496:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
															"typeString": "mapping(address => address)"
														}
													},
													"id": 740,
													"indexExpression": {
														"id": 739,
														"name": "delegator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "2507:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2496:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 737,
												"id": 741,
												"nodeType": "Return",
												"src": "2489:28:2"
											}
										]
									},
									"documentation": {
										"id": 731,
										"nodeType": "StructuredDocumentation",
										"src": "2268:134:2",
										"text": " @notice Delegate votes from `msg.sender` to `delegatee`\n @param delegator The address to get delegatee for"
									},
									"functionSelector": "587cde1e",
									"id": 743,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "delegates",
									"nameLocation": "2417:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "delegator",
												"nameLocation": "2435:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "2427:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 732,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2427:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2426:19:2"
									},
									"returnParameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "2469:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 735,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:9:2"
									},
									"scope": 1392,
									"src": "2408:117:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 755,
										"nodeType": "Block",
										"src": "2719:58:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 750,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2747:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2747:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 752,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "2759:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 749,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "2737:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2737:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"functionReturnParameters": 748,
												"id": 754,
												"nodeType": "Return",
												"src": "2730:39:2"
											}
										]
									},
									"documentation": {
										"id": 744,
										"nodeType": "StructuredDocumentation",
										"src": "2533:134:2",
										"text": " @notice Delegate votes from `msg.sender` to `delegatee`\n @param delegatee The address to delegate votes to"
									},
									"functionSelector": "5c19a95c",
									"id": 756,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "delegate",
									"nameLocation": "2682:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "delegatee",
												"nameLocation": "2699:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "2691:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2691:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2690:19:2"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2719:0:2"
									},
									"scope": 1392,
									"src": "2673:104:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 859,
										"nodeType": "Block",
										"src": "3385:982:2",
										"statements": [
											{
												"assignments": [
													773
												],
												"declarations": [
													{
														"constant": false,
														"id": 773,
														"mutability": "mutable",
														"name": "domainSeparator",
														"nameLocation": "3404:15:2",
														"nodeType": "VariableDeclaration",
														"scope": 859,
														"src": "3396:23:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 772,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3396:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 793,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 777,
																	"name": "DOMAIN_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 701,
																	"src": "3475:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 781,
																						"name": "name",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 75,
																						"src": "3525:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																							"typeString": "function () view returns (string memory)"
																						}
																					},
																					"id": 782,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3525:6:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 780,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3519:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																					"typeString": "type(bytes storage pointer)"
																				},
																				"typeName": {
																					"id": 779,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "3519:5:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 783,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3519:13:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 778,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "3509:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3509:24:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 785,
																		"name": "getChainId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1276,
																		"src": "3552:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 786,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3552:12:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 789,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3591:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_LandbaseToken_$1392",
																				"typeString": "contract LandbaseToken"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_LandbaseToken_$1392",
																				"typeString": "contract LandbaseToken"
																			}
																		],
																		"id": 788,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3583:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 787,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3583:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 790,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3583:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 775,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "3446:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "3446:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 791,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3446:165:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 774,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "3422:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3422:200:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3396:226:2"
											},
											{
												"assignments": [
													795
												],
												"declarations": [
													{
														"constant": false,
														"id": 795,
														"mutability": "mutable",
														"name": "structHash",
														"nameLocation": "3643:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 859,
														"src": "3635:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 794,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3635:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 805,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 799,
																	"name": "DELEGATION_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 707,
																	"src": "3691:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 800,
																	"name": "delegatee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 759,
																	"src": "3712:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 801,
																	"name": "nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "3723:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 802,
																	"name": "expiry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 763,
																	"src": "3730:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 797,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "3680:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 798,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "3680:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3680:57:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 796,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "3656:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3656:92:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3635:113:2"
											},
											{
												"assignments": [
													807
												],
												"declarations": [
													{
														"constant": false,
														"id": 807,
														"mutability": "mutable",
														"name": "digest",
														"nameLocation": "3769:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 859,
														"src": "3761:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 806,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3761:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 816,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "1901",
																	"id": 811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3819:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string hex\"1901\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"id": 812,
																	"name": "domainSeparator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 773,
																	"src": "3831:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 813,
																	"name": "structHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 795,
																	"src": "3848:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string hex\"1901\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 809,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "3802:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "3802:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 814,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3802:57:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 808,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "3778:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3778:92:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3761:109:2"
											},
											{
												"assignments": [
													818
												],
												"declarations": [
													{
														"constant": false,
														"id": 818,
														"mutability": "mutable",
														"name": "signatory",
														"nameLocation": "3891:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 859,
														"src": "3883:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 817,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3883:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 825,
												"initialValue": {
													"arguments": [
														{
															"id": 820,
															"name": "digest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "3913:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 821,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "3921:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 822,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "3924:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 823,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "3927:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 819,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "3903:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3883:46:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 827,
																"name": "signatory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 818,
																"src": "3962:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3983:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 829,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3975:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 828,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3975:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3975:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3962:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c414e44424153453a3a64656c656761746542795369673a20696e76616c6964207369676e6174757265",
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4000:44:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_477b9d1795367c3ae15428e4592ed782c56899effd66b2d852d18b3a68099013",
																"typeString": "literal_string \"LANDBASE::delegateBySig: invalid signature\""
															},
															"value": "LANDBASE::delegateBySig: invalid signature"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_477b9d1795367c3ae15428e4592ed782c56899effd66b2d852d18b3a68099013",
																"typeString": "literal_string \"LANDBASE::delegateBySig: invalid signature\""
															}
														],
														"id": 826,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3940:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3940:115:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 835,
												"nodeType": "ExpressionStatement",
												"src": "3940:115:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 837,
																"name": "nonce",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 761,
																"src": "4088:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "4097:19:2",
																"subExpression": {
																	"baseExpression": {
																		"id": 838,
																		"name": "nonces",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 712,
																		"src": "4097:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 840,
																	"indexExpression": {
																		"id": 839,
																		"name": "signatory",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 818,
																		"src": "4104:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4097:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4088:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c414e44424153453a3a64656c656761746542795369673a20696e76616c6964206e6f6e6365",
															"id": 843,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4131:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_de49e737c86ecd39ef48ac89e5f4d5f6931a390abe19d9bcf3e17e0e009b07f6",
																"typeString": "literal_string \"LANDBASE::delegateBySig: invalid nonce\""
															},
															"value": "LANDBASE::delegateBySig: invalid nonce"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_de49e737c86ecd39ef48ac89e5f4d5f6931a390abe19d9bcf3e17e0e009b07f6",
																"typeString": "literal_string \"LANDBASE::delegateBySig: invalid nonce\""
															}
														],
														"id": 836,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4066:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4066:116:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 845,
												"nodeType": "ExpressionStatement",
												"src": "4066:116:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 847,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "4215:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "4215:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 849,
																"name": "expiry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 763,
																"src": "4234:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4215:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c414e44424153453a3a64656c656761746542795369673a207369676e61747572652065787069726564",
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4255:44:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a0a2e2d8f846476e5e339360d1d1e6ef75e387a44218d585bcf264264633bc44",
																"typeString": "literal_string \"LANDBASE::delegateBySig: signature expired\""
															},
															"value": "LANDBASE::delegateBySig: signature expired"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a0a2e2d8f846476e5e339360d1d1e6ef75e387a44218d585bcf264264633bc44",
																"typeString": "literal_string \"LANDBASE::delegateBySig: signature expired\""
															}
														],
														"id": 846,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4193:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4193:117:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 853,
												"nodeType": "ExpressionStatement",
												"src": "4193:117:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 855,
															"name": "signatory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 818,
															"src": "4338:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 856,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "4349:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 854,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "4328:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4328:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"functionReturnParameters": 771,
												"id": 858,
												"nodeType": "Return",
												"src": "4321:38:2"
											}
										]
									},
									"documentation": {
										"id": 757,
										"nodeType": "StructuredDocumentation",
										"src": "2785:420:2",
										"text": " @notice Delegates votes from signatory to `delegatee`\n @param delegatee The address to delegate votes to\n @param nonce The contract state required to match the signature\n @param expiry The time at which to expire the signature\n @param v The recovery byte of the signature\n @param r Half of the ECDSA signature pair\n @param s Half of the ECDSA signature pair"
									},
									"functionSelector": "c3cda520",
									"id": 860,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "delegateBySig",
									"nameLocation": "3220:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "delegatee",
												"nameLocation": "3252:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "3244:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3244:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "3280:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "3272:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3272:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "expiry",
												"nameLocation": "3304:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "3296:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3296:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3327:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "3321:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 764,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3321:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3347:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "3339:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 766,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3339:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3367:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "3359:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 768,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3359:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3233:142:2"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3385:0:2"
									},
									"scope": 1392,
									"src": "3211:1156:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 888,
										"nodeType": "Block",
										"src": "4642:162:2",
										"statements": [
											{
												"assignments": [
													869
												],
												"declarations": [
													{
														"constant": false,
														"id": 869,
														"mutability": "mutable",
														"name": "nCheckpoints",
														"nameLocation": "4660:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 888,
														"src": "4653:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 868,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "4653:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 873,
												"initialValue": {
													"baseExpression": {
														"id": 870,
														"name": "numCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "4675:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
															"typeString": "mapping(address => uint32)"
														}
													},
													"id": 872,
													"indexExpression": {
														"id": 871,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "4690:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4675:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4653:45:2"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 876,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 874,
															"name": "nCheckpoints",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 869,
															"src": "4729:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 875,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4744:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4729:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "30",
														"id": 885,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4795:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "4729:67:2",
													"trueExpression": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 877,
																	"name": "checkpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 690,
																	"src": "4748:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$682_storage_$_$",
																		"typeString": "mapping(address => mapping(uint32 => struct LandbaseToken.Checkpoint storage ref))"
																	}
																},
																"id": 879,
																"indexExpression": {
																	"id": 878,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 863,
																	"src": "4760:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4748:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$682_storage_$",
																	"typeString": "mapping(uint32 => struct LandbaseToken.Checkpoint storage ref)"
																}
															},
															"id": 883,
															"indexExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 882,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 880,
																	"name": "nCheckpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 869,
																	"src": "4769:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 881,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4784:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4769:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4748:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Checkpoint_$682_storage",
																"typeString": "struct LandbaseToken.Checkpoint storage ref"
															}
														},
														"id": 884,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "votes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 681,
														"src": "4748:44:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 867,
												"id": 887,
												"nodeType": "Return",
												"src": "4709:87:2"
											}
										]
									},
									"documentation": {
										"id": 861,
										"nodeType": "StructuredDocumentation",
										"src": "4375:187:2",
										"text": " @notice Gets the current votes balance for `account`\n @param account The address to get votes balance\n @return The number of current votes for `account`"
									},
									"functionSelector": "b4b5ea57",
									"id": 889,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentVotes",
									"nameLocation": "4577:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4601:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "4593:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 862,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4593:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4592:17:2"
									},
									"returnParameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "4633:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 865,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4633:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4632:9:2"
									},
									"scope": 1392,
									"src": "4568:236:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1021,
										"nodeType": "Block",
										"src": "5360:1172:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 903,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 900,
																"name": "blockNumber",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 894,
																"src": "5393:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 901,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "5407:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 902,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "number",
																"nodeType": "MemberAccess",
																"src": "5407:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5393:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c414e44424153453a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e6564",
															"id": 904,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5434:45:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e7321e035fcdb44ae58b7c959d5d07b7207a23cd2d67b95e4da721649acd9e2e",
																"typeString": "literal_string \"LANDBASE::getPriorVotes: not yet determined\""
															},
															"value": "LANDBASE::getPriorVotes: not yet determined"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e7321e035fcdb44ae58b7c959d5d07b7207a23cd2d67b95e4da721649acd9e2e",
																"typeString": "literal_string \"LANDBASE::getPriorVotes: not yet determined\""
															}
														],
														"id": 899,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5371:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5371:119:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 906,
												"nodeType": "ExpressionStatement",
												"src": "5371:119:2"
											},
											{
												"assignments": [
													908
												],
												"declarations": [
													{
														"constant": false,
														"id": 908,
														"mutability": "mutable",
														"name": "nCheckpoints",
														"nameLocation": "5510:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 1021,
														"src": "5503:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 907,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "5503:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 912,
												"initialValue": {
													"baseExpression": {
														"id": 909,
														"name": "numCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "5525:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
															"typeString": "mapping(address => uint32)"
														}
													},
													"id": 911,
													"indexExpression": {
														"id": 910,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 892,
														"src": "5540:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5525:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5503:45:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 913,
														"name": "nCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "5563:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 914,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5579:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5563:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 919,
												"nodeType": "IfStatement",
												"src": "5559:58:2",
												"trueBody": {
													"id": 918,
													"nodeType": "Block",
													"src": "5582:35:2",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 916,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5604:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 898,
															"id": 917,
															"nodeType": "Return",
															"src": "5597:8:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 920,
																	"name": "checkpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 690,
																	"src": "5677:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$682_storage_$_$",
																		"typeString": "mapping(address => mapping(uint32 => struct LandbaseToken.Checkpoint storage ref))"
																	}
																},
																"id": 922,
																"indexExpression": {
																	"id": 921,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 892,
																	"src": "5689:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5677:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$682_storage_$",
																	"typeString": "mapping(uint32 => struct LandbaseToken.Checkpoint storage ref)"
																}
															},
															"id": 926,
															"indexExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 925,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 923,
																	"name": "nCheckpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 908,
																	"src": "5698:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 924,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5713:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "5698:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5677:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Checkpoint_$682_storage",
																"typeString": "struct LandbaseToken.Checkpoint storage ref"
															}
														},
														"id": 927,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "fromBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 679,
														"src": "5677:48:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 928,
														"name": "blockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 894,
														"src": "5729:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5677:63:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 940,
												"nodeType": "IfStatement",
												"src": "5673:147:2",
												"trueBody": {
													"id": 939,
													"nodeType": "Block",
													"src": "5742:78:2",
													"statements": [
														{
															"expression": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 930,
																			"name": "checkpoints",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 690,
																			"src": "5764:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$682_storage_$_$",
																				"typeString": "mapping(address => mapping(uint32 => struct LandbaseToken.Checkpoint storage ref))"
																			}
																		},
																		"id": 932,
																		"indexExpression": {
																			"id": 931,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 892,
																			"src": "5776:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5764:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$682_storage_$",
																			"typeString": "mapping(uint32 => struct LandbaseToken.Checkpoint storage ref)"
																		}
																	},
																	"id": 936,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		},
																		"id": 935,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 933,
																			"name": "nCheckpoints",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 908,
																			"src": "5785:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 934,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5800:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "5785:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5764:38:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$682_storage",
																		"typeString": "struct LandbaseToken.Checkpoint storage ref"
																	}
																},
																"id": 937,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "votes",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 681,
																"src": "5764:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 898,
															"id": 938,
															"nodeType": "Return",
															"src": "5757:51:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 941,
																	"name": "checkpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 690,
																	"src": "5881:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$682_storage_$_$",
																		"typeString": "mapping(address => mapping(uint32 => struct LandbaseToken.Checkpoint storage ref))"
																	}
																},
																"id": 943,
																"indexExpression": {
																	"id": 942,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 892,
																	"src": "5893:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5881:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$682_storage_$",
																	"typeString": "mapping(uint32 => struct LandbaseToken.Checkpoint storage ref)"
																}
															},
															"id": 945,
															"indexExpression": {
																"hexValue": "30",
																"id": 944,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5902:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5881:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Checkpoint_$682_storage",
																"typeString": "struct LandbaseToken.Checkpoint storage ref"
															}
														},
														"id": 946,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "fromBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 679,
														"src": "5881:33:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 947,
														"name": "blockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 894,
														"src": "5917:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5881:47:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 952,
												"nodeType": "IfStatement",
												"src": "5877:88:2",
												"trueBody": {
													"id": 951,
													"nodeType": "Block",
													"src": "5930:35:2",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 949,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5952:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 898,
															"id": 950,
															"nodeType": "Return",
															"src": "5945:8:2"
														}
													]
												}
											},
											{
												"assignments": [
													954
												],
												"declarations": [
													{
														"constant": false,
														"id": 954,
														"mutability": "mutable",
														"name": "lower",
														"nameLocation": "5984:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 1021,
														"src": "5977:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 953,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "5977:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 956,
												"initialValue": {
													"hexValue": "30",
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5992:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5977:16:2"
											},
											{
												"assignments": [
													958
												],
												"declarations": [
													{
														"constant": false,
														"id": 958,
														"mutability": "mutable",
														"name": "upper",
														"nameLocation": "6011:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 1021,
														"src": "6004:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 957,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "6004:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 962,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 959,
														"name": "nCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "6019:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 960,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6034:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "6019:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6004:31:2"
											},
											{
												"body": {
													"id": 1012,
													"nodeType": "Block",
													"src": "6068:406:2",
													"statements": [
														{
															"assignments": [
																967
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 967,
																	"mutability": "mutable",
																	"name": "center",
																	"nameLocation": "6090:6:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1012,
																	"src": "6083:13:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"typeName": {
																		"id": 966,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "6083:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 976,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 975,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 968,
																	"name": "upper",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 958,
																	"src": "6099:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 974,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 971,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 969,
																					"name": "upper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 958,
																					"src": "6108:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 970,
																					"name": "lower",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 954,
																					"src": "6116:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"src": "6108:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			}
																		],
																		"id": 972,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "6107:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 973,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6125:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "6107:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "6099:27:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6083:43:2"
														},
														{
															"assignments": [
																979
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 979,
																	"mutability": "mutable",
																	"name": "cp",
																	"nameLocation": "6186:2:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1012,
																	"src": "6168:20:2",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$682_memory_ptr",
																		"typeString": "struct LandbaseToken.Checkpoint"
																	},
																	"typeName": {
																		"id": 978,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 977,
																			"name": "Checkpoint",
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 682,
																			"src": "6168:10:2"
																		},
																		"referencedDeclaration": 682,
																		"src": "6168:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Checkpoint_$682_storage_ptr",
																			"typeString": "struct LandbaseToken.Checkpoint"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 985,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 980,
																		"name": "checkpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 690,
																		"src": "6191:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$682_storage_$_$",
																			"typeString": "mapping(address => mapping(uint32 => struct LandbaseToken.Checkpoint storage ref))"
																		}
																	},
																	"id": 982,
																	"indexExpression": {
																		"id": 981,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 892,
																		"src": "6203:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6191:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$682_storage_$",
																		"typeString": "mapping(uint32 => struct LandbaseToken.Checkpoint storage ref)"
																	}
																},
																"id": 984,
																"indexExpression": {
																	"id": 983,
																	"name": "center",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 967,
																	"src": "6212:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6191:28:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Checkpoint_$682_storage",
																	"typeString": "struct LandbaseToken.Checkpoint storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6168:51:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 989,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 986,
																		"name": "cp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 979,
																		"src": "6238:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Checkpoint_$682_memory_ptr",
																			"typeString": "struct LandbaseToken.Checkpoint memory"
																		}
																	},
																	"id": 987,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "fromBlock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 679,
																	"src": "6238:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 988,
																	"name": "blockNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 894,
																	"src": "6254:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6238:27:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 997,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 994,
																			"name": "cp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 979,
																			"src": "6327:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Checkpoint_$682_memory_ptr",
																				"typeString": "struct LandbaseToken.Checkpoint memory"
																			}
																		},
																		"id": 995,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "fromBlock",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 679,
																		"src": "6327:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"id": 996,
																		"name": "blockNumber",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 894,
																		"src": "6342:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6327:26:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"id": 1009,
																	"nodeType": "Block",
																	"src": "6410:53:2",
																	"statements": [
																		{
																			"expression": {
																				"id": 1007,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 1003,
																					"name": "upper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 958,
																					"src": "6429:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"commonType": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					},
																					"id": 1006,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1004,
																						"name": "center",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 967,
																						"src": "6437:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 1005,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "6446:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "6437:10:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"src": "6429:18:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"id": 1008,
																			"nodeType": "ExpressionStatement",
																			"src": "6429:18:2"
																		}
																	]
																},
																"id": 1010,
																"nodeType": "IfStatement",
																"src": "6323:140:2",
																"trueBody": {
																	"id": 1002,
																	"nodeType": "Block",
																	"src": "6355:49:2",
																	"statements": [
																		{
																			"expression": {
																				"id": 1000,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 998,
																					"name": "lower",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 954,
																					"src": "6374:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"id": 999,
																					"name": "center",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 967,
																					"src": "6382:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"src": "6374:14:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"id": 1001,
																			"nodeType": "ExpressionStatement",
																			"src": "6374:14:2"
																		}
																	]
																}
															},
															"id": 1011,
															"nodeType": "IfStatement",
															"src": "6234:229:2",
															"trueBody": {
																"id": 993,
																"nodeType": "Block",
																"src": "6267:50:2",
																"statements": [
																	{
																		"expression": {
																			"expression": {
																				"id": 990,
																				"name": "cp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 979,
																				"src": "6293:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Checkpoint_$682_memory_ptr",
																					"typeString": "struct LandbaseToken.Checkpoint memory"
																				}
																			},
																			"id": 991,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "votes",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 681,
																			"src": "6293:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"functionReturnParameters": 898,
																		"id": 992,
																		"nodeType": "Return",
																		"src": "6286:15:2"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 963,
														"name": "upper",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "6053:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 964,
														"name": "lower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 954,
														"src": "6061:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "6053:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1013,
												"nodeType": "WhileStatement",
												"src": "6046:428:2"
											},
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"baseExpression": {
																"id": 1014,
																"name": "checkpoints",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 690,
																"src": "6491:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$682_storage_$_$",
																	"typeString": "mapping(address => mapping(uint32 => struct LandbaseToken.Checkpoint storage ref))"
																}
															},
															"id": 1016,
															"indexExpression": {
																"id": 1015,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 892,
																"src": "6503:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6491:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$682_storage_$",
																"typeString": "mapping(uint32 => struct LandbaseToken.Checkpoint storage ref)"
															}
														},
														"id": 1018,
														"indexExpression": {
															"id": 1017,
															"name": "lower",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "6512:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6491:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Checkpoint_$682_storage",
															"typeString": "struct LandbaseToken.Checkpoint storage ref"
														}
													},
													"id": 1019,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "votes",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 681,
													"src": "6491:33:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 898,
												"id": 1020,
												"nodeType": "Return",
												"src": "6484:40:2"
											}
										]
									},
									"documentation": {
										"id": 890,
										"nodeType": "StructuredDocumentation",
										"src": "4812:417:2",
										"text": " @notice Determine the prior number of votes for an account as of a block number\n @dev Block number must be a finalized block or else this function will revert to prevent misinformation.\n @param account The address of the account to check\n @param blockNumber The block number to get the vote balance at\n @return The number of votes the account had as of the given block"
									},
									"functionSelector": "782d6fe1",
									"id": 1022,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPriorVotes",
									"nameLocation": "5244:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5266:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "5258:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 891,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5258:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "blockNumber",
												"nameLocation": "5283:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "5275:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5275:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5257:38:2"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "5346:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5346:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5345:9:2"
									},
									"scope": 1392,
									"src": "5235:1297:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1059,
										"nodeType": "Block",
										"src": "6606:360:2",
										"statements": [
											{
												"assignments": [
													1030
												],
												"declarations": [
													{
														"constant": false,
														"id": 1030,
														"mutability": "mutable",
														"name": "currentDelegate",
														"nameLocation": "6625:15:2",
														"nodeType": "VariableDeclaration",
														"scope": 1059,
														"src": "6617:23:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1029,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6617:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1034,
												"initialValue": {
													"baseExpression": {
														"id": 1031,
														"name": "_delegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 677,
														"src": "6643:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
															"typeString": "mapping(address => address)"
														}
													},
													"id": 1033,
													"indexExpression": {
														"id": 1032,
														"name": "delegator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1024,
														"src": "6654:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6643:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6617:47:2"
											},
											{
												"assignments": [
													1036
												],
												"declarations": [
													{
														"constant": false,
														"id": 1036,
														"mutability": "mutable",
														"name": "delegatorBalance",
														"nameLocation": "6683:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 1059,
														"src": "6675:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1035,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6675:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1040,
												"initialValue": {
													"arguments": [
														{
															"id": 1038,
															"name": "delegator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "6712:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1037,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 119,
														"src": "6702:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6702:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6675:47:2"
											},
											{
												"expression": {
													"id": 1045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1041,
															"name": "_delegates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "6780:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 1043,
														"indexExpression": {
															"id": 1042,
															"name": "delegator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "6791:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6780:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1044,
														"name": "delegatee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1026,
														"src": "6804:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6780:33:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1046,
												"nodeType": "ExpressionStatement",
												"src": "6780:33:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1048,
															"name": "delegator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "6847:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1049,
															"name": "currentDelegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1030,
															"src": "6858:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1050,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1026,
															"src": "6875:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1047,
														"name": "DelegateChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 721,
														"src": "6831:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address,address)"
														}
													},
													"id": 1051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6831:54:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1052,
												"nodeType": "EmitStatement",
												"src": "6826:59:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1054,
															"name": "currentDelegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1030,
															"src": "6913:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1055,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1026,
															"src": "6930:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1056,
															"name": "delegatorBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1036,
															"src": "6941:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1053,
														"name": "_moveDelegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1167,
														"src": "6898:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6898:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1058,
												"nodeType": "ExpressionStatement",
												"src": "6898:60:2"
											}
										]
									},
									"id": 1060,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_delegate",
									"nameLocation": "6549:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "delegator",
												"nameLocation": "6567:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "6559:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1023,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6559:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "delegatee",
												"nameLocation": "6586:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "6578:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1025,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6578:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6558:38:2"
									},
									"returnParameters": {
										"id": 1028,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6606:0:2"
									},
									"scope": 1392,
									"src": "6540:426:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1166,
										"nodeType": "Block",
										"src": "7089:950:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1071,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1069,
															"name": "srcRep",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1062,
															"src": "7104:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1070,
															"name": "dstRep",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1064,
															"src": "7114:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "7104:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1074,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1072,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1066,
															"src": "7124:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7133:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "7124:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "7104:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1165,
												"nodeType": "IfStatement",
												"src": "7100:932:2",
												"trueBody": {
													"id": 1164,
													"nodeType": "Block",
													"src": "7136:896:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1081,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1076,
																	"name": "srcRep",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1062,
																	"src": "7155:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1079,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7173:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1078,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7165:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1077,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7165:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7165:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7155:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1119,
															"nodeType": "IfStatement",
															"src": "7151:427:2",
															"trueBody": {
																"id": 1118,
																"nodeType": "Block",
																"src": "7177:401:2",
																"statements": [
																	{
																		"assignments": [
																			1083
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1083,
																				"mutability": "mutable",
																				"name": "srcRepNum",
																				"nameLocation": "7251:9:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1118,
																				"src": "7244:16:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"typeName": {
																					"id": 1082,
																					"name": "uint32",
																					"nodeType": "ElementaryTypeName",
																					"src": "7244:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1087,
																		"initialValue": {
																			"baseExpression": {
																				"id": 1084,
																				"name": "numCheckpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 695,
																				"src": "7263:14:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																					"typeString": "mapping(address => uint32)"
																				}
																			},
																			"id": 1086,
																			"indexExpression": {
																				"id": 1085,
																				"name": "srcRep",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1062,
																				"src": "7278:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7263:22:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7244:41:2"
																	},
																	{
																		"assignments": [
																			1089
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1089,
																				"mutability": "mutable",
																				"name": "srcRepOld",
																				"nameLocation": "7312:9:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1118,
																				"src": "7304:17:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1088,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7304:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1103,
																		"initialValue": {
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 1092,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1090,
																					"name": "srcRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1083,
																					"src": "7324:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 1091,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7336:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "7324:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"hexValue": "30",
																				"id": 1101,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7425:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"id": 1102,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "7324:102:2",
																			"trueExpression": {
																				"expression": {
																					"baseExpression": {
																						"baseExpression": {
																							"id": 1093,
																							"name": "checkpoints",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 690,
																							"src": "7361:11:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$682_storage_$_$",
																								"typeString": "mapping(address => mapping(uint32 => struct LandbaseToken.Checkpoint storage ref))"
																							}
																						},
																						"id": 1095,
																						"indexExpression": {
																							"id": 1094,
																							"name": "srcRep",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1062,
																							"src": "7373:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "7361:19:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$682_storage_$",
																							"typeString": "mapping(uint32 => struct LandbaseToken.Checkpoint storage ref)"
																						}
																					},
																					"id": 1099,
																					"indexExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						},
																						"id": 1098,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1096,
																							"name": "srcRepNum",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1083,
																							"src": "7381:9:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint32",
																								"typeString": "uint32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 1097,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "7393:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "7381:13:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "7361:34:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Checkpoint_$682_storage",
																						"typeString": "struct LandbaseToken.Checkpoint storage ref"
																					}
																				},
																				"id": 1100,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "votes",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 681,
																				"src": "7361:40:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7304:122:2"
																	},
																	{
																		"assignments": [
																			1105
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1105,
																				"mutability": "mutable",
																				"name": "srcRepNew",
																				"nameLocation": "7453:9:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1118,
																				"src": "7445:17:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1104,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7445:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1110,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 1108,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1066,
																					"src": "7479:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1106,
																					"name": "srcRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1089,
																					"src": "7465:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1107,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1687,
																				"src": "7465:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1109,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7465:21:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7445:41:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1112,
																					"name": "srcRep",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1062,
																					"src": "7522:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1113,
																					"name": "srcRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1083,
																					"src": "7530:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				{
																					"id": 1114,
																					"name": "srcRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1089,
																					"src": "7541:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1115,
																					"name": "srcRepNew",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1105,
																					"src": "7552:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1111,
																				"name": "_writeCheckpoint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1240,
																				"src": "7505:16:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint32_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint32,uint256,uint256)"
																				}
																			},
																			"id": 1116,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7505:57:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1117,
																		"nodeType": "ExpressionStatement",
																		"src": "7505:57:2"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1120,
																	"name": "dstRep",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1064,
																	"src": "7598:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1123,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7616:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7608:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1121,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7608:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7608:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7598:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1163,
															"nodeType": "IfStatement",
															"src": "7594:427:2",
															"trueBody": {
																"id": 1162,
																"nodeType": "Block",
																"src": "7620:401:2",
																"statements": [
																	{
																		"assignments": [
																			1127
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1127,
																				"mutability": "mutable",
																				"name": "dstRepNum",
																				"nameLocation": "7694:9:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1162,
																				"src": "7687:16:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"typeName": {
																					"id": 1126,
																					"name": "uint32",
																					"nodeType": "ElementaryTypeName",
																					"src": "7687:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1131,
																		"initialValue": {
																			"baseExpression": {
																				"id": 1128,
																				"name": "numCheckpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 695,
																				"src": "7706:14:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																					"typeString": "mapping(address => uint32)"
																				}
																			},
																			"id": 1130,
																			"indexExpression": {
																				"id": 1129,
																				"name": "dstRep",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1064,
																				"src": "7721:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7706:22:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7687:41:2"
																	},
																	{
																		"assignments": [
																			1133
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1133,
																				"mutability": "mutable",
																				"name": "dstRepOld",
																				"nameLocation": "7755:9:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1162,
																				"src": "7747:17:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1132,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7747:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1147,
																		"initialValue": {
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 1136,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1134,
																					"name": "dstRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1127,
																					"src": "7767:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 1135,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7779:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "7767:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"hexValue": "30",
																				"id": 1145,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7868:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"id": 1146,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "7767:102:2",
																			"trueExpression": {
																				"expression": {
																					"baseExpression": {
																						"baseExpression": {
																							"id": 1137,
																							"name": "checkpoints",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 690,
																							"src": "7804:11:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$682_storage_$_$",
																								"typeString": "mapping(address => mapping(uint32 => struct LandbaseToken.Checkpoint storage ref))"
																							}
																						},
																						"id": 1139,
																						"indexExpression": {
																							"id": 1138,
																							"name": "dstRep",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1064,
																							"src": "7816:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "7804:19:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$682_storage_$",
																							"typeString": "mapping(uint32 => struct LandbaseToken.Checkpoint storage ref)"
																						}
																					},
																					"id": 1143,
																					"indexExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						},
																						"id": 1142,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1140,
																							"name": "dstRepNum",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1127,
																							"src": "7824:9:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint32",
																								"typeString": "uint32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 1141,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "7836:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "7824:13:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "7804:34:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Checkpoint_$682_storage",
																						"typeString": "struct LandbaseToken.Checkpoint storage ref"
																					}
																				},
																				"id": 1144,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "votes",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 681,
																				"src": "7804:40:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7747:122:2"
																	},
																	{
																		"assignments": [
																			1149
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1149,
																				"mutability": "mutable",
																				"name": "dstRepNew",
																				"nameLocation": "7896:9:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1162,
																				"src": "7888:17:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1148,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7888:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1154,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 1152,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1066,
																					"src": "7922:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1150,
																					"name": "dstRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1133,
																					"src": "7908:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1151,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "add",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1672,
																				"src": "7908:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1153,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7908:21:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7888:41:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1156,
																					"name": "dstRep",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1064,
																					"src": "7965:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1157,
																					"name": "dstRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1127,
																					"src": "7973:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				{
																					"id": 1158,
																					"name": "dstRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1133,
																					"src": "7984:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1159,
																					"name": "dstRepNew",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1149,
																					"src": "7995:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1155,
																				"name": "_writeCheckpoint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1240,
																				"src": "7948:16:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint32_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint32,uint256,uint256)"
																				}
																			},
																			"id": 1160,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7948:57:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1161,
																		"nodeType": "ExpressionStatement",
																		"src": "7948:57:2"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"id": 1167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_moveDelegates",
									"nameLocation": "6983:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "srcRep",
												"nameLocation": "7016:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "7008:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1061,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7008:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "dstRep",
												"nameLocation": "7041:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "7033:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1063,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7033:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7066:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "7058:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1065,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7058:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6997:82:2"
									},
									"returnParameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7089:0:2"
									},
									"scope": 1392,
									"src": "6974:1065:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1239,
										"nodeType": "Block",
										"src": "8201:663:2",
										"statements": [
											{
												"assignments": [
													1179
												],
												"declarations": [
													{
														"constant": false,
														"id": 1179,
														"mutability": "mutable",
														"name": "blockNumber",
														"nameLocation": "8219:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 1239,
														"src": "8212:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1178,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "8212:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1185,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1181,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "8254:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "8254:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "4c414e44424153453a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d62657220657863656564732033322062697473",
															"id": 1183,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8281:58:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_19ee87d38a98c92b75a5c0cf6d80ba3454da2a59db748607c0a0f9f22ed20008",
																"typeString": "literal_string \"LANDBASE::_writeCheckpoint: block number exceeds 32 bits\""
															},
															"value": "LANDBASE::_writeCheckpoint: block number exceeds 32 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_19ee87d38a98c92b75a5c0cf6d80ba3454da2a59db748607c0a0f9f22ed20008",
																"typeString": "literal_string \"LANDBASE::_writeCheckpoint: block number exceeds 32 bits\""
															}
														],
														"id": 1180,
														"name": "safe32",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1264,
														"src": "8233:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint32_$",
															"typeString": "function (uint256,string memory) pure returns (uint32)"
														}
													},
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8233:117:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8212:138:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 1188,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1186,
															"name": "nCheckpoints",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1171,
															"src": "8381:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1187,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8396:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8381:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 1198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1189,
																		"name": "checkpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 690,
																		"src": "8414:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$682_storage_$_$",
																			"typeString": "mapping(address => mapping(uint32 => struct LandbaseToken.Checkpoint storage ref))"
																		}
																	},
																	"id": 1191,
																	"indexExpression": {
																		"id": 1190,
																		"name": "delegatee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1169,
																		"src": "8426:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8414:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$682_storage_$",
																		"typeString": "mapping(uint32 => struct LandbaseToken.Checkpoint storage ref)"
																	}
																},
																"id": 1195,
																"indexExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 1194,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1192,
																		"name": "nCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1171,
																		"src": "8437:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1193,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8452:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "8437:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8414:40:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Checkpoint_$682_storage",
																	"typeString": "struct LandbaseToken.Checkpoint storage ref"
																}
															},
															"id": 1196,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "fromBlock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 679,
															"src": "8414:50:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1197,
															"name": "blockNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "8468:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "8414:65:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8381:98:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1231,
													"nodeType": "Block",
													"src": "8581:207:2",
													"statements": [
														{
															"expression": {
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1212,
																			"name": "checkpoints",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 690,
																			"src": "8596:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$682_storage_$_$",
																				"typeString": "mapping(address => mapping(uint32 => struct LandbaseToken.Checkpoint storage ref))"
																			}
																		},
																		"id": 1215,
																		"indexExpression": {
																			"id": 1213,
																			"name": "delegatee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1169,
																			"src": "8608:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8596:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$682_storage_$",
																			"typeString": "mapping(uint32 => struct LandbaseToken.Checkpoint storage ref)"
																		}
																	},
																	"id": 1216,
																	"indexExpression": {
																		"id": 1214,
																		"name": "nCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1171,
																		"src": "8619:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8596:36:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$682_storage",
																		"typeString": "struct LandbaseToken.Checkpoint storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1218,
																			"name": "blockNumber",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1179,
																			"src": "8664:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		{
																			"id": 1219,
																			"name": "newVotes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1175,
																			"src": "8694:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1217,
																		"name": "Checkpoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 682,
																		"src": "8635:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_Checkpoint_$682_storage_ptr_$",
																			"typeString": "type(struct LandbaseToken.Checkpoint storage pointer)"
																		}
																	},
																	"id": 1220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8635:82:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$682_memory_ptr",
																		"typeString": "struct LandbaseToken.Checkpoint memory"
																	}
																},
																"src": "8596:121:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Checkpoint_$682_storage",
																	"typeString": "struct LandbaseToken.Checkpoint storage ref"
																}
															},
															"id": 1222,
															"nodeType": "ExpressionStatement",
															"src": "8596:121:2"
														},
														{
															"expression": {
																"id": 1229,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1223,
																		"name": "numCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "8732:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																			"typeString": "mapping(address => uint32)"
																		}
																	},
																	"id": 1225,
																	"indexExpression": {
																		"id": 1224,
																		"name": "delegatee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1169,
																		"src": "8747:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8732:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 1228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1226,
																		"name": "nCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1171,
																		"src": "8760:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1227,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8775:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "8760:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "8732:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 1230,
															"nodeType": "ExpressionStatement",
															"src": "8732:44:2"
														}
													]
												},
												"id": 1232,
												"nodeType": "IfStatement",
												"src": "8363:425:2",
												"trueBody": {
													"id": 1211,
													"nodeType": "Block",
													"src": "8491:84:2",
													"statements": [
														{
															"expression": {
																"id": 1209,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 1200,
																				"name": "checkpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 690,
																				"src": "8506:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$682_storage_$_$",
																					"typeString": "mapping(address => mapping(uint32 => struct LandbaseToken.Checkpoint storage ref))"
																				}
																			},
																			"id": 1205,
																			"indexExpression": {
																				"id": 1201,
																				"name": "delegatee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1169,
																				"src": "8518:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8506:22:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$682_storage_$",
																				"typeString": "mapping(uint32 => struct LandbaseToken.Checkpoint storage ref)"
																			}
																		},
																		"id": 1206,
																		"indexExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			},
																			"id": 1204,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1202,
																				"name": "nCheckpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1171,
																				"src": "8529:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1203,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8544:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "8529:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8506:40:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Checkpoint_$682_storage",
																			"typeString": "struct LandbaseToken.Checkpoint storage ref"
																		}
																	},
																	"id": 1207,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "votes",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 681,
																	"src": "8506:46:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1208,
																	"name": "newVotes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1175,
																	"src": "8555:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8506:57:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1210,
															"nodeType": "ExpressionStatement",
															"src": "8506:57:2"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1234,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "8826:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1235,
															"name": "oldVotes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1173,
															"src": "8837:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1236,
															"name": "newVotes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "8847:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1233,
														"name": "DelegateVotesChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 730,
														"src": "8805:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8805:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1238,
												"nodeType": "EmitStatement",
												"src": "8800:56:2"
											}
										]
									},
									"id": 1240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_writeCheckpoint",
									"nameLocation": "8056:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "delegatee",
												"nameLocation": "8091:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "8083:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8083:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "nCheckpoints",
												"nameLocation": "8118:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "8111:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1170,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "8111:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "oldVotes",
												"nameLocation": "8149:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "8141:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8141:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "newVotes",
												"nameLocation": "8176:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "8168:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8168:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8072:119:2"
									},
									"returnParameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8201:0:2"
									},
									"scope": 1392,
									"src": "8047:817:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1263,
										"nodeType": "Block",
										"src": "8990:78:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1250,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1242,
																"src": "9009:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																},
																"id": 1253,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9013:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9016:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "9013:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																}
															},
															"src": "9009:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1255,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1244,
															"src": "9020:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1249,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9001:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9001:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1257,
												"nodeType": "ExpressionStatement",
												"src": "9001:32:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1260,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1242,
															"src": "9058:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1259,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9051:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": {
															"id": 1258,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "9051:6:2",
															"typeDescriptions": {}
														}
													},
													"id": 1261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9051:9:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 1248,
												"id": 1262,
												"nodeType": "Return",
												"src": "9044:16:2"
											}
										]
									},
									"id": 1264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe32",
									"nameLocation": "8881:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "8896:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "8888:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8888:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8913:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "8899:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1243,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8899:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8887:39:2"
									},
									"returnParameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "8977:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1246,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "8977:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8976:8:2"
									},
									"scope": 1392,
									"src": "8872:196:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1275,
										"nodeType": "Block",
										"src": "9130:124:2",
										"statements": [
											{
												"assignments": [
													1270
												],
												"declarations": [
													{
														"constant": false,
														"id": 1270,
														"mutability": "mutable",
														"name": "chainId",
														"nameLocation": "9149:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 1275,
														"src": "9141:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1269,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9141:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1271,
												"nodeType": "VariableDeclarationStatement",
												"src": "9141:15:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "9176:46:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9191:20:2",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "chainid",
																	"nodeType": "YulIdentifier",
																	"src": "9202:7:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9202:9:2"
															},
															"variableNames": [
																{
																	"name": "chainId",
																	"nodeType": "YulIdentifier",
																	"src": "9191:7:2"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1270,
														"isOffset": false,
														"isSlot": false,
														"src": "9191:7:2",
														"valueSize": 1
													}
												],
												"id": 1272,
												"nodeType": "InlineAssembly",
												"src": "9167:55:2"
											},
											{
												"expression": {
													"id": 1273,
													"name": "chainId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1270,
													"src": "9239:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1268,
												"id": 1274,
												"nodeType": "Return",
												"src": "9232:14:2"
											}
										]
									},
									"id": 1276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getChainId",
									"nameLocation": "9085:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9095:2:2"
									},
									"returnParameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "9121:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9121:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9120:9:2"
									},
									"scope": 1392,
									"src": "9076:178:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1301,
										"nodeType": "Block",
										"src": "9333:190:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1286,
																"name": "_addMinter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1278,
																"src": "9366:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1289,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9388:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9380:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1287,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9380:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 1290,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9380:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9366:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c414e44424153453a205f6164644d696e74657220697320746865207a65726f2061646472657373",
															"id": 1292,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9405:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_537f9291d5ca8a9d2e07b21416aace2af9dfe45a6b1e8a537f463ccbde96be51",
																"typeString": "literal_string \"LANDBASE: _addMinter is the zero address\""
															},
															"value": "LANDBASE: _addMinter is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_537f9291d5ca8a9d2e07b21416aace2af9dfe45a6b1e8a537f463ccbde96be51",
																"typeString": "literal_string \"LANDBASE: _addMinter is the zero address\""
															}
														],
														"id": 1285,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9344:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9344:114:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1294,
												"nodeType": "ExpressionStatement",
												"src": "9344:114:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1297,
															"name": "_minters",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "9494:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$2120_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														{
															"id": 1298,
															"name": "_addMinter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1278,
															"src": "9504:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_AddressSet_$2120_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1295,
															"name": "EnumerableSet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2407,
															"src": "9476:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_EnumerableSet_$2407_$",
																"typeString": "type(library EnumerableSet)"
															}
														},
														"id": 1296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2147,
														"src": "9476:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$2120_storage_ptr_$_t_address_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9476:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1284,
												"id": 1300,
												"nodeType": "Return",
												"src": "9469:46:2"
											}
										]
									},
									"functionSelector": "983b2d56",
									"id": 1302,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1281,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1280,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1439,
												"src": "9308:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "9308:9:2"
										}
									],
									"name": "addMinter",
									"nameLocation": "9271:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "_addMinter",
												"nameLocation": "9289:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "9281:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9281:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9280:20:2"
									},
									"returnParameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "9327:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1282,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9327:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9326:6:2"
									},
									"scope": 1392,
									"src": "9262:261:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1327,
										"nodeType": "Block",
										"src": "9602:193:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1312,
																"name": "_delMinter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1304,
																"src": "9635:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1315,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9657:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9649:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1313,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9649:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 1316,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9649:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9635:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c414e44424153453a205f64656c4d696e74657220697320746865207a65726f2061646472657373",
															"id": 1318,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9674:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_18219da281cfbf6a44906dac1cc47e920e46399fb5e68945a0c7f54c33f6fe21",
																"typeString": "literal_string \"LANDBASE: _delMinter is the zero address\""
															},
															"value": "LANDBASE: _delMinter is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_18219da281cfbf6a44906dac1cc47e920e46399fb5e68945a0c7f54c33f6fe21",
																"typeString": "literal_string \"LANDBASE: _delMinter is the zero address\""
															}
														],
														"id": 1311,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9613:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9613:114:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1320,
												"nodeType": "ExpressionStatement",
												"src": "9613:114:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1323,
															"name": "_minters",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "9766:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$2120_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														{
															"id": 1324,
															"name": "_delMinter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1304,
															"src": "9776:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_AddressSet_$2120_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1321,
															"name": "EnumerableSet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2407,
															"src": "9745:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_EnumerableSet_$2407_$",
																"typeString": "type(library EnumerableSet)"
															}
														},
														"id": 1322,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "remove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2174,
														"src": "9745:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$2120_storage_ptr_$_t_address_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 1325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9745:42:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1310,
												"id": 1326,
												"nodeType": "Return",
												"src": "9738:49:2"
											}
										]
									},
									"functionSelector": "23338b88",
									"id": 1328,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1307,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1306,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1439,
												"src": "9577:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "9577:9:2"
										}
									],
									"name": "delMinter",
									"nameLocation": "9540:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "_delMinter",
												"nameLocation": "9558:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "9550:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9550:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9549:20:2"
									},
									"returnParameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "9596:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1308,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9596:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9595:6:2"
									},
									"scope": 1392,
									"src": "9531:264:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1338,
										"nodeType": "Block",
										"src": "9860:56:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1335,
															"name": "_minters",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "9899:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$2120_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_AddressSet_$2120_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														],
														"expression": {
															"id": 1333,
															"name": "EnumerableSet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2407,
															"src": "9878:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_EnumerableSet_$2407_$",
																"typeString": "type(library EnumerableSet)"
															}
														},
														"id": 1334,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2216,
														"src": "9878:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$2120_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
														}
													},
													"id": 1336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9878:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1332,
												"id": 1337,
												"nodeType": "Return",
												"src": "9871:37:2"
											}
										]
									},
									"functionSelector": "0323aac7",
									"id": 1339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMinterLength",
									"nameLocation": "9812:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9827:2:2"
									},
									"returnParameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "9851:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9851:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9850:9:2"
									},
									"scope": 1392,
									"src": "9803:113:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1352,
										"nodeType": "Block",
										"src": "9986:67:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1348,
															"name": "_minters",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "10027:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$2120_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														{
															"id": 1349,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1341,
															"src": "10037:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_AddressSet_$2120_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1346,
															"name": "EnumerableSet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2407,
															"src": "10004:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_EnumerableSet_$2407_$",
																"typeString": "type(library EnumerableSet)"
															}
														},
														"id": 1347,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "contains",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2201,
														"src": "10004:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$2120_storage_ptr_$_t_address_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
														}
													},
													"id": 1350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10004:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1345,
												"id": 1351,
												"nodeType": "Return",
												"src": "9997:48:2"
											}
										]
									},
									"functionSelector": "aa271e1a",
									"id": 1353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isMinter",
									"nameLocation": "9933:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9950:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "9942:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9942:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9941:17:2"
									},
									"returnParameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "9980:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1343,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9980:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9979:6:2"
									},
									"scope": 1392,
									"src": "9924:129:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1378,
										"nodeType": "Block",
										"src": "10136:144:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1363,
																"name": "_index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1355,
																"src": "10155:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1367,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1364,
																		"name": "getMinterLength",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1339,
																		"src": "10165:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 1365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10165:17:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1366,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10185:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10165:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10155:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c414e44424153453a20696e646578206f7574206f6620626f756e6473",
															"id": 1369,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10188:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7bf43d6a4b3be47c78912370efffcd1148613cdb99bf3f13b2c54bd0120ef20b",
																"typeString": "literal_string \"LANDBASE: index out of bounds\""
															},
															"value": "LANDBASE: index out of bounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7bf43d6a4b3be47c78912370efffcd1148613cdb99bf3f13b2c54bd0120ef20b",
																"typeString": "literal_string \"LANDBASE: index out of bounds\""
															}
														],
														"id": 1362,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10147:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10147:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1371,
												"nodeType": "ExpressionStatement",
												"src": "10147:73:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1374,
															"name": "_minters",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "10255:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$2120_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														{
															"id": 1375,
															"name": "_index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1355,
															"src": "10265:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_AddressSet_$2120_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1372,
															"name": "EnumerableSet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2407,
															"src": "10238:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_EnumerableSet_$2407_$",
																"typeString": "type(library EnumerableSet)"
															}
														},
														"id": 1373,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "at",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2243,
														"src": "10238:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$2120_storage_ptr_$_t_uint256_$returns$_t_address_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"
														}
													},
													"id": 1376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10238:34:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1361,
												"id": 1377,
												"nodeType": "Return",
												"src": "10231:41:2"
											}
										]
									},
									"functionSelector": "5b7121f8",
									"id": 1379,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1358,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1357,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1439,
												"src": "10108:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "10108:9:2"
										}
									],
									"name": "getMinter",
									"nameLocation": "10070:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "_index",
												"nameLocation": "10088:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "10080:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10080:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10079:16:2"
									},
									"returnParameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "10127:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10127:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10126:9:2"
									},
									"scope": 1392,
									"src": "10061:219:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1390,
										"nodeType": "Block",
										"src": "10345:88:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1383,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "10373:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "10373:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1382,
																"name": "isMinter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1353,
																"src": "10364:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10364:20:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "63616c6c6572206973206e6f7420746865206d696e746572",
															"id": 1386,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10386:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88d7da1b299470dcb9c6dd03b0ef4b745f350eaaf6e449f222d35091be3be430",
																"typeString": "literal_string \"caller is not the minter\""
															},
															"value": "caller is not the minter"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_88d7da1b299470dcb9c6dd03b0ef4b745f350eaaf6e449f222d35091be3be430",
																"typeString": "literal_string \"caller is not the minter\""
															}
														],
														"id": 1381,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10356:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10356:57:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1388,
												"nodeType": "ExpressionStatement",
												"src": "10356:57:2"
											},
											{
												"id": 1389,
												"nodeType": "PlaceholderStatement",
												"src": "10424:1:2"
											}
										]
									},
									"id": 1391,
									"name": "onlyMinter",
									"nameLocation": "10332:10:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10342:2:2"
									},
									"src": "10323:110:2",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1393,
							"src": "166:10270:2",
							"usedErrors": []
						}
					],
					"src": "37:10399:2"
				},
				"id": 2
			},
			"contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							2726
						],
						"Ownable": [
							1496
						]
					},
					"id": 1497,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1394,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:3"
						},
						{
							"absolutePath": "contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 1395,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1497,
							"sourceUnit": 2727,
							"src": "62:30:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1397,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2726,
										"src": "632:7:3"
									},
									"id": 1398,
									"nodeType": "InheritanceSpecifier",
									"src": "632:7:3"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1396,
								"nodeType": "StructuredDocumentation",
								"src": "96:505:3",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 1496,
							"linearizedBaseContracts": [
								1496,
								2726
							],
							"name": "Ownable",
							"nameLocation": "621:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1400,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "663:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 1496,
									"src": "647:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1399,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "647:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 1406,
									"name": "OwnershipTransferred",
									"nameLocation": "684:20:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1402,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "721:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "705:29:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "705:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "752:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "736:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "736:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "704:57:3"
									},
									"src": "678:84:3"
								},
								{
									"body": {
										"id": 1415,
										"nodeType": "Block",
										"src": "883:42:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1411,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2716,
																"src": "904:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "904:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1410,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1495,
														"src": "894:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "894:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1414,
												"nodeType": "ExpressionStatement",
												"src": "894:23:3"
											}
										]
									},
									"documentation": {
										"id": 1407,
										"nodeType": "StructuredDocumentation",
										"src": "770:93:3",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 1416,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "880:2:3"
									},
									"returnParameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "883:0:3"
									},
									"scope": 1496,
									"src": "869:56:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1424,
										"nodeType": "Block",
										"src": "1061:32:3",
										"statements": [
											{
												"expression": {
													"id": 1422,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1400,
													"src": "1079:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1421,
												"id": 1423,
												"nodeType": "Return",
												"src": "1072:13:3"
											}
										]
									},
									"documentation": {
										"id": 1417,
										"nodeType": "StructuredDocumentation",
										"src": "933:67:3",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 1425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1015:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1020:2:3"
									},
									"returnParameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "1052:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1052:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1051:9:3"
									},
									"scope": 1496,
									"src": "1006:87:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1438,
										"nodeType": "Block",
										"src": "1207:99:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1429,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1425,
																	"src": "1226:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1430,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1226:7:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1431,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2716,
																	"src": "1237:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1237:12:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1226:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1434,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1251:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 1428,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1218:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1218:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1436,
												"nodeType": "ExpressionStatement",
												"src": "1218:68:3"
											},
											{
												"id": 1437,
												"nodeType": "PlaceholderStatement",
												"src": "1297:1:3"
											}
										]
									},
									"documentation": {
										"id": 1426,
										"nodeType": "StructuredDocumentation",
										"src": "1101:79:3",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 1439,
									"name": "onlyOwner",
									"nameLocation": "1195:9:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1204:2:3"
									},
									"src": "1186:120:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1452,
										"nodeType": "Block",
										"src": "1711:40:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1740:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1447,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1732:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1446,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1732:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1732:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1445,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1495,
														"src": "1722:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1722:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1451,
												"nodeType": "ExpressionStatement",
												"src": "1722:21:3"
											}
										]
									},
									"documentation": {
										"id": 1440,
										"nodeType": "StructuredDocumentation",
										"src": "1314:337:3",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 1453,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1443,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1442,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1439,
												"src": "1701:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1701:9:3"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1666:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1683:2:3"
									},
									"returnParameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1711:0:3"
									},
									"scope": 1496,
									"src": "1657:94:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1475,
										"nodeType": "Block",
										"src": "1976:122:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1462,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1456,
																"src": "1995:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1465,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2015:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2007:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1463,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2007:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1466,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2007:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1995:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 1468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2019:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 1461,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1987:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1987:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1470,
												"nodeType": "ExpressionStatement",
												"src": "1987:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1472,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1456,
															"src": "2081:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1471,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1495,
														"src": "2071:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2071:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1474,
												"nodeType": "ExpressionStatement",
												"src": "2071:19:3"
											}
										]
									},
									"documentation": {
										"id": 1454,
										"nodeType": "StructuredDocumentation",
										"src": "1759:141:3",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 1476,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1459,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1458,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1439,
												"src": "1966:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1966:9:3"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1915:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1941:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1476,
												"src": "1933:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1933:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1932:18:3"
									},
									"returnParameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1976:0:3"
									},
									"scope": 1496,
									"src": "1906:192:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1494,
										"nodeType": "Block",
										"src": "2151:128:3",
										"statements": [
											{
												"assignments": [
													1482
												],
												"declarations": [
													{
														"constant": false,
														"id": 1482,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2170:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 1494,
														"src": "2162:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1481,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2162:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1484,
												"initialValue": {
													"id": 1483,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1400,
													"src": "2181:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2162:25:3"
											},
											{
												"expression": {
													"id": 1487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1485,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1400,
														"src": "2198:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1486,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1478,
														"src": "2207:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2198:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1488,
												"nodeType": "ExpressionStatement",
												"src": "2198:17:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1490,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1482,
															"src": "2252:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1491,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1478,
															"src": "2262:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1489,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1406,
														"src": "2231:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2231:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1493,
												"nodeType": "EmitStatement",
												"src": "2226:45:3"
											}
										]
									},
									"id": 1495,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setOwner",
									"nameLocation": "2115:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1478,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2133:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1495,
												"src": "2125:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2125:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2124:18:3"
									},
									"returnParameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:3"
									},
									"scope": 1496,
									"src": "2106:173:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1497,
							"src": "603:1679:3",
							"usedErrors": []
						}
					],
					"src": "35:2247:3"
				},
				"id": 3
			},
			"contracts/libraries/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1808
						]
					},
					"id": 1809,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1498,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1499,
								"nodeType": "StructuredDocumentation",
								"src": "219:191:4",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1808,
							"linearizedBaseContracts": [
								1808
							],
							"name": "SafeMath",
							"nameLocation": "420:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1530,
										"nodeType": "Block",
										"src": "653:146:4",
										"statements": [
											{
												"id": 1529,
												"nodeType": "UncheckedBlock",
												"src": "664:128:4",
												"statements": [
													{
														"assignments": [
															1512
														],
														"declarations": [
															{
																"constant": false,
																"id": 1512,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "697:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 1529,
																"src": "689:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1511,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "689:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1516,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1513,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1502,
																"src": "701:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1514,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1504,
																"src": "705:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "701:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "689:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1517,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1512,
																"src": "725:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1518,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1502,
																"src": "729:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "725:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1524,
														"nodeType": "IfStatement",
														"src": "721:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1520,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "740:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1521,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "747:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1522,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "739:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1510,
															"id": 1523,
															"nodeType": "Return",
															"src": "732:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1525,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "772:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1526,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1512,
																	"src": "778:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1527,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "771:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1510,
														"id": 1528,
														"nodeType": "Return",
														"src": "764:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1500,
										"nodeType": "StructuredDocumentation",
										"src": "436:135:4",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1531,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "586:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1502,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "601:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "593:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "593:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "612:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "604:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "604:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "592:22:4"
									},
									"returnParameters": {
										"id": 1510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "638:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1506,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "638:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "644:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "644:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "637:15:4"
									},
									"scope": 1808,
									"src": "577:222:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1558,
										"nodeType": "Block",
										"src": "1028:118:4",
										"statements": [
											{
												"id": 1557,
												"nodeType": "UncheckedBlock",
												"src": "1039:100:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1543,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1536,
																"src": "1068:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1544,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1534,
																"src": "1072:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1068:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1550,
														"nodeType": "IfStatement",
														"src": "1064:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1546,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1083:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1090:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1548,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1082:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1542,
															"id": 1549,
															"nodeType": "Return",
															"src": "1075:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1115:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1552,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1534,
																		"src": "1121:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1553,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1536,
																		"src": "1125:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1121:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1555,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1114:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1542,
														"id": 1556,
														"nodeType": "Return",
														"src": "1107:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1532,
										"nodeType": "StructuredDocumentation",
										"src": "807:139:4",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "961:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "976:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "968:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "968:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "987:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "979:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "979:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "967:22:4"
									},
									"returnParameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "1013:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1538,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1013:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "1019:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1019:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1012:15:4"
									},
									"scope": 1808,
									"src": "952:194:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1600,
										"nodeType": "Block",
										"src": "1377:427:4",
										"statements": [
											{
												"id": 1599,
												"nodeType": "UncheckedBlock",
												"src": "1388:409:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1571,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1562,
																"src": "1650:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1655:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1650:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1578,
														"nodeType": "IfStatement",
														"src": "1646:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1574,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1666:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1672:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1576,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1665:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1570,
															"id": 1577,
															"nodeType": "Return",
															"src": "1658:16:4"
														}
													},
													{
														"assignments": [
															1580
														],
														"declarations": [
															{
																"constant": false,
																"id": 1580,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1697:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 1599,
																"src": "1689:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1579,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1689:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1584,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1581,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1562,
																"src": "1701:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1582,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1564,
																"src": "1705:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1701:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1689:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1587,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1585,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1580,
																	"src": "1725:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1586,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1562,
																	"src": "1729:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1725:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1588,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1564,
																"src": "1734:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1725:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1594,
														"nodeType": "IfStatement",
														"src": "1721:33:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1590,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1745:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1591,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1752:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1592,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1744:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1570,
															"id": 1593,
															"nodeType": "Return",
															"src": "1737:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1777:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1596,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1580,
																	"src": "1783:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1597,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1776:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1570,
														"id": 1598,
														"nodeType": "Return",
														"src": "1769:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1560,
										"nodeType": "StructuredDocumentation",
										"src": "1154:141:4",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1310:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1325:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "1317:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1317:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1564,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1336:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "1328:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1328:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1316:22:4"
									},
									"returnParameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1567,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "1362:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1566,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1362:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "1368:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1368:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1361:15:4"
									},
									"scope": 1808,
									"src": "1301:503:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1628,
										"nodeType": "Block",
										"src": "2036:119:4",
										"statements": [
											{
												"id": 1627,
												"nodeType": "UncheckedBlock",
												"src": "2047:101:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1615,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1613,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1606,
																"src": "2076:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1614,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2081:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2076:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1620,
														"nodeType": "IfStatement",
														"src": "2072:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1616,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2092:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2099:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1618,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2091:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1612,
															"id": 1619,
															"nodeType": "Return",
															"src": "2084:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2124:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1622,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1604,
																		"src": "2130:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1623,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1606,
																		"src": "2134:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2130:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1625,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2123:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1612,
														"id": 1626,
														"nodeType": "Return",
														"src": "2116:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1602,
										"nodeType": "StructuredDocumentation",
										"src": "1812:142:4",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1629,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1969:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1604,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1984:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "1976:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1976:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1995:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "1987:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1987:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1975:22:4"
									},
									"returnParameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1609,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "2021:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1608,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2021:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "2027:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2027:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2020:15:4"
									},
									"scope": 1808,
									"src": "1960:195:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1656,
										"nodeType": "Block",
										"src": "2397:119:4",
										"statements": [
											{
												"id": 1655,
												"nodeType": "UncheckedBlock",
												"src": "2408:101:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1643,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1641,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1634,
																"src": "2437:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1642,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2442:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2437:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1648,
														"nodeType": "IfStatement",
														"src": "2433:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2453:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1645,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1646,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2452:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1640,
															"id": 1647,
															"nodeType": "Return",
															"src": "2445:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1649,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2485:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1650,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1632,
																		"src": "2491:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1651,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1634,
																		"src": "2495:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2491:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1653,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2484:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1640,
														"id": 1654,
														"nodeType": "Return",
														"src": "2477:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1630,
										"nodeType": "StructuredDocumentation",
										"src": "2163:152:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2330:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2345:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "2337:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2337:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2356:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "2348:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2348:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2336:22:4"
									},
									"returnParameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1637,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "2382:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1636,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2382:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1639,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "2388:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2388:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2381:15:4"
									},
									"scope": 1808,
									"src": "2321:195:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1671,
										"nodeType": "Block",
										"src": "2830:31:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1667,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1660,
														"src": "2848:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1668,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1662,
														"src": "2852:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2848:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1666,
												"id": 1670,
												"nodeType": "Return",
												"src": "2841:12:4"
											}
										]
									},
									"documentation": {
										"id": 1658,
										"nodeType": "StructuredDocumentation",
										"src": "2524:233:4",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2772:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2784:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "2776:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2776:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1662,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2795:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "2787:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2787:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2775:22:4"
									},
									"returnParameters": {
										"id": 1666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1665,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "2821:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2821:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2820:9:4"
									},
									"scope": 1808,
									"src": "2763:98:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1686,
										"nodeType": "Block",
										"src": "3211:31:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1682,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1675,
														"src": "3229:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1683,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1677,
														"src": "3233:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3229:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1681,
												"id": 1685,
												"nodeType": "Return",
												"src": "3222:12:4"
											}
										]
									},
									"documentation": {
										"id": 1673,
										"nodeType": "StructuredDocumentation",
										"src": "2869:269:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1687,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3153:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3165:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "3157:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3157:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1677,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3176:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "3168:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3168:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3156:22:4"
									},
									"returnParameters": {
										"id": 1681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1680,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "3202:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3202:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3201:9:4"
									},
									"scope": 1808,
									"src": "3144:98:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1701,
										"nodeType": "Block",
										"src": "3568:31:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1697,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1690,
														"src": "3586:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1698,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1692,
														"src": "3590:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3586:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1696,
												"id": 1700,
												"nodeType": "Return",
												"src": "3579:12:4"
											}
										]
									},
									"documentation": {
										"id": 1688,
										"nodeType": "StructuredDocumentation",
										"src": "3250:245:4",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3510:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1690,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3522:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1702,
												"src": "3514:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3514:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1692,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3533:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1702,
												"src": "3525:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1691,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3525:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3513:22:4"
									},
									"returnParameters": {
										"id": 1696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1702,
												"src": "3559:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3559:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3558:9:4"
									},
									"scope": 1808,
									"src": "3501:98:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1716,
										"nodeType": "Block",
										"src": "3967:31:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1712,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1705,
														"src": "3985:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1713,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1707,
														"src": "3989:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3985:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1711,
												"id": 1715,
												"nodeType": "Return",
												"src": "3978:12:4"
											}
										]
									},
									"documentation": {
										"id": 1703,
										"nodeType": "StructuredDocumentation",
										"src": "3607:287:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3909:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3921:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "3913:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3913:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1707,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3932:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "3924:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3924:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3912:22:4"
									},
									"returnParameters": {
										"id": 1711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1710,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "3958:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3958:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3957:9:4"
									},
									"scope": 1808,
									"src": "3900:98:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1731,
										"nodeType": "Block",
										"src": "4532:31:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1727,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1720,
														"src": "4550:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1728,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1722,
														"src": "4554:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4550:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1726,
												"id": 1730,
												"nodeType": "Return",
												"src": "4543:12:4"
											}
										]
									},
									"documentation": {
										"id": 1718,
										"nodeType": "StructuredDocumentation",
										"src": "4006:453:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1732,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4474:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4486:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1732,
												"src": "4478:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4478:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1722,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4497:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1732,
												"src": "4489:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4489:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4477:22:4"
									},
									"returnParameters": {
										"id": 1726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1725,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1732,
												"src": "4523:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4523:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4522:9:4"
									},
									"scope": 1808,
									"src": "4465:98:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1756,
										"nodeType": "Block",
										"src": "5171:111:4",
										"statements": [
											{
												"id": 1755,
												"nodeType": "UncheckedBlock",
												"src": "5182:93:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1747,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1745,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1737,
																		"src": "5215:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1746,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1735,
																		"src": "5220:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5215:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1748,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1739,
																	"src": "5223:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1744,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5207:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5207:29:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1750,
														"nodeType": "ExpressionStatement",
														"src": "5207:29:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1751,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1735,
																"src": "5258:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1752,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1737,
																"src": "5262:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5258:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1743,
														"id": 1754,
														"nodeType": "Return",
														"src": "5251:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1733,
										"nodeType": "StructuredDocumentation",
										"src": "4571:465:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1757,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "5051:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1735,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5073:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "5065:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1734,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5065:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1737,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5093:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "5085:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5085:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1739,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5119:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "5105:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1738,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5105:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5054:84:4"
									},
									"returnParameters": {
										"id": 1743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1742,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "5162:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5162:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5161:9:4"
									},
									"scope": 1808,
									"src": "5042:240:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1781,
										"nodeType": "Block",
										"src": "5909:110:4",
										"statements": [
											{
												"id": 1780,
												"nodeType": "UncheckedBlock",
												"src": "5920:92:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1772,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1770,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1762,
																		"src": "5953:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1771,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5957:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5953:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1773,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1764,
																	"src": "5960:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1769,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5945:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5945:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1775,
														"nodeType": "ExpressionStatement",
														"src": "5945:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1776,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1760,
																"src": "5995:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1777,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1762,
																"src": "5999:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5995:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1768,
														"id": 1779,
														"nodeType": "Return",
														"src": "5988:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1758,
										"nodeType": "StructuredDocumentation",
										"src": "5290:484:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1782,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5789:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1760,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5811:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "5803:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5803:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1762,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5831:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "5823:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5823:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5857:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "5843:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1763,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5843:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5792:84:4"
									},
									"returnParameters": {
										"id": 1768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1767,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "5900:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5900:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5899:9:4"
									},
									"scope": 1808,
									"src": "5780:239:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1806,
										"nodeType": "Block",
										"src": "6811:110:4",
										"statements": [
											{
												"id": 1805,
												"nodeType": "UncheckedBlock",
												"src": "6822:92:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1797,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1795,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1787,
																		"src": "6855:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1796,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6859:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6855:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1798,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1789,
																	"src": "6862:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1794,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6847:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1799,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6847:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1800,
														"nodeType": "ExpressionStatement",
														"src": "6847:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1801,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1785,
																"src": "6897:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1802,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1787,
																"src": "6901:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6897:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1793,
														"id": 1804,
														"nodeType": "Return",
														"src": "6890:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1783,
										"nodeType": "StructuredDocumentation",
										"src": "6027:649:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1807,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6691:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6713:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "6705:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6705:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1787,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6733:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "6725:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6725:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1789,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6759:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "6745:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1788,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6745:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6694:84:4"
									},
									"returnParameters": {
										"id": 1793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1792,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "6802:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6802:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6801:9:4"
									},
									"scope": 1808,
									"src": "6682:239:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1809,
							"src": "412:6512:4",
							"usedErrors": []
						}
					],
					"src": "35:6889:4"
				},
				"id": 4
			},
			"contracts/structs/EnumerableSet.sol": {
				"ast": {
					"absolutePath": "contracts/structs/EnumerableSet.sol",
					"exportedSymbols": {
						"EnumerableSet": [
							2407
						]
					},
					"id": 2408,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1810,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "EnumerableSet",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1811,
								"nodeType": "StructuredDocumentation",
								"src": "62:709:5",
								"text": " @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported."
							},
							"fullyImplemented": true,
							"id": 2407,
							"linearizedBaseContracts": [
								2407
							],
							"name": "EnumerableSet",
							"nameLocation": "781:13:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "EnumerableSet.Set",
									"id": 1819,
									"members": [
										{
											"constant": false,
											"id": 1814,
											"mutability": "mutable",
											"name": "_values",
											"nameLocation": "1317:7:5",
											"nodeType": "VariableDeclaration",
											"scope": 1819,
											"src": "1307:17:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
												"typeString": "bytes32[]"
											},
											"typeName": {
												"baseType": {
													"id": 1812,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1307:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1813,
												"nodeType": "ArrayTypeName",
												"src": "1307:9:5",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1818,
											"mutability": "mutable",
											"name": "_indexes",
											"nameLocation": "1488:8:5",
											"nodeType": "VariableDeclaration",
											"scope": 1819,
											"src": "1460:36:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
												"typeString": "mapping(bytes32 => uint256)"
											},
											"typeName": {
												"id": 1817,
												"keyType": {
													"id": 1815,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1468:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "1460:27:5",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
													"typeString": "mapping(bytes32 => uint256)"
												},
												"valueType": {
													"id": 1816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1479:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Set",
									"nameLocation": "1258:3:5",
									"nodeType": "StructDefinition",
									"scope": 2407,
									"src": "1251:253:5",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1860,
										"nodeType": "Block",
										"src": "1751:345:5",
										"statements": [
											{
												"condition": {
													"id": 1834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1766:22:5",
													"subExpression": {
														"arguments": [
															{
																"id": 1831,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1823,
																"src": "1777:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$1819_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															{
																"id": 1832,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1825,
																"src": "1782:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_Set_$1819_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1830,
															"name": "_contains",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1964,
															"src": "1767:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1819_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
															}
														},
														"id": 1833,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1767:21:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1858,
													"nodeType": "Block",
													"src": "2050:39:5",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1856,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2072:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1829,
															"id": 1857,
															"nodeType": "Return",
															"src": "2065:12:5"
														}
													]
												},
												"id": 1859,
												"nodeType": "IfStatement",
												"src": "1762:327:5",
												"trueBody": {
													"id": 1855,
													"nodeType": "Block",
													"src": "1790:254:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1840,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1825,
																		"src": "1822:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1835,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1823,
																			"src": "1805:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1819_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1838,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1814,
																		"src": "1805:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "1805:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer,bytes32)"
																	}
																},
																"id": 1841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1805:23:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1842,
															"nodeType": "ExpressionStatement",
															"src": "1805:23:5"
														},
														{
															"expression": {
																"id": 1851,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 1843,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1823,
																			"src": "1966:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1819_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1846,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1818,
																		"src": "1966:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 1847,
																	"indexExpression": {
																		"id": 1845,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1825,
																		"src": "1979:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1966:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"expression": {
																			"id": 1848,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1823,
																			"src": "1988:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1819_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1849,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1814,
																		"src": "1988:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "1988:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1966:40:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1852,
															"nodeType": "ExpressionStatement",
															"src": "1966:40:5"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1853,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2028:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1829,
															"id": 1854,
															"nodeType": "Return",
															"src": "2021:11:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1820,
										"nodeType": "StructuredDocumentation",
										"src": "1512:164:5",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1861,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_add",
									"nameLocation": "1691:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "1708:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "1696:15:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1819_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1822,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1821,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1819,
														"src": "1696:3:5"
													},
													"referencedDeclaration": 1819,
													"src": "1696:3:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1819_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1825,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1721:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "1713:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1824,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1713:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1695:32:5"
									},
									"returnParameters": {
										"id": 1829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1828,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "1745:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1827,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1745:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1744:6:5"
									},
									"scope": 2407,
									"src": "1682:414:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1944,
										"nodeType": "Block",
										"src": "2344:1348:5",
										"statements": [
											{
												"assignments": [
													1873
												],
												"declarations": [
													{
														"constant": false,
														"id": 1873,
														"mutability": "mutable",
														"name": "valueIndex",
														"nameLocation": "2464:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1944,
														"src": "2456:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1872,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2456:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1878,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 1874,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1865,
															"src": "2477:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1819_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 1875,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_indexes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1818,
														"src": "2477:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 1877,
													"indexExpression": {
														"id": 1876,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1867,
														"src": "2490:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2477:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2456:40:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1879,
														"name": "valueIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1873,
														"src": "2513:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1880,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2527:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2513:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1942,
													"nodeType": "Block",
													"src": "3646:39:5",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1940,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3668:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1871,
															"id": 1941,
															"nodeType": "Return",
															"src": "3661:12:5"
														}
													]
												},
												"id": 1943,
												"nodeType": "IfStatement",
												"src": "2509:1176:5",
												"trueBody": {
													"id": 1939,
													"nodeType": "Block",
													"src": "2530:1110:5",
													"statements": [
														{
															"assignments": [
																1883
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1883,
																	"mutability": "mutable",
																	"name": "toDeleteIndex",
																	"nameLocation": "2896:13:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1939,
																	"src": "2888:21:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1882,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2888:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1887,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1886,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1884,
																	"name": "valueIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1873,
																	"src": "2912:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1885,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2925:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2912:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2888:38:5"
														},
														{
															"assignments": [
																1889
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1889,
																	"mutability": "mutable",
																	"name": "lastIndex",
																	"nameLocation": "2949:9:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1939,
																	"src": "2941:17:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1888,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2941:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1895,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1894,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"expression": {
																			"id": 1890,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1865,
																			"src": "2961:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1819_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1891,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1814,
																		"src": "2961:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1892,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "2961:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1893,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2982:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2961:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2941:42:5"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1898,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1896,
																	"name": "lastIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1889,
																	"src": "3004:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 1897,
																	"name": "toDeleteIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1883,
																	"src": "3017:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3004:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1923,
															"nodeType": "IfStatement",
															"src": "3000:405:5",
															"trueBody": {
																"id": 1922,
																"nodeType": "Block",
																"src": "3032:373:5",
																"statements": [
																	{
																		"assignments": [
																			1900
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1900,
																				"mutability": "mutable",
																				"name": "lastvalue",
																				"nameLocation": "3059:9:5",
																				"nodeType": "VariableDeclaration",
																				"scope": 1922,
																				"src": "3051:17:5",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 1899,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3051:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1905,
																		"initialValue": {
																			"baseExpression": {
																				"expression": {
																					"id": 1901,
																					"name": "set",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1865,
																					"src": "3071:3:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$1819_storage_ptr",
																						"typeString": "struct EnumerableSet.Set storage pointer"
																					}
																				},
																				"id": 1902,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "_values",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1814,
																				"src": "3071:11:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																					"typeString": "bytes32[] storage ref"
																				}
																			},
																			"id": 1904,
																			"indexExpression": {
																				"id": 1903,
																				"name": "lastIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1889,
																				"src": "3083:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3071:22:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3051:42:5"
																	},
																	{
																		"expression": {
																			"id": 1912,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 1906,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1865,
																						"src": "3196:3:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$1819_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 1909,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "_values",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1814,
																					"src": "3196:11:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																						"typeString": "bytes32[] storage ref"
																					}
																				},
																				"id": 1910,
																				"indexExpression": {
																					"id": 1908,
																					"name": "toDeleteIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1883,
																					"src": "3208:13:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3196:26:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1911,
																				"name": "lastvalue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1900,
																				"src": "3225:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "3196:38:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 1913,
																		"nodeType": "ExpressionStatement",
																		"src": "3196:38:5"
																	},
																	{
																		"expression": {
																			"id": 1920,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 1914,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1865,
																						"src": "3310:3:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$1819_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 1917,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "_indexes",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1818,
																					"src": "3310:12:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																						"typeString": "mapping(bytes32 => uint256)"
																					}
																				},
																				"id": 1918,
																				"indexExpression": {
																					"id": 1916,
																					"name": "lastvalue",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1900,
																					"src": "3323:9:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3310:23:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1919,
																				"name": "valueIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1873,
																				"src": "3336:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3310:36:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1921,
																		"nodeType": "ExpressionStatement",
																		"src": "3310:36:5"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"expression": {
																			"id": 1924,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1865,
																			"src": "3486:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1819_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1927,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1814,
																		"src": "3486:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1928,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "3486:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer)"
																	}
																},
																"id": 1929,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3486:17:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1930,
															"nodeType": "ExpressionStatement",
															"src": "3486:17:5"
														},
														{
															"expression": {
																"id": 1935,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "3574:26:5",
																"subExpression": {
																	"baseExpression": {
																		"expression": {
																			"id": 1931,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1865,
																			"src": "3581:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1819_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1932,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1818,
																		"src": "3581:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 1934,
																	"indexExpression": {
																		"id": 1933,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1867,
																		"src": "3594:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3581:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1936,
															"nodeType": "ExpressionStatement",
															"src": "3574:26:5"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1937,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3624:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1871,
															"id": 1938,
															"nodeType": "Return",
															"src": "3617:11:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1862,
										"nodeType": "StructuredDocumentation",
										"src": "2104:162:5",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1945,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_remove",
									"nameLocation": "2281:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1865,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2301:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1945,
												"src": "2289:15:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1819_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1864,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1863,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1819,
														"src": "2289:3:5"
													},
													"referencedDeclaration": 1819,
													"src": "2289:3:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1819_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2314:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1945,
												"src": "2306:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1866,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2306:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2288:32:5"
									},
									"returnParameters": {
										"id": 1871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1870,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1945,
												"src": "2338:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1869,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2338:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2337:6:5"
									},
									"scope": 2407,
									"src": "2272:1420:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1963,
										"nodeType": "Block",
										"src": "3857:50:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"id": 1956,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1949,
																"src": "3875:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$1819_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															"id": 1957,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_indexes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1818,
															"src": "3875:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 1959,
														"indexExpression": {
															"id": 1958,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1951,
															"src": "3888:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3875:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1960,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3898:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3875:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1955,
												"id": 1962,
												"nodeType": "Return",
												"src": "3868:31:5"
											}
										]
									},
									"documentation": {
										"id": 1946,
										"nodeType": "StructuredDocumentation",
										"src": "3700:72:5",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1964,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contains",
									"nameLocation": "3787:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1949,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "3809:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "3797:15:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1819_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1948,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1947,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1819,
														"src": "3797:3:5"
													},
													"referencedDeclaration": 1819,
													"src": "3797:3:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1819_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3822:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "3814:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1950,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3814:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:32:5"
									},
									"returnParameters": {
										"id": 1955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1954,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "3851:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1953,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3851:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3850:6:5"
									},
									"scope": 2407,
									"src": "3778:129:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1977,
										"nodeType": "Block",
										"src": "4058:44:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 1973,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1968,
															"src": "4076:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1819_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 1974,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1814,
														"src": "4076:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 1975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4076:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1972,
												"id": 1976,
												"nodeType": "Return",
												"src": "4069:25:5"
											}
										]
									},
									"documentation": {
										"id": 1965,
										"nodeType": "StructuredDocumentation",
										"src": "3915:72:5",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 1978,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_length",
									"nameLocation": "4002:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4022:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "4010:15:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1819_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1967,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1966,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1819,
														"src": "4010:3:5"
													},
													"referencedDeclaration": 1819,
													"src": "4010:3:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1819_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4009:17:5"
									},
									"returnParameters": {
										"id": 1972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1971,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "4049:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4049:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4048:9:5"
									},
									"scope": 2407,
									"src": "3993:109:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1994,
										"nodeType": "Block",
										"src": "4532:44:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 1989,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1982,
															"src": "4550:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1819_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 1990,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1814,
														"src": "4550:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 1992,
													"indexExpression": {
														"id": 1991,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1984,
														"src": "4562:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4550:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1988,
												"id": 1993,
												"nodeType": "Return",
												"src": "4543:25:5"
											}
										]
									},
									"documentation": {
										"id": 1979,
										"nodeType": "StructuredDocumentation",
										"src": "4110:340:5",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1995,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_at",
									"nameLocation": "4465:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1982,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4481:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1995,
												"src": "4469:15:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1819_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1981,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1980,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1819,
														"src": "4469:3:5"
													},
													"referencedDeclaration": 1819,
													"src": "4469:3:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1819_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1984,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "4494:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1995,
												"src": "4486:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4468:32:5"
									},
									"returnParameters": {
										"id": 1988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1987,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1995,
												"src": "4523:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1986,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4523:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4522:9:5"
									},
									"scope": 2407,
									"src": "4456:120:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2008,
										"nodeType": "Block",
										"src": "5200:37:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2005,
														"name": "set",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1999,
														"src": "5218:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Set_$1819_storage_ptr",
															"typeString": "struct EnumerableSet.Set storage pointer"
														}
													},
													"id": 2006,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_values",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1814,
													"src": "5218:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
														"typeString": "bytes32[] storage ref"
													}
												},
												"functionReturnParameters": 2004,
												"id": 2007,
												"nodeType": "Return",
												"src": "5211:18:5"
											}
										]
									},
									"documentation": {
										"id": 1996,
										"nodeType": "StructuredDocumentation",
										"src": "4584:536:5",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 2009,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_values",
									"nameLocation": "5135:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1999,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5155:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 2009,
												"src": "5143:15:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1819_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1998,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1997,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1819,
														"src": "5143:3:5"
													},
													"referencedDeclaration": 1819,
													"src": "5143:3:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1819_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5142:17:5"
									},
									"returnParameters": {
										"id": 2004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2003,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2009,
												"src": "5182:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 2001,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "5182:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 2002,
													"nodeType": "ArrayTypeName",
													"src": "5182:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5181:18:5"
									},
									"scope": 2407,
									"src": "5126:111:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"canonicalName": "EnumerableSet.Bytes32Set",
									"id": 2013,
									"members": [
										{
											"constant": false,
											"id": 2012,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "5299:6:5",
											"nodeType": "VariableDeclaration",
											"scope": 2013,
											"src": "5295:10:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$1819_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 2011,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2010,
													"name": "Set",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1819,
													"src": "5295:3:5"
												},
												"referencedDeclaration": 1819,
												"src": "5295:3:5",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1819_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Set",
									"nameLocation": "5273:10:5",
									"nodeType": "StructDefinition",
									"scope": 2407,
									"src": "5266:47:5",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2030,
										"nodeType": "Block",
										"src": "5567:49:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2025,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2017,
																"src": "5590:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$2013_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 2026,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2012,
															"src": "5590:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1819_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 2027,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2019,
															"src": "5602:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1819_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2024,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1861,
														"src": "5585:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1819_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5585:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2023,
												"id": 2029,
												"nodeType": "Return",
												"src": "5578:30:5"
											}
										]
									},
									"documentation": {
										"id": 2014,
										"nodeType": "StructuredDocumentation",
										"src": "5321:164:5",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 2031,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "5500:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2017,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5523:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 2031,
												"src": "5504:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$2013_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 2016,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2015,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2013,
														"src": "5504:10:5"
													},
													"referencedDeclaration": 2013,
													"src": "5504:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$2013_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2019,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5536:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2031,
												"src": "5528:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2018,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5528:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5503:39:5"
									},
									"returnParameters": {
										"id": 2023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2022,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2031,
												"src": "5561:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2021,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5561:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5560:6:5"
									},
									"scope": 2407,
									"src": "5491:125:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2048,
										"nodeType": "Block",
										"src": "5871:52:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2043,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2035,
																"src": "5897:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$2013_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 2044,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2012,
															"src": "5897:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1819_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 2045,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2037,
															"src": "5909:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1819_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2042,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1945,
														"src": "5889:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1819_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5889:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2041,
												"id": 2047,
												"nodeType": "Return",
												"src": "5882:33:5"
											}
										]
									},
									"documentation": {
										"id": 2032,
										"nodeType": "StructuredDocumentation",
										"src": "5624:162:5",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 2049,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "5801:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2035,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5827:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 2049,
												"src": "5808:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$2013_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 2034,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2033,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2013,
														"src": "5808:10:5"
													},
													"referencedDeclaration": 2013,
													"src": "5808:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$2013_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2037,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5840:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2049,
												"src": "5832:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2036,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5832:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5807:39:5"
									},
									"returnParameters": {
										"id": 2041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2040,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2049,
												"src": "5865:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2039,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5865:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5864:6:5"
									},
									"scope": 2407,
									"src": "5792:131:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2066,
										"nodeType": "Block",
										"src": "6095:54:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2061,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2053,
																"src": "6123:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$2013_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 2062,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2012,
															"src": "6123:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1819_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 2063,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2055,
															"src": "6135:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1819_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2060,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1964,
														"src": "6113:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1819_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 2064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6113:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2059,
												"id": 2065,
												"nodeType": "Return",
												"src": "6106:35:5"
											}
										]
									},
									"documentation": {
										"id": 2050,
										"nodeType": "StructuredDocumentation",
										"src": "5931:72:5",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 2067,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "6018:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2053,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6046:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 2067,
												"src": "6027:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$2013_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 2052,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2051,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2013,
														"src": "6027:10:5"
													},
													"referencedDeclaration": 2013,
													"src": "6027:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$2013_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2055,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2067,
												"src": "6051:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2054,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6026:39:5"
									},
									"returnParameters": {
										"id": 2059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2058,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2067,
												"src": "6089:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2057,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6089:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6088:6:5"
									},
									"scope": 2407,
									"src": "6009:140:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2081,
										"nodeType": "Block",
										"src": "6307:45:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2077,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2071,
																"src": "6333:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$2013_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 2078,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2012,
															"src": "6333:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1819_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1819_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 2076,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1978,
														"src": "6325:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1819_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 2079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6325:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2075,
												"id": 2080,
												"nodeType": "Return",
												"src": "6318:26:5"
											}
										]
									},
									"documentation": {
										"id": 2068,
										"nodeType": "StructuredDocumentation",
										"src": "6157:72:5",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 2082,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "6244:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2071,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6270:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 2082,
												"src": "6251:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$2013_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 2070,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2069,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2013,
														"src": "6251:10:5"
													},
													"referencedDeclaration": 2013,
													"src": "6251:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$2013_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6250:24:5"
									},
									"returnParameters": {
										"id": 2075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2074,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2082,
												"src": "6298:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2073,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6298:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6297:9:5"
									},
									"scope": 2407,
									"src": "6235:117:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2099,
										"nodeType": "Block",
										"src": "6789:48:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2094,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2086,
																"src": "6811:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$2013_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 2095,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2012,
															"src": "6811:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1819_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 2096,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2088,
															"src": "6823:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1819_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2093,
														"name": "_at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1995,
														"src": "6807:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1819_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
														}
													},
													"id": 2097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6807:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2092,
												"id": 2098,
												"nodeType": "Return",
												"src": "6800:29:5"
											}
										]
									},
									"documentation": {
										"id": 2083,
										"nodeType": "StructuredDocumentation",
										"src": "6360:340:5",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 2100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "6715:2:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2086,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6737:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 2100,
												"src": "6718:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$2013_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 2085,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2084,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2013,
														"src": "6718:10:5"
													},
													"referencedDeclaration": 2013,
													"src": "6718:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$2013_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2088,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "6750:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2100,
												"src": "6742:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2087,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6742:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6717:39:5"
									},
									"returnParameters": {
										"id": 2092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2091,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2100,
												"src": "6780:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2090,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6780:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6779:9:5"
									},
									"scope": 2407,
									"src": "6706:131:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2115,
										"nodeType": "Block",
										"src": "7468:45:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2111,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2104,
																"src": "7494:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$2013_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 2112,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2012,
															"src": "7494:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1819_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1819_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 2110,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2009,
														"src": "7486:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1819_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 2113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7486:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"functionReturnParameters": 2109,
												"id": 2114,
												"nodeType": "Return",
												"src": "7479:26:5"
											}
										]
									},
									"documentation": {
										"id": 2101,
										"nodeType": "StructuredDocumentation",
										"src": "6845:536:5",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 2116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "7396:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2104,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7422:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 2116,
												"src": "7403:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$2013_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 2103,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2102,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2013,
														"src": "7403:10:5"
													},
													"referencedDeclaration": 2013,
													"src": "7403:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$2013_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7402:24:5"
									},
									"returnParameters": {
										"id": 2109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2108,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2116,
												"src": "7450:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 2106,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "7450:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 2107,
													"nodeType": "ArrayTypeName",
													"src": "7450:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7449:18:5"
									},
									"scope": 2407,
									"src": "7387:126:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.AddressSet",
									"id": 2120,
									"members": [
										{
											"constant": false,
											"id": 2119,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "7575:6:5",
											"nodeType": "VariableDeclaration",
											"scope": 2120,
											"src": "7571:10:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$1819_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 2118,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2117,
													"name": "Set",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1819,
													"src": "7571:3:5"
												},
												"referencedDeclaration": 1819,
												"src": "7571:3:5",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1819_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSet",
									"nameLocation": "7549:10:5",
									"nodeType": "StructDefinition",
									"scope": 2407,
									"src": "7542:47:5",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2146,
										"nodeType": "Block",
										"src": "7843:76:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2132,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2124,
																"src": "7866:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$2120_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 2133,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2119,
															"src": "7866:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1819_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2140,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2126,
																					"src": "7902:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2139,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7894:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 2138,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "7894:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2141,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7894:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 2137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7886:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2136,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "7886:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2142,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7886:23:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2135,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7878:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2134,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "7878:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 2143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7878:32:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1819_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2131,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1861,
														"src": "7861:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1819_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7861:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2130,
												"id": 2145,
												"nodeType": "Return",
												"src": "7854:57:5"
											}
										]
									},
									"documentation": {
										"id": 2121,
										"nodeType": "StructuredDocumentation",
										"src": "7597:164:5",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 2147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "7776:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2124,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7799:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "7780:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$2120_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 2123,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2122,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2120,
														"src": "7780:10:5"
													},
													"referencedDeclaration": 2120,
													"src": "7780:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$2120_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2126,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7812:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "7804:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7804:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7779:39:5"
									},
									"returnParameters": {
										"id": 2130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2129,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "7837:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2128,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7837:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7836:6:5"
									},
									"scope": 2407,
									"src": "7767:152:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2173,
										"nodeType": "Block",
										"src": "8174:79:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2159,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2151,
																"src": "8200:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$2120_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 2160,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2119,
															"src": "8200:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1819_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2167,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2153,
																					"src": "8236:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2166,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8228:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 2165,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8228:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2168,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8228:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 2164,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8220:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2163,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8220:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2169,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8220:23:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2162,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8212:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2161,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8212:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 2170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8212:32:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1819_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2158,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1945,
														"src": "8192:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1819_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8192:53:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2157,
												"id": 2172,
												"nodeType": "Return",
												"src": "8185:60:5"
											}
										]
									},
									"documentation": {
										"id": 2148,
										"nodeType": "StructuredDocumentation",
										"src": "7927:162:5",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 2174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "8104:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2151,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8130:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 2174,
												"src": "8111:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$2120_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 2150,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2149,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2120,
														"src": "8111:10:5"
													},
													"referencedDeclaration": 2120,
													"src": "8111:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$2120_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2153,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8143:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2174,
												"src": "8135:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8135:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8110:39:5"
									},
									"returnParameters": {
										"id": 2157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2174,
												"src": "8168:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2155,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8168:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8167:6:5"
									},
									"scope": 2407,
									"src": "8095:158:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2200,
										"nodeType": "Block",
										"src": "8425:81:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2186,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2178,
																"src": "8453:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$2120_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 2187,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2119,
															"src": "8453:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1819_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2194,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2180,
																					"src": "8489:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2193,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8481:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 2192,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8481:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2195,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8481:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 2191,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8473:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2190,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8473:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8473:23:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2189,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8465:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2188,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8465:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 2197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8465:32:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1819_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2185,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1964,
														"src": "8443:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1819_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 2198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8443:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2184,
												"id": 2199,
												"nodeType": "Return",
												"src": "8436:62:5"
											}
										]
									},
									"documentation": {
										"id": 2175,
										"nodeType": "StructuredDocumentation",
										"src": "8261:72:5",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 2201,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "8348:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2178,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8376:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 2201,
												"src": "8357:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$2120_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 2177,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2176,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2120,
														"src": "8357:10:5"
													},
													"referencedDeclaration": 2120,
													"src": "8357:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$2120_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2180,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8389:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2201,
												"src": "8381:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8381:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8356:39:5"
									},
									"returnParameters": {
										"id": 2184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2201,
												"src": "8419:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2182,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8419:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8418:6:5"
									},
									"scope": 2407,
									"src": "8339:167:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2215,
										"nodeType": "Block",
										"src": "8664:45:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2211,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2205,
																"src": "8690:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$2120_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 2212,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2119,
															"src": "8690:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1819_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1819_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 2210,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1978,
														"src": "8682:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1819_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 2213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8682:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2209,
												"id": 2214,
												"nodeType": "Return",
												"src": "8675:26:5"
											}
										]
									},
									"documentation": {
										"id": 2202,
										"nodeType": "StructuredDocumentation",
										"src": "8514:72:5",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 2216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "8601:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2205,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8627:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 2216,
												"src": "8608:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$2120_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 2204,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2203,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2120,
														"src": "8608:10:5"
													},
													"referencedDeclaration": 2120,
													"src": "8608:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$2120_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8607:24:5"
									},
									"returnParameters": {
										"id": 2209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2216,
												"src": "8655:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8655:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8654:9:5"
									},
									"scope": 2407,
									"src": "8592:117:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2242,
										"nodeType": "Block",
										"src": "9146:75:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 2234,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2220,
																						"src": "9192:3:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_AddressSet_$2120_storage_ptr",
																							"typeString": "struct EnumerableSet.AddressSet storage pointer"
																						}
																					},
																					"id": 2235,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "_inner",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2119,
																					"src": "9192:10:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$1819_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					}
																				},
																				{
																					"id": 2236,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2222,
																					"src": "9204:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_struct$_Set_$1819_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2233,
																				"name": "_at",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1995,
																				"src": "9188:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1819_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																					"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																				}
																			},
																			"id": 2237,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9188:22:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 2232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9180:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2231,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9180:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9180:31:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2230,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9172:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 2229,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "9172:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 2239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9172:40:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 2228,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9164:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 2227,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9164:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 2240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9164:49:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2226,
												"id": 2241,
												"nodeType": "Return",
												"src": "9157:56:5"
											}
										]
									},
									"documentation": {
										"id": 2217,
										"nodeType": "StructuredDocumentation",
										"src": "8717:340:5",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 2243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "9072:2:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2220,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9094:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 2243,
												"src": "9075:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$2120_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 2219,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2218,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2120,
														"src": "9075:10:5"
													},
													"referencedDeclaration": 2120,
													"src": "9075:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$2120_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2222,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "9107:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2243,
												"src": "9099:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9099:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9074:39:5"
									},
									"returnParameters": {
										"id": 2226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2243,
												"src": "9137:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9137:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9136:9:5"
									},
									"scope": 2407,
									"src": "9063:158:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2272,
										"nodeType": "Block",
										"src": "9852:185:5",
										"statements": [
											{
												"assignments": [
													2257
												],
												"declarations": [
													{
														"constant": false,
														"id": 2257,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "9880:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 2272,
														"src": "9863:22:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 2255,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "9863:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 2256,
															"nodeType": "ArrayTypeName",
															"src": "9863:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2262,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2259,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2247,
																"src": "9896:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$2120_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 2260,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2119,
															"src": "9896:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1819_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1819_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 2258,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2009,
														"src": "9888:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1819_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 2261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9888:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9863:44:5"
											},
											{
												"assignments": [
													2267
												],
												"declarations": [
													{
														"constant": false,
														"id": 2267,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9935:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 2272,
														"src": "9918:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 2265,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9918:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2266,
															"nodeType": "ArrayTypeName",
															"src": "9918:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2268,
												"nodeType": "VariableDeclarationStatement",
												"src": "9918:23:5"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "9963:41:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9978:15:5",
															"value": {
																"name": "store",
																"nodeType": "YulIdentifier",
																"src": "9988:5:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "9978:6:5"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2267,
														"isOffset": false,
														"isSlot": false,
														"src": "9978:6:5",
														"valueSize": 1
													},
													{
														"declaration": 2257,
														"isOffset": false,
														"isSlot": false,
														"src": "9988:5:5",
														"valueSize": 1
													}
												],
												"id": 2269,
												"nodeType": "InlineAssembly",
												"src": "9954:50:5"
											},
											{
												"expression": {
													"id": 2270,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2267,
													"src": "10023:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"functionReturnParameters": 2252,
												"id": 2271,
												"nodeType": "Return",
												"src": "10016:13:5"
											}
										]
									},
									"documentation": {
										"id": 2244,
										"nodeType": "StructuredDocumentation",
										"src": "9229:536:5",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 2273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "9780:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2247,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9806:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 2273,
												"src": "9787:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$2120_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 2246,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2245,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2120,
														"src": "9787:10:5"
													},
													"referencedDeclaration": 2120,
													"src": "9787:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$2120_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9786:24:5"
									},
									"returnParameters": {
										"id": 2252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2251,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2273,
												"src": "9834:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2249,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "9834:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2250,
													"nodeType": "ArrayTypeName",
													"src": "9834:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9833:18:5"
									},
									"scope": 2407,
									"src": "9771:266:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.UintSet",
									"id": 2277,
									"members": [
										{
											"constant": false,
											"id": 2276,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "10093:6:5",
											"nodeType": "VariableDeclaration",
											"scope": 2277,
											"src": "10089:10:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$1819_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 2275,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2274,
													"name": "Set",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1819,
													"src": "10089:3:5"
												},
												"referencedDeclaration": 1819,
												"src": "10089:3:5",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1819_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UintSet",
									"nameLocation": "10070:7:5",
									"nodeType": "StructDefinition",
									"scope": 2407,
									"src": "10063:44:5",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2297,
										"nodeType": "Block",
										"src": "10358:58:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2289,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2281,
																"src": "10381:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$2277_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 2290,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2276,
															"src": "10381:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1819_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 2293,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2283,
																	"src": "10401:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2292,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10393:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2291,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "10393:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 2294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10393:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1819_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2288,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1861,
														"src": "10376:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1819_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10376:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2287,
												"id": 2296,
												"nodeType": "Return",
												"src": "10369:39:5"
											}
										]
									},
									"documentation": {
										"id": 2278,
										"nodeType": "StructuredDocumentation",
										"src": "10115:164:5",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 2298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "10294:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2281,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10314:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "10298:19:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$2277_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 2280,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2279,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2277,
														"src": "10298:7:5"
													},
													"referencedDeclaration": 2277,
													"src": "10298:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$2277_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10327:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "10319:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10319:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10297:36:5"
									},
									"returnParameters": {
										"id": 2287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "10352:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10352:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10351:6:5"
									},
									"scope": 2407,
									"src": "10285:131:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2318,
										"nodeType": "Block",
										"src": "10668:61:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2310,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2302,
																"src": "10694:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$2277_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 2311,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2276,
															"src": "10694:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1819_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 2314,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2304,
																	"src": "10714:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2313,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10706:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2312,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "10706:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 2315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10706:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1819_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2309,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1945,
														"src": "10686:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1819_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10686:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2308,
												"id": 2317,
												"nodeType": "Return",
												"src": "10679:42:5"
											}
										]
									},
									"documentation": {
										"id": 2299,
										"nodeType": "StructuredDocumentation",
										"src": "10424:162:5",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 2319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "10601:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2302,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10624:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 2319,
												"src": "10608:19:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$2277_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 2301,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2300,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2277,
														"src": "10608:7:5"
													},
													"referencedDeclaration": 2277,
													"src": "10608:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$2277_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2304,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10637:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2319,
												"src": "10629:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10629:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10607:36:5"
									},
									"returnParameters": {
										"id": 2308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2307,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2319,
												"src": "10662:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2306,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10662:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10661:6:5"
									},
									"scope": 2407,
									"src": "10592:137:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2339,
										"nodeType": "Block",
										"src": "10898:63:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2331,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2323,
																"src": "10926:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$2277_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 2332,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2276,
															"src": "10926:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1819_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 2335,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2325,
																	"src": "10946:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2334,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10938:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2333,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "10938:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 2336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10938:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1819_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2330,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1964,
														"src": "10916:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1819_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 2337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10916:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2329,
												"id": 2338,
												"nodeType": "Return",
												"src": "10909:44:5"
											}
										]
									},
									"documentation": {
										"id": 2320,
										"nodeType": "StructuredDocumentation",
										"src": "10737:72:5",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 2340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "10824:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2323,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10849:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 2340,
												"src": "10833:19:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$2277_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 2322,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2321,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2277,
														"src": "10833:7:5"
													},
													"referencedDeclaration": 2277,
													"src": "10833:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$2277_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2325,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10862:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2340,
												"src": "10854:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10854:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10832:36:5"
									},
									"returnParameters": {
										"id": 2329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2340,
												"src": "10892:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2327,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10892:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10891:6:5"
									},
									"scope": 2407,
									"src": "10815:146:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2354,
										"nodeType": "Block",
										"src": "11116:45:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2350,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2344,
																"src": "11142:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$2277_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 2351,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2276,
															"src": "11142:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1819_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1819_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 2349,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1978,
														"src": "11134:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1819_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 2352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11134:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2348,
												"id": 2353,
												"nodeType": "Return",
												"src": "11127:26:5"
											}
										]
									},
									"documentation": {
										"id": 2341,
										"nodeType": "StructuredDocumentation",
										"src": "10969:72:5",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 2355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "11056:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2344,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11079:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 2355,
												"src": "11063:19:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$2277_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 2343,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2342,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2277,
														"src": "11063:7:5"
													},
													"referencedDeclaration": 2277,
													"src": "11063:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$2277_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11062:21:5"
									},
									"returnParameters": {
										"id": 2348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2347,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2355,
												"src": "11107:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11107:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11106:9:5"
									},
									"scope": 2407,
									"src": "11047:114:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2375,
										"nodeType": "Block",
										"src": "11595:57:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2369,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2359,
																		"src": "11625:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintSet_$2277_storage_ptr",
																			"typeString": "struct EnumerableSet.UintSet storage pointer"
																		}
																	},
																	"id": 2370,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2276,
																	"src": "11625:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Set_$1819_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	}
																},
																{
																	"id": 2371,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2361,
																	"src": "11637:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Set_$1819_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2368,
																"name": "_at",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1995,
																"src": "11621:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1819_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																}
															},
															"id": 2372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11621:22:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2367,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11613:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 2366,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11613:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 2373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11613:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2365,
												"id": 2374,
												"nodeType": "Return",
												"src": "11606:38:5"
											}
										]
									},
									"documentation": {
										"id": 2356,
										"nodeType": "StructuredDocumentation",
										"src": "11169:340:5",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 2376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "11524:2:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2359,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11543:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 2376,
												"src": "11527:19:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$2277_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 2358,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2357,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2277,
														"src": "11527:7:5"
													},
													"referencedDeclaration": 2277,
													"src": "11527:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$2277_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2361,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "11556:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2376,
												"src": "11548:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11548:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11526:36:5"
									},
									"returnParameters": {
										"id": 2365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2364,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2376,
												"src": "11586:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11586:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11585:9:5"
									},
									"scope": 2407,
									"src": "11515:137:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2405,
										"nodeType": "Block",
										"src": "12280:185:5",
										"statements": [
											{
												"assignments": [
													2390
												],
												"declarations": [
													{
														"constant": false,
														"id": 2390,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "12308:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 2405,
														"src": "12291:22:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 2388,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "12291:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 2389,
															"nodeType": "ArrayTypeName",
															"src": "12291:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2395,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2392,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2380,
																"src": "12324:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$2277_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 2393,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2276,
															"src": "12324:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1819_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1819_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 2391,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2009,
														"src": "12316:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1819_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 2394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12316:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12291:44:5"
											},
											{
												"assignments": [
													2400
												],
												"declarations": [
													{
														"constant": false,
														"id": 2400,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12363:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 2405,
														"src": "12346:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2398,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12346:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2399,
															"nodeType": "ArrayTypeName",
															"src": "12346:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2401,
												"nodeType": "VariableDeclarationStatement",
												"src": "12346:23:5"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "12391:41:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12406:15:5",
															"value": {
																"name": "store",
																"nodeType": "YulIdentifier",
																"src": "12416:5:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "12406:6:5"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2400,
														"isOffset": false,
														"isSlot": false,
														"src": "12406:6:5",
														"valueSize": 1
													},
													{
														"declaration": 2390,
														"isOffset": false,
														"isSlot": false,
														"src": "12416:5:5",
														"valueSize": 1
													}
												],
												"id": 2402,
												"nodeType": "InlineAssembly",
												"src": "12382:50:5"
											},
											{
												"expression": {
													"id": 2403,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2400,
													"src": "12451:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 2385,
												"id": 2404,
												"nodeType": "Return",
												"src": "12444:13:5"
											}
										]
									},
									"documentation": {
										"id": 2377,
										"nodeType": "StructuredDocumentation",
										"src": "11660:536:5",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 2406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "12211:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2380,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "12234:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 2406,
												"src": "12218:19:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$2277_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 2379,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2378,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2277,
														"src": "12218:7:5"
													},
													"referencedDeclaration": 2277,
													"src": "12218:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$2277_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12217:21:5"
									},
									"returnParameters": {
										"id": 2385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2406,
												"src": "12262:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2382,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12262:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2383,
													"nodeType": "ArrayTypeName",
													"src": "12262:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12261:18:5"
									},
									"scope": 2407,
									"src": "12202:263:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2408,
							"src": "773:11695:5",
							"usedErrors": []
						}
					],
					"src": "35:12433:5"
				},
				"id": 5
			},
			"contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							2704
						]
					},
					"id": 2705,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2409,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2410,
								"nodeType": "StructuredDocumentation",
								"src": "62:69:6",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 2704,
							"linearizedBaseContracts": [
								2704
							],
							"name": "Address",
							"nameLocation": "141:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2426,
										"nodeType": "Block",
										"src": "809:321:6",
										"statements": [
											{
												"assignments": [
													2419
												],
												"declarations": [
													{
														"constant": false,
														"id": 2419,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "1019:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 2426,
														"src": "1011:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2418,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1011:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2420,
												"nodeType": "VariableDeclarationStatement",
												"src": "1011:12:6"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1043:54:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1058:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1078:7:6"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1066:11:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1066:20:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1058:4:6"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2413,
														"isOffset": false,
														"isSlot": false,
														"src": "1078:7:6",
														"valueSize": 1
													},
													{
														"declaration": 2419,
														"isOffset": false,
														"isSlot": false,
														"src": "1058:4:6",
														"valueSize": 1
													}
												],
												"id": 2421,
												"nodeType": "InlineAssembly",
												"src": "1034:63:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2422,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2419,
														"src": "1114:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2423,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1121:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1114:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2417,
												"id": 2425,
												"nodeType": "Return",
												"src": "1107:15:6"
											}
										]
									},
									"documentation": {
										"id": 2411,
										"nodeType": "StructuredDocumentation",
										"src": "156:581:6",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 2427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "752:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2413,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "771:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2427,
												"src": "763:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "763:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "762:17:6"
									},
									"returnParameters": {
										"id": 2417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2416,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2427,
												"src": "803:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2415,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "803:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:6:6"
									},
									"scope": 2704,
									"src": "743:387:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2460,
										"nodeType": "Block",
										"src": "2136:246:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2438,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2163:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$2704",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$2704",
																				"typeString": "library Address"
																			}
																		],
																		"id": 2437,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2155:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2436,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2155:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2155:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2155:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2441,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2432,
																"src": "2180:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2155:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 2443,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2188:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 2435,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2147:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2147:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2445,
												"nodeType": "ExpressionStatement",
												"src": "2147:73:6"
											},
											{
												"assignments": [
													2447,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2447,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2239:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 2460,
														"src": "2234:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2446,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2234:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 2454,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 2452,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2282:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 2448,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2430,
																"src": "2252:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 2449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2252:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2451,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2450,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2432,
																"src": "2274:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2252:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2252:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2233:52:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2456,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2447,
															"src": "2304:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 2457,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2313:60:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 2455,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2296:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2296:78:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2459,
												"nodeType": "ExpressionStatement",
												"src": "2296:78:6"
											}
										]
									},
									"documentation": {
										"id": 2428,
										"nodeType": "StructuredDocumentation",
										"src": "1138:921:6",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 2461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2074:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2430,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2100:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2461,
												"src": "2084:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2084:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2432,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2119:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2461,
												"src": "2111:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2111:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2083:43:6"
									},
									"returnParameters": {
										"id": 2434,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2136:0:6"
									},
									"scope": 2704,
									"src": "2065:317:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2477,
										"nodeType": "Block",
										"src": "3233:86:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2472,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2464,
															"src": "3264:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2473,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2466,
															"src": "3272:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 2474,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3278:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 2471,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2478,
															2498
														],
														"referencedDeclaration": 2498,
														"src": "3251:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 2475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3251:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2470,
												"id": 2476,
												"nodeType": "Return",
												"src": "3244:67:6"
											}
										]
									},
									"documentation": {
										"id": 2462,
										"nodeType": "StructuredDocumentation",
										"src": "2390:748:6",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 2478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3153:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2464,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3174:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2478,
												"src": "3166:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3166:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2466,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3195:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2478,
												"src": "3182:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2465,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3182:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:35:6"
									},
									"returnParameters": {
										"id": 2470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2478,
												"src": "3219:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2468,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3219:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:6"
									},
									"scope": 2704,
									"src": "3144:175:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2497,
										"nodeType": "Block",
										"src": "3700:78:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2491,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2481,
															"src": "3740:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2492,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2483,
															"src": "3748:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 2493,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3754:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 2494,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2485,
															"src": "3757:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2490,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2518,
															2568
														],
														"referencedDeclaration": 2568,
														"src": "3718:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 2495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3718:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2489,
												"id": 2496,
												"nodeType": "Return",
												"src": "3711:59:6"
											}
										]
									},
									"documentation": {
										"id": 2479,
										"nodeType": "StructuredDocumentation",
										"src": "3327:216:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 2498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3558:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2481,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3589:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2498,
												"src": "3581:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3581:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2483,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3619:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2498,
												"src": "3606:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2482,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3606:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2485,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3648:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 2498,
												"src": "3634:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2484,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3634:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3570:97:6"
									},
									"returnParameters": {
										"id": 2489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2498,
												"src": "3686:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2487,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3686:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3685:14:6"
									},
									"scope": 2704,
									"src": "3549:229:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2517,
										"nodeType": "Block",
										"src": "4300:113:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2511,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2501,
															"src": "4340:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2512,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2503,
															"src": "4348:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2513,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2505,
															"src": "4354:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 2514,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4361:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 2510,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2518,
															2568
														],
														"referencedDeclaration": 2568,
														"src": "4318:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 2515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4318:87:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2509,
												"id": 2516,
												"nodeType": "Return",
												"src": "4311:94:6"
											}
										]
									},
									"documentation": {
										"id": 2499,
										"nodeType": "StructuredDocumentation",
										"src": "3786:361:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 2518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4162:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2501,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4202:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2518,
												"src": "4194:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4194:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2503,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4232:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2518,
												"src": "4219:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2502,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4219:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2505,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4255:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2518,
												"src": "4247:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4247:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4183:84:6"
									},
									"returnParameters": {
										"id": 2509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2508,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2518,
												"src": "4286:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2507,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4286:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4285:14:6"
									},
									"scope": 2704,
									"src": "4153:260:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2567,
										"nodeType": "Block",
										"src": "4853:326:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2535,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4880:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$2704",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$2704",
																				"typeString": "library Address"
																			}
																		],
																		"id": 2534,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4872:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2533,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4872:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2536,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4872:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2537,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4872:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2538,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2525,
																"src": "4897:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4872:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 2540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4904:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 2532,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4864:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4864:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2542,
												"nodeType": "ExpressionStatement",
												"src": "4864:81:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2545,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2521,
																	"src": "4975:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2544,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2427,
																"src": "4964:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 2546,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4964:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 2547,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4984:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 2543,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4956:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4956:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2549,
												"nodeType": "ExpressionStatement",
												"src": "4956:60:6"
											},
											{
												"assignments": [
													2551,
													2553
												],
												"declarations": [
													{
														"constant": false,
														"id": 2551,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5035:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 2567,
														"src": "5030:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2550,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5030:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2553,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5057:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 2567,
														"src": "5044:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2552,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5044:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2560,
												"initialValue": {
													"arguments": [
														{
															"id": 2558,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2523,
															"src": "5097:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 2554,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2521,
																"src": "5071:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5071:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2557,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2556,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2525,
																"src": "5090:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5071:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5071:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5029:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2562,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2551,
															"src": "5137:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2563,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2553,
															"src": "5146:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2564,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2527,
															"src": "5158:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2561,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2703,
														"src": "5120:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 2565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5120:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2531,
												"id": 2566,
												"nodeType": "Return",
												"src": "5113:58:6"
											}
										]
									},
									"documentation": {
										"id": 2519,
										"nodeType": "StructuredDocumentation",
										"src": "4421:242:6",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 2568,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4678:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2521,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4718:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2568,
												"src": "4710:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4710:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2523,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4748:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2568,
												"src": "4735:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2522,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4735:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2525,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4771:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2568,
												"src": "4763:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4763:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2527,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4801:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 2568,
												"src": "4787:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2526,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4787:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4699:121:6"
									},
									"returnParameters": {
										"id": 2531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2530,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2568,
												"src": "4839:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2529,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4839:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4838:14:6"
									},
									"scope": 2704,
									"src": "4669:510:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2584,
										"nodeType": "Block",
										"src": "5464:99:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2579,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2571,
															"src": "5501:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2580,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2573,
															"src": "5509:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 2581,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5515:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 2578,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2585,
															2620
														],
														"referencedDeclaration": 2620,
														"src": "5482:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 2582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5482:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2577,
												"id": 2583,
												"nodeType": "Return",
												"src": "5475:80:6"
											}
										]
									},
									"documentation": {
										"id": 2569,
										"nodeType": "StructuredDocumentation",
										"src": "5187:171:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 2585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5373:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2571,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5400:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2585,
												"src": "5392:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5392:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2573,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5421:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2585,
												"src": "5408:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2572,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5408:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5391:35:6"
									},
									"returnParameters": {
										"id": 2577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2576,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2585,
												"src": "5450:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2575,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5450:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5449:14:6"
									},
									"scope": 2704,
									"src": "5364:199:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2619,
										"nodeType": "Block",
										"src": "5917:233:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2599,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2588,
																	"src": "5947:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2598,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2427,
																"src": "5936:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 2600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5936:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 2601,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5956:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 2597,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5928:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5928:67:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2603,
												"nodeType": "ExpressionStatement",
												"src": "5928:67:6"
											},
											{
												"assignments": [
													2605,
													2607
												],
												"declarations": [
													{
														"constant": false,
														"id": 2605,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6014:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 2619,
														"src": "6009:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2604,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6009:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2607,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6036:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 2619,
														"src": "6023:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2606,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6023:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2612,
												"initialValue": {
													"arguments": [
														{
															"id": 2610,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2590,
															"src": "6068:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2608,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2588,
															"src": "6050:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2609,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6050:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 2611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6050:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6008:65:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2614,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2605,
															"src": "6108:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2615,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2607,
															"src": "6117:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2616,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2592,
															"src": "6129:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2613,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2703,
														"src": "6091:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 2617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6091:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2596,
												"id": 2618,
												"nodeType": "Return",
												"src": "6084:58:6"
											}
										]
									},
									"documentation": {
										"id": 2586,
										"nodeType": "StructuredDocumentation",
										"src": "5571:178:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 2620,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5764:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2588,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5801:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2620,
												"src": "5793:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5793:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2590,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5831:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2620,
												"src": "5818:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2589,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5818:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2592,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5860:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 2620,
												"src": "5846:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2591,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5846:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5782:97:6"
									},
									"returnParameters": {
										"id": 2596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2595,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2620,
												"src": "5903:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2594,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5903:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5902:14:6"
									},
									"scope": 2704,
									"src": "5755:395:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2636,
										"nodeType": "Block",
										"src": "6434:103:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2631,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2623,
															"src": "6473:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2632,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2625,
															"src": "6481:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 2633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6487:41:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 2630,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2637,
															2672
														],
														"referencedDeclaration": 2672,
														"src": "6452:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 2634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6452:77:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2629,
												"id": 2635,
												"nodeType": "Return",
												"src": "6445:84:6"
											}
										]
									},
									"documentation": {
										"id": 2621,
										"nodeType": "StructuredDocumentation",
										"src": "6158:173:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 2637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6346:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2623,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6375:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2637,
												"src": "6367:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6367:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2625,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6396:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2637,
												"src": "6383:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2624,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6383:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6366:35:6"
									},
									"returnParameters": {
										"id": 2629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2628,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2637,
												"src": "6420:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2627,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6420:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6419:14:6"
									},
									"scope": 2704,
									"src": "6337:200:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2671,
										"nodeType": "Block",
										"src": "6890:237:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2651,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2640,
																	"src": "6920:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2650,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2427,
																"src": "6909:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 2652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6909:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 2653,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6929:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 2649,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6901:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6901:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2655,
												"nodeType": "ExpressionStatement",
												"src": "6901:69:6"
											},
											{
												"assignments": [
													2657,
													2659
												],
												"declarations": [
													{
														"constant": false,
														"id": 2657,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6989:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 2671,
														"src": "6984:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2656,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6984:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2659,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7011:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 2671,
														"src": "6998:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2658,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6998:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2664,
												"initialValue": {
													"arguments": [
														{
															"id": 2662,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2642,
															"src": "7045:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2660,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2640,
															"src": "7025:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2661,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7025:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 2663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7025:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6983:67:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2666,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2657,
															"src": "7085:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2667,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2659,
															"src": "7094:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2668,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2644,
															"src": "7106:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2665,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2703,
														"src": "7068:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 2669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7068:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2648,
												"id": 2670,
												"nodeType": "Return",
												"src": "7061:58:6"
											}
										]
									},
									"documentation": {
										"id": 2638,
										"nodeType": "StructuredDocumentation",
										"src": "6545:180:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 2672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6740:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2640,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6779:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2672,
												"src": "6771:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6771:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2642,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6809:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2672,
												"src": "6796:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2641,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6796:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2644,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6838:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 2672,
												"src": "6824:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2643,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6824:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6760:97:6"
									},
									"returnParameters": {
										"id": 2648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2647,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2672,
												"src": "6876:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2646,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6876:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6875:14:6"
									},
									"scope": 2704,
									"src": "6731:396:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2702,
										"nodeType": "Block",
										"src": "7519:548:6",
										"statements": [
											{
												"condition": {
													"id": 2684,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2675,
													"src": "7534:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2700,
													"nodeType": "Block",
													"src": "7593:467:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2688,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2677,
																		"src": "7679:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7679:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7699:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7679:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2698,
																"nodeType": "Block",
																"src": "7994:55:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2695,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2679,
																					"src": "8020:12:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 2694,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8013:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 2696,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8013:20:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2697,
																		"nodeType": "ExpressionStatement",
																		"src": "8013:20:6"
																	}
																]
															},
															"id": 2699,
															"nodeType": "IfStatement",
															"src": "7675:374:6",
															"trueBody": {
																"id": 2693,
																"nodeType": "Block",
																"src": "7702:286:6",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7825:148:6",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7848:40:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7877:10:6"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7871:5:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7871:17:6"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7852:15:6",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7921:2:6",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7925:10:6"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7917:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7917:19:6"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7938:15:6"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7910:6:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7910:44:6"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7910:44:6"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 2677,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7877:10:6",
																				"valueSize": 1
																			},
																			{
																				"declaration": 2677,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7925:10:6",
																				"valueSize": 1
																			}
																		],
																		"id": 2692,
																		"nodeType": "InlineAssembly",
																		"src": "7816:157:6"
																	}
																]
															}
														}
													]
												},
												"id": 2701,
												"nodeType": "IfStatement",
												"src": "7530:530:6",
												"trueBody": {
													"id": 2687,
													"nodeType": "Block",
													"src": "7543:44:6",
													"statements": [
														{
															"expression": {
																"id": 2685,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2677,
																"src": "7565:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2683,
															"id": 2686,
															"nodeType": "Return",
															"src": "7558:17:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2673,
										"nodeType": "StructuredDocumentation",
										"src": "7135:214:6",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 2703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7364:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2675,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7396:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2703,
												"src": "7391:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2674,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7391:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2677,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7427:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 2703,
												"src": "7414:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2676,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7414:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2679,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7462:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 2703,
												"src": "7448:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2678,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7448:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7380:101:6"
									},
									"returnParameters": {
										"id": 2683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2682,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2703,
												"src": "7505:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2681,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7505:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7504:14:6"
									},
									"scope": 2704,
									"src": "7355:712:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2705,
							"src": "133:7937:6",
							"usedErrors": []
						}
					],
					"src": "35:8035:6"
				},
				"id": 6
			},
			"contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							2726
						]
					},
					"id": 2727,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2706,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2707,
								"nodeType": "StructuredDocumentation",
								"src": "62:505:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 2726,
							"linearizedBaseContracts": [
								2726
							],
							"name": "Context",
							"nameLocation": "587:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2715,
										"nodeType": "Block",
										"src": "664:36:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2712,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "682:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "682:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2711,
												"id": 2714,
												"nodeType": "Return",
												"src": "675:17:7"
											}
										]
									},
									"id": 2716,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "611:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2708,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "621:2:7"
									},
									"returnParameters": {
										"id": 2711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2710,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2716,
												"src": "655:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:9:7"
									},
									"scope": 2726,
									"src": "602:98:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2724,
										"nodeType": "Block",
										"src": "775:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2721,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "793:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "793:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 2720,
												"id": 2723,
												"nodeType": "Return",
												"src": "786:15:7"
											}
										]
									},
									"id": 2725,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "717:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "725:2:7"
									},
									"returnParameters": {
										"id": 2720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2719,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2725,
												"src": "759:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2718,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "759:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "758:16:7"
									},
									"scope": 2726,
									"src": "708:101:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2727,
							"src": "569:243:7",
							"usedErrors": []
						}
					],
					"src": "35:777:7"
				},
				"id": 7
			}
		}
	}
}
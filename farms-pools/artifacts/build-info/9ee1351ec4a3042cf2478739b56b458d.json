{
	"id": "9ee1351ec4a3042cf2478739b56b458d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"farms-pools/SousChef.sol": {
				"content": "/**\r\n *Submitted for verification at BscScan.com on 2020-09-28\r\n*/\r\n\r\npragma solidity 0.6.12;\r\n\r\n\r\n// \r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\r\n * checks.\r\n *\r\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\r\n * in bugs, because programmers usually assume that an overflow raises an\r\n * error, which is the standard behavior in high level programming languages.\r\n * `SafeMath` restores this intuition by reverting the transaction when an\r\n * operation overflows.\r\n *\r\n * Using this library instead of the unchecked operations eliminates an entire\r\n * class of bugs, so it's recommended to use it always.\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, 'SafeMath: addition overflow');\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, 'SafeMath: subtraction overflow');\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, 'SafeMath: multiplication overflow');\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, 'SafeMath: division by zero');\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, 'SafeMath: modulo by zero');\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts with custom message when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n\r\n    function min(uint256 x, uint256 y) internal pure returns (uint256 z) {\r\n        z = x < y ? x : y;\r\n    }\r\n\r\n    // babylonian method (https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method)\r\n    function sqrt(uint256 y) internal pure returns (uint256 z) {\r\n        if (y > 3) {\r\n            z = y;\r\n            uint256 x = y / 2 + 1;\r\n            while (x < z) {\r\n                z = x;\r\n                x = (y / x + x) / 2;\r\n            }\r\n        } else if (y != 0) {\r\n            z = 1;\r\n        }\r\n    }\r\n}\r\n\r\n// \r\ninterface IBEP20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the token decimals.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n\r\n    /**\r\n     * @dev Returns the token symbol.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the token name.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the bep token owner.\r\n     */\r\n    function getOwner() external view returns (address);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address _owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n// \r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\r\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\r\n        // for accounts without code, i.e. `keccak256('')`\r\n        bytes32 codehash;\r\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly {\r\n            codehash := extcodehash(account)\r\n        }\r\n        return (codehash != accountHash && codehash != 0x0);\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, 'Address: insufficient balance');\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\r\n        (bool success, ) = recipient.call{value: amount}('');\r\n        require(success, 'Address: unable to send value, recipient may have reverted');\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain`call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCall(target, data, 'Address: low-level call failed');\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return _functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, 'Address: low-level call with value failed');\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, 'Address: insufficient balance for call');\r\n        return _functionCallWithValue(target, data, value, errorMessage);\r\n    }\r\n\r\n    function _functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 weiValue,\r\n        string memory errorMessage\r\n    ) private returns (bytes memory) {\r\n        require(isContract(target), 'Address: call to non-contract');\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success, bytes memory returndata) = target.call{value: weiValue}(data);\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                // solhint-disable-next-line no-inline-assembly\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// \r\n/**\r\n * @title SafeBEP20\r\n * @dev Wrappers around BEP20 operations that throw on failure (when the token\r\n * contract returns false). Tokens that return no value (and instead revert or\r\n * throw on failure) are also supported, non-reverting calls are assumed to be\r\n * successful.\r\n * To use this library you can add a `using SafeBEP20 for IBEP20;` statement to your contract,\r\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\r\n */\r\nlibrary SafeBEP20 {\r\n    using SafeMath for uint256;\r\n    using Address for address;\r\n\r\n    function safeTransfer(\r\n        IBEP20 token,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    function safeTransferFrom(\r\n        IBEP20 token,\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n\r\n    /**\r\n     * @dev Deprecated. This function has issues similar to the ones found in\r\n     * {IBEP20-approve}, and its usage is discouraged.\r\n     *\r\n     * Whenever possible, use {safeIncreaseAllowance} and\r\n     * {safeDecreaseAllowance} instead.\r\n     */\r\n    function safeApprove(\r\n        IBEP20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        // solhint-disable-next-line max-line-length\r\n        require(\r\n            (value == 0) || (token.allowance(address(this), spender) == 0),\r\n            'SafeBEP20: approve from non-zero to non-zero allowance'\r\n        );\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n\r\n    function safeIncreaseAllowance(\r\n        IBEP20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    function safeDecreaseAllowance(\r\n        IBEP20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).sub(\r\n            value,\r\n            'SafeBEP20: decreased allowance below zero'\r\n        );\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     */\r\n    function _callOptionalReturn(IBEP20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\r\n        // the target address contains contract code and also asserts for success in the low-level call.\r\n\r\n        bytes memory returndata = address(token).functionCall(data, 'SafeBEP20: low-level call failed');\r\n        if (returndata.length > 0) {\r\n            // Return data is optional\r\n            // solhint-disable-next-line max-line-length\r\n            require(abi.decode(returndata, (bool)), 'SafeBEP20: BEP20 operation did not succeed');\r\n        }\r\n    }\r\n}\r\n\r\n// import \"@nomiclabs/buidler/console.sol\";\r\n// SousChef is the chef of new tokens. He can make yummy food and he is a fair guy as well as MasterChef.\r\ncontract SousChef {\r\n    using SafeMath for uint256;\r\n    using SafeBEP20 for IBEP20;\r\n\r\n    // Info of each user.\r\n    struct UserInfo {\r\n        uint256 amount;\r\n        uint256 rewardDebt;\r\n        uint256 rewardPending;\r\n    }\r\n\r\n    // Info of Pool\r\n    struct PoolInfo {\r\n        uint256 lastRewardBlock;  // Last block number that Rewards distribution occurs.\r\n        uint256 accRewardPerShare; // Accumulated reward per share, times 1e12. See below.\r\n    }\r\n\r\n    // The SYRUP TOKEN!\r\n    IBEP20 public syrup;\r\n    // rewards created per block.\r\n    uint256 public rewardPerBlock;\r\n\r\n    // Info.\r\n    PoolInfo public poolInfo;\r\n    // Info of each user that stakes Syrup tokens.\r\n    mapping (address => UserInfo) public userInfo;\r\n\r\n    // addresses list\r\n    address[] public addressList;\r\n\r\n    // The block number when mining starts.\r\n    uint256 public startBlock;\r\n    // The block number when mining ends.\r\n    uint256 public bonusEndBlock;\r\n\r\n    event Deposit(address indexed user, uint256 amount);\r\n    event Withdraw(address indexed user, uint256 amount);\r\n    event EmergencyWithdraw(address indexed user, uint256 amount);\r\n\r\n    constructor(\r\n        IBEP20 _syrup,\r\n        uint256 _rewardPerBlock,\r\n        uint256 _startBlock,\r\n        uint256 _endBlock\r\n    ) public {\r\n        syrup = _syrup;\r\n        rewardPerBlock = _rewardPerBlock;\r\n        startBlock = _startBlock;\r\n        bonusEndBlock = _endBlock;\r\n\r\n        // staking pool\r\n        poolInfo = PoolInfo({\r\n            lastRewardBlock: startBlock,\r\n            accRewardPerShare: 0\r\n        });\r\n    }\r\n\r\n    function addressLength() external view returns (uint256) {\r\n        return addressList.length;\r\n    }\r\n\r\n    // Return reward multiplier over the given _from to _to block.\r\n    function getMultiplier(uint256 _from, uint256 _to) internal view returns (uint256) {\r\n        if (_to <= bonusEndBlock) {\r\n            return _to.sub(_from);\r\n        } else if (_from >= bonusEndBlock) {\r\n            return 0;\r\n        } else {\r\n            return bonusEndBlock.sub(_from);\r\n        }\r\n    }\r\n\r\n    // View function to see pending Tokens on frontend.\r\n    function pendingReward(address _user) external view returns (uint256) {\r\n        PoolInfo storage pool = poolInfo;\r\n        UserInfo storage user = userInfo[_user];\r\n        uint256 accRewardPerShare = pool.accRewardPerShare;\r\n        uint256 stakedSupply = syrup.balanceOf(address(this));\r\n        if (block.number > pool.lastRewardBlock && stakedSupply != 0) {\r\n            uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number);\r\n            uint256 tokenReward = multiplier.mul(rewardPerBlock);\r\n            accRewardPerShare = accRewardPerShare.add(tokenReward.mul(1e12).div(stakedSupply));\r\n        }\r\n        return user.amount.mul(accRewardPerShare).div(1e12).sub(user.rewardDebt).add(user.rewardPending);\r\n    }\r\n\r\n    // Update reward variables of the given pool to be up-to-date.\r\n    function updatePool() public {\r\n        if (block.number <= poolInfo.lastRewardBlock) {\r\n            return;\r\n        }\r\n        uint256 syrupSupply = syrup.balanceOf(address(this));\r\n        if (syrupSupply == 0) {\r\n            poolInfo.lastRewardBlock = block.number;\r\n            return;\r\n        }\r\n        uint256 multiplier = getMultiplier(poolInfo.lastRewardBlock, block.number);\r\n        uint256 tokenReward = multiplier.mul(rewardPerBlock);\r\n\r\n        poolInfo.accRewardPerShare = poolInfo.accRewardPerShare.add(tokenReward.mul(1e12).div(syrupSupply));\r\n        poolInfo.lastRewardBlock = block.number;\r\n    }\r\n\r\n    // Deposit Syrup tokens to SousChef for Reward allocation.\r\n    function deposit(uint256 _amount) public {\r\n        require (_amount > 0, 'amount 0');\r\n        UserInfo storage user = userInfo[msg.sender];\r\n\r\n        updatePool();\r\n        syrup.safeTransferFrom(address(msg.sender), address(this), _amount);\r\n        if (user.amount == 0 && user.rewardDebt == 0 && user.rewardPending ==0) {\r\n            addressList.push(address(msg.sender));\r\n        }\r\n\r\n        user.rewardPending = user.amount.mul(poolInfo.accRewardPerShare).div(1e12).sub(user.rewardDebt).add(user.rewardPending);\r\n        user.amount = user.amount.add(_amount);\r\n        user.rewardDebt = user.amount.mul(poolInfo.accRewardPerShare).div(1e12);\r\n\r\n        emit Deposit(msg.sender, _amount);\r\n    }\r\n\r\n    // Withdraw Syrup tokens from SousChef.\r\n    function withdraw(uint256 _amount) public {\r\n        require (_amount > 0, 'amount 0');\r\n        UserInfo storage user = userInfo[msg.sender];\r\n        require(user.amount >= _amount, \"withdraw: not enough\");\r\n\r\n        updatePool();\r\n        syrup.safeTransfer(address(msg.sender), _amount);\r\n\r\n        user.rewardPending = user.amount.mul(poolInfo.accRewardPerShare).div(1e12).sub(user.rewardDebt).add(user.rewardPending);\r\n        user.amount = user.amount.sub(_amount);\r\n        user.rewardDebt = user.amount.mul(poolInfo.accRewardPerShare).div(1e12);\r\n\r\n        emit Withdraw(msg.sender, _amount);\r\n    }\r\n\r\n    // Withdraw without caring about rewards. EMERGENCY ONLY.\r\n    function emergencyWithdraw() public {\r\n        UserInfo storage user = userInfo[msg.sender];\r\n        syrup.safeTransfer(address(msg.sender), user.amount);\r\n        emit EmergencyWithdraw(msg.sender, user.amount);\r\n        user.amount = 0;\r\n        user.rewardDebt = 0;\r\n    }\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"farms-pools/SousChef.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"farms-pools/SousChef.sol\":9279:15537  library Address {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"farms-pools/SousChef.sol\":9279:15537  library Address {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a53f3698f1f6143be22f7f683d5c2748b1651291fec2efbecb6b5f12575ab73164736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a53f3698f1f6143be22f7f683d5c2748b1651291fec2efbecb6b5f12575ab73164736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 EXTCODEHASH CALLDATASIZE SWAP9 CALL 0xF6 EQ EXTCODESIZE 0xE2 0x2F PUSH32 0x683D5C2748B1651291FEC2EFBECB6B5F12575AB73164736F6C634300060C0033 ",
							"sourceMap": "9279:6258:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a53f3698f1f6143be22f7f683d5c2748b1651291fec2efbecb6b5f12575ab73164736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 EXTCODEHASH CALLDATASIZE SWAP9 CALL 0xF6 EQ EXTCODESIZE 0xE2 0x2F PUSH32 0x683D5C2748B1651291FEC2EFBECB6B5F12575AB73164736F6C634300060C0033 ",
							"sourceMap": "9279:6258:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 9279,
									"end": 15537,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9279,
									"end": 15537,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9279,
									"end": 15537,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 9279,
									"end": 15537,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9279,
									"end": 15537,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9279,
									"end": 15537,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9279,
									"end": 15537,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 9279,
									"end": 15537,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9279,
									"end": 15537,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 9279,
									"end": 15537,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9279,
									"end": 15537,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 9279,
									"end": 15537,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 9279,
									"end": 15537,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 9279,
									"end": 15537,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 9279,
									"end": 15537,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 9279,
									"end": 15537,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 9279,
									"end": 15537,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 9279,
									"end": 15537,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 9279,
									"end": 15537,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 9279,
									"end": 15537,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9279,
									"end": 15537,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 9279,
									"end": 15537,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 9279,
									"end": 15537,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9279,
									"end": 15537,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 9279,
									"end": 15537,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9279,
									"end": 15537,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9279,
									"end": 15537,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a53f3698f1f6143be22f7f683d5c2748b1651291fec2efbecb6b5f12575ab73164736f6c634300060c0033",
									".code": [
										{
											"begin": 9279,
											"end": 15537,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 9279,
											"end": 15537,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 9279,
											"end": 15537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9279,
											"end": 15537,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 9279,
											"end": 15537,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9279,
											"end": 15537,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9279,
											"end": 15537,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9279,
											"end": 15537,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9279,
											"end": 15537,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"farms-pools/SousChef.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"farms-pools/SousChef.sol\":{\"keccak256\":\"0xe8f263b719313d89a47ef21204b1359f454cb34d6b5797a04981cd31a0f10966\",\"urls\":[\"bzz-raw://17c576d6d7b4338eb5a24697569cd4e1ce570307124ef6cd538721340331a9e1\",\"dweb:/ipfs/QmcGxXod5WYjnYPsRRJJDwL1NCLri3C7Z7dbPkM423jebJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"farms-pools/SousChef.sol\":\"IBEP20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"farms-pools/SousChef.sol\":{\"keccak256\":\"0xe8f263b719313d89a47ef21204b1359f454cb34d6b5797a04981cd31a0f10966\",\"urls\":[\"bzz-raw://17c576d6d7b4338eb5a24697569cd4e1ce570307124ef6cd538721340331a9e1\",\"dweb:/ipfs/QmcGxXod5WYjnYPsRRJJDwL1NCLri3C7Z7dbPkM423jebJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeBEP20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around BEP20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeBEP20 for IBEP20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeBEP20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"farms-pools/SousChef.sol\":16013:19417  library SafeBEP20 {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"farms-pools/SousChef.sol\":16013:19417  library SafeBEP20 {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204a78b6cb0be7de6e0b1f689a14fe858db055afb20e0e97caace9bfa7db7d4bf464736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204a78b6cb0be7de6e0b1f689a14fe858db055afb20e0e97caace9bfa7db7d4bf464736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A PUSH25 0xB6CB0BE7DE6E0B1F689A14FE858DB055AFB20E0E97CAACE9BF 0xA7 0xDB PUSH30 0x4BF464736F6C634300060C00330000000000000000000000000000000000 ",
							"sourceMap": "16013:3404:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204a78b6cb0be7de6e0b1f689a14fe858db055afb20e0e97caace9bfa7db7d4bf464736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A PUSH25 0xB6CB0BE7DE6E0B1F689A14FE858DB055AFB20E0E97CAACE9BF 0xA7 0xDB PUSH30 0x4BF464736F6C634300060C00330000000000000000000000000000000000 ",
							"sourceMap": "16013:3404:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IBEP20,bytes memory)": "infinite",
								"safeApprove(contract IBEP20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IBEP20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IBEP20,address,uint256)": "infinite",
								"safeTransfer(contract IBEP20,address,uint256)": "infinite",
								"safeTransferFrom(contract IBEP20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 16013,
									"end": 19417,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16013,
									"end": 19417,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16013,
									"end": 19417,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 16013,
									"end": 19417,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16013,
									"end": 19417,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16013,
									"end": 19417,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16013,
									"end": 19417,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 16013,
									"end": 19417,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16013,
									"end": 19417,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 16013,
									"end": 19417,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16013,
									"end": 19417,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 16013,
									"end": 19417,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 16013,
									"end": 19417,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 16013,
									"end": 19417,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 16013,
									"end": 19417,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 16013,
									"end": 19417,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 16013,
									"end": 19417,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 16013,
									"end": 19417,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16013,
									"end": 19417,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 16013,
									"end": 19417,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16013,
									"end": 19417,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16013,
									"end": 19417,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 16013,
									"end": 19417,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16013,
									"end": 19417,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 16013,
									"end": 19417,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16013,
									"end": 19417,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16013,
									"end": 19417,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204a78b6cb0be7de6e0b1f689a14fe858db055afb20e0e97caace9bfa7db7d4bf464736f6c634300060c0033",
									".code": [
										{
											"begin": 16013,
											"end": 19417,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 16013,
											"end": 19417,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 16013,
											"end": 19417,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16013,
											"end": 19417,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 16013,
											"end": 19417,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16013,
											"end": 19417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16013,
											"end": 19417,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16013,
											"end": 19417,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16013,
											"end": 19417,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around BEP20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeBEP20 for IBEP20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeBEP20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"farms-pools/SousChef.sol\":\"SafeBEP20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"farms-pools/SousChef.sol\":{\"keccak256\":\"0xe8f263b719313d89a47ef21204b1359f454cb34d6b5797a04981cd31a0f10966\",\"urls\":[\"bzz-raw://17c576d6d7b4338eb5a24697569cd4e1ce570307124ef6cd538721340331a9e1\",\"dweb:/ipfs/QmcGxXod5WYjnYPsRRJJDwL1NCLri3C7Z7dbPkM423jebJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"farms-pools/SousChef.sol\":681:6045  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"farms-pools/SousChef.sol\":681:6045  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b2009d2e5d2c47532bfd615582d4c0575fb8a38c3e99d24920ad2a92253a501a64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b2009d2e5d2c47532bfd615582d4c0575fb8a38c3e99d24920ad2a92253a501a64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 STOP SWAP14 0x2E 0x5D 0x2C SELFBALANCE MSTORE8 0x2B REVERT PUSH2 0x5582 0xD4 0xC0 JUMPI 0x5F 0xB8 LOG3 DUP13 RETURNDATACOPY SWAP10 0xD2 0x49 KECCAK256 0xAD 0x2A SWAP3 0x25 GASPRICE POP BYTE PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "681:5364:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b2009d2e5d2c47532bfd615582d4c0575fb8a38c3e99d24920ad2a92253a501a64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 STOP SWAP14 0x2E 0x5D 0x2C SELFBALANCE MSTORE8 0x2B REVERT PUSH2 0x5582 0xD4 0xC0 JUMPI 0x5F 0xB8 LOG3 DUP13 RETURNDATACOPY SWAP10 0xD2 0x49 KECCAK256 0xAD 0x2A SWAP3 0x25 GASPRICE POP BYTE PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "681:5364:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sqrt(uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 681,
									"end": 6045,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 681,
									"end": 6045,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 681,
									"end": 6045,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 681,
									"end": 6045,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 681,
									"end": 6045,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 681,
									"end": 6045,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 681,
									"end": 6045,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 681,
									"end": 6045,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 681,
									"end": 6045,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 681,
									"end": 6045,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 681,
									"end": 6045,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 681,
									"end": 6045,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 681,
									"end": 6045,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 681,
									"end": 6045,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 681,
									"end": 6045,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 681,
									"end": 6045,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 681,
									"end": 6045,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 681,
									"end": 6045,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 681,
									"end": 6045,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 681,
									"end": 6045,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 681,
									"end": 6045,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 681,
									"end": 6045,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 681,
									"end": 6045,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 681,
									"end": 6045,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 681,
									"end": 6045,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 681,
									"end": 6045,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 681,
									"end": 6045,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b2009d2e5d2c47532bfd615582d4c0575fb8a38c3e99d24920ad2a92253a501a64736f6c634300060c0033",
									".code": [
										{
											"begin": 681,
											"end": 6045,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 681,
											"end": 6045,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 681,
											"end": 6045,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 681,
											"end": 6045,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 681,
											"end": 6045,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 681,
											"end": 6045,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 681,
											"end": 6045,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 681,
											"end": 6045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 681,
											"end": 6045,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"farms-pools/SousChef.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"farms-pools/SousChef.sol\":{\"keccak256\":\"0xe8f263b719313d89a47ef21204b1359f454cb34d6b5797a04981cd31a0f10966\",\"urls\":[\"bzz-raw://17c576d6d7b4338eb5a24697569cd4e1ce570307124ef6cd538721340331a9e1\",\"dweb:/ipfs/QmcGxXod5WYjnYPsRRJJDwL1NCLri3C7Z7dbPkM423jebJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SousChef": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IBEP20",
									"name": "_syrup",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_rewardPerBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_startBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_endBlock",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EmergencyWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "addressLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "addressList",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "bonusEndBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "pendingReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "lastRewardBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "accRewardPerShare",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardPerBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "syrup",
							"outputs": [
								{
									"internalType": "contract IBEP20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "updatePool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardDebt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardPending",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"farms-pools/SousChef.sol\":19573:24941  contract SousChef {\r... */\n  mstore(0x40, 0x80)\n    /* \"farms-pools/SousChef.sol\":20725:21161  constructor(\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x80\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"farms-pools/SousChef.sol\":20886:20892  _syrup */\n  dup4\n    /* \"farms-pools/SousChef.sol\":20878:20883  syrup */\n  0x00\n  dup1\n    /* \"farms-pools/SousChef.sol\":20878:20892  syrup = _syrup */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"farms-pools/SousChef.sol\":20920:20935  _rewardPerBlock */\n  dup3\n    /* \"farms-pools/SousChef.sol\":20903:20917  rewardPerBlock */\n  0x01\n    /* \"farms-pools/SousChef.sol\":20903:20935  rewardPerBlock = _rewardPerBlock */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"farms-pools/SousChef.sol\":20959:20970  _startBlock */\n  dup2\n    /* \"farms-pools/SousChef.sol\":20946:20956  startBlock */\n  0x06\n    /* \"farms-pools/SousChef.sol\":20946:20970  startBlock = _startBlock */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"farms-pools/SousChef.sol\":20997:21006  _endBlock */\n  dup1\n    /* \"farms-pools/SousChef.sol\":20981:20994  bonusEndBlock */\n  0x07\n    /* \"farms-pools/SousChef.sol\":20981:21006  bonusEndBlock = _endBlock */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"farms-pools/SousChef.sol\":21055:21153  PoolInfo({\r... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n    /* \"farms-pools/SousChef.sol\":21096:21106  startBlock */\n  sload(0x06)\n    /* \"farms-pools/SousChef.sol\":21055:21153  PoolInfo({\r... */\n  dup2\n  mstore\n  0x20\n  add\n    /* \"farms-pools/SousChef.sol\":21140:21141  0 */\n  0x00\n    /* \"farms-pools/SousChef.sol\":21055:21153  PoolInfo({\r... */\n  dup2\n  mstore\n  pop\n    /* \"farms-pools/SousChef.sol\":21044:21052  poolInfo */\n  0x02\n    /* \"farms-pools/SousChef.sol\":21044:21153  poolInfo = PoolInfo({\r... */\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  sstore\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  sstore\n  swap1\n  pop\n  pop\n    /* \"farms-pools/SousChef.sol\":20725:21161  constructor(\r... */\n  pop\n  pop\n  pop\n  pop\n    /* \"farms-pools/SousChef.sol\":19573:24941  contract SousChef {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"farms-pools/SousChef.sol\":19573:24941  contract SousChef {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8ae39cac\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xdb2e21bc\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xdb2e21bc\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdc881888\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xe3161ddd\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf40f0f52\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x8ae39cac\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xb6b55f25\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xb810fb43\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x1959a002\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1aed6553\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x48cd4cb1\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x5a2f3d09\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x86a952c4\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"farms-pools/SousChef.sol\":20267:20312  mapping (address => UserInfo) public userInfo */\n    tag_3:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_20\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"farms-pools/SousChef.sol\":20501:20529  uint256 public bonusEndBlock */\n    tag_4:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"farms-pools/SousChef.sol\":23980:24589  function withdraw(uint256 _amount) public {\r... */\n    tag_5:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_25\n      jump\t// in\n    tag_23:\n      stop\n        /* \"farms-pools/SousChef.sol\":20426:20451  uint256 public startBlock */\n    tag_6:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"farms-pools/SousChef.sol\":20184:20208  PoolInfo public poolInfo */\n    tag_7:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"farms-pools/SousChef.sol\":20071:20090  IBEP20 public syrup */\n    tag_8:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"farms-pools/SousChef.sol\":20132:20161  uint256 public rewardPerBlock */\n    tag_9:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"farms-pools/SousChef.sol\":23221:23927  function deposit(uint256 _amount) public {\r... */\n    tag_10:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_36\n      jump\t// in\n    tag_34:\n      stop\n        /* \"farms-pools/SousChef.sol\":20344:20372  address[] public addressList */\n    tag_11:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_39\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"farms-pools/SousChef.sol\":24660:24936  function emergencyWithdraw() public {\r... */\n    tag_12:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      stop\n        /* \"farms-pools/SousChef.sol\":21169:21270  function addressLength() external view returns (uint256) {\r... */\n    tag_13:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"farms-pools/SousChef.sol\":22531:23149  function updatePool() public {\r... */\n    tag_14:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      stop\n        /* \"farms-pools/SousChef.sol\":21719:22455  function pendingReward(address _user) external view returns (uint256) {\r... */\n    tag_15:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_48\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"farms-pools/SousChef.sol\":20267:20312  mapping (address => UserInfo) public userInfo */\n    tag_20:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"farms-pools/SousChef.sol\":20501:20529  uint256 public bonusEndBlock */\n    tag_22:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"farms-pools/SousChef.sol\":23980:24589  function withdraw(uint256 _amount) public {\r... */\n    tag_25:\n        /* \"farms-pools/SousChef.sol\":24052:24053  0 */\n      0x00\n        /* \"farms-pools/SousChef.sol\":24042:24049  _amount */\n      dup2\n        /* \"farms-pools/SousChef.sol\":24042:24053  _amount > 0 */\n      gt\n        /* \"farms-pools/SousChef.sol\":24033:24066  require (_amount > 0, 'amount 0') */\n      tag_50\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x08\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x616d6f756e742030000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_50:\n        /* \"farms-pools/SousChef.sol\":24077:24098  UserInfo storage user */\n      0x00\n        /* \"farms-pools/SousChef.sol\":24101:24109  userInfo */\n      0x04\n        /* \"farms-pools/SousChef.sol\":24101:24121  userInfo[msg.sender] */\n      0x00\n        /* \"farms-pools/SousChef.sol\":24110:24120  msg.sender */\n      caller\n        /* \"farms-pools/SousChef.sol\":24101:24121  userInfo[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"farms-pools/SousChef.sol\":24077:24121  UserInfo storage user = userInfo[msg.sender] */\n      swap1\n      pop\n        /* \"farms-pools/SousChef.sol\":24155:24162  _amount */\n      dup2\n        /* \"farms-pools/SousChef.sol\":24140:24144  user */\n      dup2\n        /* \"farms-pools/SousChef.sol\":24140:24151  user.amount */\n      0x00\n      add\n      sload\n        /* \"farms-pools/SousChef.sol\":24140:24162  user.amount >= _amount */\n      lt\n      iszero\n        /* \"farms-pools/SousChef.sol\":24132:24187  require(user.amount >= _amount, \"withdraw: not enough\") */\n      tag_51\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x77697468647261773a206e6f7420656e6f756768000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_51:\n        /* \"farms-pools/SousChef.sol\":24200:24212  updatePool() */\n      tag_52\n        /* \"farms-pools/SousChef.sol\":24200:24210  updatePool */\n      tag_45\n        /* \"farms-pools/SousChef.sol\":24200:24212  updatePool() */\n      jump\t// in\n    tag_52:\n        /* \"farms-pools/SousChef.sol\":24223:24271  syrup.safeTransfer(address(msg.sender), _amount) */\n      tag_53\n        /* \"farms-pools/SousChef.sol\":24250:24260  msg.sender */\n      caller\n        /* \"farms-pools/SousChef.sol\":24263:24270  _amount */\n      dup4\n        /* \"farms-pools/SousChef.sol\":24223:24228  syrup */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"farms-pools/SousChef.sol\":24223:24241  syrup.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_54\n      swap1\n        /* \"farms-pools/SousChef.sol\":24223:24271  syrup.safeTransfer(address(msg.sender), _amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_53:\n        /* \"farms-pools/SousChef.sol\":24305:24403  user.amount.mul(poolInfo.accRewardPerShare).div(1e12).sub(user.rewardDebt).add(user.rewardPending) */\n      tag_55\n        /* \"farms-pools/SousChef.sol\":24384:24388  user */\n      dup2\n        /* \"farms-pools/SousChef.sol\":24384:24402  user.rewardPending */\n      0x02\n      add\n      sload\n        /* \"farms-pools/SousChef.sol\":24305:24379  user.amount.mul(poolInfo.accRewardPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_56\n        /* \"farms-pools/SousChef.sol\":24363:24367  user */\n      dup4\n        /* \"farms-pools/SousChef.sol\":24363:24378  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"farms-pools/SousChef.sol\":24305:24358  user.amount.mul(poolInfo.accRewardPerShare).div(1e12) */\n      tag_57\n        /* \"farms-pools/SousChef.sol\":24353:24357  1e12 */\n      0xe8d4a51000\n        /* \"farms-pools/SousChef.sol\":24305:24348  user.amount.mul(poolInfo.accRewardPerShare) */\n      tag_58\n        /* \"farms-pools/SousChef.sol\":24321:24329  poolInfo */\n      0x02\n        /* \"farms-pools/SousChef.sol\":24321:24347  poolInfo.accRewardPerShare */\n      0x01\n      add\n      sload\n        /* \"farms-pools/SousChef.sol\":24305:24309  user */\n      dup9\n        /* \"farms-pools/SousChef.sol\":24305:24316  user.amount */\n      0x00\n      add\n      sload\n        /* \"farms-pools/SousChef.sol\":24305:24320  user.amount.mul */\n      tag_59\n      swap1\n        /* \"farms-pools/SousChef.sol\":24305:24348  user.amount.mul(poolInfo.accRewardPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_58:\n        /* \"farms-pools/SousChef.sol\":24305:24352  user.amount.mul(poolInfo.accRewardPerShare).div */\n      tag_60\n      swap1\n        /* \"farms-pools/SousChef.sol\":24305:24358  user.amount.mul(poolInfo.accRewardPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_57:\n        /* \"farms-pools/SousChef.sol\":24305:24362  user.amount.mul(poolInfo.accRewardPerShare).div(1e12).sub */\n      tag_61\n      swap1\n        /* \"farms-pools/SousChef.sol\":24305:24379  user.amount.mul(poolInfo.accRewardPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_56:\n        /* \"farms-pools/SousChef.sol\":24305:24383  user.amount.mul(poolInfo.accRewardPerShare).div(1e12).sub(user.rewardDebt).add */\n      tag_62\n      swap1\n        /* \"farms-pools/SousChef.sol\":24305:24403  user.amount.mul(poolInfo.accRewardPerShare).div(1e12).sub(user.rewardDebt).add(user.rewardPending) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_55:\n        /* \"farms-pools/SousChef.sol\":24284:24288  user */\n      dup2\n        /* \"farms-pools/SousChef.sol\":24284:24302  user.rewardPending */\n      0x02\n      add\n        /* \"farms-pools/SousChef.sol\":24284:24403  user.rewardPending = user.amount.mul(poolInfo.accRewardPerShare).div(1e12).sub(user.rewardDebt).add(user.rewardPending) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"farms-pools/SousChef.sol\":24428:24452  user.amount.sub(_amount) */\n      tag_63\n        /* \"farms-pools/SousChef.sol\":24444:24451  _amount */\n      dup3\n        /* \"farms-pools/SousChef.sol\":24428:24432  user */\n      dup3\n        /* \"farms-pools/SousChef.sol\":24428:24439  user.amount */\n      0x00\n      add\n      sload\n        /* \"farms-pools/SousChef.sol\":24428:24443  user.amount.sub */\n      tag_61\n      swap1\n        /* \"farms-pools/SousChef.sol\":24428:24452  user.amount.sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_63:\n        /* \"farms-pools/SousChef.sol\":24414:24418  user */\n      dup2\n        /* \"farms-pools/SousChef.sol\":24414:24425  user.amount */\n      0x00\n      add\n        /* \"farms-pools/SousChef.sol\":24414:24452  user.amount = user.amount.sub(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"farms-pools/SousChef.sol\":24481:24534  user.amount.mul(poolInfo.accRewardPerShare).div(1e12) */\n      tag_64\n        /* \"farms-pools/SousChef.sol\":24529:24533  1e12 */\n      0xe8d4a51000\n        /* \"farms-pools/SousChef.sol\":24481:24524  user.amount.mul(poolInfo.accRewardPerShare) */\n      tag_65\n        /* \"farms-pools/SousChef.sol\":24497:24505  poolInfo */\n      0x02\n        /* \"farms-pools/SousChef.sol\":24497:24523  poolInfo.accRewardPerShare */\n      0x01\n      add\n      sload\n        /* \"farms-pools/SousChef.sol\":24481:24485  user */\n      dup5\n        /* \"farms-pools/SousChef.sol\":24481:24492  user.amount */\n      0x00\n      add\n      sload\n        /* \"farms-pools/SousChef.sol\":24481:24496  user.amount.mul */\n      tag_59\n      swap1\n        /* \"farms-pools/SousChef.sol\":24481:24524  user.amount.mul(poolInfo.accRewardPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_65:\n        /* \"farms-pools/SousChef.sol\":24481:24528  user.amount.mul(poolInfo.accRewardPerShare).div */\n      tag_60\n      swap1\n        /* \"farms-pools/SousChef.sol\":24481:24534  user.amount.mul(poolInfo.accRewardPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_64:\n        /* \"farms-pools/SousChef.sol\":24463:24467  user */\n      dup2\n        /* \"farms-pools/SousChef.sol\":24463:24478  user.rewardDebt */\n      0x01\n      add\n        /* \"farms-pools/SousChef.sol\":24463:24534  user.rewardDebt = user.amount.mul(poolInfo.accRewardPerShare).div(1e12) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"farms-pools/SousChef.sol\":24561:24571  msg.sender */\n      caller\n        /* \"farms-pools/SousChef.sol\":24552:24581  Withdraw(msg.sender, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364\n        /* \"farms-pools/SousChef.sol\":24573:24580  _amount */\n      dup4\n        /* \"farms-pools/SousChef.sol\":24552:24581  Withdraw(msg.sender, _amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"farms-pools/SousChef.sol\":23980:24589  function withdraw(uint256 _amount) public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"farms-pools/SousChef.sol\":20426:20451  uint256 public startBlock */\n    tag_27:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"farms-pools/SousChef.sol\":20184:20208  PoolInfo public poolInfo */\n    tag_29:\n      0x02\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"farms-pools/SousChef.sol\":20071:20090  IBEP20 public syrup */\n    tag_31:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"farms-pools/SousChef.sol\":20132:20161  uint256 public rewardPerBlock */\n    tag_33:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"farms-pools/SousChef.sol\":23221:23927  function deposit(uint256 _amount) public {\r... */\n    tag_36:\n        /* \"farms-pools/SousChef.sol\":23292:23293  0 */\n      0x00\n        /* \"farms-pools/SousChef.sol\":23282:23289  _amount */\n      dup2\n        /* \"farms-pools/SousChef.sol\":23282:23293  _amount > 0 */\n      gt\n        /* \"farms-pools/SousChef.sol\":23273:23306  require (_amount > 0, 'amount 0') */\n      tag_67\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x08\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x616d6f756e742030000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_67:\n        /* \"farms-pools/SousChef.sol\":23317:23338  UserInfo storage user */\n      0x00\n        /* \"farms-pools/SousChef.sol\":23341:23349  userInfo */\n      0x04\n        /* \"farms-pools/SousChef.sol\":23341:23361  userInfo[msg.sender] */\n      0x00\n        /* \"farms-pools/SousChef.sol\":23350:23360  msg.sender */\n      caller\n        /* \"farms-pools/SousChef.sol\":23341:23361  userInfo[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"farms-pools/SousChef.sol\":23317:23361  UserInfo storage user = userInfo[msg.sender] */\n      swap1\n      pop\n        /* \"farms-pools/SousChef.sol\":23374:23386  updatePool() */\n      tag_68\n        /* \"farms-pools/SousChef.sol\":23374:23384  updatePool */\n      tag_45\n        /* \"farms-pools/SousChef.sol\":23374:23386  updatePool() */\n      jump\t// in\n    tag_68:\n        /* \"farms-pools/SousChef.sol\":23397:23464  syrup.safeTransferFrom(address(msg.sender), address(this), _amount) */\n      tag_69\n        /* \"farms-pools/SousChef.sol\":23428:23438  msg.sender */\n      caller\n        /* \"farms-pools/SousChef.sol\":23449:23453  this */\n      address\n        /* \"farms-pools/SousChef.sol\":23456:23463  _amount */\n      dup5\n        /* \"farms-pools/SousChef.sol\":23397:23402  syrup */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"farms-pools/SousChef.sol\":23397:23419  syrup.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_70\n      swap1\n        /* \"farms-pools/SousChef.sol\":23397:23464  syrup.safeTransferFrom(address(msg.sender), address(this), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_69:\n        /* \"farms-pools/SousChef.sol\":23494:23495  0 */\n      0x00\n        /* \"farms-pools/SousChef.sol\":23479:23483  user */\n      dup2\n        /* \"farms-pools/SousChef.sol\":23479:23490  user.amount */\n      0x00\n      add\n      sload\n        /* \"farms-pools/SousChef.sol\":23479:23495  user.amount == 0 */\n      eq\n        /* \"farms-pools/SousChef.sol\":23479:23519  user.amount == 0 && user.rewardDebt == 0 */\n      dup1\n      iszero\n      tag_71\n      jumpi\n      pop\n        /* \"farms-pools/SousChef.sol\":23518:23519  0 */\n      0x00\n        /* \"farms-pools/SousChef.sol\":23499:23503  user */\n      dup2\n        /* \"farms-pools/SousChef.sol\":23499:23514  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"farms-pools/SousChef.sol\":23499:23519  user.rewardDebt == 0 */\n      eq\n        /* \"farms-pools/SousChef.sol\":23479:23519  user.amount == 0 && user.rewardDebt == 0 */\n    tag_71:\n        /* \"farms-pools/SousChef.sol\":23479:23545  user.amount == 0 && user.rewardDebt == 0 && user.rewardPending ==0 */\n      dup1\n      iszero\n      tag_72\n      jumpi\n      pop\n        /* \"farms-pools/SousChef.sol\":23544:23545  0 */\n      0x00\n        /* \"farms-pools/SousChef.sol\":23523:23527  user */\n      dup2\n        /* \"farms-pools/SousChef.sol\":23523:23541  user.rewardPending */\n      0x02\n      add\n      sload\n        /* \"farms-pools/SousChef.sol\":23523:23545  user.rewardPending ==0 */\n      eq\n        /* \"farms-pools/SousChef.sol\":23479:23545  user.amount == 0 && user.rewardDebt == 0 && user.rewardPending ==0 */\n    tag_72:\n        /* \"farms-pools/SousChef.sol\":23475:23611  if (user.amount == 0 && user.rewardDebt == 0 && user.rewardPending ==0) {\r... */\n      iszero\n      tag_73\n      jumpi\n        /* \"farms-pools/SousChef.sol\":23562:23573  addressList */\n      0x05\n        /* \"farms-pools/SousChef.sol\":23587:23597  msg.sender */\n      caller\n        /* \"farms-pools/SousChef.sol\":23562:23599  addressList.push(address(msg.sender)) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"farms-pools/SousChef.sol\":23475:23611  if (user.amount == 0 && user.rewardDebt == 0 && user.rewardPending ==0) {\r... */\n    tag_73:\n        /* \"farms-pools/SousChef.sol\":23644:23742  user.amount.mul(poolInfo.accRewardPerShare).div(1e12).sub(user.rewardDebt).add(user.rewardPending) */\n      tag_75\n        /* \"farms-pools/SousChef.sol\":23723:23727  user */\n      dup2\n        /* \"farms-pools/SousChef.sol\":23723:23741  user.rewardPending */\n      0x02\n      add\n      sload\n        /* \"farms-pools/SousChef.sol\":23644:23718  user.amount.mul(poolInfo.accRewardPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_76\n        /* \"farms-pools/SousChef.sol\":23702:23706  user */\n      dup4\n        /* \"farms-pools/SousChef.sol\":23702:23717  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"farms-pools/SousChef.sol\":23644:23697  user.amount.mul(poolInfo.accRewardPerShare).div(1e12) */\n      tag_77\n        /* \"farms-pools/SousChef.sol\":23692:23696  1e12 */\n      0xe8d4a51000\n        /* \"farms-pools/SousChef.sol\":23644:23687  user.amount.mul(poolInfo.accRewardPerShare) */\n      tag_78\n        /* \"farms-pools/SousChef.sol\":23660:23668  poolInfo */\n      0x02\n        /* \"farms-pools/SousChef.sol\":23660:23686  poolInfo.accRewardPerShare */\n      0x01\n      add\n      sload\n        /* \"farms-pools/SousChef.sol\":23644:23648  user */\n      dup9\n        /* \"farms-pools/SousChef.sol\":23644:23655  user.amount */\n      0x00\n      add\n      sload\n        /* \"farms-pools/SousChef.sol\":23644:23659  user.amount.mul */\n      tag_59\n      swap1\n        /* \"farms-pools/SousChef.sol\":23644:23687  user.amount.mul(poolInfo.accRewardPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_78:\n        /* \"farms-pools/SousChef.sol\":23644:23691  user.amount.mul(poolInfo.accRewardPerShare).div */\n      tag_60\n      swap1\n        /* \"farms-pools/SousChef.sol\":23644:23697  user.amount.mul(poolInfo.accRewardPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_77:\n        /* \"farms-pools/SousChef.sol\":23644:23701  user.amount.mul(poolInfo.accRewardPerShare).div(1e12).sub */\n      tag_61\n      swap1\n        /* \"farms-pools/SousChef.sol\":23644:23718  user.amount.mul(poolInfo.accRewardPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_76:\n        /* \"farms-pools/SousChef.sol\":23644:23722  user.amount.mul(poolInfo.accRewardPerShare).div(1e12).sub(user.rewardDebt).add */\n      tag_62\n      swap1\n        /* \"farms-pools/SousChef.sol\":23644:23742  user.amount.mul(poolInfo.accRewardPerShare).div(1e12).sub(user.rewardDebt).add(user.rewardPending) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_75:\n        /* \"farms-pools/SousChef.sol\":23623:23627  user */\n      dup2\n        /* \"farms-pools/SousChef.sol\":23623:23641  user.rewardPending */\n      0x02\n      add\n        /* \"farms-pools/SousChef.sol\":23623:23742  user.rewardPending = user.amount.mul(poolInfo.accRewardPerShare).div(1e12).sub(user.rewardDebt).add(user.rewardPending) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"farms-pools/SousChef.sol\":23767:23791  user.amount.add(_amount) */\n      tag_79\n        /* \"farms-pools/SousChef.sol\":23783:23790  _amount */\n      dup3\n        /* \"farms-pools/SousChef.sol\":23767:23771  user */\n      dup3\n        /* \"farms-pools/SousChef.sol\":23767:23778  user.amount */\n      0x00\n      add\n      sload\n        /* \"farms-pools/SousChef.sol\":23767:23782  user.amount.add */\n      tag_62\n      swap1\n        /* \"farms-pools/SousChef.sol\":23767:23791  user.amount.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_79:\n        /* \"farms-pools/SousChef.sol\":23753:23757  user */\n      dup2\n        /* \"farms-pools/SousChef.sol\":23753:23764  user.amount */\n      0x00\n      add\n        /* \"farms-pools/SousChef.sol\":23753:23791  user.amount = user.amount.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"farms-pools/SousChef.sol\":23820:23873  user.amount.mul(poolInfo.accRewardPerShare).div(1e12) */\n      tag_80\n        /* \"farms-pools/SousChef.sol\":23868:23872  1e12 */\n      0xe8d4a51000\n        /* \"farms-pools/SousChef.sol\":23820:23863  user.amount.mul(poolInfo.accRewardPerShare) */\n      tag_81\n        /* \"farms-pools/SousChef.sol\":23836:23844  poolInfo */\n      0x02\n        /* \"farms-pools/SousChef.sol\":23836:23862  poolInfo.accRewardPerShare */\n      0x01\n      add\n      sload\n        /* \"farms-pools/SousChef.sol\":23820:23824  user */\n      dup5\n        /* \"farms-pools/SousChef.sol\":23820:23831  user.amount */\n      0x00\n      add\n      sload\n        /* \"farms-pools/SousChef.sol\":23820:23835  user.amount.mul */\n      tag_59\n      swap1\n        /* \"farms-pools/SousChef.sol\":23820:23863  user.amount.mul(poolInfo.accRewardPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_81:\n        /* \"farms-pools/SousChef.sol\":23820:23867  user.amount.mul(poolInfo.accRewardPerShare).div */\n      tag_60\n      swap1\n        /* \"farms-pools/SousChef.sol\":23820:23873  user.amount.mul(poolInfo.accRewardPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_80:\n        /* \"farms-pools/SousChef.sol\":23802:23806  user */\n      dup2\n        /* \"farms-pools/SousChef.sol\":23802:23817  user.rewardDebt */\n      0x01\n      add\n        /* \"farms-pools/SousChef.sol\":23802:23873  user.rewardDebt = user.amount.mul(poolInfo.accRewardPerShare).div(1e12) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"farms-pools/SousChef.sol\":23899:23909  msg.sender */\n      caller\n        /* \"farms-pools/SousChef.sol\":23891:23919  Deposit(msg.sender, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c\n        /* \"farms-pools/SousChef.sol\":23911:23918  _amount */\n      dup4\n        /* \"farms-pools/SousChef.sol\":23891:23919  Deposit(msg.sender, _amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"farms-pools/SousChef.sol\":23221:23927  function deposit(uint256 _amount) public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"farms-pools/SousChef.sol\":20344:20372  address[] public addressList */\n    tag_39:\n      0x05\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_82\n      jumpi\n      invalid\n    tag_82:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"farms-pools/SousChef.sol\":24660:24936  function emergencyWithdraw() public {\r... */\n    tag_41:\n        /* \"farms-pools/SousChef.sol\":24707:24728  UserInfo storage user */\n      0x00\n        /* \"farms-pools/SousChef.sol\":24731:24739  userInfo */\n      0x04\n        /* \"farms-pools/SousChef.sol\":24731:24751  userInfo[msg.sender] */\n      0x00\n        /* \"farms-pools/SousChef.sol\":24740:24750  msg.sender */\n      caller\n        /* \"farms-pools/SousChef.sol\":24731:24751  userInfo[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"farms-pools/SousChef.sol\":24707:24751  UserInfo storage user = userInfo[msg.sender] */\n      swap1\n      pop\n        /* \"farms-pools/SousChef.sol\":24762:24814  syrup.safeTransfer(address(msg.sender), user.amount) */\n      tag_85\n        /* \"farms-pools/SousChef.sol\":24789:24799  msg.sender */\n      caller\n        /* \"farms-pools/SousChef.sol\":24802:24806  user */\n      dup3\n        /* \"farms-pools/SousChef.sol\":24802:24813  user.amount */\n      0x00\n      add\n      sload\n        /* \"farms-pools/SousChef.sol\":24762:24767  syrup */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"farms-pools/SousChef.sol\":24762:24780  syrup.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_54\n      swap1\n        /* \"farms-pools/SousChef.sol\":24762:24814  syrup.safeTransfer(address(msg.sender), user.amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_85:\n        /* \"farms-pools/SousChef.sol\":24848:24858  msg.sender */\n      caller\n        /* \"farms-pools/SousChef.sol\":24830:24872  EmergencyWithdraw(msg.sender, user.amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd9695\n        /* \"farms-pools/SousChef.sol\":24860:24864  user */\n      dup3\n        /* \"farms-pools/SousChef.sol\":24860:24871  user.amount */\n      0x00\n      add\n      sload\n        /* \"farms-pools/SousChef.sol\":24830:24872  EmergencyWithdraw(msg.sender, user.amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"farms-pools/SousChef.sol\":24897:24898  0 */\n      0x00\n        /* \"farms-pools/SousChef.sol\":24883:24887  user */\n      dup2\n        /* \"farms-pools/SousChef.sol\":24883:24894  user.amount */\n      0x00\n      add\n        /* \"farms-pools/SousChef.sol\":24883:24898  user.amount = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"farms-pools/SousChef.sol\":24927:24928  0 */\n      0x00\n        /* \"farms-pools/SousChef.sol\":24909:24913  user */\n      dup2\n        /* \"farms-pools/SousChef.sol\":24909:24924  user.rewardDebt */\n      0x01\n      add\n        /* \"farms-pools/SousChef.sol\":24909:24928  user.rewardDebt = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"farms-pools/SousChef.sol\":24660:24936  function emergencyWithdraw() public {\r... */\n      pop\n      jump\t// out\n        /* \"farms-pools/SousChef.sol\":21169:21270  function addressLength() external view returns (uint256) {\r... */\n    tag_43:\n        /* \"farms-pools/SousChef.sol\":21217:21224  uint256 */\n      0x00\n        /* \"farms-pools/SousChef.sol\":21244:21255  addressList */\n      0x05\n        /* \"farms-pools/SousChef.sol\":21244:21262  addressList.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"farms-pools/SousChef.sol\":21237:21262  return addressList.length */\n      swap1\n      pop\n        /* \"farms-pools/SousChef.sol\":21169:21270  function addressLength() external view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"farms-pools/SousChef.sol\":22531:23149  function updatePool() public {\r... */\n    tag_45:\n        /* \"farms-pools/SousChef.sol\":22591:22599  poolInfo */\n      0x02\n        /* \"farms-pools/SousChef.sol\":22591:22615  poolInfo.lastRewardBlock */\n      0x00\n      add\n      sload\n        /* \"farms-pools/SousChef.sol\":22575:22587  block.number */\n      number\n        /* \"farms-pools/SousChef.sol\":22575:22615  block.number <= poolInfo.lastRewardBlock */\n      gt\n        /* \"farms-pools/SousChef.sol\":22571:22650  if (block.number <= poolInfo.lastRewardBlock) {\r... */\n      tag_88\n      jumpi\n        /* \"farms-pools/SousChef.sol\":22632:22639  return; */\n      jump(tag_87)\n        /* \"farms-pools/SousChef.sol\":22571:22650  if (block.number <= poolInfo.lastRewardBlock) {\r... */\n    tag_88:\n        /* \"farms-pools/SousChef.sol\":22660:22679  uint256 syrupSupply */\n      0x00\n        /* \"farms-pools/SousChef.sol\":22682:22687  syrup */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"farms-pools/SousChef.sol\":22682:22697  syrup.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"farms-pools/SousChef.sol\":22706:22710  this */\n      address\n        /* \"farms-pools/SousChef.sol\":22682:22712  syrup.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_91\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_91:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"farms-pools/SousChef.sol\":22660:22712  uint256 syrupSupply = syrup.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"farms-pools/SousChef.sol\":22742:22743  0 */\n      0x00\n        /* \"farms-pools/SousChef.sol\":22727:22738  syrupSupply */\n      dup2\n        /* \"farms-pools/SousChef.sol\":22727:22743  syrupSupply == 0 */\n      eq\n        /* \"farms-pools/SousChef.sol\":22723:22832  if (syrupSupply == 0) {\r... */\n      iszero\n      tag_93\n      jumpi\n        /* \"farms-pools/SousChef.sol\":22787:22799  block.number */\n      number\n        /* \"farms-pools/SousChef.sol\":22760:22768  poolInfo */\n      0x02\n        /* \"farms-pools/SousChef.sol\":22760:22784  poolInfo.lastRewardBlock */\n      0x00\n      add\n        /* \"farms-pools/SousChef.sol\":22760:22799  poolInfo.lastRewardBlock = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"farms-pools/SousChef.sol\":22814:22821  return; */\n      pop\n      jump(tag_87)\n        /* \"farms-pools/SousChef.sol\":22723:22832  if (syrupSupply == 0) {\r... */\n    tag_93:\n        /* \"farms-pools/SousChef.sol\":22842:22860  uint256 multiplier */\n      0x00\n        /* \"farms-pools/SousChef.sol\":22863:22916  getMultiplier(poolInfo.lastRewardBlock, block.number) */\n      tag_94\n        /* \"farms-pools/SousChef.sol\":22877:22885  poolInfo */\n      0x02\n        /* \"farms-pools/SousChef.sol\":22877:22901  poolInfo.lastRewardBlock */\n      0x00\n      add\n      sload\n        /* \"farms-pools/SousChef.sol\":22903:22915  block.number */\n      number\n        /* \"farms-pools/SousChef.sol\":22863:22876  getMultiplier */\n      tag_95\n        /* \"farms-pools/SousChef.sol\":22863:22916  getMultiplier(poolInfo.lastRewardBlock, block.number) */\n      jump\t// in\n    tag_94:\n        /* \"farms-pools/SousChef.sol\":22842:22916  uint256 multiplier = getMultiplier(poolInfo.lastRewardBlock, block.number) */\n      swap1\n      pop\n        /* \"farms-pools/SousChef.sol\":22927:22946  uint256 tokenReward */\n      0x00\n        /* \"farms-pools/SousChef.sol\":22949:22979  multiplier.mul(rewardPerBlock) */\n      tag_96\n        /* \"farms-pools/SousChef.sol\":22964:22978  rewardPerBlock */\n      sload(0x01)\n        /* \"farms-pools/SousChef.sol\":22949:22959  multiplier */\n      dup4\n        /* \"farms-pools/SousChef.sol\":22949:22963  multiplier.mul */\n      tag_59\n      swap1\n        /* \"farms-pools/SousChef.sol\":22949:22979  multiplier.mul(rewardPerBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_96:\n        /* \"farms-pools/SousChef.sol\":22927:22979  uint256 tokenReward = multiplier.mul(rewardPerBlock) */\n      swap1\n      pop\n        /* \"farms-pools/SousChef.sol\":23021:23091  poolInfo.accRewardPerShare.add(tokenReward.mul(1e12).div(syrupSupply)) */\n      tag_97\n        /* \"farms-pools/SousChef.sol\":23052:23090  tokenReward.mul(1e12).div(syrupSupply) */\n      tag_98\n        /* \"farms-pools/SousChef.sol\":23078:23089  syrupSupply */\n      dup5\n        /* \"farms-pools/SousChef.sol\":23052:23073  tokenReward.mul(1e12) */\n      tag_99\n        /* \"farms-pools/SousChef.sol\":23068:23072  1e12 */\n      0xe8d4a51000\n        /* \"farms-pools/SousChef.sol\":23052:23063  tokenReward */\n      dup6\n        /* \"farms-pools/SousChef.sol\":23052:23067  tokenReward.mul */\n      tag_59\n      swap1\n        /* \"farms-pools/SousChef.sol\":23052:23073  tokenReward.mul(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_99:\n        /* \"farms-pools/SousChef.sol\":23052:23077  tokenReward.mul(1e12).div */\n      tag_60\n      swap1\n        /* \"farms-pools/SousChef.sol\":23052:23090  tokenReward.mul(1e12).div(syrupSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_98:\n        /* \"farms-pools/SousChef.sol\":23021:23029  poolInfo */\n      0x02\n        /* \"farms-pools/SousChef.sol\":23021:23047  poolInfo.accRewardPerShare */\n      0x01\n      add\n      sload\n        /* \"farms-pools/SousChef.sol\":23021:23051  poolInfo.accRewardPerShare.add */\n      tag_62\n      swap1\n        /* \"farms-pools/SousChef.sol\":23021:23091  poolInfo.accRewardPerShare.add(tokenReward.mul(1e12).div(syrupSupply)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_97:\n        /* \"farms-pools/SousChef.sol\":22992:23000  poolInfo */\n      0x02\n        /* \"farms-pools/SousChef.sol\":22992:23018  poolInfo.accRewardPerShare */\n      0x01\n      add\n        /* \"farms-pools/SousChef.sol\":22992:23091  poolInfo.accRewardPerShare = poolInfo.accRewardPerShare.add(tokenReward.mul(1e12).div(syrupSupply)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"farms-pools/SousChef.sol\":23129:23141  block.number */\n      number\n        /* \"farms-pools/SousChef.sol\":23102:23110  poolInfo */\n      0x02\n        /* \"farms-pools/SousChef.sol\":23102:23126  poolInfo.lastRewardBlock */\n      0x00\n      add\n        /* \"farms-pools/SousChef.sol\":23102:23141  poolInfo.lastRewardBlock = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"farms-pools/SousChef.sol\":22531:23149  function updatePool() public {\r... */\n      pop\n      pop\n      pop\n    tag_87:\n      jump\t// out\n        /* \"farms-pools/SousChef.sol\":21719:22455  function pendingReward(address _user) external view returns (uint256) {\r... */\n    tag_48:\n        /* \"farms-pools/SousChef.sol\":21780:21787  uint256 */\n      0x00\n        /* \"farms-pools/SousChef.sol\":21800:21821  PoolInfo storage pool */\n      dup1\n        /* \"farms-pools/SousChef.sol\":21824:21832  poolInfo */\n      0x02\n        /* \"farms-pools/SousChef.sol\":21800:21832  PoolInfo storage pool = poolInfo */\n      swap1\n      pop\n        /* \"farms-pools/SousChef.sol\":21843:21864  UserInfo storage user */\n      0x00\n        /* \"farms-pools/SousChef.sol\":21867:21875  userInfo */\n      0x04\n        /* \"farms-pools/SousChef.sol\":21867:21882  userInfo[_user] */\n      0x00\n        /* \"farms-pools/SousChef.sol\":21876:21881  _user */\n      dup6\n        /* \"farms-pools/SousChef.sol\":21867:21882  userInfo[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"farms-pools/SousChef.sol\":21843:21882  UserInfo storage user = userInfo[_user] */\n      swap1\n      pop\n        /* \"farms-pools/SousChef.sol\":21893:21918  uint256 accRewardPerShare */\n      0x00\n        /* \"farms-pools/SousChef.sol\":21921:21925  pool */\n      dup3\n        /* \"farms-pools/SousChef.sol\":21921:21943  pool.accRewardPerShare */\n      0x01\n      add\n      sload\n        /* \"farms-pools/SousChef.sol\":21893:21943  uint256 accRewardPerShare = pool.accRewardPerShare */\n      swap1\n      pop\n        /* \"farms-pools/SousChef.sol\":21954:21974  uint256 stakedSupply */\n      0x00\n        /* \"farms-pools/SousChef.sol\":21977:21982  syrup */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"farms-pools/SousChef.sol\":21977:21992  syrup.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"farms-pools/SousChef.sol\":22001:22005  this */\n      address\n        /* \"farms-pools/SousChef.sol\":21977:22007  syrup.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_103\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_103:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"farms-pools/SousChef.sol\":21954:22007  uint256 stakedSupply = syrup.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"farms-pools/SousChef.sol\":22037:22041  pool */\n      dup4\n        /* \"farms-pools/SousChef.sol\":22037:22057  pool.lastRewardBlock */\n      0x00\n      add\n      sload\n        /* \"farms-pools/SousChef.sol\":22022:22034  block.number */\n      number\n        /* \"farms-pools/SousChef.sol\":22022:22057  block.number > pool.lastRewardBlock */\n      gt\n        /* \"farms-pools/SousChef.sol\":22022:22078  block.number > pool.lastRewardBlock && stakedSupply != 0 */\n      dup1\n      iszero\n      tag_105\n      jumpi\n      pop\n        /* \"farms-pools/SousChef.sol\":22077:22078  0 */\n      0x00\n        /* \"farms-pools/SousChef.sol\":22061:22073  stakedSupply */\n      dup2\n        /* \"farms-pools/SousChef.sol\":22061:22078  stakedSupply != 0 */\n      eq\n      iszero\n        /* \"farms-pools/SousChef.sol\":22022:22078  block.number > pool.lastRewardBlock && stakedSupply != 0 */\n    tag_105:\n        /* \"farms-pools/SousChef.sol\":22018:22341  if (block.number > pool.lastRewardBlock && stakedSupply != 0) {\r... */\n      iszero\n      tag_106\n      jumpi\n        /* \"farms-pools/SousChef.sol\":22095:22113  uint256 multiplier */\n      0x00\n        /* \"farms-pools/SousChef.sol\":22116:22165  getMultiplier(pool.lastRewardBlock, block.number) */\n      tag_107\n        /* \"farms-pools/SousChef.sol\":22130:22134  pool */\n      dup6\n        /* \"farms-pools/SousChef.sol\":22130:22150  pool.lastRewardBlock */\n      0x00\n      add\n      sload\n        /* \"farms-pools/SousChef.sol\":22152:22164  block.number */\n      number\n        /* \"farms-pools/SousChef.sol\":22116:22129  getMultiplier */\n      tag_95\n        /* \"farms-pools/SousChef.sol\":22116:22165  getMultiplier(pool.lastRewardBlock, block.number) */\n      jump\t// in\n    tag_107:\n        /* \"farms-pools/SousChef.sol\":22095:22165  uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number) */\n      swap1\n      pop\n        /* \"farms-pools/SousChef.sol\":22180:22199  uint256 tokenReward */\n      0x00\n        /* \"farms-pools/SousChef.sol\":22202:22232  multiplier.mul(rewardPerBlock) */\n      tag_108\n        /* \"farms-pools/SousChef.sol\":22217:22231  rewardPerBlock */\n      sload(0x01)\n        /* \"farms-pools/SousChef.sol\":22202:22212  multiplier */\n      dup4\n        /* \"farms-pools/SousChef.sol\":22202:22216  multiplier.mul */\n      tag_59\n      swap1\n        /* \"farms-pools/SousChef.sol\":22202:22232  multiplier.mul(rewardPerBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_108:\n        /* \"farms-pools/SousChef.sol\":22180:22232  uint256 tokenReward = multiplier.mul(rewardPerBlock) */\n      swap1\n      pop\n        /* \"farms-pools/SousChef.sol\":22267:22329  accRewardPerShare.add(tokenReward.mul(1e12).div(stakedSupply)) */\n      tag_109\n        /* \"farms-pools/SousChef.sol\":22289:22328  tokenReward.mul(1e12).div(stakedSupply) */\n      tag_110\n        /* \"farms-pools/SousChef.sol\":22315:22327  stakedSupply */\n      dup5\n        /* \"farms-pools/SousChef.sol\":22289:22310  tokenReward.mul(1e12) */\n      tag_111\n        /* \"farms-pools/SousChef.sol\":22305:22309  1e12 */\n      0xe8d4a51000\n        /* \"farms-pools/SousChef.sol\":22289:22300  tokenReward */\n      dup6\n        /* \"farms-pools/SousChef.sol\":22289:22304  tokenReward.mul */\n      tag_59\n      swap1\n        /* \"farms-pools/SousChef.sol\":22289:22310  tokenReward.mul(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_111:\n        /* \"farms-pools/SousChef.sol\":22289:22314  tokenReward.mul(1e12).div */\n      tag_60\n      swap1\n        /* \"farms-pools/SousChef.sol\":22289:22328  tokenReward.mul(1e12).div(stakedSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_110:\n        /* \"farms-pools/SousChef.sol\":22267:22284  accRewardPerShare */\n      dup6\n        /* \"farms-pools/SousChef.sol\":22267:22288  accRewardPerShare.add */\n      tag_62\n      swap1\n        /* \"farms-pools/SousChef.sol\":22267:22329  accRewardPerShare.add(tokenReward.mul(1e12).div(stakedSupply)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_109:\n        /* \"farms-pools/SousChef.sol\":22247:22329  accRewardPerShare = accRewardPerShare.add(tokenReward.mul(1e12).div(stakedSupply)) */\n      swap4\n      pop\n        /* \"farms-pools/SousChef.sol\":22018:22341  if (block.number > pool.lastRewardBlock && stakedSupply != 0) {\r... */\n      pop\n      pop\n    tag_106:\n        /* \"farms-pools/SousChef.sol\":22358:22447  user.amount.mul(accRewardPerShare).div(1e12).sub(user.rewardDebt).add(user.rewardPending) */\n      tag_112\n        /* \"farms-pools/SousChef.sol\":22428:22432  user */\n      dup4\n        /* \"farms-pools/SousChef.sol\":22428:22446  user.rewardPending */\n      0x02\n      add\n      sload\n        /* \"farms-pools/SousChef.sol\":22358:22423  user.amount.mul(accRewardPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_113\n        /* \"farms-pools/SousChef.sol\":22407:22411  user */\n      dup6\n        /* \"farms-pools/SousChef.sol\":22407:22422  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"farms-pools/SousChef.sol\":22358:22402  user.amount.mul(accRewardPerShare).div(1e12) */\n      tag_114\n        /* \"farms-pools/SousChef.sol\":22397:22401  1e12 */\n      0xe8d4a51000\n        /* \"farms-pools/SousChef.sol\":22358:22392  user.amount.mul(accRewardPerShare) */\n      tag_115\n        /* \"farms-pools/SousChef.sol\":22374:22391  accRewardPerShare */\n      dup9\n        /* \"farms-pools/SousChef.sol\":22358:22362  user */\n      dup11\n        /* \"farms-pools/SousChef.sol\":22358:22369  user.amount */\n      0x00\n      add\n      sload\n        /* \"farms-pools/SousChef.sol\":22358:22373  user.amount.mul */\n      tag_59\n      swap1\n        /* \"farms-pools/SousChef.sol\":22358:22392  user.amount.mul(accRewardPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_115:\n        /* \"farms-pools/SousChef.sol\":22358:22396  user.amount.mul(accRewardPerShare).div */\n      tag_60\n      swap1\n        /* \"farms-pools/SousChef.sol\":22358:22402  user.amount.mul(accRewardPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_114:\n        /* \"farms-pools/SousChef.sol\":22358:22406  user.amount.mul(accRewardPerShare).div(1e12).sub */\n      tag_61\n      swap1\n        /* \"farms-pools/SousChef.sol\":22358:22423  user.amount.mul(accRewardPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_113:\n        /* \"farms-pools/SousChef.sol\":22358:22427  user.amount.mul(accRewardPerShare).div(1e12).sub(user.rewardDebt).add */\n      tag_62\n      swap1\n        /* \"farms-pools/SousChef.sol\":22358:22447  user.amount.mul(accRewardPerShare).div(1e12).sub(user.rewardDebt).add(user.rewardPending) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_112:\n        /* \"farms-pools/SousChef.sol\":22351:22447  return user.amount.mul(accRewardPerShare).div(1e12).sub(user.rewardDebt).add(user.rewardPending) */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"farms-pools/SousChef.sol\":21719:22455  function pendingReward(address _user) external view returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"farms-pools/SousChef.sol\":16105:16316  function safeTransfer(\r... */\n    tag_54:\n        /* \"farms-pools/SousChef.sol\":16222:16308  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_117\n        /* \"farms-pools/SousChef.sol\":16242:16247  token */\n      dup4\n        /* \"farms-pools/SousChef.sol\":16272:16295  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"farms-pools/SousChef.sol\":16297:16299  to */\n      dup5\n        /* \"farms-pools/SousChef.sol\":16301:16306  value */\n      dup5\n        /* \"farms-pools/SousChef.sol\":16249:16307  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"farms-pools/SousChef.sol\":16222:16241  _callOptionalReturn */\n      tag_118\n        /* \"farms-pools/SousChef.sol\":16222:16308  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_117:\n        /* \"farms-pools/SousChef.sol\":16105:16316  function safeTransfer(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"farms-pools/SousChef.sol\":2332:2803  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_59:\n        /* \"farms-pools/SousChef.sol\":2390:2397  uint256 */\n      0x00\n        /* \"farms-pools/SousChef.sol\":2640:2641  0 */\n      dup1\n        /* \"farms-pools/SousChef.sol\":2635:2636  a */\n      dup4\n        /* \"farms-pools/SousChef.sol\":2635:2641  a == 0 */\n      eq\n        /* \"farms-pools/SousChef.sol\":2631:2678  if (a == 0) {\r... */\n      iszero\n      tag_120\n      jumpi\n        /* \"farms-pools/SousChef.sol\":2665:2666  0 */\n      0x00\n        /* \"farms-pools/SousChef.sol\":2658:2666  return 0 */\n      swap1\n      pop\n      jump(tag_119)\n        /* \"farms-pools/SousChef.sol\":2631:2678  if (a == 0) {\r... */\n    tag_120:\n        /* \"farms-pools/SousChef.sol\":2690:2699  uint256 c */\n      0x00\n        /* \"farms-pools/SousChef.sol\":2706:2707  b */\n      dup3\n        /* \"farms-pools/SousChef.sol\":2702:2703  a */\n      dup5\n        /* \"farms-pools/SousChef.sol\":2702:2707  a * b */\n      mul\n        /* \"farms-pools/SousChef.sol\":2690:2707  uint256 c = a * b */\n      swap1\n      pop\n        /* \"farms-pools/SousChef.sol\":2735:2736  b */\n      dup3\n        /* \"farms-pools/SousChef.sol\":2730:2731  a */\n      dup5\n        /* \"farms-pools/SousChef.sol\":2726:2727  c */\n      dup3\n        /* \"farms-pools/SousChef.sol\":2726:2731  c / a */\n      dup2\n      tag_121\n      jumpi\n      invalid\n    tag_121:\n      div\n        /* \"farms-pools/SousChef.sol\":2726:2736  c / a == b */\n      eq\n        /* \"farms-pools/SousChef.sol\":2718:2774  require(c / a == b, 'SafeMath: multiplication overflow') */\n      tag_122\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_122:\n        /* \"farms-pools/SousChef.sol\":2794:2795  c */\n      dup1\n        /* \"farms-pools/SousChef.sol\":2787:2795  return c */\n      swap2\n      pop\n      pop\n        /* \"farms-pools/SousChef.sol\":2332:2803  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_119:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"farms-pools/SousChef.sol\":3279:3411  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_60:\n        /* \"farms-pools/SousChef.sol\":3337:3344  uint256 */\n      0x00\n        /* \"farms-pools/SousChef.sol\":3364:3403  div(a, b, 'SafeMath: division by zero') */\n      tag_124\n        /* \"farms-pools/SousChef.sol\":3368:3369  a */\n      dup4\n        /* \"farms-pools/SousChef.sol\":3371:3372  b */\n      dup4\n        /* \"farms-pools/SousChef.sol\":3364:3403  div(a, b, 'SafeMath: division by zero') */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"farms-pools/SousChef.sol\":3364:3367  div */\n      tag_125\n        /* \"farms-pools/SousChef.sol\":3364:3403  div(a, b, 'SafeMath: division by zero') */\n      jump\t// in\n    tag_124:\n        /* \"farms-pools/SousChef.sol\":3357:3403  return div(a, b, 'SafeMath: division by zero') */\n      swap1\n      pop\n        /* \"farms-pools/SousChef.sol\":3279:3411  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"farms-pools/SousChef.sol\":1408:1544  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_61:\n        /* \"farms-pools/SousChef.sol\":1466:1473  uint256 */\n      0x00\n        /* \"farms-pools/SousChef.sol\":1493:1536  sub(a, b, 'SafeMath: subtraction overflow') */\n      tag_127\n        /* \"farms-pools/SousChef.sol\":1497:1498  a */\n      dup4\n        /* \"farms-pools/SousChef.sol\":1500:1501  b */\n      dup4\n        /* \"farms-pools/SousChef.sol\":1493:1536  sub(a, b, 'SafeMath: subtraction overflow') */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"farms-pools/SousChef.sol\":1493:1496  sub */\n      tag_128\n        /* \"farms-pools/SousChef.sol\":1493:1536  sub(a, b, 'SafeMath: subtraction overflow') */\n      jump\t// in\n    tag_127:\n        /* \"farms-pools/SousChef.sol\":1486:1536  return sub(a, b, 'SafeMath: subtraction overflow') */\n      swap1\n      pop\n        /* \"farms-pools/SousChef.sol\":1408:1544  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"farms-pools/SousChef.sol\":944:1125  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_62:\n        /* \"farms-pools/SousChef.sol\":1002:1009  uint256 */\n      0x00\n        /* \"farms-pools/SousChef.sol\":1022:1031  uint256 c */\n      dup1\n        /* \"farms-pools/SousChef.sol\":1038:1039  b */\n      dup3\n        /* \"farms-pools/SousChef.sol\":1034:1035  a */\n      dup5\n        /* \"farms-pools/SousChef.sol\":1034:1039  a + b */\n      add\n        /* \"farms-pools/SousChef.sol\":1022:1039  uint256 c = a + b */\n      swap1\n      pop\n        /* \"farms-pools/SousChef.sol\":1063:1064  a */\n      dup4\n        /* \"farms-pools/SousChef.sol\":1058:1059  c */\n      dup2\n        /* \"farms-pools/SousChef.sol\":1058:1064  c >= a */\n      lt\n      iszero\n        /* \"farms-pools/SousChef.sol\":1050:1096  require(c >= a, 'SafeMath: addition overflow') */\n      tag_130\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_130:\n        /* \"farms-pools/SousChef.sol\":1116:1117  c */\n      dup1\n        /* \"farms-pools/SousChef.sol\":1109:1117  return c */\n      swap2\n      pop\n      pop\n        /* \"farms-pools/SousChef.sol\":944:1125  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"farms-pools/SousChef.sol\":16324:16572  function safeTransferFrom(\r... */\n    tag_70:\n        /* \"farms-pools/SousChef.sol\":16468:16564  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_132\n        /* \"farms-pools/SousChef.sol\":16488:16493  token */\n      dup5\n        /* \"farms-pools/SousChef.sol\":16518:16545  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"farms-pools/SousChef.sol\":16547:16551  from */\n      dup6\n        /* \"farms-pools/SousChef.sol\":16553:16555  to */\n      dup6\n        /* \"farms-pools/SousChef.sol\":16557:16562  value */\n      dup6\n        /* \"farms-pools/SousChef.sol\":16495:16563  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"farms-pools/SousChef.sol\":16468:16487  _callOptionalReturn */\n      tag_118\n        /* \"farms-pools/SousChef.sol\":16468:16564  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_132:\n        /* \"farms-pools/SousChef.sol\":16324:16572  function safeTransferFrom(\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"farms-pools/SousChef.sol\":21346:21654  function getMultiplier(uint256 _from, uint256 _to) internal view returns (uint256) {\r... */\n    tag_95:\n        /* \"farms-pools/SousChef.sol\":21420:21427  uint256 */\n      0x00\n        /* \"farms-pools/SousChef.sol\":21451:21464  bonusEndBlock */\n      sload(0x07)\n        /* \"farms-pools/SousChef.sol\":21444:21447  _to */\n      dup3\n        /* \"farms-pools/SousChef.sol\":21444:21464  _to <= bonusEndBlock */\n      gt\n        /* \"farms-pools/SousChef.sol\":21440:21647  if (_to <= bonusEndBlock) {\r... */\n      tag_134\n      jumpi\n        /* \"farms-pools/SousChef.sol\":21488:21502  _to.sub(_from) */\n      tag_135\n        /* \"farms-pools/SousChef.sol\":21496:21501  _from */\n      dup4\n        /* \"farms-pools/SousChef.sol\":21488:21491  _to */\n      dup4\n        /* \"farms-pools/SousChef.sol\":21488:21495  _to.sub */\n      tag_61\n      swap1\n        /* \"farms-pools/SousChef.sol\":21488:21502  _to.sub(_from) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_135:\n        /* \"farms-pools/SousChef.sol\":21481:21502  return _to.sub(_from) */\n      swap1\n      pop\n      jump(tag_133)\n        /* \"farms-pools/SousChef.sol\":21440:21647  if (_to <= bonusEndBlock) {\r... */\n    tag_134:\n        /* \"farms-pools/SousChef.sol\":21533:21546  bonusEndBlock */\n      sload(0x07)\n        /* \"farms-pools/SousChef.sol\":21524:21529  _from */\n      dup4\n        /* \"farms-pools/SousChef.sol\":21524:21546  _from >= bonusEndBlock */\n      lt\n        /* \"farms-pools/SousChef.sol\":21520:21647  if (_from >= bonusEndBlock) {\r... */\n      tag_137\n      jumpi\n        /* \"farms-pools/SousChef.sol\":21570:21571  0 */\n      0x00\n        /* \"farms-pools/SousChef.sol\":21563:21571  return 0 */\n      swap1\n      pop\n      jump(tag_133)\n        /* \"farms-pools/SousChef.sol\":21520:21647  if (_from >= bonusEndBlock) {\r... */\n    tag_137:\n        /* \"farms-pools/SousChef.sol\":21611:21635  bonusEndBlock.sub(_from) */\n      tag_139\n        /* \"farms-pools/SousChef.sol\":21629:21634  _from */\n      dup4\n        /* \"farms-pools/SousChef.sol\":21611:21624  bonusEndBlock */\n      sload(0x07)\n        /* \"farms-pools/SousChef.sol\":21611:21628  bonusEndBlock.sub */\n      tag_61\n      swap1\n        /* \"farms-pools/SousChef.sol\":21611:21635  bonusEndBlock.sub(_from) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_139:\n        /* \"farms-pools/SousChef.sol\":21604:21635  return bonusEndBlock.sub(_from) */\n      swap1\n      pop\n        /* \"farms-pools/SousChef.sol\":21346:21654  function getMultiplier(uint256 _from, uint256 _to) internal view returns (uint256) {\r... */\n    tag_133:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"farms-pools/SousChef.sol\":18640:19414  function _callOptionalReturn(IBEP20 token, bytes memory data) private {\r... */\n    tag_118:\n        /* \"farms-pools/SousChef.sol\":19064:19087  bytes memory returndata */\n      0x60\n        /* \"farms-pools/SousChef.sol\":19090:19159  address(token).functionCall(data, 'SafeBEP20: low-level call failed') */\n      tag_141\n        /* \"farms-pools/SousChef.sol\":19118:19122  data */\n      dup3\n        /* \"farms-pools/SousChef.sol\":19090:19159  address(token).functionCall(data, 'SafeBEP20: low-level call failed') */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"farms-pools/SousChef.sol\":19098:19103  token */\n      dup6\n        /* \"farms-pools/SousChef.sol\":19090:19117  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_142\n      swap1\n        /* \"farms-pools/SousChef.sol\":19090:19159  address(token).functionCall(data, 'SafeBEP20: low-level call failed') */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_141:\n        /* \"farms-pools/SousChef.sol\":19064:19159  bytes memory returndata = address(token).functionCall(data, 'SafeBEP20: low-level call failed') */\n      swap1\n      pop\n        /* \"farms-pools/SousChef.sol\":19194:19195  0 */\n      0x00\n        /* \"farms-pools/SousChef.sol\":19174:19184  returndata */\n      dup2\n        /* \"farms-pools/SousChef.sol\":19174:19191  returndata.length */\n      mload\n        /* \"farms-pools/SousChef.sol\":19174:19195  returndata.length > 0 */\n      gt\n        /* \"farms-pools/SousChef.sol\":19170:19407  if (returndata.length > 0) {\r... */\n      iszero\n      tag_143\n      jumpi\n        /* \"farms-pools/SousChef.sol\":19329:19339  returndata */\n      dup1\n        /* \"farms-pools/SousChef.sol\":19318:19348  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      0x20\n      dup2\n      lt\n      iszero\n      tag_144\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_144:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"farms-pools/SousChef.sol\":19310:19395  require(abi.decode(returndata, (bool)), 'SafeBEP20: BEP20 operation did not succeed') */\n      tag_145\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_145:\n        /* \"farms-pools/SousChef.sol\":19170:19407  if (returndata.length > 0) {\r... */\n    tag_143:\n        /* \"farms-pools/SousChef.sol\":18640:19414  function _callOptionalReturn(IBEP20 token, bytes memory data) private {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"farms-pools/SousChef.sol\":3907:4219  function div(\r... */\n    tag_125:\n        /* \"farms-pools/SousChef.sol\":4027:4034  uint256 */\n      0x00\n        /* \"farms-pools/SousChef.sol\":4059:4060  0 */\n      dup1\n        /* \"farms-pools/SousChef.sol\":4055:4056  b */\n      dup4\n        /* \"farms-pools/SousChef.sol\":4055:4060  b > 0 */\n      gt\n        /* \"farms-pools/SousChef.sol\":4062:4074  errorMessage */\n      dup3\n        /* \"farms-pools/SousChef.sol\":4047:4075  require(b > 0, errorMessage) */\n      swap1\n      tag_147\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_148:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_150\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_148)\n    tag_150:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_151\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_151:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_147:\n      pop\n        /* \"farms-pools/SousChef.sol\":4086:4095  uint256 c */\n      0x00\n        /* \"farms-pools/SousChef.sol\":4102:4103  b */\n      dup4\n        /* \"farms-pools/SousChef.sol\":4098:4099  a */\n      dup6\n        /* \"farms-pools/SousChef.sol\":4098:4103  a / b */\n      dup2\n      tag_152\n      jumpi\n      invalid\n    tag_152:\n      div\n        /* \"farms-pools/SousChef.sol\":4086:4103  uint256 c = a / b */\n      swap1\n      pop\n        /* \"farms-pools/SousChef.sol\":4210:4211  c */\n      dup1\n        /* \"farms-pools/SousChef.sol\":4203:4211  return c */\n      swap2\n      pop\n      pop\n        /* \"farms-pools/SousChef.sol\":3907:4219  function div(\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"farms-pools/SousChef.sol\":1847:2073  function sub(\r... */\n    tag_128:\n        /* \"farms-pools/SousChef.sol\":1967:1974  uint256 */\n      0x00\n        /* \"farms-pools/SousChef.sol\":2000:2001  a */\n      dup4\n        /* \"farms-pools/SousChef.sol\":1995:1996  b */\n      dup4\n        /* \"farms-pools/SousChef.sol\":1995:2001  b <= a */\n      gt\n      iszero\n        /* \"farms-pools/SousChef.sol\":2003:2015  errorMessage */\n      dup3\n        /* \"farms-pools/SousChef.sol\":1987:2016  require(b <= a, errorMessage) */\n      swap1\n      tag_154\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_155:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_157\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_155)\n    tag_157:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_158\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_158:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_154:\n      pop\n        /* \"farms-pools/SousChef.sol\":2027:2036  uint256 c */\n      0x00\n        /* \"farms-pools/SousChef.sol\":2043:2044  b */\n      dup4\n        /* \"farms-pools/SousChef.sol\":2039:2040  a */\n      dup6\n        /* \"farms-pools/SousChef.sol\":2039:2044  a - b */\n      sub\n        /* \"farms-pools/SousChef.sol\":2027:2044  uint256 c = a - b */\n      swap1\n      pop\n        /* \"farms-pools/SousChef.sol\":2064:2065  c */\n      dup1\n        /* \"farms-pools/SousChef.sol\":2057:2065  return c */\n      swap2\n      pop\n      pop\n        /* \"farms-pools/SousChef.sol\":1847:2073  function sub(\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"farms-pools/SousChef.sol\":13026:13256  function functionCall(\r... */\n    tag_142:\n        /* \"farms-pools/SousChef.sol\":13163:13175  bytes memory */\n      0x60\n        /* \"farms-pools/SousChef.sol\":13195:13248  _functionCallWithValue(target, data, 0, errorMessage) */\n      tag_160\n        /* \"farms-pools/SousChef.sol\":13218:13224  target */\n      dup5\n        /* \"farms-pools/SousChef.sol\":13226:13230  data */\n      dup5\n        /* \"farms-pools/SousChef.sol\":13232:13233  0 */\n      0x00\n        /* \"farms-pools/SousChef.sol\":13235:13247  errorMessage */\n      dup6\n        /* \"farms-pools/SousChef.sol\":13195:13217  _functionCallWithValue */\n      tag_161\n        /* \"farms-pools/SousChef.sol\":13195:13248  _functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_160:\n        /* \"farms-pools/SousChef.sol\":13188:13248  return _functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"farms-pools/SousChef.sol\":13026:13256  function functionCall(\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"farms-pools/SousChef.sol\":14514:15534  function _functionCallWithValue(\r... */\n    tag_161:\n        /* \"farms-pools/SousChef.sol\":14687:14699  bytes memory */\n      0x60\n        /* \"farms-pools/SousChef.sol\":14720:14738  isContract(target) */\n      tag_163\n        /* \"farms-pools/SousChef.sol\":14731:14737  target */\n      dup6\n        /* \"farms-pools/SousChef.sol\":14720:14730  isContract */\n      tag_164\n        /* \"farms-pools/SousChef.sol\":14720:14738  isContract(target) */\n      jump\t// in\n    tag_163:\n        /* \"farms-pools/SousChef.sol\":14712:14772  require(isContract(target), 'Address: call to non-contract') */\n      tag_165\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1d\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_165:\n        /* \"farms-pools/SousChef.sol\":14846:14858  bool success */\n      0x00\n        /* \"farms-pools/SousChef.sol\":14860:14883  bytes memory returndata */\n      0x60\n        /* \"farms-pools/SousChef.sol\":14887:14893  target */\n      dup7\n        /* \"farms-pools/SousChef.sol\":14887:14898  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"farms-pools/SousChef.sol\":14906:14914  weiValue */\n      dup6\n        /* \"farms-pools/SousChef.sol\":14916:14920  data */\n      dup8\n        /* \"farms-pools/SousChef.sol\":14887:14921  target.call{value: weiValue}(data) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n    tag_166:\n      0x20\n      dup4\n      lt\n      tag_168\n      jumpi\n      dup1\n      mload\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap2\n      pop\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      0x20\n      dup4\n      sub\n      swap3\n      pop\n      jump(tag_166)\n    tag_168:\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      dup1\n      not\n      dup3\n      mload\n      and\n      dup2\n      dup5\n      mload\n      and\n      dup1\n      dup3\n      or\n      dup6\n      mstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_171\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_170)\n    tag_171:\n      0x60\n      swap2\n      pop\n    tag_170:\n      pop\n        /* \"farms-pools/SousChef.sol\":14845:14921  (bool success, bytes memory returndata) = target.call{value: weiValue}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"farms-pools/SousChef.sol\":14936:14943  success */\n      dup2\n        /* \"farms-pools/SousChef.sol\":14932:15527  if (success) {\r... */\n      iszero\n      tag_172\n      jumpi\n        /* \"farms-pools/SousChef.sol\":14967:14977  returndata */\n      dup1\n        /* \"farms-pools/SousChef.sol\":14960:14977  return returndata */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_162)\n        /* \"farms-pools/SousChef.sol\":14932:15527  if (success) {\r... */\n    tag_172:\n        /* \"farms-pools/SousChef.sol\":15101:15102  0 */\n      0x00\n        /* \"farms-pools/SousChef.sol\":15081:15091  returndata */\n      dup2\n        /* \"farms-pools/SousChef.sol\":15081:15098  returndata.length */\n      mload\n        /* \"farms-pools/SousChef.sol\":15081:15102  returndata.length > 0 */\n      gt\n        /* \"farms-pools/SousChef.sol\":15077:15516  if (returndata.length > 0) {\r... */\n      iszero\n      tag_174\n      jumpi\n        /* \"farms-pools/SousChef.sol\":15344:15354  returndata */\n      dup1\n        /* \"farms-pools/SousChef.sol\":15338:15355  mload(returndata) */\n      mload\n        /* \"farms-pools/SousChef.sol\":15405:15420  returndata_size */\n      dup1\n        /* \"farms-pools/SousChef.sol\":15392:15402  returndata */\n      dup3\n        /* \"farms-pools/SousChef.sol\":15388:15390  32 */\n      0x20\n        /* \"farms-pools/SousChef.sol\":15384:15403  add(32, returndata) */\n      add\n        /* \"farms-pools/SousChef.sol\":15377:15421  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"farms-pools/SousChef.sol\":15292:15440  {\r... */\n    tag_174:\n        /* \"farms-pools/SousChef.sol\":15487:15499  errorMessage */\n      dup4\n        /* \"farms-pools/SousChef.sol\":15480:15500  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_176:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_178\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_176)\n    tag_178:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_179\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_179:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"farms-pools/SousChef.sol\":14514:15534  function _functionCallWithValue(\r... */\n    tag_162:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"farms-pools/SousChef.sol\":9889:10530  function isContract(address account) internal view returns (bool) {\r... */\n    tag_164:\n        /* \"farms-pools/SousChef.sol\":9949:9953  bool */\n      0x00\n        /* \"farms-pools/SousChef.sol\":10211:10227  bytes32 codehash */\n      dup1\n        /* \"farms-pools/SousChef.sol\":10238:10257  bytes32 accountHash */\n      0x00\n        /* \"farms-pools/SousChef.sol\":10260:10326  0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 */\n      0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\n        /* \"farms-pools/SousChef.sol\":10238:10326  bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 */\n      0x00\n      shl\n      swap1\n      pop\n        /* \"farms-pools/SousChef.sol\":10442:10449  account */\n      dup4\n        /* \"farms-pools/SousChef.sol\":10430:10450  extcodehash(account) */\n      extcodehash\n        /* \"farms-pools/SousChef.sol\":10418:10450  codehash := extcodehash(account) */\n      swap2\n      pop\n        /* \"farms-pools/SousChef.sol\":10491:10502  accountHash */\n      dup1\n        /* \"farms-pools/SousChef.sol\":10479:10487  codehash */\n      dup3\n        /* \"farms-pools/SousChef.sol\":10479:10502  codehash != accountHash */\n      eq\n      iszero\n        /* \"farms-pools/SousChef.sol\":10479:10521  codehash != accountHash && codehash != 0x0 */\n      dup1\n      iszero\n      tag_181\n      jumpi\n      pop\n        /* \"farms-pools/SousChef.sol\":10518:10521  0x0 */\n      0x00\n        /* \"farms-pools/SousChef.sol\":10506:10521  codehash != 0x0 */\n      dup1\n      shl\n        /* \"farms-pools/SousChef.sol\":10506:10514  codehash */\n      dup3\n        /* \"farms-pools/SousChef.sol\":10506:10521  codehash != 0x0 */\n      eq\n      iszero\n        /* \"farms-pools/SousChef.sol\":10479:10521  codehash != accountHash && codehash != 0x0 */\n    tag_181:\n        /* \"farms-pools/SousChef.sol\":10471:10522  return (codehash != accountHash && codehash != 0x0) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"farms-pools/SousChef.sol\":9889:10530  function isContract(address account) internal view returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n    stop\n    data_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082 5361666542455032303a204245503230206f7065726174696f6e20646964206e6f742073756363656564\n    data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n\n    auxdata: 0xa26469706673582212205db66239ba6e95c477bf0072a1146f1384932e4df2fa1949312ba09efc3a56e264736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161175b38038061175b8339818101604052608081101561003357600080fd5b8101908080519060200190929190805190602001909291908051906020019092919080519060200190929190505050836000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260018190555081600681905550806007819055506040518060400160405280600654815260200160008152506002600082015181600001556020820151816001015590505050505050611660806100fb6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80638ae39cac1161008c578063db2e21bc11610066578063db2e21bc146102a1578063dc881888146102ab578063e3161ddd146102c9578063f40f0f52146102d3576100cf565b80638ae39cac146101fd578063b6b55f251461021b578063b810fb4314610249576100cf565b80631959a002146100d45780631aed65531461013a5780632e1a7d4d1461015857806348cd4cb1146101865780635a2f3d09146101a457806386a952c4146101c9575b600080fd5b610116600480360360208110156100ea57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061032b565b60405180848152602001838152602001828152602001935050505060405180910390f35b610142610355565b6040518082815260200191505060405180910390f35b6101846004803603602081101561016e57600080fd5b810190808035906020019092919050505061035b565b005b61018e6105f4565b6040518082815260200191505060405180910390f35b6101ac6105fa565b604051808381526020018281526020019250505060405180910390f35b6101d161060c565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610205610630565b6040518082815260200191505060405180910390f35b6102476004803603602081101561023157600080fd5b8101908080359060200190929190505050610636565b005b6102756004803603602081101561025f57600080fd5b81019080803590602001909291905050506108e8565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102a9610924565b005b6102b3610a1f565b6040518082815260200191505060405180910390f35b6102d1610a2c565b005b610315600480360360208110156102e957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ba3565b6040518082815260200191505060405180910390f35b60046020528060005260406000206000915090508060000154908060010154908060020154905083565b60075481565b600081116103d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260088152602001807f616d6f756e74203000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050818160000154101561048e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f77697468647261773a206e6f7420656e6f75676800000000000000000000000081525060200191505060405180910390fd5b610496610a2c565b6104e1338360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610da79092919063ffffffff16565b6105408160020154610532836001015461052464e8d4a510006105166002600101548860000154610e4990919063ffffffff16565b610ecf90919063ffffffff16565b610f1990919063ffffffff16565b610f6390919063ffffffff16565b816002018190555061055f828260000154610f1990919063ffffffff16565b816000018190555061059a64e8d4a5100061058c6002600101548460000154610e4990919063ffffffff16565b610ecf90919063ffffffff16565b81600101819055503373ffffffffffffffffffffffffffffffffffffffff167f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364836040518082815260200191505060405180910390a25050565b60065481565b60028060000154908060010154905082565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b600081116106ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260088152602001807f616d6f756e74203000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506106f7610a2c565b61074433308460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610feb909392919063ffffffff16565b6000816000015414801561075c575060008160010154145b801561076c575060008160020154145b156107d5576005339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6108348160020154610826836001015461081864e8d4a5100061080a6002600101548860000154610e4990919063ffffffff16565b610ecf90919063ffffffff16565b610f1990919063ffffffff16565b610f6390919063ffffffff16565b8160020181905550610853828260000154610f6390919063ffffffff16565b816000018190555061088e64e8d4a510006108806002600101548460000154610e4990919063ffffffff16565b610ecf90919063ffffffff16565b81600101819055503373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c836040518082815260200191505060405180910390a25050565b600581815481106108f557fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506109b633826000015460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610da79092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd969582600001546040518082815260200191505060405180910390a2600081600001819055506000816001018190555050565b6000600580549050905090565b6002600001544311610a3d57610ba1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610ac757600080fd5b505afa158015610adb573d6000803e3d6000fd5b505050506040513d6020811015610af157600080fd5b810190808051906020019092919050505090506000811415610b1d574360026000018190555050610ba1565b6000610b2e600260000154436110ac565b90506000610b4760015483610e4990919063ffffffff16565b9050610b8a610b7684610b6864e8d4a5100085610e4990919063ffffffff16565b610ecf90919063ffffffff16565b600260010154610f6390919063ffffffff16565b600260010181905550436002600001819055505050505b565b600080600290506000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008260010154905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610c8057600080fd5b505afa158015610c94573d6000803e3d6000fd5b505050506040513d6020811015610caa57600080fd5b81019080805190602001909291905050509050836000015443118015610cd1575060008114155b15610d42576000610ce68560000154436110ac565b90506000610cff60015483610e4990919063ffffffff16565b9050610d3d610d2e84610d2064e8d4a5100085610e4990919063ffffffff16565b610ecf90919063ffffffff16565b85610f6390919063ffffffff16565b935050505b610d9c8360020154610d8e8560010154610d8064e8d4a51000610d72888a60000154610e4990919063ffffffff16565b610ecf90919063ffffffff16565b610f1990919063ffffffff16565b610f6390919063ffffffff16565b945050505050919050565b610e448363a9059cbb60e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611101565b505050565b600080831415610e5c5760009050610ec9565b6000828402905082848281610e6d57fe5b0414610ec4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061160a6021913960400191505060405180910390fd5b809150505b92915050565b6000610f1183836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506111f0565b905092915050565b6000610f5b83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506112b6565b905092915050565b600080828401905083811015610fe1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6110a6846323b872dd60e01b858585604051602401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611101565b50505050565b600060075482116110d1576110ca8383610f1990919063ffffffff16565b90506110fb565b60075483106110e357600090506110fb565b6110f883600754610f1990919063ffffffff16565b90505b92915050565b6060611163826040518060400160405280602081526020017f5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166113769092919063ffffffff16565b90506000815111156111eb5780806020019051602081101561118457600080fd5b81019080805190602001909291905050506111ea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806115e0602a913960400191505060405180910390fd5b5b505050565b6000808311829061129c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611261578082015181840152602081019050611246565b50505050905090810190601f16801561128e5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385816112a857fe5b049050809150509392505050565b6000838311158290611363576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561132857808201518184015260208101905061130d565b50505050905090810190601f1680156113555780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6060611385848460008561138e565b90509392505050565b606061139985611594565b61140b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b6020831061145b5780518252602082019150602081019050602083039250611438565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146114bd576040519150601f19603f3d011682016040523d82523d6000602084013e6114c2565b606091505b509150915081156114d757809250505061158c565b6000815111156114ea5780518082602001fd5b836040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611551578082015181840152602081019050611536565b50505050905090810190601f16801561157e5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b949350505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91508082141580156115d657506000801b8214155b9250505091905056fe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f742073756363656564536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a26469706673582212205db66239ba6e95c477bf0072a1146f1384932e4df2fa1949312ba09efc3a56e264736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x175B CODESIZE SUB DUP1 PUSH2 0x175B DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP4 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x2 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP POP POP POP POP PUSH2 0x1660 DUP1 PUSH2 0xFB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8AE39CAC GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xDB2E21BC GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xDB2E21BC EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xDC881888 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xE3161DDD EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0xF40F0F52 EQ PUSH2 0x2D3 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x8AE39CAC EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0xB810FB43 EQ PUSH2 0x249 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1959A002 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x1AED6553 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x48CD4CB1 EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x5A2F3D09 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x86A952C4 EQ PUSH2 0x1C9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x116 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x142 PUSH2 0x355 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x16E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x35B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18E PUSH2 0x5F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AC PUSH2 0x5FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D1 PUSH2 0x60C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x205 PUSH2 0x630 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x231 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x636 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x275 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x25F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A9 PUSH2 0x924 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B3 PUSH2 0xA1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D1 PUSH2 0xA2C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xBA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x3D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x616D6F756E742030000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP2 DUP2 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x48E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x77697468647261773A206E6F7420656E6F756768000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x496 PUSH2 0xA2C JUMP JUMPDEST PUSH2 0x4E1 CALLER DUP4 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDA7 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x540 DUP2 PUSH1 0x2 ADD SLOAD PUSH2 0x532 DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x524 PUSH5 0xE8D4A51000 PUSH2 0x516 PUSH1 0x2 PUSH1 0x1 ADD SLOAD DUP9 PUSH1 0x0 ADD SLOAD PUSH2 0xE49 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xECF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF19 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF63 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x55F DUP3 DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0xF19 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x59A PUSH5 0xE8D4A51000 PUSH2 0x58C PUSH1 0x2 PUSH1 0x1 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0xE49 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xECF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x6AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x616D6F756E742030000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x6F7 PUSH2 0xA2C JUMP JUMPDEST PUSH2 0x744 CALLER ADDRESS DUP5 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFEB SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x75C JUMPI POP PUSH1 0x0 DUP2 PUSH1 0x1 ADD SLOAD EQ JUMPDEST DUP1 ISZERO PUSH2 0x76C JUMPI POP PUSH1 0x0 DUP2 PUSH1 0x2 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x7D5 JUMPI PUSH1 0x5 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x834 DUP2 PUSH1 0x2 ADD SLOAD PUSH2 0x826 DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x818 PUSH5 0xE8D4A51000 PUSH2 0x80A PUSH1 0x2 PUSH1 0x1 ADD SLOAD DUP9 PUSH1 0x0 ADD SLOAD PUSH2 0xE49 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xECF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF19 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF63 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x853 DUP3 DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0xF63 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x88E PUSH5 0xE8D4A51000 PUSH2 0x880 PUSH1 0x2 PUSH1 0x1 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0xE49 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xECF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x8F5 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x9B6 CALLER DUP3 PUSH1 0x0 ADD SLOAD PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDA7 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5FAFA99D0643513820BE26656B45130B01E1C03062E1266BF36F88CBD3BD9695 DUP3 PUSH1 0x0 ADD SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 ADD SLOAD NUMBER GT PUSH2 0xA3D JUMPI PUSH2 0xBA1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xADB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xAF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0xB1D JUMPI NUMBER PUSH1 0x2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP PUSH2 0xBA1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB2E PUSH1 0x2 PUSH1 0x0 ADD SLOAD NUMBER PUSH2 0x10AC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB47 PUSH1 0x1 SLOAD DUP4 PUSH2 0xE49 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xB8A PUSH2 0xB76 DUP5 PUSH2 0xB68 PUSH5 0xE8D4A51000 DUP6 PUSH2 0xE49 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xECF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 ADD SLOAD PUSH2 0xF63 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP NUMBER PUSH1 0x2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC94 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP4 PUSH1 0x0 ADD SLOAD NUMBER GT DUP1 ISZERO PUSH2 0xCD1 JUMPI POP PUSH1 0x0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0xD42 JUMPI PUSH1 0x0 PUSH2 0xCE6 DUP6 PUSH1 0x0 ADD SLOAD NUMBER PUSH2 0x10AC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xCFF PUSH1 0x1 SLOAD DUP4 PUSH2 0xE49 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xD3D PUSH2 0xD2E DUP5 PUSH2 0xD20 PUSH5 0xE8D4A51000 DUP6 PUSH2 0xE49 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xECF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0xF63 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH2 0xD9C DUP4 PUSH1 0x2 ADD SLOAD PUSH2 0xD8E DUP6 PUSH1 0x1 ADD SLOAD PUSH2 0xD80 PUSH5 0xE8D4A51000 PUSH2 0xD72 DUP9 DUP11 PUSH1 0x0 ADD SLOAD PUSH2 0xE49 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xECF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF19 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF63 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE44 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1101 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0xE5C JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xEC9 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0xE6D JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xEC4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x160A PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF11 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x11F0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF5B DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x12B6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xFE1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10A6 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1101 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 GT PUSH2 0x10D1 JUMPI PUSH2 0x10CA DUP4 DUP4 PUSH2 0xF19 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x10FB JUMP JUMPDEST PUSH1 0x7 SLOAD DUP4 LT PUSH2 0x10E3 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x10FB JUMP JUMPDEST PUSH2 0x10F8 DUP4 PUSH1 0x7 SLOAD PUSH2 0xF19 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1163 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1376 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x11EB JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x11EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x15E0 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x129C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1261 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1246 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x128E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x12A8 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x1363 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1328 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x130D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1355 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1385 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x138E JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1399 DUP6 PUSH2 0x1594 JUMP JUMPDEST PUSH2 0x140B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x145B JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x1438 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x14BD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x14C2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x14D7 JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x158C JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x14EA JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1551 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1536 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x157E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 PUSH1 0x0 SHL SWAP1 POP DUP4 EXTCODEHASH SWAP2 POP DUP1 DUP3 EQ ISZERO DUP1 ISZERO PUSH2 0x15D6 JUMPI POP PUSH1 0x0 DUP1 SHL DUP3 EQ ISZERO JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP INVALID MSTORE8 PUSH2 0x6665 TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 TIMESTAMP GASLIMIT POP ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564536166654D6174683A206D756C74 PUSH10 0x706C69636174696F6E20 PUSH16 0x766572666C6F77A26469706673582212 KECCAK256 0x5D 0xB6 PUSH3 0x39BA6E SWAP6 0xC4 PUSH24 0xBF0072A1146F1384932E4DF2FA1949312BA09EFC3A56E264 PUSH20 0x6F6C634300060C00330000000000000000000000 ",
							"sourceMap": "19573:5368:0:-:0;;;20725:436;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20886:6;20878:5;;:14;;;;;;;;;;;;;;;;;;20920:15;20903:14;:32;;;;20959:11;20946:10;:24;;;;20997:9;20981:13;:25;;;;21055:98;;;;;;;;21096:10;;21055:98;;;;21140:1;21055:98;;;21044:8;:109;;;;;;;;;;;;;;;;;;;20725:436;;;;19573:5368;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c80638ae39cac1161008c578063db2e21bc11610066578063db2e21bc146102a1578063dc881888146102ab578063e3161ddd146102c9578063f40f0f52146102d3576100cf565b80638ae39cac146101fd578063b6b55f251461021b578063b810fb4314610249576100cf565b80631959a002146100d45780631aed65531461013a5780632e1a7d4d1461015857806348cd4cb1146101865780635a2f3d09146101a457806386a952c4146101c9575b600080fd5b610116600480360360208110156100ea57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061032b565b60405180848152602001838152602001828152602001935050505060405180910390f35b610142610355565b6040518082815260200191505060405180910390f35b6101846004803603602081101561016e57600080fd5b810190808035906020019092919050505061035b565b005b61018e6105f4565b6040518082815260200191505060405180910390f35b6101ac6105fa565b604051808381526020018281526020019250505060405180910390f35b6101d161060c565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610205610630565b6040518082815260200191505060405180910390f35b6102476004803603602081101561023157600080fd5b8101908080359060200190929190505050610636565b005b6102756004803603602081101561025f57600080fd5b81019080803590602001909291905050506108e8565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102a9610924565b005b6102b3610a1f565b6040518082815260200191505060405180910390f35b6102d1610a2c565b005b610315600480360360208110156102e957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ba3565b6040518082815260200191505060405180910390f35b60046020528060005260406000206000915090508060000154908060010154908060020154905083565b60075481565b600081116103d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260088152602001807f616d6f756e74203000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050818160000154101561048e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f77697468647261773a206e6f7420656e6f75676800000000000000000000000081525060200191505060405180910390fd5b610496610a2c565b6104e1338360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610da79092919063ffffffff16565b6105408160020154610532836001015461052464e8d4a510006105166002600101548860000154610e4990919063ffffffff16565b610ecf90919063ffffffff16565b610f1990919063ffffffff16565b610f6390919063ffffffff16565b816002018190555061055f828260000154610f1990919063ffffffff16565b816000018190555061059a64e8d4a5100061058c6002600101548460000154610e4990919063ffffffff16565b610ecf90919063ffffffff16565b81600101819055503373ffffffffffffffffffffffffffffffffffffffff167f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364836040518082815260200191505060405180910390a25050565b60065481565b60028060000154908060010154905082565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b600081116106ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260088152602001807f616d6f756e74203000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506106f7610a2c565b61074433308460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610feb909392919063ffffffff16565b6000816000015414801561075c575060008160010154145b801561076c575060008160020154145b156107d5576005339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6108348160020154610826836001015461081864e8d4a5100061080a6002600101548860000154610e4990919063ffffffff16565b610ecf90919063ffffffff16565b610f1990919063ffffffff16565b610f6390919063ffffffff16565b8160020181905550610853828260000154610f6390919063ffffffff16565b816000018190555061088e64e8d4a510006108806002600101548460000154610e4990919063ffffffff16565b610ecf90919063ffffffff16565b81600101819055503373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c836040518082815260200191505060405180910390a25050565b600581815481106108f557fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506109b633826000015460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610da79092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd969582600001546040518082815260200191505060405180910390a2600081600001819055506000816001018190555050565b6000600580549050905090565b6002600001544311610a3d57610ba1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610ac757600080fd5b505afa158015610adb573d6000803e3d6000fd5b505050506040513d6020811015610af157600080fd5b810190808051906020019092919050505090506000811415610b1d574360026000018190555050610ba1565b6000610b2e600260000154436110ac565b90506000610b4760015483610e4990919063ffffffff16565b9050610b8a610b7684610b6864e8d4a5100085610e4990919063ffffffff16565b610ecf90919063ffffffff16565b600260010154610f6390919063ffffffff16565b600260010181905550436002600001819055505050505b565b600080600290506000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008260010154905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610c8057600080fd5b505afa158015610c94573d6000803e3d6000fd5b505050506040513d6020811015610caa57600080fd5b81019080805190602001909291905050509050836000015443118015610cd1575060008114155b15610d42576000610ce68560000154436110ac565b90506000610cff60015483610e4990919063ffffffff16565b9050610d3d610d2e84610d2064e8d4a5100085610e4990919063ffffffff16565b610ecf90919063ffffffff16565b85610f6390919063ffffffff16565b935050505b610d9c8360020154610d8e8560010154610d8064e8d4a51000610d72888a60000154610e4990919063ffffffff16565b610ecf90919063ffffffff16565b610f1990919063ffffffff16565b610f6390919063ffffffff16565b945050505050919050565b610e448363a9059cbb60e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611101565b505050565b600080831415610e5c5760009050610ec9565b6000828402905082848281610e6d57fe5b0414610ec4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061160a6021913960400191505060405180910390fd5b809150505b92915050565b6000610f1183836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506111f0565b905092915050565b6000610f5b83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506112b6565b905092915050565b600080828401905083811015610fe1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6110a6846323b872dd60e01b858585604051602401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611101565b50505050565b600060075482116110d1576110ca8383610f1990919063ffffffff16565b90506110fb565b60075483106110e357600090506110fb565b6110f883600754610f1990919063ffffffff16565b90505b92915050565b6060611163826040518060400160405280602081526020017f5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166113769092919063ffffffff16565b90506000815111156111eb5780806020019051602081101561118457600080fd5b81019080805190602001909291905050506111ea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806115e0602a913960400191505060405180910390fd5b5b505050565b6000808311829061129c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611261578082015181840152602081019050611246565b50505050905090810190601f16801561128e5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385816112a857fe5b049050809150509392505050565b6000838311158290611363576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561132857808201518184015260208101905061130d565b50505050905090810190601f1680156113555780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6060611385848460008561138e565b90509392505050565b606061139985611594565b61140b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b6020831061145b5780518252602082019150602081019050602083039250611438565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146114bd576040519150601f19603f3d011682016040523d82523d6000602084013e6114c2565b606091505b509150915081156114d757809250505061158c565b6000815111156114ea5780518082602001fd5b836040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611551578082015181840152602081019050611536565b50505050905090810190601f16801561157e5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b949350505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91508082141580156115d657506000801b8214155b9250505091905056fe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f742073756363656564536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a26469706673582212205db66239ba6e95c477bf0072a1146f1384932e4df2fa1949312ba09efc3a56e264736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8AE39CAC GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xDB2E21BC GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xDB2E21BC EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xDC881888 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xE3161DDD EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0xF40F0F52 EQ PUSH2 0x2D3 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x8AE39CAC EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0xB810FB43 EQ PUSH2 0x249 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1959A002 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x1AED6553 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x48CD4CB1 EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x5A2F3D09 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x86A952C4 EQ PUSH2 0x1C9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x116 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x142 PUSH2 0x355 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x16E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x35B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18E PUSH2 0x5F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AC PUSH2 0x5FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D1 PUSH2 0x60C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x205 PUSH2 0x630 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x231 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x636 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x275 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x25F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A9 PUSH2 0x924 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B3 PUSH2 0xA1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D1 PUSH2 0xA2C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xBA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x3D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x616D6F756E742030000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP2 DUP2 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x48E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x77697468647261773A206E6F7420656E6F756768000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x496 PUSH2 0xA2C JUMP JUMPDEST PUSH2 0x4E1 CALLER DUP4 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDA7 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x540 DUP2 PUSH1 0x2 ADD SLOAD PUSH2 0x532 DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x524 PUSH5 0xE8D4A51000 PUSH2 0x516 PUSH1 0x2 PUSH1 0x1 ADD SLOAD DUP9 PUSH1 0x0 ADD SLOAD PUSH2 0xE49 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xECF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF19 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF63 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x55F DUP3 DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0xF19 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x59A PUSH5 0xE8D4A51000 PUSH2 0x58C PUSH1 0x2 PUSH1 0x1 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0xE49 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xECF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x6AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x616D6F756E742030000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x6F7 PUSH2 0xA2C JUMP JUMPDEST PUSH2 0x744 CALLER ADDRESS DUP5 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFEB SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x75C JUMPI POP PUSH1 0x0 DUP2 PUSH1 0x1 ADD SLOAD EQ JUMPDEST DUP1 ISZERO PUSH2 0x76C JUMPI POP PUSH1 0x0 DUP2 PUSH1 0x2 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x7D5 JUMPI PUSH1 0x5 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x834 DUP2 PUSH1 0x2 ADD SLOAD PUSH2 0x826 DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x818 PUSH5 0xE8D4A51000 PUSH2 0x80A PUSH1 0x2 PUSH1 0x1 ADD SLOAD DUP9 PUSH1 0x0 ADD SLOAD PUSH2 0xE49 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xECF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF19 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF63 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x853 DUP3 DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0xF63 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x88E PUSH5 0xE8D4A51000 PUSH2 0x880 PUSH1 0x2 PUSH1 0x1 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0xE49 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xECF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x8F5 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x9B6 CALLER DUP3 PUSH1 0x0 ADD SLOAD PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDA7 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5FAFA99D0643513820BE26656B45130B01E1C03062E1266BF36F88CBD3BD9695 DUP3 PUSH1 0x0 ADD SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 ADD SLOAD NUMBER GT PUSH2 0xA3D JUMPI PUSH2 0xBA1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xADB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xAF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0xB1D JUMPI NUMBER PUSH1 0x2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP PUSH2 0xBA1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB2E PUSH1 0x2 PUSH1 0x0 ADD SLOAD NUMBER PUSH2 0x10AC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB47 PUSH1 0x1 SLOAD DUP4 PUSH2 0xE49 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xB8A PUSH2 0xB76 DUP5 PUSH2 0xB68 PUSH5 0xE8D4A51000 DUP6 PUSH2 0xE49 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xECF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 ADD SLOAD PUSH2 0xF63 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP NUMBER PUSH1 0x2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC94 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP4 PUSH1 0x0 ADD SLOAD NUMBER GT DUP1 ISZERO PUSH2 0xCD1 JUMPI POP PUSH1 0x0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0xD42 JUMPI PUSH1 0x0 PUSH2 0xCE6 DUP6 PUSH1 0x0 ADD SLOAD NUMBER PUSH2 0x10AC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xCFF PUSH1 0x1 SLOAD DUP4 PUSH2 0xE49 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xD3D PUSH2 0xD2E DUP5 PUSH2 0xD20 PUSH5 0xE8D4A51000 DUP6 PUSH2 0xE49 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xECF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0xF63 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH2 0xD9C DUP4 PUSH1 0x2 ADD SLOAD PUSH2 0xD8E DUP6 PUSH1 0x1 ADD SLOAD PUSH2 0xD80 PUSH5 0xE8D4A51000 PUSH2 0xD72 DUP9 DUP11 PUSH1 0x0 ADD SLOAD PUSH2 0xE49 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xECF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF19 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF63 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE44 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1101 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0xE5C JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xEC9 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0xE6D JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xEC4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x160A PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF11 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x11F0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF5B DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x12B6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xFE1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10A6 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1101 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 GT PUSH2 0x10D1 JUMPI PUSH2 0x10CA DUP4 DUP4 PUSH2 0xF19 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x10FB JUMP JUMPDEST PUSH1 0x7 SLOAD DUP4 LT PUSH2 0x10E3 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x10FB JUMP JUMPDEST PUSH2 0x10F8 DUP4 PUSH1 0x7 SLOAD PUSH2 0xF19 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1163 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1376 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x11EB JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x11EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x15E0 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x129C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1261 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1246 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x128E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x12A8 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x1363 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1328 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x130D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1355 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1385 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x138E JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1399 DUP6 PUSH2 0x1594 JUMP JUMPDEST PUSH2 0x140B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x145B JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x1438 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x14BD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x14C2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x14D7 JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x158C JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x14EA JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1551 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1536 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x157E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 PUSH1 0x0 SHL SWAP1 POP DUP4 EXTCODEHASH SWAP2 POP DUP1 DUP3 EQ ISZERO DUP1 ISZERO PUSH2 0x15D6 JUMPI POP PUSH1 0x0 DUP1 SHL DUP3 EQ ISZERO JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP INVALID MSTORE8 PUSH2 0x6665 TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 TIMESTAMP GASLIMIT POP ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564536166654D6174683A206D756C74 PUSH10 0x706C69636174696F6E20 PUSH16 0x766572666C6F77A26469706673582212 KECCAK256 0x5D 0xB6 PUSH3 0x39BA6E SWAP6 0xC4 PUSH24 0xBF0072A1146F1384932E4DF2FA1949312BA09EFC3A56E264 PUSH20 0x6F6C634300060C00330000000000000000000000 ",
							"sourceMap": "19573:5368:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20267:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20501:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;23980:609;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;20426:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;20184:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;20071:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;20132:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;23221:706;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;20344:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;24660:276;;;:::i;:::-;;21169:101;;;:::i;:::-;;;;;;;;;;;;;;;;;;;22531:618;;;:::i;:::-;;21719:736;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;20267:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;20501:28::-;;;;:::o;23980:609::-;24052:1;24042:7;:11;24033:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24077:21;24101:8;:20;24110:10;24101:20;;;;;;;;;;;;;;;24077:44;;24155:7;24140:4;:11;;;:22;;24132:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24200:12;:10;:12::i;:::-;24223:48;24250:10;24263:7;24223:5;;;;;;;;;;:18;;;;:48;;;;;:::i;:::-;24305:98;24384:4;:18;;;24305:74;24363:4;:15;;;24305:53;24353:4;24305:43;24321:8;:26;;;24305:4;:11;;;:15;;:43;;;;:::i;:::-;:47;;:53;;;;:::i;:::-;:57;;:74;;;;:::i;:::-;:78;;:98;;;;:::i;:::-;24284:4;:18;;:119;;;;24428:24;24444:7;24428:4;:11;;;:15;;:24;;;;:::i;:::-;24414:4;:11;;:38;;;;24481:53;24529:4;24481:43;24497:8;:26;;;24481:4;:11;;;:15;;:43;;;;:::i;:::-;:47;;:53;;;;:::i;:::-;24463:4;:15;;:71;;;;24561:10;24552:29;;;24573:7;24552:29;;;;;;;;;;;;;;;;;;23980:609;;:::o;20426:25::-;;;;:::o;20184:24::-;;;;;;;;;;;;;;:::o;20071:19::-;;;;;;;;;;;;:::o;20132:29::-;;;;:::o;23221:706::-;23292:1;23282:7;:11;23273:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23317:21;23341:8;:20;23350:10;23341:20;;;;;;;;;;;;;;;23317:44;;23374:12;:10;:12::i;:::-;23397:67;23428:10;23449:4;23456:7;23397:5;;;;;;;;;;:22;;;;:67;;;;;;:::i;:::-;23494:1;23479:4;:11;;;:16;:40;;;;;23518:1;23499:4;:15;;;:20;23479:40;:66;;;;;23544:1;23523:4;:18;;;:22;23479:66;23475:136;;;23562:11;23587:10;23562:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23475:136;23644:98;23723:4;:18;;;23644:74;23702:4;:15;;;23644:53;23692:4;23644:43;23660:8;:26;;;23644:4;:11;;;:15;;:43;;;;:::i;:::-;:47;;:53;;;;:::i;:::-;:57;;:74;;;;:::i;:::-;:78;;:98;;;;:::i;:::-;23623:4;:18;;:119;;;;23767:24;23783:7;23767:4;:11;;;:15;;:24;;;;:::i;:::-;23753:4;:11;;:38;;;;23820:53;23868:4;23820:43;23836:8;:26;;;23820:4;:11;;;:15;;:43;;;;:::i;:::-;:47;;:53;;;;:::i;:::-;23802:4;:15;;:71;;;;23899:10;23891:28;;;23911:7;23891:28;;;;;;;;;;;;;;;;;;23221:706;;:::o;20344:28::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;24660:276::-;24707:21;24731:8;:20;24740:10;24731:20;;;;;;;;;;;;;;;24707:44;;24762:52;24789:10;24802:4;:11;;;24762:5;;;;;;;;;;:18;;;;:52;;;;;:::i;:::-;24848:10;24830:42;;;24860:4;:11;;;24830:42;;;;;;;;;;;;;;;;;;24897:1;24883:4;:11;;:15;;;;24927:1;24909:4;:15;;:19;;;;24660:276;:::o;21169:101::-;21217:7;21244:11;:18;;;;21237:25;;21169:101;:::o;22531:618::-;22591:8;:24;;;22575:12;:40;22571:79;;22632:7;;22571:79;22660:19;22682:5;;;;;;;;;;;:15;;;22706:4;22682:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22660:52;;22742:1;22727:11;:16;22723:109;;;22787:12;22760:8;:24;;:39;;;;22814:7;;;22723:109;22842:18;22863:53;22877:8;:24;;;22903:12;22863:13;:53::i;:::-;22842:74;;22927:19;22949:30;22964:14;;22949:10;:14;;:30;;;;:::i;:::-;22927:52;;23021:70;23052:38;23078:11;23052:21;23068:4;23052:11;:15;;:21;;;;:::i;:::-;:25;;:38;;;;:::i;:::-;23021:8;:26;;;:30;;:70;;;;:::i;:::-;22992:8;:26;;:99;;;;23129:12;23102:8;:24;;:39;;;;22531:618;;;;:::o;21719:736::-;21780:7;21800:21;21824:8;21800:32;;21843:21;21867:8;:15;21876:5;21867:15;;;;;;;;;;;;;;;21843:39;;21893:25;21921:4;:22;;;21893:50;;21954:20;21977:5;;;;;;;;;;;:15;;;22001:4;21977:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21954:53;;22037:4;:20;;;22022:12;:35;:56;;;;;22077:1;22061:12;:17;;22022:56;22018:323;;;22095:18;22116:49;22130:4;:20;;;22152:12;22116:13;:49::i;:::-;22095:70;;22180:19;22202:30;22217:14;;22202:10;:14;;:30;;;;:::i;:::-;22180:52;;22267:62;22289:39;22315:12;22289:21;22305:4;22289:11;:15;;:21;;;;:::i;:::-;:25;;:39;;;;:::i;:::-;22267:17;:21;;:62;;;;:::i;:::-;22247:82;;22018:323;;;22358:89;22428:4;:18;;;22358:65;22407:4;:15;;;22358:44;22397:4;22358:34;22374:17;22358:4;:11;;;:15;;:34;;;;:::i;:::-;:38;;:44;;;;:::i;:::-;:48;;:65;;;;:::i;:::-;:69;;:89;;;;:::i;:::-;22351:96;;;;;;21719:736;;;:::o;16105:211::-;16222:86;16242:5;16272:23;;;16297:2;16301:5;16249:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16222:19;:86::i;:::-;16105:211;;;:::o;2332:471::-;2390:7;2640:1;2635;:6;2631:47;;;2665:1;2658:8;;;;2631:47;2690:9;2706:1;2702;:5;2690:17;;2735:1;2730;2726;:5;;;;;;:10;2718:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2794:1;2787:8;;;2332:471;;;;;:::o;3279:132::-;3337:7;3364:39;3368:1;3371;3364:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;3357:46;;3279:132;;;;:::o;1408:136::-;1466:7;1493:43;1497:1;1500;1493:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1486:50;;1408:136;;;;:::o;944:181::-;1002:7;1022:9;1038:1;1034;:5;1022:17;;1063:1;1058;:6;;1050:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1116:1;1109:8;;;944:181;;;;:::o;16324:248::-;16468:96;16488:5;16518:27;;;16547:4;16553:2;16557:5;16495:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16468:19;:96::i;:::-;16324:248;;;;:::o;21346:308::-;21420:7;21451:13;;21444:3;:20;21440:207;;21488:14;21496:5;21488:3;:7;;:14;;;;:::i;:::-;21481:21;;;;21440:207;21533:13;;21524:5;:22;21520:127;;21570:1;21563:8;;;;21520:127;21611:24;21629:5;21611:13;;:17;;:24;;;;:::i;:::-;21604:31;;21346:308;;;;;:::o;18640:774::-;19064:23;19090:69;19118:4;19090:69;;;;;;;;;;;;;;;;;19098:5;19090:27;;;;:69;;;;;:::i;:::-;19064:95;;19194:1;19174:10;:17;:21;19170:237;;;19329:10;19318:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19310:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19170:237;18640:774;;;:::o;3907:312::-;4027:7;4059:1;4055;:5;4062:12;4047:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4086:9;4102:1;4098;:5;;;;;;4086:17;;4210:1;4203:8;;;3907:312;;;;;:::o;1847:226::-;1967:7;2000:1;1995;:6;;2003:12;1987:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2027:9;2043:1;2039;:5;2027:17;;2064:1;2057:8;;;1847:226;;;;;:::o;13026:230::-;13163:12;13195:53;13218:6;13226:4;13232:1;13235:12;13195:22;:53::i;:::-;13188:60;;13026:230;;;;;:::o;14514:1020::-;14687:12;14720:18;14731:6;14720:10;:18::i;:::-;14712:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14846:12;14860:23;14887:6;:11;;14906:8;14916:4;14887:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14845:76;;;;14936:7;14932:595;;;14967:10;14960:17;;;;;;14932:595;15101:1;15081:10;:17;:21;15077:439;;;15344:10;15338:17;15405:15;15392:10;15388:2;15384:19;15377:44;15292:148;15487:12;15480:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14514:1020;;;;;;;:::o;9889:641::-;9949:4;10211:16;10238:19;10260:66;10238:88;;;;10442:7;10430:20;10418:32;;10491:11;10479:8;:23;;:42;;;;;10518:3;10506:15;;:8;:15;;10479:42;10471:51;;;;9889:641;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1145600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addressLength()": "1065",
								"addressList(uint256)": "2078",
								"bonusEndBlock()": "1028",
								"deposit(uint256)": "infinite",
								"emergencyWithdraw()": "infinite",
								"pendingReward(address)": "infinite",
								"poolInfo()": "1940",
								"rewardPerBlock()": "1028",
								"startBlock()": "1072",
								"syrup()": "1155",
								"updatePool()": "infinite",
								"userInfo(address)": "2848",
								"withdraw(uint256)": "infinite"
							},
							"internal": {
								"getMultiplier(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 19573,
									"end": 24941,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 19573,
									"end": 24941,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 19573,
									"end": 24941,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20886,
									"end": 20892,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 20878,
									"end": 20883,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20878,
									"end": 20883,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20878,
									"end": 20892,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 20878,
									"end": 20892,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 20878,
									"end": 20892,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20878,
									"end": 20892,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 20878,
									"end": 20892,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20878,
									"end": 20892,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 20878,
									"end": 20892,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 20878,
									"end": 20892,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 20878,
									"end": 20892,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 20878,
									"end": 20892,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20878,
									"end": 20892,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 20878,
									"end": 20892,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 20878,
									"end": 20892,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 20878,
									"end": 20892,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 20878,
									"end": 20892,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 20878,
									"end": 20892,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20878,
									"end": 20892,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 20878,
									"end": 20892,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20920,
									"end": 20935,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20903,
									"end": 20917,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 20903,
									"end": 20935,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20903,
									"end": 20935,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20903,
									"end": 20935,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 20903,
									"end": 20935,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20959,
									"end": 20970,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20946,
									"end": 20956,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 20946,
									"end": 20970,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20946,
									"end": 20970,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20946,
									"end": 20970,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 20946,
									"end": 20970,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20997,
									"end": 21006,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20981,
									"end": 20994,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 20981,
									"end": 21006,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20981,
									"end": 21006,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20981,
									"end": 21006,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 20981,
									"end": 21006,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21055,
									"end": 21153,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 21055,
									"end": 21153,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 21055,
									"end": 21153,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21055,
									"end": 21153,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 21055,
									"end": 21153,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 21055,
									"end": 21153,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 21055,
									"end": 21153,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 21055,
									"end": 21153,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21096,
									"end": 21106,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 21096,
									"end": 21106,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 21055,
									"end": 21153,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21055,
									"end": 21153,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 21055,
									"end": 21153,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 21055,
									"end": 21153,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 21140,
									"end": 21141,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21055,
									"end": 21153,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21055,
									"end": 21153,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 21055,
									"end": 21153,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21044,
									"end": 21052,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 21044,
									"end": 21153,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21044,
									"end": 21153,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 21044,
									"end": 21153,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 21044,
									"end": 21153,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 21044,
									"end": 21153,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21044,
									"end": 21153,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21044,
									"end": 21153,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 21044,
									"end": 21153,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 21044,
									"end": 21153,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 21044,
									"end": 21153,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 21044,
									"end": 21153,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 21044,
									"end": 21153,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 21044,
									"end": 21153,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21044,
									"end": 21153,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 21044,
									"end": 21153,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 21044,
									"end": 21153,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 21044,
									"end": 21153,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21044,
									"end": 21153,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21044,
									"end": 21153,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20725,
									"end": 21161,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 19573,
									"end": 24941,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 19573,
									"end": 24941,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 19573,
									"end": 24941,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 19573,
									"end": 24941,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19573,
									"end": 24941,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 19573,
									"end": 24941,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19573,
									"end": 24941,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205db66239ba6e95c477bf0072a1146f1384932e4df2fa1949312ba09efc3a56e264736f6c634300060c0033",
									".code": [
										{
											"begin": 19573,
											"end": 24941,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "PUSH",
											"source": 0,
											"value": "8AE39CAC"
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "PUSH",
											"source": 0,
											"value": "DB2E21BC"
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "PUSH",
											"source": 0,
											"value": "DB2E21BC"
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "PUSH",
											"source": 0,
											"value": "DC881888"
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "PUSH",
											"source": 0,
											"value": "E3161DDD"
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "PUSH",
											"source": 0,
											"value": "F40F0F52"
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "PUSH",
											"source": 0,
											"value": "8AE39CAC"
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "PUSH",
											"source": 0,
											"value": "B6B55F25"
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "PUSH",
											"source": 0,
											"value": "B810FB43"
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "PUSH",
											"source": 0,
											"value": "1959A002"
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "PUSH",
											"source": 0,
											"value": "1AED6553"
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "PUSH",
											"source": 0,
											"value": "2E1A7D4D"
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "PUSH",
											"source": 0,
											"value": "48CD4CB1"
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "PUSH",
											"source": 0,
											"value": "5A2F3D09"
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "PUSH",
											"source": 0,
											"value": "86A952C4"
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 24941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 20501,
											"end": 20529,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20501,
											"end": 20529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20501,
											"end": 20529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 20501,
											"end": 20529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 20501,
											"end": 20529,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20501,
											"end": 20529,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 20501,
											"end": 20529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20501,
											"end": 20529,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20501,
											"end": 20529,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20501,
											"end": 20529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20501,
											"end": 20529,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20501,
											"end": 20529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20501,
											"end": 20529,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20501,
											"end": 20529,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20501,
											"end": 20529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20501,
											"end": 20529,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20501,
											"end": 20529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20501,
											"end": 20529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20501,
											"end": 20529,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20501,
											"end": 20529,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20501,
											"end": 20529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20501,
											"end": 20529,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20501,
											"end": 20529,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20501,
											"end": 20529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20501,
											"end": 20529,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 23980,
											"end": 24589,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23980,
											"end": 24589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23980,
											"end": 24589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 23980,
											"end": 24589,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23980,
											"end": 24589,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23980,
											"end": 24589,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23980,
											"end": 24589,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23980,
											"end": 24589,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23980,
											"end": 24589,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23980,
											"end": 24589,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23980,
											"end": 24589,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23980,
											"end": 24589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 23980,
											"end": 24589,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23980,
											"end": 24589,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23980,
											"end": 24589,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23980,
											"end": 24589,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23980,
											"end": 24589,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 23980,
											"end": 24589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23980,
											"end": 24589,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23980,
											"end": 24589,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23980,
											"end": 24589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23980,
											"end": 24589,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23980,
											"end": 24589,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23980,
											"end": 24589,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 23980,
											"end": 24589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23980,
											"end": 24589,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23980,
											"end": 24589,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23980,
											"end": 24589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23980,
											"end": 24589,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23980,
											"end": 24589,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23980,
											"end": 24589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23980,
											"end": 24589,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23980,
											"end": 24589,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23980,
											"end": 24589,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23980,
											"end": 24589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 23980,
											"end": 24589,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23980,
											"end": 24589,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 23980,
											"end": 24589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23980,
											"end": 24589,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 20426,
											"end": 20451,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 20426,
											"end": 20451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20426,
											"end": 20451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 20426,
											"end": 20451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 20426,
											"end": 20451,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20426,
											"end": 20451,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 20426,
											"end": 20451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20426,
											"end": 20451,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20426,
											"end": 20451,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20426,
											"end": 20451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20426,
											"end": 20451,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20426,
											"end": 20451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20426,
											"end": 20451,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20426,
											"end": 20451,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20426,
											"end": 20451,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20426,
											"end": 20451,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20426,
											"end": 20451,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20426,
											"end": 20451,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20426,
											"end": 20451,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20426,
											"end": 20451,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20426,
											"end": 20451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20426,
											"end": 20451,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20426,
											"end": 20451,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20426,
											"end": 20451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20426,
											"end": 20451,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 20184,
											"end": 20208,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 20184,
											"end": 20208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20184,
											"end": 20208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 20184,
											"end": 20208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 20184,
											"end": 20208,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20184,
											"end": 20208,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 20184,
											"end": 20208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20184,
											"end": 20208,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20184,
											"end": 20208,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20184,
											"end": 20208,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20184,
											"end": 20208,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20184,
											"end": 20208,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20184,
											"end": 20208,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20184,
											"end": 20208,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20184,
											"end": 20208,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20184,
											"end": 20208,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20184,
											"end": 20208,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20184,
											"end": 20208,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20184,
											"end": 20208,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20184,
											"end": 20208,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20184,
											"end": 20208,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20184,
											"end": 20208,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20184,
											"end": 20208,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20184,
											"end": 20208,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20184,
											"end": 20208,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20184,
											"end": 20208,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20184,
											"end": 20208,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20184,
											"end": 20208,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20184,
											"end": 20208,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20184,
											"end": 20208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20184,
											"end": 20208,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 20071,
											"end": 20090,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 20071,
											"end": 20090,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20071,
											"end": 20090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 20071,
											"end": 20090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 20071,
											"end": 20090,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20071,
											"end": 20090,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 20071,
											"end": 20090,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20071,
											"end": 20090,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20071,
											"end": 20090,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20071,
											"end": 20090,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20071,
											"end": 20090,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20071,
											"end": 20090,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20071,
											"end": 20090,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20071,
											"end": 20090,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20071,
											"end": 20090,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20071,
											"end": 20090,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20071,
											"end": 20090,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20071,
											"end": 20090,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20071,
											"end": 20090,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20071,
											"end": 20090,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20071,
											"end": 20090,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20071,
											"end": 20090,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20071,
											"end": 20090,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20071,
											"end": 20090,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20071,
											"end": 20090,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20071,
											"end": 20090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20071,
											"end": 20090,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 20132,
											"end": 20161,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 20132,
											"end": 20161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20132,
											"end": 20161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 20132,
											"end": 20161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 20132,
											"end": 20161,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20132,
											"end": 20161,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 20132,
											"end": 20161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20132,
											"end": 20161,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20132,
											"end": 20161,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20132,
											"end": 20161,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20132,
											"end": 20161,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20132,
											"end": 20161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20132,
											"end": 20161,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20132,
											"end": 20161,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20132,
											"end": 20161,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20132,
											"end": 20161,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20132,
											"end": 20161,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20132,
											"end": 20161,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20132,
											"end": 20161,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20132,
											"end": 20161,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20132,
											"end": 20161,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20132,
											"end": 20161,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20132,
											"end": 20161,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20132,
											"end": 20161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20132,
											"end": 20161,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 23221,
											"end": 23927,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 23221,
											"end": 23927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23221,
											"end": 23927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 23221,
											"end": 23927,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23221,
											"end": 23927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23221,
											"end": 23927,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23221,
											"end": 23927,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23221,
											"end": 23927,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23221,
											"end": 23927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23221,
											"end": 23927,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23221,
											"end": 23927,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23221,
											"end": 23927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 23221,
											"end": 23927,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23221,
											"end": 23927,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23221,
											"end": 23927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23221,
											"end": 23927,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23221,
											"end": 23927,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 23221,
											"end": 23927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23221,
											"end": 23927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23221,
											"end": 23927,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23221,
											"end": 23927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23221,
											"end": 23927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23221,
											"end": 23927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23221,
											"end": 23927,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 23221,
											"end": 23927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23221,
											"end": 23927,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23221,
											"end": 23927,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23221,
											"end": 23927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23221,
											"end": 23927,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23221,
											"end": 23927,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23221,
											"end": 23927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23221,
											"end": 23927,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23221,
											"end": 23927,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23221,
											"end": 23927,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23221,
											"end": 23927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 23221,
											"end": 23927,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23221,
											"end": 23927,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 23221,
											"end": 23927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23221,
											"end": 23927,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 24660,
											"end": 24936,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 24660,
											"end": 24936,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24660,
											"end": 24936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24660,
											"end": 24936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 24660,
											"end": 24936,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24660,
											"end": 24936,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24660,
											"end": 24936,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24660,
											"end": 24936,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 21169,
											"end": 21270,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 21169,
											"end": 21270,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21169,
											"end": 21270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 21169,
											"end": 21270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 21169,
											"end": 21270,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21169,
											"end": 21270,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 21169,
											"end": 21270,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21169,
											"end": 21270,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21169,
											"end": 21270,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21169,
											"end": 21270,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21169,
											"end": 21270,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21169,
											"end": 21270,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21169,
											"end": 21270,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21169,
											"end": 21270,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21169,
											"end": 21270,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21169,
											"end": 21270,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21169,
											"end": 21270,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21169,
											"end": 21270,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21169,
											"end": 21270,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21169,
											"end": 21270,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21169,
											"end": 21270,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21169,
											"end": 21270,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21169,
											"end": 21270,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21169,
											"end": 21270,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21169,
											"end": 21270,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 22531,
											"end": 23149,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 22531,
											"end": 23149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22531,
											"end": 23149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 22531,
											"end": 23149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 22531,
											"end": 23149,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22531,
											"end": 23149,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 22531,
											"end": 23149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22531,
											"end": 23149,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20312,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20501,
											"end": 20529,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 20501,
											"end": 20529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20501,
											"end": 20529,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 20501,
											"end": 20529,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20501,
											"end": 20529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20501,
											"end": 20529,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23980,
											"end": 24589,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 23980,
											"end": 24589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24052,
											"end": 24053,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24042,
											"end": 24049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24042,
											"end": 24053,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 24033,
											"end": 24066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 24033,
											"end": 24066,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24033,
											"end": 24066,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24033,
											"end": 24066,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24033,
											"end": 24066,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24033,
											"end": 24066,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24033,
											"end": 24066,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24033,
											"end": 24066,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24033,
											"end": 24066,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24033,
											"end": 24066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24033,
											"end": 24066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24033,
											"end": 24066,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24033,
											"end": 24066,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24033,
											"end": 24066,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24033,
											"end": 24066,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24033,
											"end": 24066,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24033,
											"end": 24066,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24033,
											"end": 24066,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24033,
											"end": 24066,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 24033,
											"end": 24066,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24033,
											"end": 24066,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24033,
											"end": 24066,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24033,
											"end": 24066,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24033,
											"end": 24066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24033,
											"end": 24066,
											"name": "PUSH",
											"source": 0,
											"value": "616D6F756E742030000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24033,
											"end": 24066,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24033,
											"end": 24066,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24033,
											"end": 24066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24033,
											"end": 24066,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24033,
											"end": 24066,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24033,
											"end": 24066,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24033,
											"end": 24066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24033,
											"end": 24066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24033,
											"end": 24066,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24033,
											"end": 24066,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24033,
											"end": 24066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24033,
											"end": 24066,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24033,
											"end": 24066,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24033,
											"end": 24066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24033,
											"end": 24066,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24033,
											"end": 24066,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 24033,
											"end": 24066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24077,
											"end": 24098,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24101,
											"end": 24109,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24101,
											"end": 24121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24110,
											"end": 24120,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 24101,
											"end": 24121,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24101,
											"end": 24121,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24101,
											"end": 24121,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24101,
											"end": 24121,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24101,
											"end": 24121,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24101,
											"end": 24121,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24101,
											"end": 24121,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24101,
											"end": 24121,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24101,
											"end": 24121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24101,
											"end": 24121,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24101,
											"end": 24121,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24101,
											"end": 24121,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24101,
											"end": 24121,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24101,
											"end": 24121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24101,
											"end": 24121,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24077,
											"end": 24121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24077,
											"end": 24121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24155,
											"end": 24162,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24140,
											"end": 24144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24140,
											"end": 24151,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24140,
											"end": 24151,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24140,
											"end": 24151,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24140,
											"end": 24162,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 24140,
											"end": 24162,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24132,
											"end": 24187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 24132,
											"end": 24187,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24132,
											"end": 24187,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24132,
											"end": 24187,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24132,
											"end": 24187,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24132,
											"end": 24187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24132,
											"end": 24187,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24132,
											"end": 24187,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24132,
											"end": 24187,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24132,
											"end": 24187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24132,
											"end": 24187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24132,
											"end": 24187,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24132,
											"end": 24187,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24132,
											"end": 24187,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24132,
											"end": 24187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24132,
											"end": 24187,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24132,
											"end": 24187,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24132,
											"end": 24187,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24132,
											"end": 24187,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 24132,
											"end": 24187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24132,
											"end": 24187,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24132,
											"end": 24187,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24132,
											"end": 24187,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24132,
											"end": 24187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24132,
											"end": 24187,
											"name": "PUSH",
											"source": 0,
											"value": "77697468647261773A206E6F7420656E6F756768000000000000000000000000"
										},
										{
											"begin": 24132,
											"end": 24187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24132,
											"end": 24187,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24132,
											"end": 24187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24132,
											"end": 24187,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24132,
											"end": 24187,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24132,
											"end": 24187,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24132,
											"end": 24187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24132,
											"end": 24187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24132,
											"end": 24187,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24132,
											"end": 24187,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24132,
											"end": 24187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24132,
											"end": 24187,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24132,
											"end": 24187,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24132,
											"end": 24187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24132,
											"end": 24187,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24132,
											"end": 24187,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 24132,
											"end": 24187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24200,
											"end": 24212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 24200,
											"end": 24210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 24200,
											"end": 24212,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24200,
											"end": 24212,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 24200,
											"end": 24212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24223,
											"end": 24271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 24250,
											"end": 24260,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 24263,
											"end": 24270,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24223,
											"end": 24228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24223,
											"end": 24228,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24223,
											"end": 24228,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24223,
											"end": 24228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24223,
											"end": 24228,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24223,
											"end": 24228,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 24223,
											"end": 24228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24223,
											"end": 24228,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 24223,
											"end": 24228,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24223,
											"end": 24228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24223,
											"end": 24241,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24223,
											"end": 24241,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24223,
											"end": 24241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 24223,
											"end": 24241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24223,
											"end": 24271,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24223,
											"end": 24271,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24223,
											"end": 24271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24223,
											"end": 24271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 24223,
											"end": 24271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24223,
											"end": 24271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24223,
											"end": 24271,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 24223,
											"end": 24271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24305,
											"end": 24403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 24384,
											"end": 24388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24384,
											"end": 24402,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24384,
											"end": 24402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24384,
											"end": 24402,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24305,
											"end": 24379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 24363,
											"end": 24367,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 24378,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24363,
											"end": 24378,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 24378,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24305,
											"end": 24358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 24353,
											"end": 24357,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 24305,
											"end": 24348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 24321,
											"end": 24329,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24321,
											"end": 24347,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24321,
											"end": 24347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24321,
											"end": 24347,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24305,
											"end": 24309,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 24305,
											"end": 24316,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24305,
											"end": 24316,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24305,
											"end": 24316,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24305,
											"end": 24320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 24305,
											"end": 24320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24305,
											"end": 24348,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24305,
											"end": 24348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24305,
											"end": 24348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 24305,
											"end": 24348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24305,
											"end": 24348,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24305,
											"end": 24348,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 24305,
											"end": 24348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24305,
											"end": 24352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 24305,
											"end": 24352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24305,
											"end": 24358,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24305,
											"end": 24358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24305,
											"end": 24358,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 24305,
											"end": 24358,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24305,
											"end": 24358,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24305,
											"end": 24358,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 24305,
											"end": 24358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24305,
											"end": 24362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 24305,
											"end": 24362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24305,
											"end": 24379,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24305,
											"end": 24379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24305,
											"end": 24379,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 24305,
											"end": 24379,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24305,
											"end": 24379,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24305,
											"end": 24379,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 24305,
											"end": 24379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24305,
											"end": 24383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 24305,
											"end": 24383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24305,
											"end": 24403,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24305,
											"end": 24403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24305,
											"end": 24403,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 24305,
											"end": 24403,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24305,
											"end": 24403,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24305,
											"end": 24403,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 24305,
											"end": 24403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24284,
											"end": 24288,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24284,
											"end": 24302,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24284,
											"end": 24302,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24284,
											"end": 24403,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24284,
											"end": 24403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24284,
											"end": 24403,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 24284,
											"end": 24403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24428,
											"end": 24452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 24444,
											"end": 24451,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24428,
											"end": 24432,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24428,
											"end": 24439,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24428,
											"end": 24439,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24428,
											"end": 24439,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24428,
											"end": 24443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 24428,
											"end": 24443,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24428,
											"end": 24452,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24428,
											"end": 24452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24428,
											"end": 24452,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 24428,
											"end": 24452,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24428,
											"end": 24452,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24428,
											"end": 24452,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 24428,
											"end": 24452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24414,
											"end": 24418,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24414,
											"end": 24425,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24414,
											"end": 24425,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24414,
											"end": 24452,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24414,
											"end": 24452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24414,
											"end": 24452,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 24414,
											"end": 24452,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24481,
											"end": 24534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 24529,
											"end": 24533,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 24481,
											"end": 24524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 24497,
											"end": 24505,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24497,
											"end": 24523,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24497,
											"end": 24523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24497,
											"end": 24523,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24481,
											"end": 24485,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24481,
											"end": 24492,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24481,
											"end": 24492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24481,
											"end": 24492,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24481,
											"end": 24496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 24481,
											"end": 24496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24481,
											"end": 24524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24481,
											"end": 24524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24481,
											"end": 24524,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 24481,
											"end": 24524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24481,
											"end": 24524,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24481,
											"end": 24524,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 24481,
											"end": 24524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24481,
											"end": 24528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 24481,
											"end": 24528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24481,
											"end": 24534,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24481,
											"end": 24534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24481,
											"end": 24534,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 24481,
											"end": 24534,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24481,
											"end": 24534,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24481,
											"end": 24534,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 24481,
											"end": 24534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24463,
											"end": 24467,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24463,
											"end": 24478,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24463,
											"end": 24478,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24463,
											"end": 24534,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24463,
											"end": 24534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24463,
											"end": 24534,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 24463,
											"end": 24534,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24561,
											"end": 24571,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 24552,
											"end": 24581,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24552,
											"end": 24581,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24552,
											"end": 24581,
											"name": "PUSH",
											"source": 0,
											"value": "884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364"
										},
										{
											"begin": 24573,
											"end": 24580,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24552,
											"end": 24581,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24552,
											"end": 24581,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24552,
											"end": 24581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24552,
											"end": 24581,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24552,
											"end": 24581,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24552,
											"end": 24581,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24552,
											"end": 24581,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24552,
											"end": 24581,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24552,
											"end": 24581,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24552,
											"end": 24581,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24552,
											"end": 24581,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24552,
											"end": 24581,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24552,
											"end": 24581,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24552,
											"end": 24581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24552,
											"end": 24581,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24552,
											"end": 24581,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24552,
											"end": 24581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24552,
											"end": 24581,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 23980,
											"end": 24589,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23980,
											"end": 24589,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23980,
											"end": 24589,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20426,
											"end": 20451,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 20426,
											"end": 20451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20426,
											"end": 20451,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 20426,
											"end": 20451,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20426,
											"end": 20451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20426,
											"end": 20451,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20184,
											"end": 20208,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 20184,
											"end": 20208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20184,
											"end": 20208,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 20184,
											"end": 20208,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20184,
											"end": 20208,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20184,
											"end": 20208,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20184,
											"end": 20208,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20184,
											"end": 20208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20184,
											"end": 20208,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20184,
											"end": 20208,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20184,
											"end": 20208,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20184,
											"end": 20208,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20184,
											"end": 20208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20184,
											"end": 20208,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20184,
											"end": 20208,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20184,
											"end": 20208,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20071,
											"end": 20090,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 20071,
											"end": 20090,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20071,
											"end": 20090,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20071,
											"end": 20090,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20071,
											"end": 20090,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20071,
											"end": 20090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20071,
											"end": 20090,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 20071,
											"end": 20090,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 20071,
											"end": 20090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20071,
											"end": 20090,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 20071,
											"end": 20090,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20071,
											"end": 20090,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20071,
											"end": 20090,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20071,
											"end": 20090,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20132,
											"end": 20161,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 20132,
											"end": 20161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20132,
											"end": 20161,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20132,
											"end": 20161,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20132,
											"end": 20161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20132,
											"end": 20161,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23221,
											"end": 23927,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 23221,
											"end": 23927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23292,
											"end": 23293,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23282,
											"end": 23289,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23282,
											"end": 23293,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 23273,
											"end": 23306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 23273,
											"end": 23306,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23273,
											"end": 23306,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23273,
											"end": 23306,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23273,
											"end": 23306,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23273,
											"end": 23306,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23273,
											"end": 23306,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23273,
											"end": 23306,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23273,
											"end": 23306,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23273,
											"end": 23306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23273,
											"end": 23306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23273,
											"end": 23306,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23273,
											"end": 23306,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23273,
											"end": 23306,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23273,
											"end": 23306,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23273,
											"end": 23306,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23273,
											"end": 23306,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23273,
											"end": 23306,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23273,
											"end": 23306,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 23273,
											"end": 23306,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23273,
											"end": 23306,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23273,
											"end": 23306,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23273,
											"end": 23306,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23273,
											"end": 23306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23273,
											"end": 23306,
											"name": "PUSH",
											"source": 0,
											"value": "616D6F756E742030000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23273,
											"end": 23306,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23273,
											"end": 23306,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23273,
											"end": 23306,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23273,
											"end": 23306,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23273,
											"end": 23306,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23273,
											"end": 23306,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23273,
											"end": 23306,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23273,
											"end": 23306,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23273,
											"end": 23306,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23273,
											"end": 23306,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23273,
											"end": 23306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23273,
											"end": 23306,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23273,
											"end": 23306,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23273,
											"end": 23306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23273,
											"end": 23306,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23273,
											"end": 23306,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 23273,
											"end": 23306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23317,
											"end": 23338,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23341,
											"end": 23349,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23341,
											"end": 23361,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23350,
											"end": 23360,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 23341,
											"end": 23361,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23341,
											"end": 23361,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23341,
											"end": 23361,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23341,
											"end": 23361,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23341,
											"end": 23361,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23341,
											"end": 23361,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23341,
											"end": 23361,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23341,
											"end": 23361,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23341,
											"end": 23361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23341,
											"end": 23361,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23341,
											"end": 23361,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23341,
											"end": 23361,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23341,
											"end": 23361,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23341,
											"end": 23361,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23341,
											"end": 23361,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23317,
											"end": 23361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23317,
											"end": 23361,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23374,
											"end": 23386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 23374,
											"end": 23384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 23374,
											"end": 23386,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23374,
											"end": 23386,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 23374,
											"end": 23386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23397,
											"end": 23464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 23428,
											"end": 23438,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 23449,
											"end": 23453,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 23456,
											"end": 23463,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23397,
											"end": 23402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23397,
											"end": 23402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23397,
											"end": 23402,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23397,
											"end": 23402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23397,
											"end": 23402,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23397,
											"end": 23402,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 23397,
											"end": 23402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23397,
											"end": 23402,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23397,
											"end": 23402,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23397,
											"end": 23402,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23397,
											"end": 23419,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23397,
											"end": 23419,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23397,
											"end": 23419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 23397,
											"end": 23419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23397,
											"end": 23464,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 23397,
											"end": 23464,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23397,
											"end": 23464,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23397,
											"end": 23464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23397,
											"end": 23464,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23397,
											"end": 23464,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23397,
											"end": 23464,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23397,
											"end": 23464,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 23397,
											"end": 23464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23494,
											"end": 23495,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23479,
											"end": 23483,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23479,
											"end": 23490,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23479,
											"end": 23490,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23479,
											"end": 23490,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23479,
											"end": 23495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23479,
											"end": 23519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23479,
											"end": 23519,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23479,
											"end": 23519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 23479,
											"end": 23519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23479,
											"end": 23519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23518,
											"end": 23519,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23499,
											"end": 23503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23499,
											"end": 23514,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23499,
											"end": 23514,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23499,
											"end": 23514,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23499,
											"end": 23519,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23479,
											"end": 23519,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 23479,
											"end": 23519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23479,
											"end": 23545,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23479,
											"end": 23545,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23479,
											"end": 23545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 23479,
											"end": 23545,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23479,
											"end": 23545,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23544,
											"end": 23545,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23523,
											"end": 23527,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23523,
											"end": 23541,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23523,
											"end": 23541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23523,
											"end": 23541,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23523,
											"end": 23545,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23479,
											"end": 23545,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 23479,
											"end": 23545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23475,
											"end": 23611,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23475,
											"end": 23611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 23475,
											"end": 23611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23562,
											"end": 23573,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23587,
											"end": 23597,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 23562,
											"end": 23599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23562,
											"end": 23599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23562,
											"end": 23599,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23562,
											"end": 23599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23562,
											"end": 23599,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23562,
											"end": 23599,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23562,
											"end": 23599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23562,
											"end": 23599,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23562,
											"end": 23599,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 23562,
											"end": 23599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23562,
											"end": 23599,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23562,
											"end": 23599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23562,
											"end": 23599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23562,
											"end": 23599,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23562,
											"end": 23599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23562,
											"end": 23599,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23562,
											"end": 23599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23562,
											"end": 23599,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23562,
											"end": 23599,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23562,
											"end": 23599,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23562,
											"end": 23599,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23562,
											"end": 23599,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23562,
											"end": 23599,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23562,
											"end": 23599,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23562,
											"end": 23599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23562,
											"end": 23599,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23562,
											"end": 23599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23562,
											"end": 23599,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23562,
											"end": 23599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23562,
											"end": 23599,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23562,
											"end": 23599,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23562,
											"end": 23599,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 23562,
											"end": 23599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23562,
											"end": 23599,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23562,
											"end": 23599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23562,
											"end": 23599,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23562,
											"end": 23599,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 23562,
											"end": 23599,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 23562,
											"end": 23599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23562,
											"end": 23599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23562,
											"end": 23599,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23562,
											"end": 23599,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23562,
											"end": 23599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23562,
											"end": 23599,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 23562,
											"end": 23599,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 23562,
											"end": 23599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23562,
											"end": 23599,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 23562,
											"end": 23599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23475,
											"end": 23611,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 23475,
											"end": 23611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23644,
											"end": 23742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 23723,
											"end": 23727,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23723,
											"end": 23741,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23723,
											"end": 23741,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23723,
											"end": 23741,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23644,
											"end": 23718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 23702,
											"end": 23706,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23702,
											"end": 23717,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23702,
											"end": 23717,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23702,
											"end": 23717,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23644,
											"end": 23697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 23692,
											"end": 23696,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 23644,
											"end": 23687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 23660,
											"end": 23668,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23660,
											"end": 23686,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23660,
											"end": 23686,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23660,
											"end": 23686,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23644,
											"end": 23648,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 23644,
											"end": 23655,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23644,
											"end": 23655,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23644,
											"end": 23655,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23644,
											"end": 23659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 23644,
											"end": 23659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23644,
											"end": 23687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23644,
											"end": 23687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23644,
											"end": 23687,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23644,
											"end": 23687,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23644,
											"end": 23687,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23644,
											"end": 23687,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 23644,
											"end": 23687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23644,
											"end": 23691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 23644,
											"end": 23691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23644,
											"end": 23697,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23644,
											"end": 23697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23644,
											"end": 23697,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23644,
											"end": 23697,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23644,
											"end": 23697,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23644,
											"end": 23697,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 23644,
											"end": 23697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23644,
											"end": 23701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 23644,
											"end": 23701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23644,
											"end": 23718,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23644,
											"end": 23718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23644,
											"end": 23718,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23644,
											"end": 23718,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23644,
											"end": 23718,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23644,
											"end": 23718,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 23644,
											"end": 23718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23644,
											"end": 23722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 23644,
											"end": 23722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23644,
											"end": 23742,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23644,
											"end": 23742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23644,
											"end": 23742,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23644,
											"end": 23742,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23644,
											"end": 23742,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23644,
											"end": 23742,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 23644,
											"end": 23742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23623,
											"end": 23627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23623,
											"end": 23641,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23623,
											"end": 23641,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23623,
											"end": 23742,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23623,
											"end": 23742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23623,
											"end": 23742,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 23623,
											"end": 23742,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23767,
											"end": 23791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 23783,
											"end": 23790,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23767,
											"end": 23771,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23767,
											"end": 23778,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23767,
											"end": 23778,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23767,
											"end": 23778,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23767,
											"end": 23782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 23767,
											"end": 23782,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23767,
											"end": 23791,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23767,
											"end": 23791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23767,
											"end": 23791,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23767,
											"end": 23791,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23767,
											"end": 23791,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23767,
											"end": 23791,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 23767,
											"end": 23791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23753,
											"end": 23757,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23753,
											"end": 23764,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23753,
											"end": 23764,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23753,
											"end": 23791,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23753,
											"end": 23791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23753,
											"end": 23791,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 23753,
											"end": 23791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23820,
											"end": 23873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 23868,
											"end": 23872,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 23820,
											"end": 23863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 23836,
											"end": 23844,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23836,
											"end": 23862,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23836,
											"end": 23862,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23836,
											"end": 23862,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23820,
											"end": 23824,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23820,
											"end": 23831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23820,
											"end": 23831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23820,
											"end": 23831,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23820,
											"end": 23835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 23820,
											"end": 23835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23820,
											"end": 23863,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23820,
											"end": 23863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23820,
											"end": 23863,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23820,
											"end": 23863,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23820,
											"end": 23863,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23820,
											"end": 23863,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 23820,
											"end": 23863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23820,
											"end": 23867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 23820,
											"end": 23867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23820,
											"end": 23873,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23820,
											"end": 23873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23820,
											"end": 23873,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23820,
											"end": 23873,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23820,
											"end": 23873,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23820,
											"end": 23873,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 23820,
											"end": 23873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23802,
											"end": 23806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23802,
											"end": 23817,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23802,
											"end": 23817,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23802,
											"end": 23873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23802,
											"end": 23873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23802,
											"end": 23873,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 23802,
											"end": 23873,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23899,
											"end": 23909,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 23891,
											"end": 23919,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23891,
											"end": 23919,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23891,
											"end": 23919,
											"name": "PUSH",
											"source": 0,
											"value": "E1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C"
										},
										{
											"begin": 23911,
											"end": 23918,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23891,
											"end": 23919,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23891,
											"end": 23919,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23891,
											"end": 23919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23891,
											"end": 23919,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23891,
											"end": 23919,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23891,
											"end": 23919,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23891,
											"end": 23919,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23891,
											"end": 23919,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23891,
											"end": 23919,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23891,
											"end": 23919,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23891,
											"end": 23919,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23891,
											"end": 23919,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23891,
											"end": 23919,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23891,
											"end": 23919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23891,
											"end": 23919,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23891,
											"end": 23919,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23891,
											"end": 23919,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23891,
											"end": 23919,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 23221,
											"end": 23927,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23221,
											"end": 23927,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23221,
											"end": 23927,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20372,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24660,
											"end": 24936,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 24660,
											"end": 24936,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24707,
											"end": 24728,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24731,
											"end": 24739,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24731,
											"end": 24751,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24740,
											"end": 24750,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 24731,
											"end": 24751,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24731,
											"end": 24751,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24731,
											"end": 24751,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24731,
											"end": 24751,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24731,
											"end": 24751,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24731,
											"end": 24751,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24731,
											"end": 24751,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24731,
											"end": 24751,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24731,
											"end": 24751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24731,
											"end": 24751,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24731,
											"end": 24751,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24731,
											"end": 24751,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24731,
											"end": 24751,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24731,
											"end": 24751,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24731,
											"end": 24751,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24707,
											"end": 24751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24707,
											"end": 24751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24762,
											"end": 24814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 24789,
											"end": 24799,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 24802,
											"end": 24806,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24802,
											"end": 24813,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24802,
											"end": 24813,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24802,
											"end": 24813,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24762,
											"end": 24767,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24762,
											"end": 24767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24762,
											"end": 24767,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24762,
											"end": 24767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24762,
											"end": 24767,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24762,
											"end": 24767,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 24762,
											"end": 24767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24762,
											"end": 24767,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 24762,
											"end": 24767,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24762,
											"end": 24767,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24762,
											"end": 24780,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24762,
											"end": 24780,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24762,
											"end": 24780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 24762,
											"end": 24780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24762,
											"end": 24814,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24762,
											"end": 24814,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24762,
											"end": 24814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24762,
											"end": 24814,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 24762,
											"end": 24814,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24762,
											"end": 24814,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24762,
											"end": 24814,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 24762,
											"end": 24814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24848,
											"end": 24858,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 24830,
											"end": 24872,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24830,
											"end": 24872,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24830,
											"end": 24872,
											"name": "PUSH",
											"source": 0,
											"value": "5FAFA99D0643513820BE26656B45130B01E1C03062E1266BF36F88CBD3BD9695"
										},
										{
											"begin": 24860,
											"end": 24864,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24860,
											"end": 24871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24860,
											"end": 24871,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24860,
											"end": 24871,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24830,
											"end": 24872,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24830,
											"end": 24872,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24830,
											"end": 24872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24830,
											"end": 24872,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24830,
											"end": 24872,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24830,
											"end": 24872,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24830,
											"end": 24872,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24830,
											"end": 24872,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24830,
											"end": 24872,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24830,
											"end": 24872,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24830,
											"end": 24872,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24830,
											"end": 24872,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24830,
											"end": 24872,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24830,
											"end": 24872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24830,
											"end": 24872,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24830,
											"end": 24872,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24830,
											"end": 24872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24830,
											"end": 24872,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 24897,
											"end": 24898,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24883,
											"end": 24887,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24883,
											"end": 24894,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24883,
											"end": 24894,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24883,
											"end": 24898,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24883,
											"end": 24898,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24883,
											"end": 24898,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 24883,
											"end": 24898,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24927,
											"end": 24928,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24909,
											"end": 24913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24909,
											"end": 24924,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24909,
											"end": 24924,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24909,
											"end": 24928,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24909,
											"end": 24928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24909,
											"end": 24928,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 24909,
											"end": 24928,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24660,
											"end": 24936,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24660,
											"end": 24936,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21169,
											"end": 21270,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 21169,
											"end": 21270,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21217,
											"end": 21224,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21244,
											"end": 21255,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 21244,
											"end": 21262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21244,
											"end": 21262,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21244,
											"end": 21262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21244,
											"end": 21262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21237,
											"end": 21262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21237,
											"end": 21262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21169,
											"end": 21270,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21169,
											"end": 21270,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 22531,
											"end": 23149,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 22531,
											"end": 23149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22591,
											"end": 22599,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22591,
											"end": 22615,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22591,
											"end": 22615,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22591,
											"end": 22615,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22575,
											"end": 22587,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 22575,
											"end": 22615,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22571,
											"end": 22650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 22571,
											"end": 22650,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22632,
											"end": 22639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 22632,
											"end": 22639,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22571,
											"end": 22650,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 22571,
											"end": 22650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22660,
											"end": 22679,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22682,
											"end": 22687,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22687,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22682,
											"end": 22687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22687,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22687,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 22682,
											"end": 22687,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22687,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22687,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22682,
											"end": 22687,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22697,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22682,
											"end": 22697,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22697,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 22706,
											"end": 22710,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22682,
											"end": 22712,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22660,
											"end": 22712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22660,
											"end": 22712,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22742,
											"end": 22743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22727,
											"end": 22738,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22727,
											"end": 22743,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22723,
											"end": 22832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22723,
											"end": 22832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 22723,
											"end": 22832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22787,
											"end": 22799,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 22760,
											"end": 22768,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22760,
											"end": 22784,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22760,
											"end": 22784,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22760,
											"end": 22799,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22760,
											"end": 22799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22760,
											"end": 22799,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 22760,
											"end": 22799,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22814,
											"end": 22821,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22814,
											"end": 22821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 22814,
											"end": 22821,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22723,
											"end": 22832,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 22723,
											"end": 22832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22842,
											"end": 22860,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22863,
											"end": 22916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 22877,
											"end": 22885,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22877,
											"end": 22901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22877,
											"end": 22901,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22877,
											"end": 22901,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22903,
											"end": 22915,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 22863,
											"end": 22876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 22863,
											"end": 22916,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22863,
											"end": 22916,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 22863,
											"end": 22916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22842,
											"end": 22916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22842,
											"end": 22916,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22927,
											"end": 22946,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22949,
											"end": 22979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 22964,
											"end": 22978,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22964,
											"end": 22978,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22949,
											"end": 22959,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22949,
											"end": 22963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 22949,
											"end": 22963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22949,
											"end": 22979,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22949,
											"end": 22979,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22949,
											"end": 22979,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 22949,
											"end": 22979,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22949,
											"end": 22979,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22949,
											"end": 22979,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 22949,
											"end": 22979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22927,
											"end": 22979,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22927,
											"end": 22979,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23021,
											"end": 23091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 23052,
											"end": 23090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 23078,
											"end": 23089,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23052,
											"end": 23073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 23068,
											"end": 23072,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 23052,
											"end": 23063,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23052,
											"end": 23067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 23052,
											"end": 23067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23052,
											"end": 23073,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23052,
											"end": 23073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23052,
											"end": 23073,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23052,
											"end": 23073,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23052,
											"end": 23073,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23052,
											"end": 23073,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 23052,
											"end": 23073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23052,
											"end": 23077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 23052,
											"end": 23077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23052,
											"end": 23090,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23052,
											"end": 23090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23052,
											"end": 23090,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23052,
											"end": 23090,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23052,
											"end": 23090,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23052,
											"end": 23090,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 23052,
											"end": 23090,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23021,
											"end": 23029,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23021,
											"end": 23047,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23021,
											"end": 23047,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23021,
											"end": 23047,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23021,
											"end": 23051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 23021,
											"end": 23051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23021,
											"end": 23091,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23021,
											"end": 23091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23021,
											"end": 23091,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23021,
											"end": 23091,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23021,
											"end": 23091,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23021,
											"end": 23091,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 23021,
											"end": 23091,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22992,
											"end": 23000,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22992,
											"end": 23018,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22992,
											"end": 23018,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22992,
											"end": 23091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22992,
											"end": 23091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22992,
											"end": 23091,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 22992,
											"end": 23091,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23129,
											"end": 23141,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 23102,
											"end": 23110,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23102,
											"end": 23126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23102,
											"end": 23126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23102,
											"end": 23141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23102,
											"end": 23141,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23102,
											"end": 23141,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 23102,
											"end": 23141,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22531,
											"end": 23149,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22531,
											"end": 23149,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22531,
											"end": 23149,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22531,
											"end": 23149,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 22531,
											"end": 23149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22531,
											"end": 23149,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21780,
											"end": 21787,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21800,
											"end": 21821,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21824,
											"end": 21832,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 21800,
											"end": 21832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21800,
											"end": 21832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21843,
											"end": 21864,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21867,
											"end": 21875,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21867,
											"end": 21882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21876,
											"end": 21881,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21867,
											"end": 21882,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21867,
											"end": 21882,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21867,
											"end": 21882,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21867,
											"end": 21882,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21867,
											"end": 21882,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21867,
											"end": 21882,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21867,
											"end": 21882,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21867,
											"end": 21882,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21867,
											"end": 21882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21867,
											"end": 21882,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21867,
											"end": 21882,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21867,
											"end": 21882,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21867,
											"end": 21882,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21867,
											"end": 21882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21867,
											"end": 21882,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21843,
											"end": 21882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21843,
											"end": 21882,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21893,
											"end": 21918,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21921,
											"end": 21925,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21921,
											"end": 21943,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21921,
											"end": 21943,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21921,
											"end": 21943,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21893,
											"end": 21943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21893,
											"end": 21943,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21954,
											"end": 21974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21977,
											"end": 21982,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 21982,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21977,
											"end": 21982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 21982,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 21982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 21982,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 21977,
											"end": 21982,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 21982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 21982,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 21982,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21977,
											"end": 21982,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 21992,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21977,
											"end": 21992,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 21992,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 22001,
											"end": 22005,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21954,
											"end": 22007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21954,
											"end": 22007,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22037,
											"end": 22041,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22037,
											"end": 22057,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22037,
											"end": 22057,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22037,
											"end": 22057,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22022,
											"end": 22034,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 22022,
											"end": 22057,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22022,
											"end": 22078,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22022,
											"end": 22078,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22022,
											"end": 22078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 22022,
											"end": 22078,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22022,
											"end": 22078,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22077,
											"end": 22078,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22061,
											"end": 22073,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22061,
											"end": 22078,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22061,
											"end": 22078,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22022,
											"end": 22078,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 22022,
											"end": 22078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22018,
											"end": 22341,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22018,
											"end": 22341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 22018,
											"end": 22341,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22095,
											"end": 22113,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22116,
											"end": 22165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 22130,
											"end": 22134,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 22130,
											"end": 22150,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22130,
											"end": 22150,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22130,
											"end": 22150,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22152,
											"end": 22164,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 22116,
											"end": 22129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 22116,
											"end": 22165,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22116,
											"end": 22165,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 22116,
											"end": 22165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22095,
											"end": 22165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22095,
											"end": 22165,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22180,
											"end": 22199,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22202,
											"end": 22232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 22217,
											"end": 22231,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22217,
											"end": 22231,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22202,
											"end": 22212,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22202,
											"end": 22216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 22202,
											"end": 22216,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22202,
											"end": 22232,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22202,
											"end": 22232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22202,
											"end": 22232,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 22202,
											"end": 22232,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22202,
											"end": 22232,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22202,
											"end": 22232,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 22202,
											"end": 22232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22180,
											"end": 22232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22180,
											"end": 22232,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22267,
											"end": 22329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 22289,
											"end": 22328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 22315,
											"end": 22327,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22289,
											"end": 22310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 22305,
											"end": 22309,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 22289,
											"end": 22300,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 22289,
											"end": 22304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 22289,
											"end": 22304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22289,
											"end": 22310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22289,
											"end": 22310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22289,
											"end": 22310,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 22289,
											"end": 22310,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22289,
											"end": 22310,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22289,
											"end": 22310,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 22289,
											"end": 22310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22289,
											"end": 22314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 22289,
											"end": 22314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22289,
											"end": 22328,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22289,
											"end": 22328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22289,
											"end": 22328,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 22289,
											"end": 22328,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22289,
											"end": 22328,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22289,
											"end": 22328,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 22289,
											"end": 22328,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22267,
											"end": 22284,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 22267,
											"end": 22288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 22267,
											"end": 22288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22267,
											"end": 22329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22267,
											"end": 22329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22267,
											"end": 22329,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 22267,
											"end": 22329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22267,
											"end": 22329,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22267,
											"end": 22329,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 22267,
											"end": 22329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22247,
											"end": 22329,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 22247,
											"end": 22329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22018,
											"end": 22341,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22018,
											"end": 22341,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22018,
											"end": 22341,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 22018,
											"end": 22341,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22358,
											"end": 22447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 22428,
											"end": 22432,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22428,
											"end": 22446,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22428,
											"end": 22446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22428,
											"end": 22446,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22358,
											"end": 22423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 22407,
											"end": 22411,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 22407,
											"end": 22422,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22407,
											"end": 22422,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22407,
											"end": 22422,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22358,
											"end": 22402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 22397,
											"end": 22401,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 22358,
											"end": 22392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 22374,
											"end": 22391,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 22358,
											"end": 22362,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 22358,
											"end": 22369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22358,
											"end": 22369,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22358,
											"end": 22369,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22358,
											"end": 22373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 22358,
											"end": 22373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22358,
											"end": 22392,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22358,
											"end": 22392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22358,
											"end": 22392,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 22358,
											"end": 22392,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22358,
											"end": 22392,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22358,
											"end": 22392,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 22358,
											"end": 22392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22358,
											"end": 22396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 22358,
											"end": 22396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22358,
											"end": 22402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22358,
											"end": 22402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22358,
											"end": 22402,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 22358,
											"end": 22402,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22358,
											"end": 22402,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22358,
											"end": 22402,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 22358,
											"end": 22402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22358,
											"end": 22406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 22358,
											"end": 22406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22358,
											"end": 22423,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22358,
											"end": 22423,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22358,
											"end": 22423,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 22358,
											"end": 22423,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22358,
											"end": 22423,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22358,
											"end": 22423,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 22358,
											"end": 22423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22358,
											"end": 22427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 22358,
											"end": 22427,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22358,
											"end": 22447,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22358,
											"end": 22447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22358,
											"end": 22447,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 22358,
											"end": 22447,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22358,
											"end": 22447,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22358,
											"end": 22447,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 22358,
											"end": 22447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22351,
											"end": 22447,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 22351,
											"end": 22447,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22351,
											"end": 22447,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22351,
											"end": 22447,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22351,
											"end": 22447,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22351,
											"end": 22447,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21719,
											"end": 22455,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16105,
											"end": 16316,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 16105,
											"end": 16316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16222,
											"end": 16308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 16242,
											"end": 16247,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16272,
											"end": 16295,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 16272,
											"end": 16295,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 16272,
											"end": 16295,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 16297,
											"end": 16299,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16301,
											"end": 16306,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16249,
											"end": 16307,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16249,
											"end": 16307,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16249,
											"end": 16307,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 16249,
											"end": 16307,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16249,
											"end": 16307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16249,
											"end": 16307,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16249,
											"end": 16307,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16249,
											"end": 16307,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16249,
											"end": 16307,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16249,
											"end": 16307,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16249,
											"end": 16307,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16249,
											"end": 16307,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16249,
											"end": 16307,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16249,
											"end": 16307,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16249,
											"end": 16307,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16249,
											"end": 16307,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16249,
											"end": 16307,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16249,
											"end": 16307,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16249,
											"end": 16307,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16249,
											"end": 16307,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16249,
											"end": 16307,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16249,
											"end": 16307,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16249,
											"end": 16307,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16249,
											"end": 16307,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16249,
											"end": 16307,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16249,
											"end": 16307,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16249,
											"end": 16307,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16249,
											"end": 16307,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16249,
											"end": 16307,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16249,
											"end": 16307,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16249,
											"end": 16307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16249,
											"end": 16307,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16249,
											"end": 16307,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16249,
											"end": 16307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16249,
											"end": 16307,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16249,
											"end": 16307,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 16249,
											"end": 16307,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16249,
											"end": 16307,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16249,
											"end": 16307,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16249,
											"end": 16307,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16249,
											"end": 16307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16249,
											"end": 16307,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16249,
											"end": 16307,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16249,
											"end": 16307,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16249,
											"end": 16307,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16249,
											"end": 16307,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16249,
											"end": 16307,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16249,
											"end": 16307,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 16249,
											"end": 16307,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16249,
											"end": 16307,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16249,
											"end": 16307,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16249,
											"end": 16307,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16249,
											"end": 16307,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16249,
											"end": 16307,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16222,
											"end": 16241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 16222,
											"end": 16308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16222,
											"end": 16308,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 16222,
											"end": 16308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16105,
											"end": 16316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16105,
											"end": 16316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16105,
											"end": 16316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16105,
											"end": 16316,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2332,
											"end": 2803,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2332,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2390,
											"end": 2397,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2640,
											"end": 2641,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2635,
											"end": 2636,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2635,
											"end": 2641,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2678,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2631,
											"end": 2678,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2666,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2658,
											"end": 2666,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2666,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2658,
											"end": 2666,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2678,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2631,
											"end": 2678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2690,
											"end": 2699,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2706,
											"end": 2707,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2702,
											"end": 2703,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2702,
											"end": 2707,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2690,
											"end": 2707,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2690,
											"end": 2707,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2735,
											"end": 2736,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2730,
											"end": 2731,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2726,
											"end": 2727,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2726,
											"end": 2731,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2726,
											"end": 2731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2726,
											"end": 2731,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2726,
											"end": 2731,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 2726,
											"end": 2731,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2726,
											"end": 2731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2726,
											"end": 2731,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2726,
											"end": 2736,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2718,
											"end": 2774,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2774,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2718,
											"end": 2774,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2774,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2718,
											"end": 2774,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2774,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2774,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2718,
											"end": 2774,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2774,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2774,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2774,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2718,
											"end": 2774,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2774,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2774,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2774,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2774,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2774,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2774,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2718,
											"end": 2774,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2774,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2774,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2718,
											"end": 2774,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2774,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2774,
											"name": "PUSH data",
											"source": 0,
											"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
										},
										{
											"begin": 2718,
											"end": 2774,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2718,
											"end": 2774,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2774,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2774,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2718,
											"end": 2774,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2774,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2774,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2774,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2774,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2718,
											"end": 2774,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2774,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2774,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2774,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2774,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2774,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2718,
											"end": 2774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2795,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2787,
											"end": 2795,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2787,
											"end": 2795,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2787,
											"end": 2795,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2332,
											"end": 2803,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2332,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2332,
											"end": 2803,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2332,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2332,
											"end": 2803,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2332,
											"end": 2803,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2332,
											"end": 2803,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3279,
											"end": 3411,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3279,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3337,
											"end": 3344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3364,
											"end": 3403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 3368,
											"end": 3369,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3371,
											"end": 3372,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3403,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3364,
											"end": 3403,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3403,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3403,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3364,
											"end": 3403,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3403,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3364,
											"end": 3403,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3403,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3403,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 3364,
											"end": 3403,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3403,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3403,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3364,
											"end": 3403,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3403,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 3364,
											"end": 3403,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3403,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 3364,
											"end": 3403,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3364,
											"end": 3403,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 3364,
											"end": 3403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3357,
											"end": 3403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3357,
											"end": 3403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3279,
											"end": 3411,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3279,
											"end": 3411,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3279,
											"end": 3411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3279,
											"end": 3411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3279,
											"end": 3411,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1408,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1408,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1466,
											"end": 1473,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1493,
											"end": 1536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1497,
											"end": 1498,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1501,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1536,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1493,
											"end": 1536,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1536,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1536,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1493,
											"end": 1536,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1536,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1493,
											"end": 1536,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1536,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1536,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 1493,
											"end": 1536,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1536,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1536,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1493,
											"end": 1536,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1536,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 1493,
											"end": 1536,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1536,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1536,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1493,
											"end": 1536,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1493,
											"end": 1536,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1493,
											"end": 1536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1486,
											"end": 1536,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1486,
											"end": 1536,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1544,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1544,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1544,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 944,
											"end": 1125,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 944,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1009,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1022,
											"end": 1031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1038,
											"end": 1039,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1034,
											"end": 1035,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1034,
											"end": 1039,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1022,
											"end": 1039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1022,
											"end": 1039,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1064,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1058,
											"end": 1059,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1058,
											"end": 1064,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1058,
											"end": 1064,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1050,
											"end": 1096,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1096,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1050,
											"end": 1096,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1096,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1050,
											"end": 1096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1096,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1096,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1050,
											"end": 1096,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1096,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1096,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1096,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1050,
											"end": 1096,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1096,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1096,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1096,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1096,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1096,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 1050,
											"end": 1096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1096,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1096,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1050,
											"end": 1096,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1096,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1096,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 1050,
											"end": 1096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1096,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1096,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1096,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1050,
											"end": 1096,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1096,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1096,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1096,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1096,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1050,
											"end": 1096,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1096,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1096,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1096,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1096,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1096,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1050,
											"end": 1096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 1117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1117,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1117,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1117,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 944,
											"end": 1125,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 944,
											"end": 1125,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 944,
											"end": 1125,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 944,
											"end": 1125,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 944,
											"end": 1125,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16324,
											"end": 16572,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 16324,
											"end": 16572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16468,
											"end": 16564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 16488,
											"end": 16493,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16518,
											"end": 16545,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 16518,
											"end": 16545,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 16518,
											"end": 16545,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 16547,
											"end": 16551,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16553,
											"end": 16555,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16557,
											"end": 16562,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16563,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16468,
											"end": 16487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 16468,
											"end": 16564,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16468,
											"end": 16564,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 16468,
											"end": 16564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16324,
											"end": 16572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16324,
											"end": 16572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16324,
											"end": 16572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16324,
											"end": 16572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16324,
											"end": 16572,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21346,
											"end": 21654,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 21346,
											"end": 21654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21420,
											"end": 21427,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21451,
											"end": 21464,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 21451,
											"end": 21464,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21444,
											"end": 21447,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21444,
											"end": 21464,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 21440,
											"end": 21647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 21440,
											"end": 21647,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21488,
											"end": 21502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 21496,
											"end": 21501,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21488,
											"end": 21491,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21488,
											"end": 21495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 21488,
											"end": 21495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21488,
											"end": 21502,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21488,
											"end": 21502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21488,
											"end": 21502,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 21488,
											"end": 21502,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21488,
											"end": 21502,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21488,
											"end": 21502,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 21488,
											"end": 21502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21481,
											"end": 21502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21481,
											"end": 21502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21481,
											"end": 21502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 21481,
											"end": 21502,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21440,
											"end": 21647,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 21440,
											"end": 21647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21533,
											"end": 21546,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 21533,
											"end": 21546,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21524,
											"end": 21529,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21524,
											"end": 21546,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21520,
											"end": 21647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 21520,
											"end": 21647,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21570,
											"end": 21571,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21563,
											"end": 21571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21563,
											"end": 21571,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21563,
											"end": 21571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 21563,
											"end": 21571,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21520,
											"end": 21647,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 21520,
											"end": 21647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21611,
											"end": 21635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 21629,
											"end": 21634,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21611,
											"end": 21624,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 21611,
											"end": 21624,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21611,
											"end": 21628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 21611,
											"end": 21628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21611,
											"end": 21635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21611,
											"end": 21635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21611,
											"end": 21635,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 21611,
											"end": 21635,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21611,
											"end": 21635,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21611,
											"end": 21635,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 21611,
											"end": 21635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21604,
											"end": 21635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21604,
											"end": 21635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21346,
											"end": 21654,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 21346,
											"end": 21654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21346,
											"end": 21654,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21346,
											"end": 21654,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21346,
											"end": 21654,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21346,
											"end": 21654,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21346,
											"end": 21654,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 18640,
											"end": 19414,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 18640,
											"end": 19414,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19064,
											"end": 19087,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 19090,
											"end": 19159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 19118,
											"end": 19122,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19090,
											"end": 19159,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19090,
											"end": 19159,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19090,
											"end": 19159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19090,
											"end": 19159,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19090,
											"end": 19159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19090,
											"end": 19159,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19090,
											"end": 19159,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19090,
											"end": 19159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19090,
											"end": 19159,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19090,
											"end": 19159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19090,
											"end": 19159,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19090,
											"end": 19159,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19090,
											"end": 19159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19090,
											"end": 19159,
											"name": "PUSH",
											"source": 0,
											"value": "5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 19090,
											"end": 19159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19090,
											"end": 19159,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19090,
											"end": 19159,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19098,
											"end": 19103,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19090,
											"end": 19117,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19090,
											"end": 19117,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19090,
											"end": 19117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 19090,
											"end": 19117,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19090,
											"end": 19159,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19090,
											"end": 19159,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19090,
											"end": 19159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19090,
											"end": 19159,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 19090,
											"end": 19159,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19090,
											"end": 19159,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19090,
											"end": 19159,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 19090,
											"end": 19159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19064,
											"end": 19159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19064,
											"end": 19159,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19194,
											"end": 19195,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19174,
											"end": 19184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19174,
											"end": 19191,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19174,
											"end": 19195,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 19170,
											"end": 19407,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19170,
											"end": 19407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 19170,
											"end": 19407,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19329,
											"end": 19339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19318,
											"end": 19348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19318,
											"end": 19348,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19318,
											"end": 19348,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19318,
											"end": 19348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19318,
											"end": 19348,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19318,
											"end": 19348,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19318,
											"end": 19348,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19318,
											"end": 19348,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19318,
											"end": 19348,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19318,
											"end": 19348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 19318,
											"end": 19348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19318,
											"end": 19348,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19318,
											"end": 19348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19318,
											"end": 19348,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19318,
											"end": 19348,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 19318,
											"end": 19348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19318,
											"end": 19348,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19318,
											"end": 19348,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19318,
											"end": 19348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19318,
											"end": 19348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19318,
											"end": 19348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19318,
											"end": 19348,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19318,
											"end": 19348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19318,
											"end": 19348,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19318,
											"end": 19348,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19318,
											"end": 19348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19318,
											"end": 19348,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19318,
											"end": 19348,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19318,
											"end": 19348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19318,
											"end": 19348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19318,
											"end": 19348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19318,
											"end": 19348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19310,
											"end": 19395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 19310,
											"end": 19395,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19310,
											"end": 19395,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19310,
											"end": 19395,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19310,
											"end": 19395,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19310,
											"end": 19395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19310,
											"end": 19395,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19310,
											"end": 19395,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19310,
											"end": 19395,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19310,
											"end": 19395,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19310,
											"end": 19395,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19310,
											"end": 19395,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19310,
											"end": 19395,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19310,
											"end": 19395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19310,
											"end": 19395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19310,
											"end": 19395,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19310,
											"end": 19395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19310,
											"end": 19395,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19310,
											"end": 19395,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 19310,
											"end": 19395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19310,
											"end": 19395,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19310,
											"end": 19395,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19310,
											"end": 19395,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19310,
											"end": 19395,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19310,
											"end": 19395,
											"name": "PUSH data",
											"source": 0,
											"value": "21C3364D55537BF20EB8F05374E9F53F47299E1883C412F1F1135F398F2C2082"
										},
										{
											"begin": 19310,
											"end": 19395,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 19310,
											"end": 19395,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19310,
											"end": 19395,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 19310,
											"end": 19395,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19310,
											"end": 19395,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19310,
											"end": 19395,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19310,
											"end": 19395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19310,
											"end": 19395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19310,
											"end": 19395,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19310,
											"end": 19395,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19310,
											"end": 19395,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19310,
											"end": 19395,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19310,
											"end": 19395,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19310,
											"end": 19395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19310,
											"end": 19395,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19310,
											"end": 19395,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 19310,
											"end": 19395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19170,
											"end": 19407,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 19170,
											"end": 19407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18640,
											"end": 19414,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18640,
											"end": 19414,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18640,
											"end": 19414,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18640,
											"end": 19414,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3907,
											"end": 4219,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 3907,
											"end": 4219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4027,
											"end": 4034,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4059,
											"end": 4060,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4055,
											"end": 4056,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4055,
											"end": 4060,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4062,
											"end": 4074,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4075,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4086,
											"end": 4095,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4102,
											"end": 4103,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4098,
											"end": 4099,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4098,
											"end": 4103,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4098,
											"end": 4103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 4098,
											"end": 4103,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4098,
											"end": 4103,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 4098,
											"end": 4103,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 4098,
											"end": 4103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4098,
											"end": 4103,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4086,
											"end": 4103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4086,
											"end": 4103,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4210,
											"end": 4211,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4203,
											"end": 4211,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4203,
											"end": 4211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4203,
											"end": 4211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3907,
											"end": 4219,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3907,
											"end": 4219,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3907,
											"end": 4219,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3907,
											"end": 4219,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3907,
											"end": 4219,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3907,
											"end": 4219,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1847,
											"end": 2073,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1847,
											"end": 2073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1967,
											"end": 1974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2000,
											"end": 2001,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1995,
											"end": 1996,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1995,
											"end": 2001,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1995,
											"end": 2001,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2003,
											"end": 2015,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2043,
											"end": 2044,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2039,
											"end": 2040,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2039,
											"end": 2044,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2044,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2064,
											"end": 2065,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2057,
											"end": 2065,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2057,
											"end": 2065,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2057,
											"end": 2065,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 2073,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 2073,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 2073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 2073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 2073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 2073,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13026,
											"end": 13256,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 13026,
											"end": 13256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13163,
											"end": 13175,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13195,
											"end": 13248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 13218,
											"end": 13224,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13226,
											"end": 13230,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13232,
											"end": 13233,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13235,
											"end": 13247,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13195,
											"end": 13217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 13195,
											"end": 13248,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13195,
											"end": 13248,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 13195,
											"end": 13248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13188,
											"end": 13248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13188,
											"end": 13248,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13026,
											"end": 13256,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13026,
											"end": 13256,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13026,
											"end": 13256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13026,
											"end": 13256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13026,
											"end": 13256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13026,
											"end": 13256,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14514,
											"end": 15534,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 14514,
											"end": 15534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14687,
											"end": 14699,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14720,
											"end": 14738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 14731,
											"end": 14737,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14720,
											"end": 14730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 14720,
											"end": 14738,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14720,
											"end": 14738,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 14720,
											"end": 14738,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14712,
											"end": 14772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 14712,
											"end": 14772,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14712,
											"end": 14772,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14712,
											"end": 14772,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14712,
											"end": 14772,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14712,
											"end": 14772,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14712,
											"end": 14772,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14712,
											"end": 14772,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14712,
											"end": 14772,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14712,
											"end": 14772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14712,
											"end": 14772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14712,
											"end": 14772,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14712,
											"end": 14772,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14712,
											"end": 14772,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14712,
											"end": 14772,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14712,
											"end": 14772,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14712,
											"end": 14772,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14712,
											"end": 14772,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14712,
											"end": 14772,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 14712,
											"end": 14772,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14712,
											"end": 14772,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14712,
											"end": 14772,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14712,
											"end": 14772,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14712,
											"end": 14772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14712,
											"end": 14772,
											"name": "PUSH",
											"source": 0,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 14712,
											"end": 14772,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14712,
											"end": 14772,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14712,
											"end": 14772,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14712,
											"end": 14772,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14712,
											"end": 14772,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14712,
											"end": 14772,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14712,
											"end": 14772,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14712,
											"end": 14772,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14712,
											"end": 14772,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14712,
											"end": 14772,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14712,
											"end": 14772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14712,
											"end": 14772,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14712,
											"end": 14772,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14712,
											"end": 14772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14712,
											"end": 14772,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14712,
											"end": 14772,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 14712,
											"end": 14772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14846,
											"end": 14858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14860,
											"end": 14883,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14887,
											"end": 14893,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14898,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14887,
											"end": 14898,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14906,
											"end": 14914,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14916,
											"end": 14920,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14845,
											"end": 14921,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14845,
											"end": 14921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14845,
											"end": 14921,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14845,
											"end": 14921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14936,
											"end": 14943,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14932,
											"end": 15527,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14932,
											"end": 15527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 14932,
											"end": 15527,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14967,
											"end": 14977,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14960,
											"end": 14977,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14960,
											"end": 14977,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14960,
											"end": 14977,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14960,
											"end": 14977,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14960,
											"end": 14977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 14960,
											"end": 14977,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14932,
											"end": 15527,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 14932,
											"end": 15527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15101,
											"end": 15102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15081,
											"end": 15091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15081,
											"end": 15098,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15081,
											"end": 15102,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 15077,
											"end": 15516,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15077,
											"end": 15516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 15077,
											"end": 15516,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15344,
											"end": 15354,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15338,
											"end": 15355,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15405,
											"end": 15420,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15392,
											"end": 15402,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15388,
											"end": 15390,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15384,
											"end": 15403,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15377,
											"end": 15421,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15292,
											"end": 15440,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 15292,
											"end": 15440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15499,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14514,
											"end": 15534,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 14514,
											"end": 15534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14514,
											"end": 15534,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14514,
											"end": 15534,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14514,
											"end": 15534,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14514,
											"end": 15534,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14514,
											"end": 15534,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14514,
											"end": 15534,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14514,
											"end": 15534,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9889,
											"end": 10530,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 9889,
											"end": 10530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9949,
											"end": 9953,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10211,
											"end": 10227,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10238,
											"end": 10257,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10260,
											"end": 10326,
											"name": "PUSH",
											"source": 0,
											"value": "C5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470"
										},
										{
											"begin": 10238,
											"end": 10326,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10238,
											"end": 10326,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 10238,
											"end": 10326,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10238,
											"end": 10326,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10442,
											"end": 10449,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10430,
											"end": 10450,
											"name": "EXTCODEHASH",
											"source": 0
										},
										{
											"begin": 10418,
											"end": 10450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10418,
											"end": 10450,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10491,
											"end": 10502,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10479,
											"end": 10487,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10479,
											"end": 10502,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10479,
											"end": 10502,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10479,
											"end": 10521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10479,
											"end": 10521,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10479,
											"end": 10521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 10479,
											"end": 10521,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10479,
											"end": 10521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10518,
											"end": 10521,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10506,
											"end": 10521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10506,
											"end": 10521,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 10506,
											"end": 10514,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10506,
											"end": 10521,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10506,
											"end": 10521,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10479,
											"end": 10521,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 10479,
											"end": 10521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10471,
											"end": 10522,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10471,
											"end": 10522,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10471,
											"end": 10522,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10471,
											"end": 10522,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9889,
											"end": 10530,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9889,
											"end": 10530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9889,
											"end": 10530,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9889,
											"end": 10530,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									],
									".data": {
										"21C3364D55537BF20EB8F05374E9F53F47299E1883C412F1F1135F398F2C2082": "5361666542455032303a204245503230206f7065726174696f6e20646964206e6f742073756363656564",
										"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77"
									}
								}
							}
						},
						"methodIdentifiers": {
							"addressLength()": "dc881888",
							"addressList(uint256)": "b810fb43",
							"bonusEndBlock()": "1aed6553",
							"deposit(uint256)": "b6b55f25",
							"emergencyWithdraw()": "db2e21bc",
							"pendingReward(address)": "f40f0f52",
							"poolInfo()": "5a2f3d09",
							"rewardPerBlock()": "8ae39cac",
							"startBlock()": "48cd4cb1",
							"syrup()": "86a952c4",
							"updatePool()": "e3161ddd",
							"userInfo(address)": "1959a002",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"_syrup\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"addressLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"addressList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bonusEndBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accRewardPerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"syrup\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardPending\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"farms-pools/SousChef.sol\":\"SousChef\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"farms-pools/SousChef.sol\":{\"keccak256\":\"0xe8f263b719313d89a47ef21204b1359f454cb34d6b5797a04981cd31a0f10966\",\"urls\":[\"bzz-raw://17c576d6d7b4338eb5a24697569cd4e1ce570307124ef6cd538721340331a9e1\",\"dweb:/ipfs/QmcGxXod5WYjnYPsRRJJDwL1NCLri3C7Z7dbPkM423jebJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 797,
								"contract": "farms-pools/SousChef.sol:SousChef",
								"label": "syrup",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IBEP20)367"
							},
							{
								"astId": 799,
								"contract": "farms-pools/SousChef.sol:SousChef",
								"label": "rewardPerBlock",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 801,
								"contract": "farms-pools/SousChef.sol:SousChef",
								"label": "poolInfo",
								"offset": 0,
								"slot": "2",
								"type": "t_struct(PoolInfo)795_storage"
							},
							{
								"astId": 805,
								"contract": "farms-pools/SousChef.sol:SousChef",
								"label": "userInfo",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_struct(UserInfo)790_storage)"
							},
							{
								"astId": 808,
								"contract": "farms-pools/SousChef.sol:SousChef",
								"label": "addressList",
								"offset": 0,
								"slot": "5",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 810,
								"contract": "farms-pools/SousChef.sol:SousChef",
								"label": "startBlock",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 812,
								"contract": "farms-pools/SousChef.sol:SousChef",
								"label": "bonusEndBlock",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_contract(IBEP20)367": {
								"encoding": "inplace",
								"label": "contract IBEP20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(UserInfo)790_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct SousChef.UserInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(UserInfo)790_storage"
							},
							"t_struct(PoolInfo)795_storage": {
								"encoding": "inplace",
								"label": "struct SousChef.PoolInfo",
								"members": [
									{
										"astId": 792,
										"contract": "farms-pools/SousChef.sol:SousChef",
										"label": "lastRewardBlock",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 794,
										"contract": "farms-pools/SousChef.sol:SousChef",
										"label": "accRewardPerShare",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(UserInfo)790_storage": {
								"encoding": "inplace",
								"label": "struct SousChef.UserInfo",
								"members": [
									{
										"astId": 785,
										"contract": "farms-pools/SousChef.sol:SousChef",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 787,
										"contract": "farms-pools/SousChef.sol:SousChef",
										"label": "rewardDebt",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 789,
										"contract": "farms-pools/SousChef.sol:SousChef",
										"label": "rewardPending",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "farms-pools/SousChef.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "farms-pools/SousChef.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"farms-pools/SousChef.sol": {
				"ast": {
					"absolutePath": "farms-pools/SousChef.sol",
					"exportedSymbols": {
						"Address": [
							569
						],
						"IBEP20": [
							367
						],
						"SafeBEP20": [
							777
						],
						"SafeMath": [
							268
						],
						"SousChef": [
							1324
						]
					},
					"id": 1325,
					"license": null,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "70:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "104:575:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 268,
							"linearizedBaseContracts": [
								268
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "1011:114:0",
										"statements": [
											{
												"assignments": [
													13
												],
												"declarations": [
													{
														"constant": false,
														"id": 13,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 27,
														"src": "1022:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 12,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1022:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 17,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 14,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1034:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 15,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "1038:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1034:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1022:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 21,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 19,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "1058:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 20,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "1063:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1058:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1066:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 18,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1050:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1050:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "1050:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 25,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 13,
													"src": "1116:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 11,
												"id": 26,
												"nodeType": "Return",
												"src": "1109:8:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "705:233:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 28,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 28,
												"src": "957:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "957:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 28,
												"src": "968:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "968:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "956:22:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 28,
												"src": "1002:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 9,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1001:9:0"
									},
									"scope": 268,
									"src": "944:181:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "1475:69:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 39,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "1497:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 40,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "1500:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1503:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 38,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															45,
															73
														],
														"referencedDeclaration": 73,
														"src": "1493:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1493:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 37,
												"id": 43,
												"nodeType": "Return",
												"src": "1486:50:0"
											}
										]
									},
									"documentation": {
										"id": 29,
										"nodeType": "StructuredDocumentation",
										"src": "1133:269:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 45,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 45,
												"src": "1421:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1421:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 45,
												"src": "1432:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 32,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1432:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1420:22:0"
									},
									"returnParameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 45,
												"src": "1466:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1466:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1465:9:0"
									},
									"scope": 268,
									"src": "1408:136:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 72,
										"nodeType": "Block",
										"src": "1976:97:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 58,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 50,
																"src": "1995:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 59,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 48,
																"src": "2000:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1995:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 61,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 52,
															"src": "2003:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 57,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1987:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1987:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 63,
												"nodeType": "ExpressionStatement",
												"src": "1987:29:0"
											},
											{
												"assignments": [
													65
												],
												"declarations": [
													{
														"constant": false,
														"id": 65,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 72,
														"src": "2027:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 64,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2027:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 69,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 66,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "2039:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 67,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "2043:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2039:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2027:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 70,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 65,
													"src": "2064:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 56,
												"id": 71,
												"nodeType": "Return",
												"src": "2057:8:0"
											}
										]
									},
									"documentation": {
										"id": 46,
										"nodeType": "StructuredDocumentation",
										"src": "1552:289:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 73,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 73,
												"src": "1870:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 47,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 73,
												"src": "1890:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1890:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 73,
												"src": "1910:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 51,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1910:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1859:84:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 73,
												"src": "1967:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1967:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1966:9:0"
									},
									"scope": 268,
									"src": "1847:226:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "2399:404:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 83,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "2635:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 84,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2640:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2635:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 89,
												"nodeType": "IfStatement",
												"src": "2631:47:0",
												"trueBody": {
													"id": 88,
													"nodeType": "Block",
													"src": "2643:35:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 86,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2665:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 82,
															"id": 87,
															"nodeType": "Return",
															"src": "2658:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													91
												],
												"declarations": [
													{
														"constant": false,
														"id": 91,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 107,
														"src": "2690:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 90,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2690:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 95,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 92,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "2702:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 93,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 78,
														"src": "2706:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2702:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2690:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 99,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 97,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 91,
																	"src": "2726:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 98,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 76,
																	"src": "2730:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2726:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 100,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 78,
																"src": "2735:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2726:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2738:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 96,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2718:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2718:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2718:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 105,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 91,
													"src": "2794:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 82,
												"id": 106,
												"nodeType": "Return",
												"src": "2787:8:0"
											}
										]
									},
									"documentation": {
										"id": 74,
										"nodeType": "StructuredDocumentation",
										"src": "2081:245:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 108,
												"src": "2345:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2345:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 108,
												"src": "2356:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 77,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2356:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2344:22:0"
									},
									"returnParameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 108,
												"src": "2390:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 80,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2390:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2389:9:0"
									},
									"scope": 268,
									"src": "2332:471:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "3346:65:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 119,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "3368:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 120,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "3371:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3374:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 118,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															125,
															153
														],
														"referencedDeclaration": 153,
														"src": "3364:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3364:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 117,
												"id": 123,
												"nodeType": "Return",
												"src": "3357:46:0"
											}
										]
									},
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "2811:462:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 125,
												"src": "3292:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3292:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 125,
												"src": "3303:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3291:22:0"
									},
									"returnParameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 125,
												"src": "3337:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3337:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3336:9:0"
									},
									"scope": 268,
									"src": "3279:132:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 152,
										"nodeType": "Block",
										"src": "4036:183:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 138,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 130,
																"src": "4055:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 139,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4059:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4055:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 141,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "4062:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 137,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4047:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4047:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "4047:28:0"
											},
											{
												"assignments": [
													145
												],
												"declarations": [
													{
														"constant": false,
														"id": 145,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 152,
														"src": "4086:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 144,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4086:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 149,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 146,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4098:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 147,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "4102:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4098:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4086:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 150,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 145,
													"src": "4210:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 136,
												"id": 151,
												"nodeType": "Return",
												"src": "4203:8:0"
											}
										]
									},
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "3419:482:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 153,
												"src": "3930:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3930:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 153,
												"src": "3950:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3950:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 153,
												"src": "3970:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 131,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3970:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3919:84:0"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 153,
												"src": "4027:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4027:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4026:9:0"
									},
									"scope": 268,
									"src": "3907:312:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 169,
										"nodeType": "Block",
										"src": "4751:63:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 164,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 156,
															"src": "4773:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 165,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "4776:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 166,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4779:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 163,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															170,
															194
														],
														"referencedDeclaration": 194,
														"src": "4769:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4769:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 162,
												"id": 168,
												"nodeType": "Return",
												"src": "4762:44:0"
											}
										]
									},
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "4227:451:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 170,
												"src": "4697:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4697:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 170,
												"src": "4708:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4708:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4696:22:0"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 170,
												"src": "4742:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4742:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4741:9:0"
									},
									"scope": 268,
									"src": "4684:130:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 193,
										"nodeType": "Block",
										"src": "5428:71:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 183,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 175,
																"src": "5447:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 184,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5452:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5447:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 186,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "5455:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 182,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5439:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5439:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "5439:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 189,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "5486:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 190,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "5490:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5486:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 181,
												"id": 192,
												"nodeType": "Return",
												"src": "5479:12:0"
											}
										]
									},
									"documentation": {
										"id": 171,
										"nodeType": "StructuredDocumentation",
										"src": "4822:471:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 194,
												"src": "5322:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5322:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 194,
												"src": "5342:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 194,
												"src": "5362:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 176,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5311:84:0"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 194,
												"src": "5419:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5418:9:0"
									},
									"scope": 268,
									"src": "5299:200:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "5576:36:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 203,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 201,
														"src": "5587:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 204,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 196,
																"src": "5591:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 205,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 198,
																"src": "5595:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5591:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"argumentTypes": null,
															"id": 208,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5603:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 209,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "5591:13:0",
														"trueExpression": {
															"argumentTypes": null,
															"id": 207,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "5599:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5587:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "5587:17:0"
											}
										]
									},
									"documentation": null,
									"id": 213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 213,
												"src": "5520:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5520:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 213,
												"src": "5531:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5531:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5519:22:0"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 213,
												"src": "5565:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5565:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5564:11:0"
									},
									"scope": 268,
									"src": "5507:105:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "5789:253:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 220,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 215,
														"src": "5804:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "33",
														"id": 221,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5808:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "5804:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 258,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 256,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "5995:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6000:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5995:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 264,
													"nodeType": "IfStatement",
													"src": "5991:44:0",
													"trueBody": {
														"id": 263,
														"nodeType": "Block",
														"src": "6003:32:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 259,
																		"name": "z",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 218,
																		"src": "6018:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 260,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6022:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "6018:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 262,
																"nodeType": "ExpressionStatement",
																"src": "6018:5:0"
															}
														]
													}
												},
												"id": 265,
												"nodeType": "IfStatement",
												"src": "5800:235:0",
												"trueBody": {
													"id": 255,
													"nodeType": "Block",
													"src": "5811:174:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 225,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 223,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 218,
																	"src": "5826:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 224,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "5830:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5826:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 226,
															"nodeType": "ExpressionStatement",
															"src": "5826:5:0"
														},
														{
															"assignments": [
																228
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 228,
																	"mutability": "mutable",
																	"name": "x",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 255,
																	"src": "5846:9:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 227,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5846:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 234,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 229,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 215,
																		"src": "5858:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5862:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "5858:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5866:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "5858:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5846:21:0"
														},
														{
															"body": {
																"id": 253,
																"nodeType": "Block",
																"src": "5896:78:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 240,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 238,
																				"name": "z",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 218,
																				"src": "5915:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"id": 239,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 228,
																				"src": "5919:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5915:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 241,
																		"nodeType": "ExpressionStatement",
																		"src": "5915:5:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 251,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 242,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 228,
																				"src": "5939:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 250,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"components": [
																						{
																							"argumentTypes": null,
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 247,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"argumentTypes": null,
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 245,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"argumentTypes": null,
																									"id": 243,
																									"name": "y",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 215,
																									"src": "5944:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "/",
																								"rightExpression": {
																									"argumentTypes": null,
																									"id": 244,
																									"name": "x",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 228,
																									"src": "5948:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "5944:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"argumentTypes": null,
																								"id": 246,
																								"name": "x",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 228,
																								"src": "5952:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "5944:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 248,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "5943:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "32",
																					"id": 249,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5957:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "5943:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5939:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 252,
																		"nodeType": "ExpressionStatement",
																		"src": "5939:19:0"
																	}
																]
															},
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 235,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 228,
																	"src": "5889:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 236,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 218,
																	"src": "5893:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5889:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 254,
															"nodeType": "WhileStatement",
															"src": "5882:92:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 267,
												"src": "5744:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5744:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5743:11:0"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 267,
												"src": "5778:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5778:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5777:11:0"
									},
									"scope": 268,
									"src": "5730:312:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1325,
							"src": "681:5364:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 367,
							"linearizedBaseContracts": [
								367
							],
							"name": "IBEP20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "6078:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 274,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6172:2:0"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 274,
												"src": "6198:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6198:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6197:9:0"
									},
									"scope": 367,
									"src": "6152:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 275,
										"nodeType": "StructuredDocumentation",
										"src": "6215:53:0",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 280,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6291:2:0"
									},
									"returnParameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 280,
												"src": "6317:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 277,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6317:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6316:7:0"
									},
									"scope": 367,
									"src": "6274:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 281,
										"nodeType": "StructuredDocumentation",
										"src": "6332:51:0",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 286,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6404:2:0"
									},
									"returnParameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 286,
												"src": "6430:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 283,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6430:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6429:15:0"
									},
									"scope": 367,
									"src": "6389:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "6453:49:0",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 292,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6521:2:0"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 292,
												"src": "6547:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 289,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6547:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6546:15:0"
									},
									"scope": 367,
									"src": "6508:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "6570:54:0",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 298,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6647:2:0"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 298,
												"src": "6673:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6673:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6672:9:0"
									},
									"scope": 367,
									"src": "6630:52:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "6690:74:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 306,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 306,
												"src": "6789:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6789:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6788:17:0"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 306,
												"src": "6829:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6829:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6828:9:0"
									},
									"scope": 367,
									"src": "6770:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 307,
										"nodeType": "StructuredDocumentation",
										"src": "6846:215:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 316,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 316,
												"src": "7085:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7085:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 316,
												"src": "7104:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7104:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7084:35:0"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 316,
												"src": "7138:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 313,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7138:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7137:6:0"
									},
									"scope": 367,
									"src": "7067:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 317,
										"nodeType": "StructuredDocumentation",
										"src": "7152:270:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 326,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 326,
												"src": "7447:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 326,
												"src": "7463:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7463:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7446:33:0"
									},
									"returnParameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 326,
												"src": "7503:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7503:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7502:9:0"
									},
									"scope": 367,
									"src": "7428:84:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "7520:655:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 336,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 336,
												"src": "8198:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8198:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 336,
												"src": "8215:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8215:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8197:33:0"
									},
									"returnParameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 336,
												"src": "8249:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 333,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8249:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8248:6:0"
									},
									"scope": 367,
									"src": "8181:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "8263:304:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 348,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 348,
												"src": "8605:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8605:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 348,
												"src": "8630:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8630:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 348,
												"src": "8658:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8658:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8594:85:0"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 348,
												"src": "8698:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 345,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8698:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8697:6:0"
									},
									"scope": 367,
									"src": "8573:131:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "8712:163:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 357,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 357,
												"src": "8896:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8896:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 357,
												"src": "8918:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8918:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 357,
												"src": "8938:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8938:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8895:57:0"
									},
									"src": "8881:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "8961:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 366,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 366,
												"src": "9133:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9133:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 366,
												"src": "9156:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9156:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 366,
												"src": "9181:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9181:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9132:63:0"
									},
									"src": "9118:78:0"
								}
							],
							"scope": 1325,
							"src": "6054:3145:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 368,
								"nodeType": "StructuredDocumentation",
								"src": "9208:69:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 569,
							"linearizedBaseContracts": [
								569
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 393,
										"nodeType": "Block",
										"src": "9955:575:0",
										"statements": [
											{
												"assignments": [
													377
												],
												"declarations": [
													{
														"constant": false,
														"id": 377,
														"mutability": "mutable",
														"name": "codehash",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 393,
														"src": "10211:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 376,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "10211:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 378,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "10211:16:0"
											},
											{
												"assignments": [
													380
												],
												"declarations": [
													{
														"constant": false,
														"id": 380,
														"mutability": "mutable",
														"name": "accountHash",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 393,
														"src": "10238:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 379,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "10238:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 382,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "307863356432343630313836663732333363393237653764623264636337303363306535303062363533636138323237336237626661643830343564383561343730",
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10260:66:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_89477152217924674838424037953991966239322087453347756267410168184682657981552_by_1",
														"typeString": "int_const 8947...(69 digits omitted)...1552"
													},
													"value": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10238:88:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "10403:58:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10418:32:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "10442:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodehash",
																	"nodeType": "YulIdentifier",
																	"src": "10430:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "10430:20:0"
															},
															"variableNames": [
																{
																	"name": "codehash",
																	"nodeType": "YulIdentifier",
																	"src": "10418:8:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 371,
														"isOffset": false,
														"isSlot": false,
														"src": "10442:7:0",
														"valueSize": 1
													},
													{
														"declaration": 377,
														"isOffset": false,
														"isSlot": false,
														"src": "10418:8:0",
														"valueSize": 1
													}
												],
												"id": 383,
												"nodeType": "InlineAssembly",
												"src": "10394:67:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 386,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 384,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 377,
																	"src": "10479:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 385,
																	"name": "accountHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 380,
																	"src": "10491:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "10479:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 389,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 387,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 377,
																	"src": "10506:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "307830",
																	"id": 388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10518:3:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0x0"
																},
																"src": "10506:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "10479:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 391,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "10478:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 375,
												"id": 392,
												"nodeType": "Return",
												"src": "10471:51:0"
											}
										]
									},
									"documentation": {
										"id": 369,
										"nodeType": "StructuredDocumentation",
										"src": "9302:581:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 394,
												"src": "9909:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9909:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9908:17:0"
									},
									"returnParameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 394,
												"src": "9949:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 373,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9949:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9948:6:0"
									},
									"scope": 569,
									"src": "9889:641:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "11536:324:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 405,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "11563:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$569",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$569",
																				"typeString": "library Address"
																			}
																		],
																		"id": 404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "11555:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 403,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "11555:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11555:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "11555:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 408,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 399,
																"src": "11580:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11555:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11588:31:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 402,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "11547:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11547:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 412,
												"nodeType": "ExpressionStatement",
												"src": "11547:73:0"
											},
											{
												"assignments": [
													414,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 414,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 427,
														"src": "11712:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 413,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "11712:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 421,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11760:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 415,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 397,
																"src": "11730:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "11730:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 418,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 417,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 399,
																"src": "11752:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "11730:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11730:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11711:52:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 423,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "11782:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11791:60:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 422,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "11774:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11774:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 426,
												"nodeType": "ExpressionStatement",
												"src": "11774:78:0"
											}
										]
									},
									"documentation": {
										"id": 395,
										"nodeType": "StructuredDocumentation",
										"src": "10538:921:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 428,
												"src": "11484:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11484:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 428,
												"src": "11511:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11511:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11483:43:0"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11536:0:0"
									},
									"scope": 569,
									"src": "11465:395:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "12710:86:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 439,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "12741:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 440,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 433,
															"src": "12749:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12755:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 438,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															445,
															465
														],
														"referencedDeclaration": 465,
														"src": "12728:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12728:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 437,
												"id": 443,
												"nodeType": "Return",
												"src": "12721:67:0"
											}
										]
									},
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "11868:747:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 445,
												"src": "12643:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12643:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 445,
												"src": "12659:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 432,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12659:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12642:35:0"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 445,
												"src": "12696:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 435,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12696:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12695:14:0"
									},
									"scope": 569,
									"src": "12621:175:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 464,
										"nodeType": "Block",
										"src": "13177:79:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 458,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "13218:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 459,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "13226:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13232:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"id": 461,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "13235:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 457,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "13195:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13195:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 456,
												"id": 463,
												"nodeType": "Return",
												"src": "13188:60:0"
											}
										]
									},
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "12804:216:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 465,
												"src": "13058:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13058:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 465,
												"src": "13083:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 449,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13083:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 465,
												"src": "13111:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 451,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13111:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13047:97:0"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 465,
												"src": "13163:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 454,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13163:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13162:14:0"
									},
									"scope": 569,
									"src": "13026:230:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "13778:113:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 478,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "13818:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 479,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "13826:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 480,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "13832:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13839:43:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 477,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															485,
															518
														],
														"referencedDeclaration": 518,
														"src": "13796:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13796:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 476,
												"id": 483,
												"nodeType": "Return",
												"src": "13789:94:0"
											}
										]
									},
									"documentation": {
										"id": 466,
										"nodeType": "StructuredDocumentation",
										"src": "13264:361:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 485,
												"src": "13672:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13672:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 485,
												"src": "13697:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 469,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13697:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 485,
												"src": "13725:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13725:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13661:84:0"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 485,
												"src": "13764:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 474,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13764:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13763:14:0"
									},
									"scope": 569,
									"src": "13631:260:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 517,
										"nodeType": "Block",
										"src": "14331:175:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 502,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "14358:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$569",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$569",
																				"typeString": "library Address"
																			}
																		],
																		"id": 501,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "14350:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 500,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "14350:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14350:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 504,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "14350:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 505,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 492,
																"src": "14375:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14350:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14382:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 499,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "14342:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14342:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 509,
												"nodeType": "ExpressionStatement",
												"src": "14342:81:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 511,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 488,
															"src": "14464:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 512,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "14472:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 513,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "14478:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 514,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "14485:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 510,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "14441:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14441:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 498,
												"id": 516,
												"nodeType": "Return",
												"src": "14434:64:0"
											}
										]
									},
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "13899:242:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 518,
												"src": "14188:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14188:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 518,
												"src": "14213:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 489,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14213:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 518,
												"src": "14241:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14241:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 518,
												"src": "14265:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 493,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "14265:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14177:121:0"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 518,
												"src": "14317:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 496,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14317:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14316:14:0"
									},
									"scope": 569,
									"src": "14147:359:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 567,
										"nodeType": "Block",
										"src": "14701:833:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 533,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 520,
																	"src": "14731:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 532,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 394,
																"src": "14720:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14720:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 535,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14740:31:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 531,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "14712:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14712:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 537,
												"nodeType": "ExpressionStatement",
												"src": "14712:60:0"
											},
											{
												"assignments": [
													539,
													541
												],
												"declarations": [
													{
														"constant": false,
														"id": 539,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 567,
														"src": "14846:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 538,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "14846:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 541,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 567,
														"src": "14860:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 540,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "14860:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 548,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 546,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "14916:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 542,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 520,
																"src": "14887:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "14887:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 545,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 544,
																"name": "weiValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 524,
																"src": "14906:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "14887:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14887:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14845:76:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 549,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 539,
													"src": "14936:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 565,
													"nodeType": "Block",
													"src": "14995:532:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 556,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 553,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 541,
																		"src": "15081:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "15081:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 555,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15101:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "15081:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 563,
																"nodeType": "Block",
																"src": "15461:55:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 560,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 526,
																					"src": "15487:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 559,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "15480:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 561,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15480:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 562,
																		"nodeType": "ExpressionStatement",
																		"src": "15480:20:0"
																	}
																]
															},
															"id": 564,
															"nodeType": "IfStatement",
															"src": "15077:439:0",
															"trueBody": {
																"id": 558,
																"nodeType": "Block",
																"src": "15104:351:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "15292:148:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "15315:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "15344:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "15338:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15338:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "15319:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "15388:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "15392:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "15384:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "15384:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "15405:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "15377:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15377:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "15377:44:0"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 541,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "15344:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 541,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "15392:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 557,
																		"nodeType": "InlineAssembly",
																		"src": "15283:157:0"
																	}
																]
															}
														}
													]
												},
												"id": 566,
												"nodeType": "IfStatement",
												"src": "14932:595:0",
												"trueBody": {
													"id": 552,
													"nodeType": "Block",
													"src": "14945:44:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 550,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 541,
																"src": "14967:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 530,
															"id": 551,
															"nodeType": "Return",
															"src": "14960:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 568,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 568,
												"src": "14556:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14556:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 568,
												"src": "14581:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 521,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14581:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "weiValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 568,
												"src": "14609:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14609:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 568,
												"src": "14636:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 525,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "14636:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14545:124:0"
									},
									"returnParameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 568,
												"src": "14687:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 528,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14687:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14686:14:0"
									},
									"scope": 569,
									"src": "14514:1020:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1325,
							"src": "9279:6258:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 570,
								"nodeType": "StructuredDocumentation",
								"src": "15546:465:0",
								"text": " @title SafeBEP20\n @dev Wrappers around BEP20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeBEP20 for IBEP20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 777,
							"linearizedBaseContracts": [
								777
							],
							"name": "SafeBEP20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 573,
									"libraryName": {
										"contractScope": null,
										"id": 571,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 268,
										"src": "16044:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$268",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "16038:27:0",
									"typeName": {
										"id": 572,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "16057:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 576,
									"libraryName": {
										"contractScope": null,
										"id": 574,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 569,
										"src": "16077:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$569",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "16071:26:0",
									"typeName": {
										"id": 575,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "16089:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 597,
										"nodeType": "Block",
										"src": "16211:105:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 586,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "16242:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$367",
																"typeString": "contract IBEP20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 589,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 578,
																			"src": "16272:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$367",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 590,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 316,
																		"src": "16272:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 591,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "16272:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 592,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "16297:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 593,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 582,
																	"src": "16301:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 587,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "16249:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 588,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "16249:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16249:58:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$367",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 585,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 776,
														"src": "16222:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$367_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16222:86:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 596,
												"nodeType": "ExpressionStatement",
												"src": "16222:86:0"
											}
										]
									},
									"documentation": null,
									"id": 598,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 598,
												"src": "16137:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$367",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 577,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 367,
													"src": "16137:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$367",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 598,
												"src": "16160:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16160:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 598,
												"src": "16181:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16181:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16126:75:0"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16211:0:0"
									},
									"scope": 777,
									"src": "16105:211:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 622,
										"nodeType": "Block",
										"src": "16457:115:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 610,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "16488:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$367",
																"typeString": "contract IBEP20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 613,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 600,
																			"src": "16518:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$367",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 614,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 348,
																		"src": "16518:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 615,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "16518:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 616,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 602,
																	"src": "16547:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 617,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 604,
																	"src": "16553:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 618,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 606,
																	"src": "16557:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 611,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "16495:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 612,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "16495:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16495:68:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$367",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 609,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 776,
														"src": "16468:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$367_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16468:96:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 621,
												"nodeType": "ExpressionStatement",
												"src": "16468:96:0"
											}
										]
									},
									"documentation": null,
									"id": 623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 623,
												"src": "16360:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$367",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 599,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 367,
													"src": "16360:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$367",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 623,
												"src": "16383:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16383:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 623,
												"src": "16406:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16406:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 623,
												"src": "16427:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16427:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16349:98:0"
									},
									"returnParameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16457:0:0"
									},
									"scope": 777,
									"src": "16324:248:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 665,
										"nodeType": "Block",
										"src": "16951:560:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 636,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 634,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 630,
																			"src": "17259:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 635,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17268:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "17259:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 637,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "17258:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 642,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": -28,
																							"src": "17299:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeBEP20_$777",
																								"typeString": "library SafeBEP20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeBEP20_$777",
																								"typeString": "library SafeBEP20"
																							}
																						],
																						"id": 641,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "17291:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 640,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "17291:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					},
																					"id": 643,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "17291:13:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 644,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 628,
																					"src": "17306:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 638,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 626,
																					"src": "17275:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IBEP20_$367",
																						"typeString": "contract IBEP20"
																					}
																				},
																				"id": 639,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 326,
																				"src": "17275:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 645,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17275:39:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17318:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "17275:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 648,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "17274:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "17258:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666542455032303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17335:56:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_91a9bac926ceb306224f4766a09b4f2ef09ebf6b62503a939a3d65e9ddb75b06",
																"typeString": "literal_string \"SafeBEP20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeBEP20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_91a9bac926ceb306224f4766a09b4f2ef09ebf6b62503a939a3d65e9ddb75b06",
																"typeString": "literal_string \"SafeBEP20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 633,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "17236:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17236:166:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 652,
												"nodeType": "ExpressionStatement",
												"src": "17236:166:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 654,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "17433:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$367",
																"typeString": "contract IBEP20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 657,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 626,
																			"src": "17463:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$367",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 658,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 336,
																		"src": "17463:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 659,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "17463:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 660,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 628,
																	"src": "17487:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 661,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 630,
																	"src": "17496:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 655,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "17440:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 656,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "17440:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17440:62:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$367",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 653,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 776,
														"src": "17413:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$367_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17413:90:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 664,
												"nodeType": "ExpressionStatement",
												"src": "17413:90:0"
											}
										]
									},
									"documentation": {
										"id": 624,
										"nodeType": "StructuredDocumentation",
										"src": "16580:255:0",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IBEP20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 666,
												"src": "16872:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$367",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 625,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 367,
													"src": "16872:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$367",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 666,
												"src": "16895:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16895:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 666,
												"src": "16921:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16921:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16861:80:0"
									},
									"returnParameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16951:0:0"
									},
									"scope": 777,
									"src": "16841:670:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "17639:200:0",
										"statements": [
											{
												"assignments": [
													676
												],
												"declarations": [
													{
														"constant": false,
														"id": 676,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 701,
														"src": "17650:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 675,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17650:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 688,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 686,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "17717:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 681,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "17697:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeBEP20_$777",
																				"typeString": "library SafeBEP20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeBEP20_$777",
																				"typeString": "library SafeBEP20"
																			}
																		],
																		"id": 680,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "17689:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 679,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "17689:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17689:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 683,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 670,
																	"src": "17704:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 677,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 668,
																	"src": "17673:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$367",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 678,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 326,
																"src": "17673:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17673:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 685,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 28,
														"src": "17673:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17673:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17650:73:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 690,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "17754:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$367",
																"typeString": "contract IBEP20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 693,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 668,
																			"src": "17784:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$367",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 694,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 336,
																		"src": "17784:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "17784:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 696,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 670,
																	"src": "17808:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 697,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 676,
																	"src": "17817:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 691,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "17761:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "17761:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17761:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$367",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 689,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 776,
														"src": "17734:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$367_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17734:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 700,
												"nodeType": "ExpressionStatement",
												"src": "17734:97:0"
											}
										]
									},
									"documentation": null,
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 702,
												"src": "17560:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$367",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 667,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 367,
													"src": "17560:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$367",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 702,
												"src": "17583:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17583:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 702,
												"src": "17609:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17609:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17549:80:0"
									},
									"returnParameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17639:0:0"
									},
									"scope": 777,
									"src": "17519:320:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 738,
										"nodeType": "Block",
										"src": "17967:282:0",
										"statements": [
											{
												"assignments": [
													712
												],
												"declarations": [
													{
														"constant": false,
														"id": 712,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 738,
														"src": "17978:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 711,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17978:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 725,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 722,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "18059:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18079:43:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d8b0d004f76517d0accc4049600ccad745ed1cf03a0a544bc57f891c9ae38a3",
																"typeString": "literal_string \"SafeBEP20: decreased allowance below zero\""
															},
															"value": "SafeBEP20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_8d8b0d004f76517d0accc4049600ccad745ed1cf03a0a544bc57f891c9ae38a3",
																"typeString": "literal_string \"SafeBEP20: decreased allowance below zero\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 717,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "18025:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeBEP20_$777",
																				"typeString": "library SafeBEP20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeBEP20_$777",
																				"typeString": "library SafeBEP20"
																			}
																		],
																		"id": 716,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "18017:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 715,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "18017:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18017:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 719,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 706,
																	"src": "18032:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 713,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 704,
																	"src": "18001:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$367",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 714,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 326,
																"src": "18001:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18001:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 73,
														"src": "18001:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18001:132:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17978:155:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 727,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 704,
															"src": "18164:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$367",
																"typeString": "contract IBEP20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 730,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 704,
																			"src": "18194:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$367",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 336,
																		"src": "18194:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 732,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "18194:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 733,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 706,
																	"src": "18218:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 734,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 712,
																	"src": "18227:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 728,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "18171:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 729,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "18171:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18171:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$367",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 726,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 776,
														"src": "18144:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$367_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18144:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 737,
												"nodeType": "ExpressionStatement",
												"src": "18144:97:0"
											}
										]
									},
									"documentation": null,
									"id": 739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 739,
												"src": "17888:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$367",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 703,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 367,
													"src": "17888:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$367",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 739,
												"src": "17911:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17911:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 739,
												"src": "17937:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17937:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17877:80:0"
									},
									"returnParameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17967:0:0"
									},
									"scope": 777,
									"src": "17847:402:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "18710:704:0",
										"statements": [
											{
												"assignments": [
													748
												],
												"declarations": [
													{
														"constant": false,
														"id": 748,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 775,
														"src": "19064:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 747,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "19064:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 757,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 754,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "19118:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 755,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19124:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e357ac51478c37023e9e7ad13e9d6e33f2ac0566d41923020f1a6b2e7a541c3e",
																"typeString": "literal_string \"SafeBEP20: low-level call failed\""
															},
															"value": "SafeBEP20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_e357ac51478c37023e9e7ad13e9d6e33f2ac0566d41923020f1a6b2e7a541c3e",
																"typeString": "literal_string \"SafeBEP20: low-level call failed\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 751,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "19098:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$367",
																		"typeString": "contract IBEP20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IBEP20_$367",
																		"typeString": "contract IBEP20"
																	}
																],
																"id": 750,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19090:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 749,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19090:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19090:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 753,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 465,
														"src": "19090:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19090:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19064:95:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 758,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "19174:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 759,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "19174:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 760,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19194:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "19174:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 774,
												"nodeType": "IfStatement",
												"src": "19170:237:0",
												"trueBody": {
													"id": 773,
													"nodeType": "Block",
													"src": "19197:210:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 765,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 748,
																				"src": "19329:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"id": 767,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "19342:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 766,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "19342:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					}
																				],
																				"id": 768,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "19341:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 763,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -1,
																				"src": "19318:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 764,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "19318:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 769,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19318:30:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "5361666542455032303a204245503230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 770,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19350:44:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																			"typeString": "literal_string \"SafeBEP20: BEP20 operation did not succeed\""
																		},
																		"value": "SafeBEP20: BEP20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																			"typeString": "literal_string \"SafeBEP20: BEP20 operation did not succeed\""
																		}
																	],
																	"id": 762,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "19310:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 771,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19310:85:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 772,
															"nodeType": "ExpressionStatement",
															"src": "19310:85:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 740,
										"nodeType": "StructuredDocumentation",
										"src": "18257:377:0",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 776,
												"src": "18669:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$367",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 741,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 367,
													"src": "18669:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$367",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 776,
												"src": "18683:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 743,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18683:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18668:33:0"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18710:0:0"
									},
									"scope": 777,
									"src": "18640:774:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1325,
							"src": "16013:3404:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1324,
							"linearizedBaseContracts": [
								1324
							],
							"name": "SousChef",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 780,
									"libraryName": {
										"contractScope": null,
										"id": 778,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 268,
										"src": "19604:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$268",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "19598:27:0",
									"typeName": {
										"id": 779,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "19617:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 783,
									"libraryName": {
										"contractScope": null,
										"id": 781,
										"name": "SafeBEP20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 777,
										"src": "19637:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeBEP20_$777",
											"typeString": "library SafeBEP20"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "19631:27:0",
									"typeName": {
										"contractScope": null,
										"id": 782,
										"name": "IBEP20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 367,
										"src": "19651:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$367",
											"typeString": "contract IBEP20"
										}
									}
								},
								{
									"canonicalName": "SousChef.UserInfo",
									"id": 790,
									"members": [
										{
											"constant": false,
											"id": 785,
											"mutability": "mutable",
											"name": "amount",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 790,
											"src": "19720:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 784,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "19720:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 787,
											"mutability": "mutable",
											"name": "rewardDebt",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 790,
											"src": "19745:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 786,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "19745:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 789,
											"mutability": "mutable",
											"name": "rewardPending",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 790,
											"src": "19774:21:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 788,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "19774:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "UserInfo",
									"nodeType": "StructDefinition",
									"scope": 1324,
									"src": "19693:110:0",
									"visibility": "public"
								},
								{
									"canonicalName": "SousChef.PoolInfo",
									"id": 795,
									"members": [
										{
											"constant": false,
											"id": 792,
											"mutability": "mutable",
											"name": "lastRewardBlock",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 795,
											"src": "19859:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 791,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "19859:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 794,
											"mutability": "mutable",
											"name": "accRewardPerShare",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 795,
											"src": "19949:25:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 793,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "19949:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "PoolInfo",
									"nodeType": "StructDefinition",
									"scope": 1324,
									"src": "19832:206:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "86a952c4",
									"id": 797,
									"mutability": "mutable",
									"name": "syrup",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1324,
									"src": "20071:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IBEP20_$367",
										"typeString": "contract IBEP20"
									},
									"typeName": {
										"contractScope": null,
										"id": 796,
										"name": "IBEP20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 367,
										"src": "20071:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$367",
											"typeString": "contract IBEP20"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8ae39cac",
									"id": 799,
									"mutability": "mutable",
									"name": "rewardPerBlock",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1324,
									"src": "20132:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 798,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "20132:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5a2f3d09",
									"id": 801,
									"mutability": "mutable",
									"name": "poolInfo",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1324,
									"src": "20184:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_PoolInfo_$795_storage",
										"typeString": "struct SousChef.PoolInfo"
									},
									"typeName": {
										"contractScope": null,
										"id": 800,
										"name": "PoolInfo",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 795,
										"src": "20184:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_PoolInfo_$795_storage_ptr",
											"typeString": "struct SousChef.PoolInfo"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1959a002",
									"id": 805,
									"mutability": "mutable",
									"name": "userInfo",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1324,
									"src": "20267:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$790_storage_$",
										"typeString": "mapping(address => struct SousChef.UserInfo)"
									},
									"typeName": {
										"id": 804,
										"keyType": {
											"id": 802,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "20276:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "20267:29:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$790_storage_$",
											"typeString": "mapping(address => struct SousChef.UserInfo)"
										},
										"valueType": {
											"contractScope": null,
											"id": 803,
											"name": "UserInfo",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 790,
											"src": "20287:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
												"typeString": "struct SousChef.UserInfo"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b810fb43",
									"id": 808,
									"mutability": "mutable",
									"name": "addressList",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1324,
									"src": "20344:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 806,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "20344:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 807,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "20344:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "48cd4cb1",
									"id": 810,
									"mutability": "mutable",
									"name": "startBlock",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1324,
									"src": "20426:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 809,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "20426:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1aed6553",
									"id": 812,
									"mutability": "mutable",
									"name": "bonusEndBlock",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1324,
									"src": "20501:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 811,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "20501:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 818,
									"name": "Deposit",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 818,
												"src": "20552:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20552:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 818,
												"src": "20574:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 815,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20574:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20551:38:0"
									},
									"src": "20538:52:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 824,
									"name": "Withdraw",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 824,
												"src": "20611:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20611:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 822,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 824,
												"src": "20633:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20633:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20610:38:0"
									},
									"src": "20596:53:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 830,
									"name": "EmergencyWithdraw",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 830,
												"src": "20679:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20679:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 828,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 830,
												"src": "20701:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20701:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20678:38:0"
									},
									"src": "20655:62:0"
								},
								{
									"body": {
										"id": 864,
										"nodeType": "Block",
										"src": "20867:294:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 841,
														"name": "syrup",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 797,
														"src": "20878:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$367",
															"typeString": "contract IBEP20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 842,
														"name": "_syrup",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "20886:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$367",
															"typeString": "contract IBEP20"
														}
													},
													"src": "20878:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$367",
														"typeString": "contract IBEP20"
													}
												},
												"id": 844,
												"nodeType": "ExpressionStatement",
												"src": "20878:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 845,
														"name": "rewardPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "20903:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 846,
														"name": "_rewardPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "20920:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20903:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 848,
												"nodeType": "ExpressionStatement",
												"src": "20903:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 849,
														"name": "startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "20946:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 850,
														"name": "_startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 836,
														"src": "20959:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20946:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 852,
												"nodeType": "ExpressionStatement",
												"src": "20946:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 853,
														"name": "bonusEndBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "20981:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 854,
														"name": "_endBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 838,
														"src": "20997:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20981:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 856,
												"nodeType": "ExpressionStatement",
												"src": "20981:25:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 857,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 801,
														"src": "21044:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$795_storage",
															"typeString": "struct SousChef.PoolInfo storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 859,
																"name": "startBlock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 810,
																"src": "21096:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 860,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21140:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 858,
															"name": "PoolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "21055:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_PoolInfo_$795_storage_ptr_$",
																"typeString": "type(struct SousChef.PoolInfo storage pointer)"
															}
														},
														"id": 861,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [
															"lastRewardBlock",
															"accRewardPerShare"
														],
														"nodeType": "FunctionCall",
														"src": "21055:98:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$795_memory_ptr",
															"typeString": "struct SousChef.PoolInfo memory"
														}
													},
													"src": "21044:109:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$795_storage",
														"typeString": "struct SousChef.PoolInfo storage ref"
													}
												},
												"id": 863,
												"nodeType": "ExpressionStatement",
												"src": "21044:109:0"
											}
										]
									},
									"documentation": null,
									"id": 865,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "_syrup",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 865,
												"src": "20747:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$367",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 831,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 367,
													"src": "20747:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$367",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "_rewardPerBlock",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 865,
												"src": "20771:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20771:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "_startBlock",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 865,
												"src": "20805:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20805:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "_endBlock",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 865,
												"src": "20835:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20835:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20736:123:0"
									},
									"returnParameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20867:0:0"
									},
									"scope": 1324,
									"src": "20725:436:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 873,
										"nodeType": "Block",
										"src": "21226:44:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 870,
														"name": "addressList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 808,
														"src": "21244:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "21244:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 869,
												"id": 872,
												"nodeType": "Return",
												"src": "21237:25:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "dc881888",
									"id": 874,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addressLength",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21191:2:0"
									},
									"returnParameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 874,
												"src": "21217:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21217:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21216:9:0"
									},
									"scope": 1324,
									"src": "21169:101:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 906,
										"nodeType": "Block",
										"src": "21429:225:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 883,
														"name": "_to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "21444:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 884,
														"name": "bonusEndBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "21451:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21444:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 894,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 892,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "21524:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 893,
															"name": "bonusEndBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 812,
															"src": "21533:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "21524:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 903,
														"nodeType": "Block",
														"src": "21589:58:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 900,
																			"name": "_from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 876,
																			"src": "21629:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 898,
																			"name": "bonusEndBlock",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 812,
																			"src": "21611:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 899,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 45,
																		"src": "21611:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 901,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "21611:24:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 882,
																"id": 902,
																"nodeType": "Return",
																"src": "21604:31:0"
															}
														]
													},
													"id": 904,
													"nodeType": "IfStatement",
													"src": "21520:127:0",
													"trueBody": {
														"id": 897,
														"nodeType": "Block",
														"src": "21548:35:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 895,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21570:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"functionReturnParameters": 882,
																"id": 896,
																"nodeType": "Return",
																"src": "21563:8:0"
															}
														]
													}
												},
												"id": 905,
												"nodeType": "IfStatement",
												"src": "21440:207:0",
												"trueBody": {
													"id": 891,
													"nodeType": "Block",
													"src": "21466:48:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 888,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 876,
																		"src": "21496:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 886,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 878,
																		"src": "21488:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 887,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 45,
																	"src": "21488:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21488:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 882,
															"id": 890,
															"nodeType": "Return",
															"src": "21481:21:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 907,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMultiplier",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 907,
												"src": "21369:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21369:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 907,
												"src": "21384:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21384:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21368:28:0"
									},
									"returnParameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 907,
												"src": "21420:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 880,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21420:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21419:9:0"
									},
									"scope": 1324,
									"src": "21346:308:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 996,
										"nodeType": "Block",
										"src": "21789:666:0",
										"statements": [
											{
												"assignments": [
													915
												],
												"declarations": [
													{
														"constant": false,
														"id": 915,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 996,
														"src": "21800:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$795_storage_ptr",
															"typeString": "struct SousChef.PoolInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 914,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 795,
															"src": "21800:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$795_storage_ptr",
																"typeString": "struct SousChef.PoolInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 917,
												"initialValue": {
													"argumentTypes": null,
													"id": 916,
													"name": "poolInfo",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 801,
													"src": "21824:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$795_storage",
														"typeString": "struct SousChef.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21800:32:0"
											},
											{
												"assignments": [
													919
												],
												"declarations": [
													{
														"constant": false,
														"id": 919,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 996,
														"src": "21843:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
															"typeString": "struct SousChef.UserInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 918,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 790,
															"src": "21843:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																"typeString": "struct SousChef.UserInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 923,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 920,
														"name": "userInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "21867:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$790_storage_$",
															"typeString": "mapping(address => struct SousChef.UserInfo storage ref)"
														}
													},
													"id": 922,
													"indexExpression": {
														"argumentTypes": null,
														"id": 921,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "21876:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "21867:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$790_storage",
														"typeString": "struct SousChef.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21843:39:0"
											},
											{
												"assignments": [
													925
												],
												"declarations": [
													{
														"constant": false,
														"id": 925,
														"mutability": "mutable",
														"name": "accRewardPerShare",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 996,
														"src": "21893:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 924,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21893:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 928,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 926,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "21921:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$795_storage_ptr",
															"typeString": "struct SousChef.PoolInfo storage pointer"
														}
													},
													"id": 927,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "accRewardPerShare",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 794,
													"src": "21921:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21893:50:0"
											},
											{
												"assignments": [
													930
												],
												"declarations": [
													{
														"constant": false,
														"id": 930,
														"mutability": "mutable",
														"name": "stakedSupply",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 996,
														"src": "21954:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 929,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21954:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 938,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 935,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "22001:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SousChef_$1324",
																		"typeString": "contract SousChef"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SousChef_$1324",
																		"typeString": "contract SousChef"
																	}
																],
																"id": 934,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "21993:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 933,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "21993:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 936,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21993:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 931,
															"name": "syrup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "21977:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$367",
																"typeString": "contract IBEP20"
															}
														},
														"id": 932,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 306,
														"src": "21977:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21977:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21954:53:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 943,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 939,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "22022:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "22022:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 941,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 915,
																"src": "22037:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$795_storage_ptr",
																	"typeString": "struct SousChef.PoolInfo storage pointer"
																}
															},
															"id": 942,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lastRewardBlock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 792,
															"src": "22037:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "22022:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 946,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 944,
															"name": "stakedSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 930,
															"src": "22061:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 945,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22077:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "22061:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "22022:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 978,
												"nodeType": "IfStatement",
												"src": "22018:323:0",
												"trueBody": {
													"id": 977,
													"nodeType": "Block",
													"src": "22080:261:0",
													"statements": [
														{
															"assignments": [
																949
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 949,
																	"mutability": "mutable",
																	"name": "multiplier",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 977,
																	"src": "22095:18:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 948,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "22095:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 956,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 951,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "22130:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$795_storage_ptr",
																				"typeString": "struct SousChef.PoolInfo storage pointer"
																			}
																		},
																		"id": 952,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lastRewardBlock",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 792,
																		"src": "22130:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 953,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -4,
																			"src": "22152:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "22152:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 950,
																	"name": "getMultiplier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 907,
																	"src": "22116:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) view returns (uint256)"
																	}
																},
																"id": 955,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22116:49:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "22095:70:0"
														},
														{
															"assignments": [
																958
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 958,
																	"mutability": "mutable",
																	"name": "tokenReward",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 977,
																	"src": "22180:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 957,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "22180:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 963,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 961,
																		"name": "rewardPerBlock",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 799,
																		"src": "22217:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 959,
																		"name": "multiplier",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 949,
																		"src": "22202:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 960,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 108,
																	"src": "22202:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 962,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22202:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "22180:52:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 975,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 964,
																	"name": "accRewardPerShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 925,
																	"src": "22247:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 972,
																					"name": "stakedSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 930,
																					"src": "22315:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"hexValue": "31653132",
																							"id": 969,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "22305:4:0",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000000000000_by_1",
																								"typeString": "int_const 1000000000000"
																							},
																							"value": "1e12"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_1000000000000_by_1",
																								"typeString": "int_const 1000000000000"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"id": 967,
																							"name": "tokenReward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 958,
																							"src": "22289:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 968,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 108,
																						"src": "22289:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 970,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "22289:21:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 971,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 125,
																				"src": "22289:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 973,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "22289:39:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 965,
																			"name": "accRewardPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 925,
																			"src": "22267:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 966,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 28,
																		"src": "22267:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 974,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "22267:62:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22247:82:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 976,
															"nodeType": "ExpressionStatement",
															"src": "22247:82:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 992,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 919,
																"src": "22428:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																	"typeString": "struct SousChef.UserInfo storage pointer"
																}
															},
															"id": 993,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardPending",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 789,
															"src": "22428:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 988,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 919,
																		"src": "22407:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																			"typeString": "struct SousChef.UserInfo storage pointer"
																		}
																	},
																	"id": 989,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "rewardDebt",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 787,
																	"src": "22407:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "31653132",
																			"id": 985,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22397:4:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000_by_1",
																				"typeString": "int_const 1000000000000"
																			},
																			"value": "1e12"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000000000000_by_1",
																				"typeString": "int_const 1000000000000"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 982,
																					"name": "accRewardPerShare",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 925,
																					"src": "22374:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 979,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 919,
																						"src": "22358:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																							"typeString": "struct SousChef.UserInfo storage pointer"
																						}
																					},
																					"id": 980,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "amount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 785,
																					"src": "22358:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 981,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 108,
																				"src": "22358:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 983,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "22358:34:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 984,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 125,
																		"src": "22358:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 986,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "22358:44:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 987,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 45,
																"src": "22358:48:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 990,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22358:65:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 991,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 28,
														"src": "22358:69:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22358:89:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 913,
												"id": 995,
												"nodeType": "Return",
												"src": "22351:96:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "f40f0f52",
									"id": 997,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pendingReward",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 997,
												"src": "21742:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21742:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21741:15:0"
									},
									"returnParameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 997,
												"src": "21780:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21780:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21779:9:0"
									},
									"scope": 1324,
									"src": "21719:736:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1070,
										"nodeType": "Block",
										"src": "22560:589:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1000,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -4,
															"src": "22575:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1001,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "22575:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1002,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "22591:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$795_storage",
																"typeString": "struct SousChef.PoolInfo storage ref"
															}
														},
														"id": 1003,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "lastRewardBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 792,
														"src": "22591:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22575:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1007,
												"nodeType": "IfStatement",
												"src": "22571:79:0",
												"trueBody": {
													"id": 1006,
													"nodeType": "Block",
													"src": "22617:33:0",
													"statements": [
														{
															"expression": null,
															"functionReturnParameters": 999,
															"id": 1005,
															"nodeType": "Return",
															"src": "22632:7:0"
														}
													]
												}
											},
											{
												"assignments": [
													1009
												],
												"declarations": [
													{
														"constant": false,
														"id": 1009,
														"mutability": "mutable",
														"name": "syrupSupply",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1070,
														"src": "22660:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1008,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22660:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1017,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1014,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "22706:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SousChef_$1324",
																		"typeString": "contract SousChef"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SousChef_$1324",
																		"typeString": "contract SousChef"
																	}
																],
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "22698:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1012,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "22698:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22698:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1010,
															"name": "syrup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "22682:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$367",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1011,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 306,
														"src": "22682:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22682:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22660:52:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1018,
														"name": "syrupSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1009,
														"src": "22727:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1019,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "22742:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "22727:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1030,
												"nodeType": "IfStatement",
												"src": "22723:109:0",
												"trueBody": {
													"id": 1029,
													"nodeType": "Block",
													"src": "22745:87:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1026,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1021,
																		"name": "poolInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 801,
																		"src": "22760:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$795_storage",
																			"typeString": "struct SousChef.PoolInfo storage ref"
																		}
																	},
																	"id": 1023,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "lastRewardBlock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 792,
																	"src": "22760:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1024,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -4,
																		"src": "22787:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1025,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "22787:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22760:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1027,
															"nodeType": "ExpressionStatement",
															"src": "22760:39:0"
														},
														{
															"expression": null,
															"functionReturnParameters": 999,
															"id": 1028,
															"nodeType": "Return",
															"src": "22814:7:0"
														}
													]
												}
											},
											{
												"assignments": [
													1032
												],
												"declarations": [
													{
														"constant": false,
														"id": 1032,
														"mutability": "mutable",
														"name": "multiplier",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1070,
														"src": "22842:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1031,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22842:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1039,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1034,
																"name": "poolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 801,
																"src": "22877:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$795_storage",
																	"typeString": "struct SousChef.PoolInfo storage ref"
																}
															},
															"id": 1035,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lastRewardBlock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 792,
															"src": "22877:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1036,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "22903:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "22903:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1033,
														"name": "getMultiplier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "22863:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) view returns (uint256)"
														}
													},
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22863:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22842:74:0"
											},
											{
												"assignments": [
													1041
												],
												"declarations": [
													{
														"constant": false,
														"id": 1041,
														"mutability": "mutable",
														"name": "tokenReward",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1070,
														"src": "22927:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1040,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22927:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1046,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1044,
															"name": "rewardPerBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "22964:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1042,
															"name": "multiplier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "22949:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1043,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 108,
														"src": "22949:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22949:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22927:52:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1047,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "22992:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$795_storage",
																"typeString": "struct SousChef.PoolInfo storage ref"
															}
														},
														"id": 1049,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "accRewardPerShare",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 794,
														"src": "22992:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1058,
																		"name": "syrupSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1009,
																		"src": "23078:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "31653132",
																				"id": 1055,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "23068:4:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				},
																				"value": "1e12"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 1053,
																				"name": "tokenReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1041,
																				"src": "23052:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1054,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 108,
																			"src": "23052:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1056,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "23052:21:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1057,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 125,
																	"src": "23052:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1059,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23052:38:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1050,
																	"name": "poolInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 801,
																	"src": "23021:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$795_storage",
																		"typeString": "struct SousChef.PoolInfo storage ref"
																	}
																},
																"id": 1051,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "accRewardPerShare",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 794,
																"src": "23021:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1052,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 28,
															"src": "23021:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1060,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23021:70:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22992:99:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1062,
												"nodeType": "ExpressionStatement",
												"src": "22992:99:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1063,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "23102:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$795_storage",
																"typeString": "struct SousChef.PoolInfo storage ref"
															}
														},
														"id": 1065,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastRewardBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 792,
														"src": "23102:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1066,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -4,
															"src": "23129:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1067,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "23129:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23102:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1069,
												"nodeType": "ExpressionStatement",
												"src": "23102:39:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "e3161ddd",
									"id": 1071,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updatePool",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22550:2:0"
									},
									"returnParameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22560:0:0"
									},
									"scope": 1324,
									"src": "22531:618:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1186,
										"nodeType": "Block",
										"src": "23262:665:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1079,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1077,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1073,
																"src": "23282:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1078,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23292:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "23282:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "616d6f756e742030",
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23295:10:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aa0c75600cc81ac69d9358030c40cab76c7291229be6a13e3d364c52d7ae813b",
																"typeString": "literal_string \"amount 0\""
															},
															"value": "amount 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aa0c75600cc81ac69d9358030c40cab76c7291229be6a13e3d364c52d7ae813b",
																"typeString": "literal_string \"amount 0\""
															}
														],
														"id": 1076,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "23273:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23273:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1082,
												"nodeType": "ExpressionStatement",
												"src": "23273:33:0"
											},
											{
												"assignments": [
													1084
												],
												"declarations": [
													{
														"constant": false,
														"id": 1084,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1186,
														"src": "23317:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
															"typeString": "struct SousChef.UserInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1083,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 790,
															"src": "23317:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																"typeString": "struct SousChef.UserInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1089,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1085,
														"name": "userInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "23341:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$790_storage_$",
															"typeString": "mapping(address => struct SousChef.UserInfo storage ref)"
														}
													},
													"id": 1088,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1086,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "23350:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1087,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "23350:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "23341:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$790_storage",
														"typeString": "struct SousChef.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23317:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1090,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1071,
														"src": "23374:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23374:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1092,
												"nodeType": "ExpressionStatement",
												"src": "23374:12:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1098,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "23428:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1099,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "23428:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 1097,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "23420:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1096,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "23420:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23420:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1103,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "23449:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SousChef_$1324",
																		"typeString": "contract SousChef"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SousChef_$1324",
																		"typeString": "contract SousChef"
																	}
																],
																"id": 1102,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "23441:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1101,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "23441:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23441:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1105,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "23456:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1093,
															"name": "syrup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "23397:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$367",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1095,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 623,
														"src": "23397:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$367_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$367_$",
															"typeString": "function (contract IBEP20,address,address,uint256)"
														}
													},
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23397:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1107,
												"nodeType": "ExpressionStatement",
												"src": "23397:67:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1108,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1084,
																	"src": "23479:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																		"typeString": "struct SousChef.UserInfo storage pointer"
																	}
																},
																"id": 1109,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 785,
																"src": "23479:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1110,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23494:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "23479:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1112,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1084,
																	"src": "23499:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																		"typeString": "struct SousChef.UserInfo storage pointer"
																	}
																},
																"id": 1113,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "rewardDebt",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 787,
																"src": "23499:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1114,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23518:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "23499:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "23479:40:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1117,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1084,
																"src": "23523:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																	"typeString": "struct SousChef.UserInfo storage pointer"
																}
															},
															"id": 1118,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardPending",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 789,
															"src": "23523:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1119,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23544:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "23523:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "23479:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1133,
												"nodeType": "IfStatement",
												"src": "23475:136:0",
												"trueBody": {
													"id": 1132,
													"nodeType": "Block",
													"src": "23547:64:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 1127,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": -15,
																					"src": "23587:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1128,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "23587:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			],
																			"id": 1126,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "23579:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1125,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "23579:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 1129,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "23579:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 1122,
																		"name": "addressList",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 808,
																		"src": "23562:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "23562:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 1130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23562:37:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1131,
															"nodeType": "ExpressionStatement",
															"src": "23562:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1134,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1084,
															"src": "23623:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																"typeString": "struct SousChef.UserInfo storage pointer"
															}
														},
														"id": 1136,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardPending",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 789,
														"src": "23623:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1151,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1084,
																	"src": "23723:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																		"typeString": "struct SousChef.UserInfo storage pointer"
																	}
																},
																"id": 1152,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "rewardPending",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 789,
																"src": "23723:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1147,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1084,
																			"src": "23702:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																				"typeString": "struct SousChef.UserInfo storage pointer"
																			}
																		},
																		"id": 1148,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "rewardDebt",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 787,
																		"src": "23702:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "31653132",
																				"id": 1144,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "23692:4:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				},
																				"value": "1e12"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 1140,
																							"name": "poolInfo",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 801,
																							"src": "23660:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolInfo_$795_storage",
																								"typeString": "struct SousChef.PoolInfo storage ref"
																							}
																						},
																						"id": 1141,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "accRewardPerShare",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 794,
																						"src": "23660:26:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 1137,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1084,
																							"src": "23644:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																								"typeString": "struct SousChef.UserInfo storage pointer"
																							}
																						},
																						"id": 1138,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 785,
																						"src": "23644:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1139,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 108,
																					"src": "23644:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1142,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "23644:43:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1143,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 125,
																			"src": "23644:47:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1145,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "23644:53:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1146,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 45,
																	"src": "23644:57:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1149,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23644:74:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 28,
															"src": "23644:78:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1153,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23644:98:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23623:119:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1155,
												"nodeType": "ExpressionStatement",
												"src": "23623:119:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1156,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1084,
															"src": "23753:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																"typeString": "struct SousChef.UserInfo storage pointer"
															}
														},
														"id": 1158,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 785,
														"src": "23753:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1162,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1073,
																"src": "23783:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1159,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1084,
																	"src": "23767:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																		"typeString": "struct SousChef.UserInfo storage pointer"
																	}
																},
																"id": 1160,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 785,
																"src": "23767:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 28,
															"src": "23767:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1163,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23767:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23753:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1165,
												"nodeType": "ExpressionStatement",
												"src": "23753:38:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1166,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1084,
															"src": "23802:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																"typeString": "struct SousChef.UserInfo storage pointer"
															}
														},
														"id": 1168,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 787,
														"src": "23802:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "31653132",
																"id": 1176,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23868:4:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																},
																"value": "1e12"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1172,
																			"name": "poolInfo",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 801,
																			"src": "23836:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$795_storage",
																				"typeString": "struct SousChef.PoolInfo storage ref"
																			}
																		},
																		"id": 1173,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accRewardPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 794,
																		"src": "23836:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1169,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1084,
																			"src": "23820:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																				"typeString": "struct SousChef.UserInfo storage pointer"
																			}
																		},
																		"id": 1170,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 785,
																		"src": "23820:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 108,
																	"src": "23820:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23820:43:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 125,
															"src": "23820:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23820:53:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23802:71:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1179,
												"nodeType": "ExpressionStatement",
												"src": "23802:71:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1181,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "23899:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "23899:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1183,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "23911:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1180,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 818,
														"src": "23891:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23891:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1185,
												"nodeType": "EmitStatement",
												"src": "23886:33:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "b6b55f25",
									"id": 1187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1187,
												"src": "23238:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23238:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "23237:17:0"
									},
									"returnParameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23262:0:0"
									},
									"scope": 1324,
									"src": "23221:706:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1280,
										"nodeType": "Block",
										"src": "24022:567:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1193,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1189,
																"src": "24042:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1194,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24052:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "24042:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "616d6f756e742030",
															"id": 1196,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24055:10:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aa0c75600cc81ac69d9358030c40cab76c7291229be6a13e3d364c52d7ae813b",
																"typeString": "literal_string \"amount 0\""
															},
															"value": "amount 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aa0c75600cc81ac69d9358030c40cab76c7291229be6a13e3d364c52d7ae813b",
																"typeString": "literal_string \"amount 0\""
															}
														],
														"id": 1192,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "24033:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24033:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1198,
												"nodeType": "ExpressionStatement",
												"src": "24033:33:0"
											},
											{
												"assignments": [
													1200
												],
												"declarations": [
													{
														"constant": false,
														"id": 1200,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1280,
														"src": "24077:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
															"typeString": "struct SousChef.UserInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1199,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 790,
															"src": "24077:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																"typeString": "struct SousChef.UserInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1205,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1201,
														"name": "userInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "24101:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$790_storage_$",
															"typeString": "mapping(address => struct SousChef.UserInfo storage ref)"
														}
													},
													"id": 1204,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1202,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "24110:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1203,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "24110:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "24101:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$790_storage",
														"typeString": "struct SousChef.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24077:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1207,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1200,
																	"src": "24140:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																		"typeString": "struct SousChef.UserInfo storage pointer"
																	}
																},
																"id": 1208,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 785,
																"src": "24140:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1209,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1189,
																"src": "24155:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24140:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "77697468647261773a206e6f7420656e6f756768",
															"id": 1211,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24164:22:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48e359b719392b510b9882ac02d3c37bf1d37c62af492446a0babaa6dfb48d52",
																"typeString": "literal_string \"withdraw: not enough\""
															},
															"value": "withdraw: not enough"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48e359b719392b510b9882ac02d3c37bf1d37c62af492446a0babaa6dfb48d52",
																"typeString": "literal_string \"withdraw: not enough\""
															}
														],
														"id": 1206,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "24132:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24132:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1213,
												"nodeType": "ExpressionStatement",
												"src": "24132:55:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1214,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1071,
														"src": "24200:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24200:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1216,
												"nodeType": "ExpressionStatement",
												"src": "24200:12:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1222,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "24250:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "24250:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "24242:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1220,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "24242:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24242:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1225,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1189,
															"src": "24263:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1217,
															"name": "syrup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "24223:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$367",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1219,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 598,
														"src": "24223:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$367_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$367_$",
															"typeString": "function (contract IBEP20,address,uint256)"
														}
													},
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24223:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1227,
												"nodeType": "ExpressionStatement",
												"src": "24223:48:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1228,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1200,
															"src": "24284:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																"typeString": "struct SousChef.UserInfo storage pointer"
															}
														},
														"id": 1230,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardPending",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 789,
														"src": "24284:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1245,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1200,
																	"src": "24384:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																		"typeString": "struct SousChef.UserInfo storage pointer"
																	}
																},
																"id": 1246,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "rewardPending",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 789,
																"src": "24384:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1241,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1200,
																			"src": "24363:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																				"typeString": "struct SousChef.UserInfo storage pointer"
																			}
																		},
																		"id": 1242,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "rewardDebt",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 787,
																		"src": "24363:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "31653132",
																				"id": 1238,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24353:4:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				},
																				"value": "1e12"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 1234,
																							"name": "poolInfo",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 801,
																							"src": "24321:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolInfo_$795_storage",
																								"typeString": "struct SousChef.PoolInfo storage ref"
																							}
																						},
																						"id": 1235,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "accRewardPerShare",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 794,
																						"src": "24321:26:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 1231,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1200,
																							"src": "24305:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																								"typeString": "struct SousChef.UserInfo storage pointer"
																							}
																						},
																						"id": 1232,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 785,
																						"src": "24305:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1233,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 108,
																					"src": "24305:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1236,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "24305:43:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1237,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 125,
																			"src": "24305:47:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1239,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "24305:53:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1240,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 45,
																	"src": "24305:57:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1243,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24305:74:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 28,
															"src": "24305:78:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1247,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24305:98:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24284:119:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1249,
												"nodeType": "ExpressionStatement",
												"src": "24284:119:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1250,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1200,
															"src": "24414:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																"typeString": "struct SousChef.UserInfo storage pointer"
															}
														},
														"id": 1252,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 785,
														"src": "24414:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1256,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1189,
																"src": "24444:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1253,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1200,
																	"src": "24428:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																		"typeString": "struct SousChef.UserInfo storage pointer"
																	}
																},
																"id": 1254,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 785,
																"src": "24428:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 45,
															"src": "24428:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1257,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24428:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24414:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1259,
												"nodeType": "ExpressionStatement",
												"src": "24414:38:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1260,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1200,
															"src": "24463:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																"typeString": "struct SousChef.UserInfo storage pointer"
															}
														},
														"id": 1262,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 787,
														"src": "24463:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "31653132",
																"id": 1270,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24529:4:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																},
																"value": "1e12"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1266,
																			"name": "poolInfo",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 801,
																			"src": "24497:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$795_storage",
																				"typeString": "struct SousChef.PoolInfo storage ref"
																			}
																		},
																		"id": 1267,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accRewardPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 794,
																		"src": "24497:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1263,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1200,
																			"src": "24481:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																				"typeString": "struct SousChef.UserInfo storage pointer"
																			}
																		},
																		"id": 1264,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 785,
																		"src": "24481:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 108,
																	"src": "24481:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24481:43:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 125,
															"src": "24481:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24481:53:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24463:71:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1273,
												"nodeType": "ExpressionStatement",
												"src": "24463:71:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1275,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "24561:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "24561:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1277,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1189,
															"src": "24573:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1274,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 824,
														"src": "24552:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24552:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1279,
												"nodeType": "EmitStatement",
												"src": "24547:34:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "2e1a7d4d",
									"id": 1281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1281,
												"src": "23998:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23998:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "23997:17:0"
									},
									"returnParameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24022:0:0"
									},
									"scope": 1324,
									"src": "23980:609:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1322,
										"nodeType": "Block",
										"src": "24696:240:0",
										"statements": [
											{
												"assignments": [
													1285
												],
												"declarations": [
													{
														"constant": false,
														"id": 1285,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1322,
														"src": "24707:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
															"typeString": "struct SousChef.UserInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1284,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 790,
															"src": "24707:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																"typeString": "struct SousChef.UserInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1290,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1286,
														"name": "userInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "24731:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$790_storage_$",
															"typeString": "mapping(address => struct SousChef.UserInfo storage ref)"
														}
													},
													"id": 1289,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1287,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "24740:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1288,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "24740:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "24731:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$790_storage",
														"typeString": "struct SousChef.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24707:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1296,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "24789:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "24789:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 1295,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "24781:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1294,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "24781:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24781:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1299,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1285,
																"src": "24802:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																	"typeString": "struct SousChef.UserInfo storage pointer"
																}
															},
															"id": 1300,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 785,
															"src": "24802:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1291,
															"name": "syrup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "24762:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$367",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1293,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 598,
														"src": "24762:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$367_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$367_$",
															"typeString": "function (contract IBEP20,address,uint256)"
														}
													},
													"id": 1301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24762:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1302,
												"nodeType": "ExpressionStatement",
												"src": "24762:52:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1304,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "24848:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "24848:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1306,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1285,
																"src": "24860:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																	"typeString": "struct SousChef.UserInfo storage pointer"
																}
															},
															"id": 1307,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 785,
															"src": "24860:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1303,
														"name": "EmergencyWithdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "24830:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24830:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1309,
												"nodeType": "EmitStatement",
												"src": "24825:47:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1310,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1285,
															"src": "24883:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																"typeString": "struct SousChef.UserInfo storage pointer"
															}
														},
														"id": 1312,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 785,
														"src": "24883:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1313,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "24897:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "24883:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1315,
												"nodeType": "ExpressionStatement",
												"src": "24883:15:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1316,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1285,
															"src": "24909:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																"typeString": "struct SousChef.UserInfo storage pointer"
															}
														},
														"id": 1318,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 787,
														"src": "24909:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1319,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "24927:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "24909:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1321,
												"nodeType": "ExpressionStatement",
												"src": "24909:19:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "db2e21bc",
									"id": 1323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "emergencyWithdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24686:2:0"
									},
									"returnParameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24696:0:0"
									},
									"scope": 1324,
									"src": "24660:276:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1325,
							"src": "19573:5368:0"
						}
					],
					"src": "70:24871:0"
				},
				"id": 0
			}
		}
	}
}